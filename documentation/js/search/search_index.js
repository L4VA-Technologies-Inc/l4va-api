var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/$npmConfigName1750085776373.html",[0,0.232,1,4.381]],["body/classes/$npmConfigName1750085776373.html",[0,0.253,1,7.62,2,0.837,3,0.057,4,0.051,5,0.051,6,8.52,7,5.333,8,2.263,9,2.628,10,0.133,11,0.425,12,0.826,13,1.348,14,2.312,15,1.453,16,2.337,17,2.337,18,0.284,19,0.006,20,0.237,21,1.103,22,0.837,23,0.55,24,5.333,25,2.337,26,3.152,27,5.333,28,1.165,29,0.686,30,1.183,31,1.762,32,2.337,33,5.333,34,0.127,35,1.135,36,0.057,37,1.82,38,3.052,39,3.184,40,3.165,41,2.588,42,3.165,43,2.897,44,2.897,45,6.585,46,3.877,47,4.399,48,3.272,49,2.457,50,5.491,51,5.196,52,3.414,53,3.99,54,3.193,55,3.126,56,5.196,57,4.74,58,2.689,59,3.496,60,4.77,61,2.152,62,0.983,63,3.218,64,2.779,65,2.192,66,2.729,67,4.399,68,3.414,69,7.027,70,2.714,71,2.849,72,2.007,73,2.376,74,2.849,75,2.416,76,2.47,77,2.671,78,1.827,79,2.376,80,2.849,81,4.399,82,4.399,83,0.004,84,0.004]],["title/classes/$npmConfigName1750413089611.html",[0,0.232,85,4.381]],["body/classes/$npmConfigName1750413089611.html",[0,0.259,2,0.859,3,0.058,4,0.052,5,0.052,8,2.302,9,2.663,10,0.137,11,0.433,12,0.833,13,1.371,14,2.329,15,1.464,16,2.378,17,2.378,18,0.281,19,0.006,20,0.243,21,1.132,22,0.859,23,0.557,25,2.378,26,3.168,28,1.185,29,0.698,30,1.203,31,1.781,32,2.378,34,0.13,35,1.165,36,0.058,37,1.825,38,3.299,39,3.198,40,3.183,41,2.615,42,3.183,43,2.927,44,2.927,46,3.944,53,4.059,54,3.249,61,2.087,63,2.458,65,2.23,66,2.776,68,3.473,70,2.742,71,2.879,72,2.027,73,2.417,74,2.879,75,2.458,76,2.496,77,2.698,78,1.858,79,2.417,80,2.879,83,0.004,84,0.004,85,7.699,86,8.608,87,5.473,88,5.473,89,5.473,90,5.473,91,6.295,92,4.23,93,4.469,94,5.286,95,3.738,96,4.636,97,3.181,98,3.944,99,4.636,100,2.181,101,2.302,102,5.036,103,4.23,104,6.653,105,4.23,106,4.23]],["title/controllers/AcquireController.html",[107,1.916,108,4.04]],["body/controllers/AcquireController.html",[0,0.259,3,0.058,4,0.052,5,0.052,10,0.136,12,0.753,13,1.37,15,1.533,18,0.232,19,0.006,20,0.427,23,0.557,28,1.327,29,0.781,30,1.489,34,0.222,36,0.058,53,5.407,61,1.751,62,1.008,64,3.164,83,0.004,84,0.004,107,2.138,108,5.957,109,2.099,110,3.952,111,5.466,112,2.983,113,7.222,114,7.222,115,5.581,116,5.466,117,1.626,118,4.889,119,4.889,120,4.695,121,1.795,122,5.466,123,2.85,124,3.647,125,3.05,126,5.466,127,7.353,128,4.889,129,4.889,130,5.957,131,4.632,132,5.466,133,5.001,134,5.466,135,8.088,136,7.096,137,5.466,138,2.18,139,5.466,140,2.241,141,4.18,142,3.941,143,5.466,144,3.246,145,3.798,146,2.264,147,3.809,148,2.689,149,3.506,150,3.164,151,1.131,152,5.32,153,5.741,154,2.902,155,1.181,156,2.983,157,3.506,158,3.979,159,2.756,160,2.689,161,3.07,162,5.466,163,5.915,164,4.889,165,4.889,166,5.466,167,5.466,168,1.741,169,2.228,170,1.913,171,4.889,172,3.887,173,4.682,174,2.797,175,5.466,176,4.224,177,1.585,178,3.246,179,3.647,180,1.961,181,5.466,182,5.466,183,5.466,184,5.466,185,5.466,186,4.889,187,5.466,188,5.466]],["title/modules/AcquireModule.html",[189,1.694,190,3.582]],["body/modules/AcquireModule.html",[0,0.319,3,0.072,4,0.064,5,0.064,19,0.006,34,0.236,36,0.072,62,1.242,83,0.005,84,0.005,108,7.355,109,3.168,110,3.094,151,1.393,159,3.396,160,3.314,163,7.423,164,6.025,189,3.083,190,7.311,191,3.094,192,3.094,193,3.237,194,3.237,195,3.164,196,4.285,197,4.285,198,6.025,199,6.025,200,6.025,201,6.025,202,5.799,203,3.964,204,3.237,205,3.094,206,6.736,207,4.059,208,3.483,209,2.369,210,4.694,211,6.736,212,1.888,213,3.576,214,3.003,215,3.783,216,2.685,217,4.494]],["title/classes/AcquireReq.html",[0,0.232,127,3.786]],["body/classes/AcquireReq.html",[0,0.432,2,1.115,3,0.076,4,0.068,5,0.068,10,0.177,11,0.51,18,0.272,19,0.006,23,0.489,34,0.225,36,0.076,52,3.416,83,0.005,84,0.005,110,3.914,117,1.429,121,1.664,127,6.587,155,1.535,218,7.108,219,2.183,220,6.744,221,5.198,222,2.633,223,4.525,224,6.357,225,4.395,226,7.108,227,2.326,228,2.397,229,1.911,230,3.83,231,3.75,232,1.94,233,7.108,234,2.633,235,1.513]],["title/injectables/AcquireService.html",[163,3.582,236,1.205]],["body/injectables/AcquireService.html",[0,0.204,3,0.046,4,0.041,5,0.041,10,0.107,11,0.367,12,0.664,13,1.162,15,1.36,18,0.252,19,0.006,20,0.42,21,0.89,22,0.675,23,0.535,28,1.17,29,0.689,30,1.02,34,0.223,35,0.916,36,0.046,37,1.632,49,2.688,53,4.936,62,1.515,66,1.652,70,1.37,78,1.106,83,0.003,84,0.003,95,2.224,110,3.774,115,4.734,123,2.476,125,2.31,127,6.793,138,2.377,140,1.191,141,2.489,144,2.753,151,0.89,158,4.324,159,2.168,160,2.116,161,2.415,163,4.48,165,3.846,168,1.951,169,2.712,170,2.328,174,1.487,177,2.548,178,3.693,180,1.485,209,1.512,212,1.632,213,2.283,214,2.597,215,2.415,216,1.714,219,2.026,235,1.304,236,1.507,237,1.854,238,4.301,239,3.284,240,3.547,241,4.355,242,6.381,243,5.514,244,6.125,245,4.087,246,6.125,247,4.301,248,5.478,249,3.056,250,4.301,251,4.268,252,2.31,253,6.125,254,2.347,255,2.659,256,2.067,257,2.758,258,2.869,259,2.869,260,2.758,261,2.869,262,2.489,263,2.758,264,2.869,265,2.168,266,3.145,267,2.997,268,2.997,269,1.231,270,4.087,271,2.997,272,2.64,273,3.846,274,2.953,275,3.547,276,2.64,277,3.145,278,3.846,279,3.547,280,2.869,281,3.44,282,6.125,283,4.301,284,6.125,285,2.167,286,4.301,287,3.324,288,1.247,289,3.846,290,3.846,291,5.218,292,3.168,293,3.846,294,3.547,295,3.846,296,4.301,297,5.478,298,4.301,299,3.846,300,3.547,301,3.324,302,3.547,303,3.846,304,4.301,305,4.734,306,4.301,307,3.928,308,3.547,309,3.547,310,3.547,311,3.547,312,1.714,313,3.547,314,3.547,315,1.415,316,2.997,317,2.283,318,3.846,319,5.478,320,4.301,321,2.997,322,3.324,323,4.301,324,3.846,325,3.846,326,3.846,327,3.145,328,2.02,329,3.846,330,3.324,331,3.846,332,1.156,333,3.846,334,3.145,335,2.869,336,3.324,337,2.997,338,1.306,339,3.846,340,3.547,341,1.415,342,2.049,343,3.846,344,3.846,345,4.48,346,3.547,347,3.343,348,2.396,349,1.893,350,3.846,351,3.846,352,3.846,353,3.846]],["title/classes/AcquirerWhitelist.html",[0,0.232,354,3.268]],["body/classes/AcquirerWhitelist.html",[0,0.452,2,0.926,3,0.063,4,0.056,5,0.056,10,0.147,11,0.454,12,0.707,18,0.218,19,0.006,20,0.442,23,0.522,28,0.968,29,0.57,34,0.199,36,0.098,72,1.39,83,0.004,84,0.004,117,1.186,155,1.274,168,1.879,212,1.35,219,1.712,227,2.735,228,2.818,229,1.586,232,1.61,269,1.526,288,2.201,354,5.065,355,4.315,356,3.942,357,5.479,358,5.264,359,7.591,360,4.315,361,3.349,362,3.109,363,2.902,364,5.552,365,3.784,366,3.565,367,5.296,368,4.112,369,2.493,370,2.71,371,2.444,372,2.444,373,2.761,374,3.527,375,2.235,376,3.784,377,1.587,378,4.694,379,1.495,380,1.737,381,3.937,382,4.112,383,3.051,384,3.937,385,3.937,386,3.937,387,4.112,388,3.784]],["title/classes/AcquirerWhitelistCsv.html",[0,0.232,386,3.268]],["body/classes/AcquirerWhitelistCsv.html",[0,0.448,2,0.892,3,0.061,4,0.054,5,0.054,10,0.142,11,0.444,12,0.529,18,0.26,19,0.006,20,0.448,23,0.623,34,0.196,36,0.097,72,1.942,83,0.004,84,0.004,117,1.821,155,1.228,212,1.301,219,1.671,227,2.721,228,2.804,229,1.529,232,1.552,269,1.756,288,2.149,354,3.794,355,4.159,356,2.67,357,5.222,358,5.094,360,6.627,361,3.328,362,3.055,363,2.851,364,5.42,365,3.647,366,4.103,367,5.222,368,3.962,369,2.402,370,2.612,371,2.355,372,2.355,373,2.713,374,3.398,375,2.182,376,3.647,377,1.564,378,4.583,379,1.441,380,1.696,381,3.794,382,3.962,383,2.94,384,3.794,385,3.794,386,4.945,387,5.745,388,5.288,389,5.686,390,5.686,391,5.686,392,5.686,393,5.686]],["title/entities/AcquirerWhitelistEntity.html",[394,2.25,395,3.582]],["body/entities/AcquirerWhitelistEntity.html",[0,0.363,3,0.064,4,0.057,5,0.057,10,0.149,11,0.458,12,0.857,14,2.14,18,0.278,19,0.006,20,0.43,21,1.842,23,0.633,34,0.201,35,1.273,36,0.064,62,1.82,65,2.748,77,1.875,78,1.969,83,0.004,84,0.004,117,1.85,228,2.505,229,1.608,252,1.969,269,1.698,271,4.168,356,2.809,380,1.752,394,3.517,395,5.6,396,3.359,397,5.981,398,4.744,399,4.744,400,6.178,401,5.223,402,4.374,403,5.712,404,5.942,405,5.981,406,4.735,407,5.981,408,4.374,409,5.981,410,4.623,411,7.658,412,5.918,413,4.933,414,5.981,415,5.35,416,5.6,417,4.911,418,5.981,419,5.109,420,5.109,421,4.911,422,5.336,423,3.699,424,3.836,425,3.462,426,3.462,427,4.168,428,4.168,429,4.911,430,4.168,431,3.991]],["title/classes/AddContractAddressToVault1745662880319.html",[0,0.232,432,4.381]],["body/classes/AddContractAddressToVault1745662880319.html",[0,0.275,2,0.911,3,0.062,4,0.055,5,0.055,8,2.393,9,2.74,10,0.145,11,0.45,12,0.849,13,1.426,14,2.367,15,1.488,16,2.472,17,2.472,18,0.239,19,0.006,20,0.258,21,1.201,22,0.911,23,0.573,25,2.472,26,3.204,28,1.232,29,0.725,30,1.251,31,1.822,32,2.472,34,0.138,35,1.236,36,0.062,37,1.785,38,3.125,39,3.231,40,3.223,41,2.771,42,3.223,43,2.995,44,2.995,48,3.045,61,2.136,63,2.995,65,1.792,70,2.905,71,2.945,72,2.074,73,2.513,74,2.945,75,2.555,76,2.554,77,2.761,78,1.932,79,2.513,80,2.945,83,0.004,84,0.004,101,2.393,371,2.405,432,7.877,433,8.807,434,5.807,435,5.807,436,5.807,437,5.807,438,4.219,439,3.083]],["title/classes/AddIndexToTransaction1744024797075.html",[0,0.232,440,4.381]],["body/classes/AddIndexToTransaction1744024797075.html",[0,0.263,2,0.871,3,0.059,4,0.053,5,0.053,8,2.323,9,2.681,10,0.203,11,0.437,12,0.837,13,1.384,14,2.338,15,1.47,16,2.4,17,2.4,18,0.234,19,0.006,20,0.246,21,1.148,22,0.871,23,0.561,25,2.4,26,3.177,28,1.196,29,0.704,30,1.214,31,1.79,32,2.4,34,0.132,35,1.181,36,0.059,37,1.814,38,3.146,39,3.252,40,3.192,41,2.803,42,3.259,43,2.943,44,2.943,48,3.109,61,2.18,63,3.057,64,3.517,65,1.712,68,2.667,70,2.94,71,3.007,72,2.118,73,2.439,74,3.007,75,2.48,76,2.607,77,2.713,78,2.373,79,2.725,80,3.086,83,0.004,84,0.004,93,3.431,440,7.741,441,8.655,442,5.549,443,5.549,444,5.549,445,5.549,446,2.73,447,5.549,448,7.294,449,5.549]],["title/classes/AddInvestmentToTxType1744032453542.html",[0,0.232,450,4.381]],["body/classes/AddInvestmentToTxType1744032453542.html",[0,0.256,2,0.848,3,0.058,4,0.051,5,0.051,8,2.283,9,2.646,10,0.135,11,0.429,12,0.83,13,1.36,14,2.321,15,1.459,16,2.358,17,2.358,18,0.284,19,0.006,20,0.24,21,1.118,22,0.848,23,0.553,25,2.358,26,3.16,28,1.176,29,0.692,30,1.193,31,1.772,32,2.358,34,0.128,35,1.151,36,0.058,37,1.823,38,3.064,39,3.191,40,3.174,41,2.602,42,3.174,43,2.913,44,2.913,45,6.62,46,3.912,47,4.458,48,3.282,49,2.479,50,5.54,51,5.243,52,3.445,54,2.429,55,3.155,56,5.243,57,4.783,61,2.077,63,3.227,64,2.804,65,2.212,66,2.753,67,4.458,68,3.445,69,7.065,70,2.728,71,2.865,72,2.018,73,2.397,74,2.865,75,2.438,76,2.484,77,2.685,78,1.843,79,2.397,80,2.865,81,4.458,82,4.458,83,0.004,84,0.004,450,7.661,451,8.566,452,5.405,453,5.405,454,5.405,455,5.405]],["title/classes/AddNullableForMetadata1743687086047.html",[0,0.232,456,4.381]],["body/classes/AddNullableForMetadata1743687086047.html",[0,0.274,2,0.907,3,0.062,4,0.055,5,0.055,8,2.387,9,2.735,10,0.144,11,0.449,12,0.848,13,1.422,14,2.365,15,1.486,16,2.465,17,2.465,18,0.239,19,0.006,20,0.257,21,1.196,22,0.907,23,0.572,25,2.465,26,3.202,28,1.229,29,0.723,30,1.247,31,1.819,32,2.465,34,0.137,35,1.231,36,0.062,37,1.783,38,3.121,39,3.229,40,3.22,41,2.767,42,3.22,43,2.99,44,2.99,48,3.041,61,2.132,63,3.174,65,2.312,70,2.801,71,2.941,72,2.071,73,2.506,74,2.941,75,2.548,76,2.55,77,2.757,78,1.927,79,2.506,80,2.941,83,0.004,84,0.004,219,1.69,338,2.276,456,7.865,457,8.794,458,5.784,459,5.784,460,5.784,461,5.784,462,2.312,463,2.657]],["title/classes/AddStakeAndWalletAddress1743433439139.html",[0,0.232,464,4.381]],["body/classes/AddStakeAndWalletAddress1743433439139.html",[0,0.269,2,0.89,3,0.06,4,0.054,5,0.054,8,2.357,9,2.709,10,0.142,11,0.443,12,0.843,13,1.404,14,2.352,15,1.478,16,2.434,17,2.434,18,0.236,19,0.006,20,0.252,21,1.173,22,0.89,23,0.567,25,2.434,26,3.19,28,1.214,29,0.714,30,1.232,31,1.805,32,2.434,34,0.135,35,1.207,36,0.06,37,1.802,38,3.163,39,3.262,40,3.207,41,2.82,42,3.272,43,2.968,44,2.968,48,3.13,61,2.116,63,3.078,65,1.75,70,2.957,71,2.919,72,2.056,73,2.474,74,2.919,75,2.516,76,2.531,77,2.736,78,1.902,79,2.474,80,2.919,83,0.004,84,0.004,371,2.349,439,3.011,464,7.806,465,8.728,466,5.671,467,5.671,468,5.671,469,5.671,470,6.383,471,6.364,472,7.399,473,2.79]],["title/classes/AddTotalAcquiredValueInAda1750670509513.html",[0,0.232,474,4.381]],["body/classes/AddTotalAcquiredValueInAda1750670509513.html",[0,0.275,2,0.91,3,0.062,4,0.055,5,0.055,8,2.391,9,2.738,10,0.145,11,0.449,12,0.849,13,1.424,14,2.367,15,1.487,16,2.47,17,2.47,18,0.239,19,0.006,20,0.257,21,1.553,22,0.91,23,0.573,25,2.47,26,3.203,28,1.231,29,0.725,30,1.249,31,1.821,32,2.47,34,0.138,35,1.235,36,0.062,37,1.784,38,3.124,39,3.231,40,3.222,41,2.769,42,3.222,43,2.993,44,2.993,48,3.044,61,2.135,63,2.993,65,1.789,70,2.904,71,2.944,72,2.073,73,2.511,74,2.944,75,2.552,76,2.552,77,2.759,78,1.93,79,2.511,80,2.944,83,0.004,84,0.004,101,2.391,285,1.761,474,7.873,475,8.803,476,5.799,477,5.799,478,5.799,479,5.799,480,7.507,481,3.719]],["title/classes/AddTotalAssetsCost1747665618438.html",[0,0.232,482,4.381]],["body/classes/AddTotalAssetsCost1747665618438.html",[0,0.269,2,0.891,3,0.061,4,0.054,5,0.054,8,2.359,9,2.711,10,0.142,11,0.443,12,0.843,13,1.405,14,2.353,15,1.479,16,2.436,17,2.436,18,0.237,19,0.006,20,0.252,21,1.705,22,0.891,23,0.567,25,2.436,26,3.191,28,1.215,29,0.715,30,1.233,31,1.806,32,2.436,34,0.135,35,1.209,36,0.061,37,1.802,38,3.208,39,3.263,40,3.208,41,2.821,42,3.208,43,2.969,44,2.969,48,3.019,61,2.118,63,2.969,65,2.285,70,2.958,71,2.92,72,2.057,73,2.477,74,2.92,75,2.518,76,2.532,77,2.737,78,1.904,79,2.477,80,2.92,83,0.004,84,0.004,101,2.781,285,2.249,481,4.749,482,7.81,483,8.733,484,5.679,485,5.679,486,5.679,487,5.679,488,7.405,489,7.405]],["title/classes/AddVaultLifecycleFields1741943808653.html",[0,0.232,490,4.381]],["body/classes/AddVaultLifecycleFields1741943808653.html",[0,0.308,2,1.021,3,0.069,4,0.062,5,0.062,8,2.572,9,2.889,10,0.162,12,0.751,13,1.532,14,2.438,15,1.532,16,2.656,17,2.656,18,0.232,19,0.006,23,0.556,25,2.656,26,3.27,28,1.324,29,0.779,30,1.344,31,1.899,32,2.656,34,0.154,35,1.385,36,0.069,37,1.467,39,2.656,41,2.667,48,2.792,62,1.199,63,2.745,65,2.969,70,2.924,83,0.004,84,0.004,101,2.572,252,1.673,317,5.108,403,5.631,490,7.222,491,8.78,492,6.506,493,6.506,494,6.506,495,7.222,496,5.819,497,6.506,498,8.074,499,7.222,500,6.66,501,5.028,502,6.506,503,4.023]],["title/classes/AddedAauired1748361017536.html",[0,0.232,504,4.381]],["body/classes/AddedAauired1748361017536.html",[0,0.259,2,0.859,3,0.058,4,0.052,5,0.052,8,2.302,9,2.663,10,0.137,11,0.433,12,0.833,13,1.371,14,2.329,15,1.464,16,2.378,17,2.378,18,0.281,19,0.006,20,0.243,21,1.132,22,0.859,23,0.557,25,2.378,26,3.168,28,1.185,29,0.698,30,1.203,31,1.781,32,2.378,34,0.13,35,1.165,36,0.058,37,1.825,38,3.075,39,3.198,40,3.183,41,2.615,42,3.183,43,2.927,44,2.927,46,3.944,48,3.242,49,1.892,61,2.087,63,3.236,65,2.23,66,2.776,68,3.473,70,2.742,71,2.879,72,2.027,73,2.417,74,2.879,75,2.458,76,2.496,77,2.698,78,1.858,79,2.417,80,2.879,83,0.004,84,0.004,93,3.384,219,1.63,335,4.823,504,7.699,505,8.608,506,5.473,507,5.473,508,5.473,509,5.473,510,7.699,511,5.473,512,6.464,513,4.514,514,4.823,515,5.473,516,8.608,517,5.473,518,5.473]],["title/classes/AddedAssetVaultName1745921850315.html",[0,0.232,519,4.381]],["body/classes/AddedAssetVaultName1745921850315.html",[0,0.275,2,0.911,3,0.062,4,0.055,5,0.055,8,2.393,9,2.74,10,0.145,11,0.45,12,0.849,13,1.426,14,2.367,15,1.488,16,2.472,17,2.472,18,0.239,19,0.006,20,0.258,21,1.201,22,0.911,23,0.573,25,2.472,26,3.204,28,1.232,29,0.725,30,1.251,31,1.822,32,2.472,34,0.138,35,1.236,36,0.062,37,1.785,38,3.125,39,3.231,40,3.223,41,2.771,42,3.223,43,2.995,44,2.995,48,3.045,61,2.136,63,2.995,65,1.792,70,2.905,71,2.945,72,2.074,73,2.513,74,2.945,75,2.555,76,2.554,77,2.761,78,1.932,79,2.513,80,2.945,83,0.004,84,0.004,101,2.393,371,2.405,439,3.083,519,7.877,520,8.807,521,5.807,522,5.807,523,5.807,524,5.807,525,7.513]],["title/classes/AddedAssetsStatus1748264767365.html",[0,0.232,526,4.381]],["body/classes/AddedAssetsStatus1748264767365.html",[0,0.261,2,0.865,3,0.059,4,0.077,5,0.052,8,2.314,9,2.672,10,0.138,11,0.435,12,0.835,13,1.378,14,2.334,15,1.467,16,2.39,17,2.39,18,0.27,19,0.006,20,0.245,21,1.141,22,0.865,23,0.559,25,2.39,26,3.173,28,1.191,29,0.701,30,1.209,31,1.786,32,2.39,34,0.131,35,1.174,36,0.059,37,1.82,38,3.081,39,3.203,40,3.188,41,2.725,42,3.188,43,2.936,44,2.936,48,3.185,61,2.093,63,2.936,65,2.506,68,2.65,70,2.858,71,2.887,72,2.033,73,2.429,74,2.887,75,2.47,76,2.503,77,2.706,78,1.868,79,2.429,80,2.887,83,0.004,84,0.004,93,3.41,212,1.662,219,1.832,335,5.42,463,2.533,510,7.265,512,4.932,514,5.76,526,7.722,527,8.634,528,5.514,529,5.514,530,5.514,531,5.514,532,6.497,533,7.264,534,6.497,535,5.312,536,5.514]],["title/classes/AddedContributorWhitelist1742484041497.html",[0,0.232,537,4.381]],["body/classes/AddedContributorWhitelist1742484041497.html",[0,0.258,2,0.854,3,0.058,4,0.052,5,0.052,8,2.295,9,2.656,10,0.136,11,0.431,12,0.832,13,1.367,14,2.326,15,1.462,16,2.37,17,2.37,18,0.232,19,0.006,20,0.242,21,1.777,22,0.854,23,0.555,25,2.37,26,3.165,28,1.182,29,0.695,30,1.199,31,1.777,32,2.37,34,0.129,35,1.159,36,0.058,37,1.791,38,2.988,39,3.243,40,3.179,41,2.714,42,3.274,43,2.921,44,2.921,48,3.174,49,1.883,61,2.167,63,3.038,68,2.617,70,2.846,71,2.988,72,2.162,73,2.409,74,2.988,75,2.45,76,2.591,77,2.801,78,2.209,79,2.7,80,2.988,83,0.004,84,0.004,269,1.448,371,2.255,398,3.058,399,3.058,400,3.983,439,2.891,446,3.545,462,2.651,537,7.684,538,8.591,539,5.446,540,5.446,541,5.446,542,5.446,543,5.134,544,4.209,545,2.717,546,3.462,547,5.02,548,5.269,549,5.446,550,4.209,551,7.204]],["title/classes/AddedDelete1747838327085.html",[0,0.232,552,4.381]],["body/classes/AddedDelete1747838327085.html",[0,0.262,2,0.869,3,0.059,4,0.053,5,0.053,8,2.321,9,2.679,10,0.138,11,0.436,12,0.836,13,1.383,14,2.337,15,1.469,16,2.398,17,2.398,18,0.234,19,0.006,20,0.246,21,1.789,22,0.869,23,0.56,25,2.398,26,3.176,28,1.195,29,0.703,30,1.213,31,1.789,32,2.398,34,0.132,35,1.18,36,0.059,37,1.814,38,3.259,39,3.285,40,3.191,41,2.856,42,3.191,43,2.941,44,2.941,48,2.991,61,2.098,63,2.941,65,2.513,70,2.995,71,2.893,72,2.038,73,2.437,74,2.893,75,2.478,76,2.508,77,2.712,78,1.874,79,2.437,80,2.893,83,0.004,84,0.004,101,2.321,219,1.644,380,1.863,462,2.513,470,5.33,552,7.737,553,8.651,554,5.542,555,5.542,556,5.542,557,5.542,558,5.705,559,2.679]],["title/classes/AddedLiquidationHash1749046550619.html",[0,0.232,560,4.381]],["body/classes/AddedLiquidationHash1749046550619.html",[0,0.275,2,0.911,3,0.062,4,0.055,5,0.055,8,2.393,9,2.74,10,0.145,11,0.45,12,0.849,13,1.426,14,2.367,15,1.488,16,2.472,17,2.472,18,0.239,19,0.006,20,0.258,21,1.201,22,0.911,23,0.573,25,2.472,26,3.204,28,1.232,29,0.725,30,1.251,31,1.822,32,2.472,34,0.138,35,1.236,36,0.062,37,1.785,38,3.125,39,3.231,40,3.223,41,2.771,42,3.223,43,2.995,44,2.995,48,3.045,61,2.136,63,2.995,65,1.792,70,2.905,71,2.945,72,2.074,73,2.513,74,2.945,75,2.555,76,2.554,77,2.761,78,1.932,79,2.513,80,2.945,83,0.004,84,0.004,101,2.393,371,2.405,439,3.083,560,7.877,561,8.807,562,5.807,563,5.807,564,5.807,565,5.807,566,7.513]],["title/classes/AddedMaxAssetsCount1747911428750.html",[0,0.232,567,4.381]],["body/classes/AddedMaxAssetsCount1747911428750.html",[0,0.274,2,0.909,3,0.062,4,0.055,5,0.055,8,2.389,9,2.737,10,0.145,11,0.449,12,0.848,13,1.423,14,2.366,15,1.487,16,2.468,17,2.468,18,0.239,19,0.006,20,0.257,21,1.551,22,0.909,23,0.572,25,2.468,26,3.203,28,1.23,29,0.724,30,1.248,31,1.82,32,2.468,34,0.137,35,1.233,36,0.062,37,1.784,38,3.123,39,3.23,40,3.221,41,2.768,42,3.221,43,2.992,44,2.992,48,3.042,61,2.133,63,2.992,65,1.787,70,2.903,71,2.942,72,2.072,73,2.508,74,2.942,75,2.55,76,2.551,77,2.758,78,1.929,79,2.508,80,2.942,83,0.004,84,0.004,101,2.389,285,1.759,462,1.787,481,3.714,567,7.869,568,8.798,569,5.791,570,5.791,571,5.791,572,5.791,573,7.5]],["title/classes/AddedPublicationHash1745583708330.html",[0,0.232,574,4.381]],["body/classes/AddedPublicationHash1745583708330.html",[0,0.275,2,0.911,3,0.062,4,0.055,5,0.055,8,2.393,9,2.74,10,0.145,11,0.45,12,0.849,13,1.426,14,2.367,15,1.488,16,2.472,17,2.472,18,0.239,19,0.006,20,0.258,21,1.201,22,0.911,23,0.573,25,2.472,26,3.204,28,1.232,29,0.725,30,1.251,31,1.822,32,2.472,34,0.138,35,1.236,36,0.062,37,1.785,38,3.125,39,3.231,40,3.223,41,2.771,42,3.223,43,2.995,44,2.995,48,3.045,61,2.136,63,2.995,65,1.792,70,2.905,71,2.945,72,2.074,73,2.513,74,2.945,75,2.555,76,2.554,77,2.761,78,1.932,79,2.513,80,2.945,83,0.004,84,0.004,101,2.393,371,2.405,439,3.083,574,7.877,575,8.807,576,5.807,577,5.807,578,5.807,579,5.807,580,7.513]],["title/classes/AddedReserveVaule1747821437539.html",[0,0.232,581,4.381]],["body/classes/AddedReserveVaule1747821437539.html",[0,0.269,2,0.891,3,0.061,4,0.054,5,0.054,8,2.359,9,2.711,10,0.142,11,0.443,12,0.843,13,1.405,14,2.353,15,1.479,16,2.436,17,2.436,18,0.237,19,0.006,20,0.252,21,1.705,22,0.891,23,0.567,25,2.436,26,3.191,28,1.215,29,0.715,30,1.233,31,1.806,32,2.436,34,0.135,35,1.209,36,0.061,37,1.802,38,3.208,39,3.263,40,3.208,41,2.821,42,3.208,43,2.969,44,2.969,48,3.019,61,2.118,63,2.969,65,2.285,70,2.958,71,2.92,72,2.057,73,2.477,74,2.92,75,2.518,76,2.532,77,2.737,78,1.904,79,2.477,80,2.92,83,0.004,84,0.004,101,2.781,285,2.249,481,4.749,581,7.81,582,8.733,583,5.679,584,5.679,585,5.679,586,5.679,587,7.405,588,7.405]],["title/classes/AddedTags1741943808652.html",[0,0.232,589,4.381]],["body/classes/AddedTags1741943808652.html",[0,0.257,2,0.851,3,0.058,4,0.052,5,0.052,8,2.289,9,2.651,10,0.223,11,0.43,12,0.871,13,1.364,14,2.324,15,1.46,16,2.364,17,2.364,18,0.231,19,0.006,20,0.241,21,1.487,22,0.851,23,0.554,25,2.364,26,3.163,28,1.179,29,0.694,30,1.196,31,1.775,32,2.364,34,0.129,35,1.155,36,0.058,37,1.835,38,3.177,39,3.276,40,3.177,41,2.711,42,3.129,43,2.444,44,2.444,48,2.966,49,2.485,61,1.743,63,2.444,65,2.486,68,4.122,70,2.843,71,2.403,72,2.021,73,2.869,74,2.403,75,1.845,76,2.084,77,2.253,78,2.206,79,1.814,80,2.403,83,0.004,84,0.004,93,4.444,101,2.921,269,1.444,371,2.247,439,2.88,446,3.965,462,2.647,473,2.669,544,4.193,545,2.71,546,3.453,547,5.007,550,5.554,589,7.672,590,8.579,591,5.425,592,5.425,593,5.425,594,5.425,595,5.927,596,5.425,597,5.425,598,5.425,599,5.425,600,5.425,601,4.609,602,6.427,603,6.427,604,4.475,605,5.425,606,5.425]],["title/classes/AddedTransactionModelAndRelations1743588383672.html",[0,0.232,607,4.381]],["body/classes/AddedTransactionModelAndRelations1743588383672.html",[0,0.206,2,0.683,3,0.046,4,0.041,5,0.041,8,1.969,9,2.364,10,0.109,11,0.37,12,0.769,13,1.173,14,2.173,15,1.366,16,2.034,17,2.034,18,0.27,19,0.006,20,0.193,21,0.901,22,0.683,23,0.494,25,2.034,26,3.017,28,1.014,29,0.597,30,1.029,31,1.618,32,2.034,34,0.103,35,0.927,36,0.046,37,1.866,38,3.39,39,3.358,40,3.015,41,2.965,42,3.11,43,2.659,44,2.659,46,3.373,48,3.171,49,2.137,61,2.002,63,3.256,64,3.906,65,2.995,66,2.374,68,2.97,70,3.072,71,2.762,72,1.945,73,2.067,74,2.762,75,2.102,76,2.394,77,2.451,78,1.589,79,2.067,80,2.869,83,0.003,84,0.003,100,2.464,174,2.137,219,1.764,338,1.878,371,3.42,439,4.384,446,2.143,462,2.722,463,2.839,607,6.994,608,7.82,609,4.356,610,4.356,611,4.356,612,4.356,613,3.822,614,5.099,615,3.117,616,5.099,617,5.099,618,5.529,619,1.849,620,4.521,621,6.426,622,3.822,623,2.72,624,6.994,625,4.356,626,5.529,627,3.822,628,3.373,629,3.197,630,3.896,631,4.356,632,7.82,633,6.182,634,4.356,635,3.896,636,3.896,637,4.356,638,4.356,639,3.186]],["title/interfaces/Amount.html",[619,1.465,640,1.105]],["body/interfaces/Amount.html",[3,0.052,4,0.046,5,0.046,10,0.215,11,0.401,15,1.066,18,0.192,19,0.006,20,0.426,22,0.767,34,0.181,36,0.092,37,1.388,62,0.901,83,0.004,84,0.004,125,1.843,138,1.238,140,1.855,177,2.921,180,2.209,219,1.723,249,1.748,252,1.965,274,2.842,276,2.887,285,2.497,287,3.776,315,1.608,332,2.21,341,1.608,369,2.064,370,3.076,372,3.405,375,1.439,377,1.542,379,1.936,503,3.021,619,2.458,623,2.15,640,1.102,641,1.843,642,1.314,643,4.03,644,3.479,645,2.594,646,2.828,647,4.886,648,2.744,649,2.744,650,1.826,651,4.886,652,3.021,653,3.405,654,4.886,655,4.886,656,2.555,657,4.37,658,5.99,659,2.92,660,6.834,661,4.886,662,4.03,663,4.886,664,8.612,665,2.594,666,2.594,667,2.594,668,2.594,669,4.37,670,4.37,671,2.781,672,4.37,673,4.002,674,4.37,675,5.99,676,4.37,677,4.295,678,4.37,679,4.37,680,4.37,681,5.524,682,4.37,683,4.37,684,4.03,685,4.37,686,4.37,687,4.37,688,4.37,689,4.37,690,5.99,691,4.37,692,4.37,693,4.37,694,3.405,695,5.524,696,3.556,697,2.295,698,4.37,699,5.99,700,4.37,701,4.37,702,2.829,703,4.898,704,4.37,705,4.37,706,4.37,707,4.37,708,4.37,709,4.37,710,6.353,711,4.37,712,4.37,713,6.697,714,4.886,715,4.886,716,6.697,717,6.697,718,6.697,719,4.03,720,4.37,721,4.886,722,4.886,723,4.37,724,4.886,725,2.464,726,3.26,727,4.03,728,4.886,729,4.886,730,4.886,731,4.886,732,4.886,733,6.697,734,4.03,735,4.886,736,5.588,737,4.886,738,4.37,739,3.405,740,4.37,741,4.886]],["title/interfaces/AnvilApiConfig.html",[640,1.105,742,3.582]],["body/interfaces/AnvilApiConfig.html",[0,0.225,3,0.051,4,0.045,5,0.045,10,0.119,11,0.393,15,1.404,18,0.245,19,0.006,20,0.44,22,1.03,29,0.851,31,1.824,34,0.179,36,0.051,37,1.368,62,0.875,72,1.547,83,0.004,84,0.004,100,1.893,125,2.477,138,1.203,140,1.315,144,2.951,145,4.562,147,5.659,148,4.194,151,0.982,169,2.322,170,1.994,177,2.472,180,2.138,219,1.071,222,1.759,236,1.616,252,2.088,274,2.808,288,1.377,312,3.237,315,1.562,338,1.995,341,1.562,342,2.949,348,1.858,349,2.09,366,3.535,377,0.85,462,1.465,640,1.698,641,1.791,642,1.277,650,1.135,671,1.729,742,5.505,743,3.67,744,3.67,745,6.38,746,6.316,747,5.534,748,5.659,749,3.18,750,1.858,751,3.155,752,3.309,753,3.688,754,2.09,755,1.642,756,2.394,757,2.181,758,3.751,759,2.336,760,2.336,761,3.168,762,3.473,763,3.473,764,2.394,765,5.817,766,3.168,767,5.817,768,3.168,769,3.67,770,6.588,771,3.67,772,4.576,773,3.67,774,3.67,775,3.67,776,4.934,777,3.67,778,3.309,779,3.67,780,3.045,781,4.357,782,2.936,783,3.045,784,2.838,785,3.67,786,3.67,787,3.67,788,3.67,789,3.67,790,3.67,791,3.67,792,5.075,793,2.181,794,3.67,795,2.394,796,3.67,797,3.67,798,3.67,799,3.67,800,3.67,801,3.67,802,3.67,803,3.67,804,3.67,805,2.749,806,3.67,807,3.67,808,3.473,809,1.858,810,3.67]],["title/injectables/AnvilApiService.html",[236,1.205,761,3.268]],["body/injectables/AnvilApiService.html",[0,0.192,3,0.043,4,0.039,5,0.039,10,0.101,11,0.351,12,0.804,13,1.114,15,1.554,18,0.28,19,0.006,20,0.441,21,0.839,22,1.083,23,0.62,28,1.521,29,0.834,30,1.394,31,1.938,34,0.164,36,0.043,37,1.254,62,0.747,72,1.383,83,0.003,84,0.003,100,1.616,125,2.214,138,1.027,140,1.123,144,2.639,145,4.477,147,5.272,148,3.951,151,0.839,168,1.291,169,2.781,170,2.287,177,2.328,180,2.03,219,0.914,222,2.175,236,1.445,237,1.747,252,1.946,274,2.616,288,1.175,312,2.34,315,1.334,338,1.783,341,1.334,342,2.8,348,1.586,349,1.784,366,3.241,377,0.726,462,1.251,640,1.557,642,2.461,650,0.969,671,1.476,742,5.534,743,7.074,744,3.133,745,6.185,746,5.762,747,5.298,748,5.834,749,3.537,750,1.586,751,2.821,752,2.825,753,4.249,754,1.784,755,1.402,756,2.044,757,1.862,758,3.534,759,1.995,760,1.995,761,3.917,762,5.048,763,5.048,764,2.044,765,5.334,766,2.705,767,5.334,768,2.705,769,4.537,770,6.206,771,4.537,772,6.28,773,4.537,774,5.334,775,3.133,776,4.648,777,3.133,778,2.825,779,3.133,780,2.6,781,3.995,782,2.507,783,2.6,784,2.423,785,3.133,786,3.133,787,3.133,788,3.133,789,3.133,790,3.133,791,3.133,792,4.537,793,1.862,794,3.133,795,2.044,796,3.133,797,3.133,798,3.133,799,3.133,800,3.133,801,3.133,802,3.133,803,3.133,804,3.133,805,3.398,806,3.133,807,3.133,808,4.294,809,1.586,810,3.133,811,4.537,812,4.537,813,2.965,814,5.871,815,4.054,816,4.054,817,4.054,818,3.636,819,4.054,820,4.054,821,4.054,822,4.054,823,4.054]],["title/interfaces/ApiDocParams.html",[640,1.105,824,4.04]],["body/interfaces/ApiDocParams.html",[3,0.076,4,0.068,5,0.068,10,0.177,11,0.51,18,0.262,19,0.006,20,0.436,34,0.202,36,0.076,83,0.005,84,0.005,120,3.879,121,1.919,151,1.47,152,4.395,153,5.686,155,1.535,172,4.722,174,3.398,180,1.724,640,1.603,641,2.681,710,5.493,824,7.529,825,6.357,826,6.357,827,7.806,828,6.357,829,4.395,830,7.108]],["title/controllers/AppController.html",[107,1.916,831,4.04]],["body/controllers/AppController.html",[0,0.335,3,0.091,4,0.067,5,0.067,10,0.177,13,1.612,19,0.006,20,0.377,23,0.487,30,1.177,34,0.224,36,0.075,83,0.005,84,0.005,107,2.767,109,2.717,112,3.86,117,1.422,120,3.86,121,1.659,151,1.463,154,3.755,155,1.528,170,1.873,172,3.399,174,2.938,180,1.715,764,3.566,776,4.919,829,5.254,831,7.009,832,7.074,833,8.451,834,4.929,835,4.54,836,6.567,837,7.074,838,7.074,839,6.662,840,6.326,841,4.72,842,4.72,843,7.074,844,7.074,845,7.074]],["title/modules/AppModule.html",[189,1.694,846,3.786]],["body/modules/AppModule.html",[0,0.253,3,0.057,4,0.051,5,0.051,18,0.153,19,0.006,34,0.24,35,1.138,36,0.057,83,0.004,84,0.004,109,2.733,151,1.106,160,2.63,189,2.766,190,6.679,191,2.455,192,2.455,193,2.569,194,2.569,195,2.511,196,3.844,197,2.569,202,5.458,203,3.42,204,2.569,205,2.455,207,3.501,208,2.764,209,1.88,210,3.725,235,1.515,252,1.375,380,1.223,396,3.002,750,2.091,831,6.598,839,6.679,840,4.781,846,7.96,847,4.781,848,4.781,849,4.781,850,6.679,851,6.679,852,6.093,853,5.647,854,6.364,855,6.364,856,6.679,857,6.679,858,6.364,859,6.679,860,5.346,861,3.725,862,4.781,863,4.132,864,7.116,865,4.781,866,4.781,867,5.346,868,5.346,869,5.346,870,5.346,871,5.346,872,5.346,873,5.346,874,4.409,875,5.346,876,7.116,877,5.346,878,5.346,879,7.999,880,5.346,881,3.91,882,5.346,883,4.781,884,4.781,885,4.781,886,5.346,887,5.346,888,4.132,889,5.346,890,5.346,891,5.346,892,5.346,893,4.409,894,5.346,895,5.346,896,5.346,897,3.306,898,5.346,899,5.346,900,5.346,901,5.346,902,5.346,903,5.346]],["title/injectables/AppService.html",[236,1.205,839,3.582]],["body/injectables/AppService.html",[0,0.356,3,0.08,4,0.071,5,0.071,10,0.188,13,1.671,19,0.006,20,0.391,23,0.517,30,1.25,34,0.209,36,0.08,83,0.005,84,0.005,151,1.554,180,1.821,236,2.167,237,3.237,776,4.347,833,8.618,835,4.489,839,6.44,904,7.51,905,7.51,906,7.51,907,4.817]],["title/entities/Asset.html",[212,1.121,394,2.25]],["body/entities/Asset.html",[0,0.253,3,0.038,4,0.061,5,0.034,10,0.089,11,0.32,12,0.927,14,2.028,18,0.293,19,0.006,20,0.379,21,1.838,23,0.666,29,0.882,34,0.19,35,0.761,36,0.038,62,1.608,65,2.941,78,1.376,83,0.003,84,0.003,117,1.946,138,2.314,174,2.217,212,1.629,214,2.913,222,1.324,228,2.644,229,0.961,235,2.001,252,1.649,257,4.89,258,5.087,259,5.087,260,2.292,269,1.289,272,1.541,285,1.625,328,3.581,330,5.893,332,1.724,334,2.614,335,5.087,337,5.313,338,2.316,345,2.614,375,1.052,377,1.433,380,1.629,394,1.641,396,2.007,399,4.282,401,5.711,403,5.697,404,4.751,406,3.308,410,2.762,417,6.181,419,3.57,420,3.57,421,4.567,422,4.962,423,2.21,424,2.292,425,2.069,431,3.57,438,4.282,500,6.289,514,3.57,532,4.785,534,4.785,535,3.913,558,4.715,559,2.343,621,4.785,639,3.913,793,3.676,908,3.574,909,5.893,910,6.289,911,6.289,912,6.289,913,6.819,914,6.754,915,3.574,916,3.574,917,3.574,918,6.413,919,3.574,920,3.574,921,3.574,922,3.574,923,3.574,924,3.574,925,2.948,926,3.574,927,3.574,928,6.601,929,7.157,930,7.157,931,7.157,932,3.574,933,3.574,934,3.574,935,3.574,936,3.574,937,3.574,938,3.574,939,3.574,940,7.12,941,3.574,942,3.574,943,3.574,944,4.85,945,3.574,946,3.574,947,3.574,948,3.574,949,3.574,950,3.574,951,3.574,952,3.574,953,3.574,954,3.574,955,3.574,956,3.196,957,3.574,958,3.574,959,3.574,960,3.574,961,3.196,962,3.574,963,3.196,964,2.762,965,3.574,966,2.762,967,2.292,968,2.762,969,2.762,970,3.574,971,3.196,972,3.574,973,3.574,974,3.574,975,2.948,976,3.574,977,3.574,978,3.574,979,3.574]],["title/classes/AssetMetadataDto.html",[0,0.232,980,4.04]],["body/classes/AssetMetadataDto.html",[0,0.416,2,0.907,3,0.062,4,0.055,5,0.055,10,0.144,11,0.449,12,0.774,18,0.282,19,0.006,20,0.439,23,0.627,29,0.723,34,0.209,36,0.08,83,0.004,84,0.004,117,1.831,121,1.779,123,1.842,155,1.249,212,1.715,222,2.143,227,2.739,229,1.555,231,3.298,232,1.578,235,1.595,257,5.332,260,3.709,288,2.55,312,2.987,332,1.555,338,1.757,361,3.274,362,3.258,363,3.15,373,2.465,377,1.489,380,2.084,642,2.509,944,3.071,967,3.709,968,4.47,969,4.47,980,7.514,981,8.348,982,5.173,983,5.843,984,7.435,985,7.435,986,5.784,987,3.166,988,5.481,989,5.222,990,5.784,991,5.173,992,5.784,993,7.435,994,5.784,995,5.784,996,5.784,997,3.348,998,3.601,999,5.173,1000,5.173,1001,5.173,1002,5.173,1003,5.173,1004,5.173,1005,5.173,1006,4.47,1007,5.173,1008,4.47]],["title/classes/AssetValueDto.html",[0,0.232,1009,3.786]],["body/classes/AssetValueDto.html",[0,0.293,2,0.97,3,0.066,4,0.059,5,0.059,10,0.154,11,0.468,12,0.798,18,0.289,19,0.006,20,0.452,23,0.691,29,0.917,36,0.066,83,0.004,84,0.004,121,1.208,312,3.118,332,2.306,338,2.606,375,1.821,377,1.788,559,2.966,656,2.068,818,2.972,983,3.966,1008,6.63,1009,6.045,1010,10.081,1011,6.184,1012,7.673,1013,7.673,1014,7.076,1015,7.076,1016,7.673,1017,7.076,1018,6.63,1019,7.076,1020,6.184,1021,6.184,1022,6.184,1023,6.184,1024,6.184,1025,6.184,1026,6.184,1027,6.184,1028,6.184,1029,6.184,1030,6.184,1031,6.184,1032,4.309,1033,4.126,1034,3.198,1035,4.309,1036,4.309,1037,4.126,1038,4.309,1039,3.696,1040,2.068]],["title/classes/AssetWhitelist.html",[0,0.232,368,3.413]],["body/classes/AssetWhitelist.html",[0,0.445,2,0.871,3,0.059,4,0.053,5,0.053,10,0.139,11,0.437,12,0.679,18,0.248,19,0.006,20,0.441,23,0.596,28,0.91,29,0.868,34,0.193,36,0.096,72,1.307,83,0.004,84,0.004,117,1.638,155,1.199,168,1.768,212,1.669,219,1.952,227,2.712,228,2.795,229,1.492,232,1.514,269,1.638,288,2.115,354,3.703,355,4.058,356,2.606,357,5.373,358,5.214,360,4.058,361,3.314,362,3.019,363,2.817,364,5.335,365,3.559,366,3.426,367,5.173,368,5.083,369,3.081,370,3.35,371,3.021,372,3.021,373,3.036,374,3.316,375,2.548,376,4.678,377,1.709,378,5.352,379,1.406,380,1.669,381,5.437,382,5.083,383,2.87,384,5.437,385,3.703,386,3.703,387,3.867,388,3.559,1041,7.294,1042,6.524,1043,7.294,1044,5.549,1045,5.549]],["title/classes/AssetWhitelistDto.html",[0,0.232,1046,4.381]],["body/classes/AssetWhitelistDto.html",[0,0.405,2,0.965,3,0.066,4,0.059,5,0.059,10,0.154,11,0.466,12,0.725,18,0.246,19,0.006,20,0.421,23,0.589,29,0.868,34,0.203,36,0.066,83,0.004,84,0.004,117,1.72,121,1.671,155,1.328,212,1.783,219,2.029,227,2.455,228,2.407,229,1.653,232,1.678,269,1.808,288,2.609,348,3.049,361,2.65,362,3.17,363,2.959,369,3.801,370,4.133,371,3.726,372,3.228,373,3.121,374,3.675,375,2.52,376,4.999,377,1.746,378,5.563,379,1.558,380,2.059,381,6.194,382,5.431,383,3.18,384,6.194,1046,6.971,1047,6.149,1048,3.347,1049,6.149,1050,6.149,1051,6.149,1052,6.149,1053,6.149,1054,6.971,1055,6.971,1056,6.971,1057,6.971,1058,6.149,1059,5.5,1060,5.5]],["title/controllers/AssetsController.html",[107,1.916,1061,4.04]],["body/controllers/AssetsController.html",[0,0.281,3,0.063,4,0.056,5,0.056,10,0.148,12,0.709,13,1.445,18,0.219,19,0.006,20,0.417,23,0.524,28,1.249,29,0.735,30,1.268,34,0.223,36,0.063,62,1.784,83,0.004,84,0.004,107,2.321,109,2.278,112,3.237,117,1.531,120,4.157,121,1.734,123,3.083,133,5.49,146,2.457,149,6.271,150,3.434,151,1.227,154,3.15,155,1.281,156,3.237,170,1.571,172,3.661,173,4.409,174,3.07,176,5.887,177,2.209,178,3.424,179,5.083,180,1.847,219,2.205,223,4.714,308,7.323,349,2.611,642,2.262,764,2.991,829,5.203,834,5.308,841,3.958,842,3.958,1061,6.283,1062,5.933,1063,7.618,1064,7.618,1065,5.933,1066,7.386,1067,7.941,1068,5.933,1069,5.933,1070,5.933,1071,5.933,1072,5.933,1073,4.893,1074,5.933,1075,6.154,1076,5.306,1077,5.933,1078,5.933,1079,5.933,1080,5.933,1081,5.933,1082,6.813,1083,6.813,1084,5.933,1085,5.933,1086,5.933]],["title/modules/AssetsModule.html",[189,1.694,850,3.582]],["body/modules/AssetsModule.html",[0,0.324,3,0.073,4,0.065,5,0.065,19,0.006,34,0.236,36,0.073,62,1.537,83,0.005,84,0.005,109,3.201,138,2.112,151,1.417,189,3.106,191,3.147,192,3.147,193,3.293,194,3.293,195,3.218,196,4.317,197,4.317,203,4.006,204,3.293,205,3.147,207,3.371,208,3.543,209,2.41,212,1.568,213,3.638,214,3.034,215,3.848,216,2.731,642,1.842,850,7.212,1061,7.41,1075,7.439,1076,6.128,1087,6.128,1088,6.128,1089,6.128,1090,6.852,1091,4.395,1092,6.852,1093,6.852]],["title/injectables/AssetsService.html",[236,1.205,1075,3.582]],["body/injectables/AssetsService.html",[0,0.226,3,0.033,4,0.029,5,0.029,10,0.077,12,0.757,13,0.906,15,1.517,18,0.245,19,0.006,20,0.444,21,0.987,22,0.749,23,0.56,28,1.335,29,0.786,30,1.311,31,1.872,34,0.203,35,0.655,36,0.033,37,1.676,49,1.064,61,0.746,62,1.726,83,0.003,84,0.003,97,2.9,98,3.191,123,2.912,124,3.185,138,0.78,141,1.781,151,0.636,168,1.52,169,1.804,170,1.549,174,1.064,177,2.56,178,3.909,180,1.974,209,1.082,212,1.99,213,1.633,214,2.399,215,1.728,216,1.226,219,1.836,222,1.768,229,0.827,236,1.174,237,1.326,241,4.011,242,5.23,251,3.326,252,2.449,255,1.902,256,1.478,257,1.973,258,2.053,259,2.053,260,1.973,263,1.973,264,2.053,265,1.551,266,2.25,267,2.144,269,1.819,270,3.902,272,1.326,273,2.752,274,3.189,276,3.508,277,2.25,279,4.823,280,4.397,281,1.728,288,1.384,301,2.378,308,2.538,321,2.144,322,2.378,326,4.269,327,2.25,332,0.827,334,3.491,335,3.185,336,2.378,337,2.144,338,0.934,377,1.676,379,1.912,383,3.408,503,2.951,627,1.902,642,2.247,726,3.185,727,2.538,909,3.689,910,2.538,911,2.538,912,2.538,914,5.217,966,6.825,968,5.513,969,5.513,975,2.538,1006,5.093,1075,3.491,1094,3.077,1095,4.773,1096,4.773,1097,4.773,1098,4.773,1099,4.773,1100,4.773,1101,4.773,1102,2.752,1103,3.616,1104,3.077,1105,4.269,1106,4.773,1107,2.246,1108,3.077,1109,4.773,1110,4.66,1111,6.306,1112,3.077,1113,4.773,1114,3.077,1115,4.773,1116,3.077,1117,4.773,1118,3.077,1119,4.773,1120,3.077,1121,4.773,1122,3.077,1123,2.538,1124,2.25,1125,3.077,1126,4.226,1127,2.752,1128,7.043,1129,7.874,1130,5.435,1131,5.848,1132,5.894,1133,3.077,1134,4.823,1135,3.937,1136,3.077,1137,3.077,1138,1.326,1139,4.773,1140,3.077,1141,2.25,1142,3.077,1143,3.077,1144,3.077,1145,3.077,1146,7.133,1147,7.547,1148,3.326,1149,4.773,1150,3.814,1151,4.773,1152,2.378,1153,2.853,1154,3.689,1155,3.689,1156,4.773,1157,3.937,1158,4.269,1159,5.848,1160,4.823,1161,5.848,1162,6.59,1163,5.848,1164,5.883,1165,4.773,1166,4.823,1167,4.773,1168,3.937,1169,3.077,1170,3.077,1171,3.077,1172,4.269,1173,3.077,1174,3.077,1175,3.077,1176,3.077,1177,3.077,1178,3.077,1179,2.752,1180,2.752]],["title/entities/AssetsWhitelistEntity.html",[394,2.25,1181,3.582]],["body/entities/AssetsWhitelistEntity.html",[0,0.377,3,0.056,4,0.05,5,0.05,10,0.132,11,0.422,12,0.89,14,2.015,18,0.285,19,0.006,20,0.429,21,1.756,23,0.639,29,0.819,34,0.201,35,1.124,36,0.056,62,1.781,65,2.808,77,1.656,78,1.815,83,0.004,84,0.004,117,1.868,228,2.56,229,1.42,232,1.441,235,1.807,252,1.815,269,1.778,328,3.734,348,2.761,369,2.982,370,3.898,371,2.924,375,1.555,377,1.52,380,1.208,381,3.524,384,3.524,394,3.242,396,2.966,398,4.465,399,4.465,401,5.469,402,3.863,403,5.443,404,5.663,406,4.365,408,3.863,410,4.082,412,5.455,413,4.356,416,5.162,417,5.837,419,4.71,420,4.71,421,4.527,422,4.919,423,3.266,424,3.387,425,3.057,426,3.057,427,3.68,428,3.68,429,4.527,430,3.68,431,3.524,620,6.207,1054,6.313,1055,6.313,1056,6.313,1057,6.313,1059,4.724,1060,4.724,1181,5.162,1182,5.281,1183,7.295,1184,7.295,1185,5.281,1186,5.281,1187,5.281,1188,5.281,1189,5.281,1190,5.281,1191,5.281,1192,6.313,1193,5.281,1194,5.281,1195,5.281,1196,7.059,1197,5.281,1198,4.082]],["title/controllers/AuthController.html",[107,1.916,1199,4.04]],["body/controllers/AuthController.html",[0,0.322,3,0.073,4,0.065,5,0.065,10,0.17,12,0.634,13,1.576,15,1.427,18,0.195,19,0.006,23,0.469,28,1.117,29,0.657,30,1.133,34,0.227,36,0.073,83,0.005,84,0.005,107,2.664,109,2.615,112,3.716,117,1.369,120,3.716,121,1.622,125,2.568,131,5.326,145,3.198,148,3.35,151,1.409,154,3.615,155,1.471,172,3.272,174,2.871,180,1.651,214,3.396,764,3.433,827,5.616,829,5.135,834,4.745,841,4.543,842,4.543,1199,6.849,1200,6.809,1201,6.809,1202,9.728,1203,6.809,1204,6.822,1205,6.809,1206,6.809,1207,6.073,1208,6.09,1209,6.553,1210,6.09,1211,6.09,1212,6.809,1213,6.809,1214,6.809,1215,6.809,1216,6.809,1217,6.809]],["title/guards/AuthGuard.html",[156,2.673,1218,4.381]],["body/guards/AuthGuard.html",[0,0.293,3,0.066,4,0.059,5,0.059,8,1.973,10,0.155,12,0.799,13,1.485,15,1.367,18,0.267,19,0.006,20,0.347,23,0.591,28,1.408,29,0.829,30,1.303,31,1.619,34,0.214,36,0.066,37,1.125,83,0.004,84,0.004,151,1.281,156,4.272,168,2.494,169,2.871,177,2.489,180,1.898,222,3.181,235,1.318,236,1.926,252,2.013,274,2.707,315,2.037,341,2.037,349,4.182,749,4.077,750,2.423,1219,6.193,1220,6.193,1221,9.021,1222,7.829,1223,6.193,1224,8.499,1225,6.193,1226,7.829,1227,8.068,1228,6.193,1229,6.193,1230,7.829,1231,6.193,1232,7.678,1233,4.529,1234,4.529,1235,6.193,1236,4.335,1237,6.193,1238,6.193,1239,6.193,1240,5.108,1241,6.193,1242,6.193,1243,5.539]],["title/modules/AuthModule.html",[189,1.694,851,3.582]],["body/modules/AuthModule.html",[0,0.327,3,0.074,4,0.066,5,0.066,19,0.006,34,0.232,36,0.074,83,0.005,84,0.005,109,3.214,151,1.426,189,3.115,191,3.167,192,3.167,193,3.313,194,3.313,195,3.238,196,4.329,197,4.329,203,4.021,204,3.313,205,3.167,207,4.117,208,3.566,209,2.425,214,2.51,215,3.872,851,7.339,858,6.799,1199,7.431,1209,7.444,1210,6.167,1244,6.167,1245,6.167,1246,6.167,1247,6.895,1248,6.895,1249,6.895,1250,6.895,1251,6.167]],["title/injectables/AuthService.html",[236,1.205,1209,3.582]],["body/injectables/AuthService.html",[0,0.232,3,0.052,4,0.047,5,0.047,10,0.122,12,0.802,13,1.274,15,1.219,18,0.193,19,0.006,23,0.462,28,1.101,29,0.648,30,0.816,34,0.224,36,0.052,37,1.496,49,1.695,72,1.155,83,0.004,84,0.004,100,3.051,121,0.957,125,1.849,151,1.014,168,2.138,169,2.071,177,2.915,180,1.996,214,3.318,235,1.044,236,1.652,237,2.113,252,1.726,269,0.985,300,5.537,315,2.208,341,2.208,342,2.56,344,4.385,347,4.705,348,3.373,356,3.595,372,3.17,380,1.751,471,3.789,473,2.412,645,3.564,650,2.128,657,4.385,665,3.564,666,2.603,667,2.603,668,3.564,893,4.044,897,3.032,1148,3.416,1204,6.02,1207,4.909,1209,4.909,1211,4.385,1224,8.153,1233,3.586,1236,2.356,1252,4.903,1253,6.004,1254,4.903,1255,6.204,1256,4.903,1257,6.713,1258,4.903,1259,4.903,1260,4.903,1261,4.903,1262,4.903,1263,4.385,1264,4.903,1265,6.713,1266,4.903,1267,3.789,1268,4.044,1269,6.713,1270,4.385,1271,4.903,1272,5.107,1273,5.916,1274,4.903,1275,4.903,1276,4.903,1277,4.903,1278,4.903,1279,4.903,1280,4.903,1281,4.903,1282,4.903,1283,4.903,1284,4.903,1285,4.903,1286,4.903,1287,2.535,1288,4.903,1289,6.713,1290,4.903,1291,4.903,1292,4.903,1293,7.654,1294,4.903,1295,6.713,1296,4.903,1297,6.713,1298,4.903,1299,6.713,1300,4.903,1301,6.713,1302,6.713,1303,3.586,1304,4.385,1305,2.603,1306,4.903,1307,4.903,1308,4.044,1309,4.903,1310,4.903,1311,4.903,1312,4.044,1313,4.903,1314,4.903,1315,4.903,1316,6.713,1317,6.004,1318,5.598,1319,4.903,1320,5.334,1321,4.903,1322,5.537,1323,4.903,1324,4.903,1325,4.385,1326,3.271,1327,4.903,1328,3.586,1329,4.385,1330,4.044,1331,4.903,1332,2.158]],["title/controllers/AwsController.html",[107,1.916,1333,4.04]],["body/controllers/AwsController.html",[0,0.215,3,0.048,4,0.043,5,0.085,10,0.114,12,0.742,13,1.209,14,1.614,15,1.524,18,0.262,19,0.006,23,0.548,28,1.307,29,0.769,30,1.327,34,0.216,36,0.068,37,1.448,83,0.003,84,0.003,107,2.492,109,1.746,117,1.602,120,4.349,121,1.78,125,2.403,133,5.726,142,4.349,146,1.883,148,2.237,150,2.632,151,0.94,154,2.414,155,0.982,156,2.481,157,2.916,169,1.403,170,1.687,172,3.83,173,3.688,174,3.151,177,2.433,180,1.783,212,1.04,223,2.414,239,2.691,252,2.296,269,1.602,281,4.13,291,3.325,349,3.93,388,4.086,764,2.292,795,4.669,829,5.188,834,5.553,841,3.033,842,3.033,888,6.159,1034,4.904,1039,3.807,1234,5.378,1333,5.254,1334,4.066,1335,6.371,1336,6.371,1337,7.354,1338,7.354,1339,4.546,1340,7.638,1341,7.157,1342,7.128,1343,7.969,1344,7.969,1345,7.969,1346,4.546,1347,4.546,1348,4.546,1349,4.546,1350,4.546,1351,4.546,1352,6.361,1353,6.371,1354,5.578,1355,4.546,1356,4.546,1357,4.546,1358,4.546,1359,4.546,1360,4.546,1361,6.577,1362,6.577,1363,6.577,1364,6.577,1365,4.066,1366,4.066,1367,3.75,1368,5.698,1369,4.907,1370,4.066,1371,6.066,1372,5.698,1373,4.546,1374,4.546,1375,4.546,1376,4.546,1377,4.546,1378,3.939,1379,5.698,1380,4.251,1381,4.066,1382,6.371,1383,4.066,1384,4.546,1385,4.546,1386,4.546,1387,6.371,1388,6.371,1389,6.371,1390,6.371,1391,5.254,1392,6.371,1393,6.371,1394,4.546,1395,4.546,1396,4.546,1397,4.546,1398,4.546,1399,4.066,1400,2.481,1401,2.717,1402,3.325,1403,4.546,1404,4.546,1405,3.325,1406,4.546]],["title/modules/AwsModule.html",[189,1.694,852,3.268]],["body/modules/AwsModule.html",[0,0.314,3,0.071,4,0.063,5,0.063,15,1.055,19,0.006,34,0.235,36,0.071,83,0.004,84,0.004,109,3.136,151,1.37,189,3.06,191,3.042,192,3.042,193,3.183,194,3.183,195,3.111,196,4.253,197,4.253,203,3.923,204,3.183,205,3.042,207,4.017,208,3.425,209,2.329,235,1.41,749,3.903,750,2.591,852,6.533,861,5.689,1233,4.844,1240,5.464,1333,7.3,1369,6.758,1370,5.924,1407,5.924,1408,5.924,1409,5.924,1410,6.624,1411,6.734,1412,4.096,1413,5.924,1414,3.72,1415,4.248,1416,6.624,1417,6.624,1418,5.924,1419,5.924,1420,5.924,1421,5.924,1422,5.924,1423,5.924,1424,5.924,1425,3.834]],["title/injectables/AwsService.html",[236,1.205,1369,3.268]],["body/injectables/AwsService.html",[0,0.167,3,0.038,4,0.034,5,0.084,10,0.088,11,0.318,12,0.848,13,1.007,14,0.896,15,1.546,18,0.262,19,0.006,20,0.434,21,1.098,22,0.833,23,0.627,28,1.395,29,0.821,30,1.416,31,1.465,34,0.21,35,0.753,36,0.038,37,1.502,72,1.877,83,0.003,84,0.003,125,2.863,145,1.661,151,0.732,168,1.691,169,2.871,170,2.01,177,2.741,180,2.109,209,1.244,235,1.357,236,1.306,237,1.524,239,2.992,241,3.326,252,2.187,255,3.941,256,1.699,274,2.449,276,1.524,281,1.986,285,1.074,309,2.917,315,1.746,341,1.746,342,2.765,346,4.378,366,1.661,380,0.809,446,3.485,495,3.163,645,3.76,650,1.976,745,2.36,747,3.689,782,2.187,888,6.16,964,2.733,1034,2.745,1107,2.039,1332,1.556,1341,6.573,1342,4.748,1352,5.83,1354,3.404,1369,3.542,1399,3.163,1402,2.586,1412,2.187,1414,1.986,1415,2.268,1426,3.536,1427,7.59,1428,7.924,1429,5.308,1430,5.308,1431,5.308,1432,7.083,1433,5.308,1434,5.308,1435,5.308,1436,5.308,1437,3.536,1438,6.046,1439,5.308,1440,5.308,1441,5.308,1442,3.536,1443,7.083,1444,5.308,1445,3.536,1446,5.308,1447,7.083,1448,3.536,1449,3.536,1450,5.308,1451,3.536,1452,5.308,1453,3.536,1454,5.308,1455,3.536,1456,5.308,1457,3.536,1458,5.308,1459,3.536,1460,5.308,1461,5.308,1462,3.536,1463,2.897,1464,5.256,1465,3.163,1466,3.536,1467,3.536,1468,5.308,1469,2.917,1470,6.373,1471,3.536,1472,3.536,1473,3.536,1474,3.536,1475,3.536,1476,3.536,1477,3.536,1478,3.536,1479,3.536,1480,3.536,1481,3.536,1482,5.308,1483,3.536,1484,3.536,1485,3.163,1486,5.308,1487,6.373,1488,3.536,1489,4.378,1490,3.536,1491,3.536,1492,3.536,1493,3.536,1494,3.536,1495,3.536,1496,3.536,1497,5.308,1498,5.308,1499,3.536,1500,5.308,1501,5.308,1502,4.748,1503,5.308,1504,4.748,1505,3.536,1506,3.536,1507,3.536,1508,3.536,1509,3.536,1510,3.536,1511,3.536,1512,3.536,1513,3.536,1514,3.536,1515,2.36,1516,3.536,1517,2.113,1518,4.103,1519,1.783,1520,3.282,1521,3.536,1522,3.536,1523,3.163,1524,1.829,1525,3.536,1526,3.536,1527,3.536,1528,3.536,1529,3.536,1530,3.536,1531,5.308,1532,3.536,1533,3.536,1534,3.536,1535,3.536,1536,3.536,1537,3.536,1538,2.268,1539,6.373,1540,3.536,1541,6.335,1542,5.308,1543,6.335,1544,5.308,1545,5.308,1546,5.308,1547,5.308,1548,5.308,1549,7.971,1550,5.308,1551,3.882,1552,5.308,1553,4.103,1554,3.536,1555,4.103,1556,4.748,1557,4.103,1558,5.308,1559,2.187,1560,3.163,1561,3.163,1562,2.818,1563,3.536]],["title/interfaces/BlockchainAddressResponse.html",[640,1.105,1564,3.029]],["body/interfaces/BlockchainAddressResponse.html",[3,0.066,4,0.059,5,0.059,10,0.154,11,0.467,18,0.246,19,0.006,20,0.46,36,0.104,64,2.409,83,0.004,84,0.004,140,1.706,212,1.785,219,1.759,312,3.109,332,2.097,338,2.37,375,1.813,377,1.787,462,2.642,545,2.323,559,2.026,615,3.933,619,2.561,623,3.433,640,2.199,641,2.323,644,3.052,650,2.352,656,2.059,697,4.228,702,2.601,725,3.105,755,2.129,1040,2.609,1110,3.36,1564,4.824,1565,4.109,1566,4.912,1567,5.773,1568,4.662,1569,5.205,1570,4.257,1571,3.36,1572,3.808,1573,3.808,1574,3.36,1575,2.892,1576,2.828,1577,3.36,1578,4.109,1579,4.109,1580,3.808,1581,3.36,1582,4.109,1583,3.808,1584,4.109]],["title/interfaces/BlockchainContractResponse.html",[640,1.105,1580,3.029]],["body/interfaces/BlockchainContractResponse.html",[3,0.066,4,0.059,5,0.059,10,0.154,11,0.467,18,0.246,19,0.006,20,0.461,36,0.104,64,2.409,83,0.004,84,0.004,140,1.706,212,1.785,219,1.759,312,3.588,332,2.097,338,2.37,375,1.813,377,1.763,462,2.642,545,2.323,559,2.026,615,3.933,619,2.561,623,3.433,640,2.199,641,2.323,644,3.052,650,2.352,656,2.059,697,2.892,702,2.601,725,3.105,755,2.129,1040,2.609,1110,3.36,1564,3.808,1565,4.109,1566,3.36,1567,5.003,1568,4.662,1569,5.205,1570,4.257,1571,3.36,1572,3.808,1573,3.808,1574,3.36,1575,2.892,1576,2.828,1577,3.36,1578,4.109,1579,4.109,1580,4.824,1581,4.912,1582,6.006,1583,3.808,1584,4.109]],["title/controllers/BlockchainController.html",[107,1.916,1585,4.04]],["body/controllers/BlockchainController.html",[0,0.166,3,0.056,4,0.033,5,0.033,10,0.088,12,0.74,13,1.002,15,1.523,18,0.276,19,0.006,20,0.156,23,0.547,28,1.304,29,0.768,30,1.324,31,1.756,34,0.202,36,0.037,37,0.96,55,2.325,61,1.281,62,1.565,66,1.349,83,0.003,84,0.003,100,2.106,107,1.374,109,1.349,112,1.917,117,1.598,120,4.967,121,1.844,125,1.992,133,4.68,138,2.276,141,3.058,142,4.967,145,3.874,148,1.729,150,2.034,151,0.727,152,5.101,153,5.793,154,1.865,155,0.759,156,1.917,159,2.663,168,1.119,169,1.959,170,1.681,172,3.964,173,4.087,174,3.182,177,2.047,178,1.579,179,2.344,180,2.106,219,0.792,249,1.257,252,0.903,274,1.215,315,1.738,332,0.945,338,1.067,341,1.738,342,2.659,347,2.883,349,3.107,379,0.89,545,2.394,628,2.883,629,1.817,642,2.218,644,1.374,671,1.279,673,3.157,745,4.711,747,4.603,752,2.448,781,2.034,805,2.034,808,2.57,811,4.083,812,4.083,987,2.682,1073,2.898,1107,2.438,1127,3.143,1138,1.515,1148,2.448,1208,3.143,1232,3.143,1236,1.688,1272,6.073,1303,2.57,1308,4.357,1332,2.325,1402,2.57,1463,1.917,1517,4.219,1518,6.146,1585,4.357,1586,3.514,1587,4.159,1588,5.283,1589,5.283,1590,5.283,1591,5.283,1592,4.366,1593,3.514,1594,3.651,1595,5.283,1596,5.456,1597,5.283,1598,3.514,1599,3.514,1600,4.725,1601,3.514,1602,3.143,1603,3.514,1604,3.514,1605,3.748,1606,5.283,1607,3.514,1608,5.601,1609,5.283,1610,5.628,1611,6.314,1612,5.283,1613,7.06,1614,3.514,1615,3.514,1616,6.348,1617,5.283,1618,3.514,1619,4.725,1620,3.514,1621,3.651,1622,3.514,1623,2.663,1624,2.805,1625,3.514,1626,3.514,1627,3.514,1628,5.163,1629,3.514,1630,3.514,1631,3.514,1632,3.514,1633,3.925,1634,3.267,1635,2.344,1636,2.344,1637,3.157,1638,4.071,1639,2.898,1640,4.643,1641,3.143,1642,3.514,1643,3.514,1644,3.514,1645,3.514,1646,3.514,1647,3.514,1648,3.514,1649,3.514,1650,3.514,1651,3.514,1652,3.514,1653,3.514,1654,3.514,1655,3.514,1656,3.514,1657,5.283,1658,2.805,1659,3.514,1660,3.514,1661,3.173,1662,6.348,1663,3.514,1664,5.283,1665,5.236,1666,5.678,1667,3.514,1668,3.514,1669,3.143,1670,3.514,1671,3.143,1672,3.514,1673,3.514,1674,3.514,1675,3.143,1676,3.514,1677,2.173,1678,2.898,1679,3.514,1680,5.283,1681,5.283,1682,5.283,1683,5.283,1684,3.514,1685,3.514,1686,5.283,1687,5.283,1688,4.725,1689,5.283,1690,3.514,1691,3.514,1692,3.514,1693,3.514,1694,3.514,1695,3.514,1696,2.344,1697,3.514,1698,3.514,1699,3.514,1700,2.344,1701,3.514,1702,2.344,1703,3.514,1704,3.514,1705,3.267,1706,1.65]],["title/modules/BlockchainModule.html",[189,1.694,853,3.029]],["body/modules/BlockchainModule.html",[0,0.273,3,0.061,4,0.055,5,0.055,19,0.006,34,0.237,36,0.061,62,1.529,83,0.004,84,0.004,109,2.871,151,1.192,189,2.869,191,2.646,192,2.646,193,2.768,194,2.768,195,2.706,196,3.987,197,3.987,202,5.572,203,3.592,204,2.768,205,2.646,207,3.678,208,2.979,209,2.026,210,4.014,216,2.296,217,3.844,235,1.226,642,1.549,750,2.254,752,4.014,761,6.221,780,3.695,853,6.345,861,4.014,884,5.152,885,5.152,1411,6.165,1412,3.562,1585,6.844,1587,2.905,1608,3.443,1637,5.94,1638,6.374,1639,4.752,1640,7.268,1641,5.152,1707,5.152,1708,5.152,1709,5.152,1710,5.761,1711,5.581,1712,5.011,1713,5.761,1714,3.844,1715,5.761,1716,3.562,1717,5.761,1718,3.443]],["title/injectables/BlockchainScannerService.html",[236,1.205,1711,2.751]],["body/injectables/BlockchainScannerService.html",[0,0.159,3,0.036,4,0.032,5,0.032,10,0.084,11,0.306,12,0.858,13,0.969,15,1.59,18,0.278,19,0.006,20,0.45,21,1.536,22,1.083,23,0.645,28,1.537,29,0.88,30,1.5,31,1.995,34,0.176,36,0.036,37,1.349,62,0.619,72,0.791,83,0.003,84,0.003,100,2.035,121,0.656,125,1.267,151,0.695,168,1.07,169,2.962,170,2.316,177,2.428,180,2.254,235,1.469,236,1.257,237,1.448,239,2.916,249,1.202,252,1.313,274,1.766,285,1.021,292,1.737,315,2.271,341,2.271,342,3.109,349,2.247,366,1.578,375,0.989,377,1.106,379,0.851,380,1.169,462,1.576,559,1.68,642,2.537,650,2.049,656,2.066,710,2.597,745,4.953,748,4.305,749,3.302,750,1.314,764,1.694,781,2.956,795,3.115,813,2.457,818,3.316,967,2.155,1243,4.568,1287,4.042,1380,2.242,1489,2.771,1561,4.568,1564,2.078,1568,2.008,1572,2.078,1573,2.078,1580,2.078,1583,2.078,1711,2.868,1719,7.293,1720,3.005,1721,6.178,1722,6.178,1723,5.107,1724,5.107,1725,5.107,1726,5.107,1727,5.107,1728,5.107,1729,5.107,1730,5.107,1731,6.178,1732,5.107,1733,5.107,1734,6.178,1735,5.107,1736,5.107,1737,6.627,1738,3.36,1739,7.817,1740,5.107,1741,3.36,1742,5.107,1743,3.36,1744,5.107,1745,3.36,1746,5.107,1747,3.36,1748,5.107,1749,3.36,1750,5.107,1751,3.36,1752,3.36,1753,3.36,1754,3.36,1755,3.36,1756,5.107,1757,3.36,1758,5.107,1759,3.36,1760,3.36,1761,3.36,1762,6.173,1763,3.36,1764,3.559,1765,5.107,1766,3.36,1767,3.36,1768,3.36,1769,3.36,1770,4.212,1771,3.005,1772,4.568,1773,4.568,1774,1.784,1775,3.36,1776,4.568,1777,3.005,1778,3.36,1779,3.005,1780,3.36,1781,3.36,1782,6.901,1783,3.36,1784,5.107,1785,5.107,1786,3.36,1787,5.107,1788,4.212,1789,5.107,1790,3.36,1791,4.122,1792,3.36,1793,5.107,1794,5.107,1795,5.107,1796,6.178,1797,3.36,1798,5.107,1799,2.771,1800,5.107,1801,2.078,1802,2.457,1803,3.36,1804,3.36,1805,3.36,1806,3.36,1807,5.107,1808,3.36,1809,5.107,1810,3.36,1811,3.36,1812,2.008,1813,3.005,1814,3.36,1815,2.008,1816,2.597,1817,3.36,1818,3.36,1819,3.36,1820,3.36,1821,3.36,1822,3.36,1823,3.36,1824,3.36,1825,3.36]],["title/injectables/BlockchainService.html",[236,1.205,1712,2.47]],["body/injectables/BlockchainService.html",[0,0.218,3,0.049,4,0.044,5,0.044,10,0.115,11,0.385,12,0.69,13,1.221,15,1.391,18,0.267,19,0.006,20,0.412,21,0.954,22,0.724,23,0.601,28,1.216,29,0.715,30,1.335,31,1.659,34,0.19,36,0.086,37,1.347,66,2.472,72,1.516,83,0.004,84,0.004,100,2.565,121,1.257,138,2.538,140,2.053,142,2.517,145,2.167,146,2.666,148,2.27,151,0.954,168,2.05,169,2.934,170,2.519,177,2.326,180,1.561,236,1.584,237,1.989,239,3.388,249,2.303,252,2.247,274,2.773,315,2.117,341,2.117,342,2.682,358,3.935,627,3.98,628,2.517,629,3.328,640,1.452,642,2.411,746,3.078,749,3.691,750,1.805,756,2.326,757,3.684,758,2.832,766,3.078,768,3.078,776,4.643,780,4.128,781,4.291,782,3.98,783,4.128,784,3.847,795,2.326,809,2.518,811,4.974,812,4.974,813,3.374,818,3.093,836,3.565,944,2.449,987,2.719,1107,3.08,1332,2.832,1412,2.853,1438,6.558,1524,3.328,1562,3.417,1587,3.737,1594,3.833,1596,4.974,1623,2.326,1624,4.258,1712,3.245,1826,3.565,1827,6.114,1828,6.114,1829,6.436,1830,5.309,1831,4.613,1832,5.309,1833,5.309,1834,3.98,1835,4.613,1836,5.309,1837,3.615,1838,4.613,1839,5.309,1840,4.613,1841,4.974,1842,3.374,1843,2.326,1844,4.974,1845,2.67,1846,3.805,1847,3.805,1848,6.114,1849,3.805,1850,3.805,1851,3.805,1852,3.935,1853,3.805,1854,3.805,1855,3.805,1856,3.565,1857,3.805,1858,3.565,1859,3.328,1860,3.565,1861,3.805,1862,2.591,1863,2.591,1864,6.114,1865,2.959,1866,3.805,1867,2.853]],["title/interfaces/BlockchainTokenResponse.html",[640,1.105,1583,3.029]],["body/interfaces/BlockchainTokenResponse.html",[3,0.065,4,0.058,5,0.058,10,0.152,11,0.463,18,0.257,19,0.006,20,0.461,29,0.747,36,0.104,64,2.379,83,0.004,84,0.004,140,1.685,212,1.771,219,1.745,312,3.571,332,2.081,338,2.81,375,2.638,377,1.759,462,2.627,545,2.294,559,2.001,615,3.902,619,2.546,623,3.406,640,2.194,641,2.294,644,3.027,650,2.26,656,2.997,697,2.856,702,2.569,725,3.066,755,2.103,1040,2.588,1110,3.318,1564,3.76,1565,4.057,1566,3.318,1567,4.963,1568,4.625,1569,5.164,1570,4.223,1571,3.318,1572,3.76,1573,3.76,1574,3.318,1575,2.856,1576,2.793,1577,3.318,1578,4.057,1579,4.057,1580,3.76,1581,3.318,1582,4.057,1583,4.785,1584,5.979]],["title/interfaces/BlockchainTransactionListItem.html",[640,1.105,1568,2.927]],["body/interfaces/BlockchainTransactionListItem.html",[3,0.065,4,0.058,5,0.058,10,0.152,11,0.464,18,0.257,19,0.006,20,0.459,36,0.104,64,2.385,83,0.004,84,0.004,140,1.689,212,1.774,219,1.748,312,3.09,332,2.084,338,2.355,375,1.796,377,1.815,462,2.63,545,2.3,559,2.006,615,3.909,619,2.549,623,4.075,640,2.195,641,2.3,644,3.033,650,2.262,656,2.039,697,2.864,702,2.576,725,3.075,755,2.108,1040,2.593,1110,3.328,1564,3.771,1565,4.069,1566,3.328,1567,4.972,1568,5.094,1569,6.179,1570,5.053,1571,4.895,1572,3.771,1573,3.771,1574,3.328,1575,2.864,1576,2.801,1577,3.328,1578,4.069,1579,4.069,1580,3.771,1581,3.328,1582,4.069,1583,3.771,1584,4.069]],["title/interfaces/BlockchainTransactionListResponse.html",[640,1.105,1572,3.029]],["body/interfaces/BlockchainTransactionListResponse.html",[3,0.065,4,0.058,5,0.058,10,0.152,11,0.464,18,0.257,19,0.006,20,0.459,36,0.104,64,3.509,83,0.004,84,0.004,140,1.689,212,1.774,219,1.748,312,3.09,332,2.084,338,2.355,375,1.796,377,1.802,462,2.63,545,2.3,559,2.006,615,3.909,619,2.549,623,3.412,640,2.195,641,2.3,644,3.033,650,2.348,656,2.039,697,2.864,702,2.576,725,4.522,755,2.108,1040,2.593,1110,4.895,1564,3.771,1565,4.069,1566,3.328,1567,4.972,1568,5.361,1569,5.173,1570,4.23,1571,3.328,1572,4.794,1573,3.771,1574,3.328,1575,2.864,1576,2.801,1577,3.328,1578,4.069,1579,4.069,1580,3.771,1581,3.328,1582,4.069,1583,3.771,1584,4.069]],["title/interfaces/BlockchainTransactionResponse.html",[640,1.105,1573,3.029]],["body/interfaces/BlockchainTransactionResponse.html",[3,0.061,4,0.055,5,0.055,10,0.143,11,0.446,18,0.289,19,0.006,20,0.459,29,0.899,36,0.103,64,2.245,83,0.004,84,0.004,140,2.429,212,1.706,219,1.681,312,2.972,332,2.004,338,2.76,375,1.69,377,1.768,462,2.555,545,3.307,559,2.725,615,4.582,619,2.477,623,3.281,640,2.168,641,2.164,644,2.916,650,2.226,656,1.919,697,2.695,702,2.424,725,2.893,755,3.032,818,4.476,1040,2.493,1110,3.131,1564,3.548,1565,3.829,1566,3.131,1567,4.782,1568,4.456,1569,4.975,1570,4.959,1571,3.131,1572,3.548,1573,4.61,1574,4.784,1575,4.118,1576,4.027,1577,3.131,1578,3.829,1579,3.829,1580,3.548,1581,3.131,1582,3.829,1583,3.548,1584,3.829]],["title/interfaces/BlockchainUtxo.html",[640,1.105,1567,3.141]],["body/interfaces/BlockchainUtxo.html",[3,0.061,4,0.054,5,0.054,10,0.143,11,0.445,18,0.279,19,0.006,20,0.461,36,0.102,64,2.239,83,0.004,84,0.004,140,1.586,212,2.004,219,1.679,312,2.966,332,2.001,338,2.261,375,1.685,377,1.787,462,2.997,545,2.159,559,1.883,615,4.578,619,2.783,623,3.996,640,2.167,641,2.159,644,2.912,650,2.321,656,1.914,697,2.688,702,3.7,725,2.886,755,1.979,1040,2.489,1110,3.123,1564,3.539,1565,3.819,1566,3.123,1567,5.305,1568,4.448,1569,6.058,1570,4.061,1571,3.123,1572,3.539,1573,3.539,1574,3.123,1575,2.688,1576,2.629,1577,4.779,1578,5.844,1579,5.844,1580,3.539,1581,3.123,1582,3.819,1583,3.539,1584,3.819]],["title/classes/BlockchainWebhookDto.html",[0,0.232,1605,2.601]],["body/classes/BlockchainWebhookDto.html",[0,0.409,2,0.587,3,0.04,4,0.036,5,0.036,10,0.194,11,0.331,18,0.286,19,0.006,20,0.426,22,0.587,23,0.56,34,0.173,36,0.04,83,0.003,84,0.003,95,3.406,117,1.635,121,1.974,138,2.336,140,2.254,155,0.807,225,2.312,227,2.762,228,2.846,229,1.005,230,3.784,231,3.804,232,1.02,234,3.014,235,1.792,269,1.324,285,2.211,332,1.488,349,2.435,361,3.168,362,3.375,363,2.911,373,3.315,377,1.708,379,0.947,380,0.855,462,2.598,473,2.722,545,2.087,546,1.797,559,1.82,615,3.918,619,1.655,623,1.645,642,2.263,644,2.577,650,1.74,671,1.361,697,1.756,702,2.337,725,1.885,755,1.913,835,2.659,997,2.164,998,2.659,1040,1.85,1048,3.183,1107,2.125,1287,3.406,1517,3.307,1520,2.312,1538,2.398,1566,2.04,1570,2.04,1571,2.04,1574,2.04,1575,2.599,1576,1.717,1577,3.019,1605,2.938,1608,4.351,1610,5.031,1658,2.938,1661,1.68,1843,1.885,1868,2.605,1869,4.59,1870,4.59,1871,3.856,1872,3.344,1873,3.739,1874,3.856,1875,3.856,1876,3.739,1877,3.739,1878,4.669,1879,3.856,1880,3.856,1881,3.856,1882,3.856,1883,3.739,1884,3.739,1885,5.185,1886,2.605,1887,3.739,1888,3.739,1889,3.739,1890,3.856,1891,3.856,1892,3.856,1893,3.856,1894,3.739,1895,3.739,1896,2.1,1897,2.1,1898,5.993,1899,2.605,1900,4.858,1901,3.094,1902,2.605,1903,4.224,1904,2.605,1905,4.24,1906,3.107,1907,3.856,1908,4.858,1909,2.605,1910,4.858,1911,2.605,1912,2.605,1913,2.605,1914,2.234,1915,2.605,1916,5.073,1917,2.605,1918,2.164,1919,3.692,1920,2.605,1921,3.856,1922,3.692,1923,2.605,1924,2.605,1925,2.605,1926,2.605,1927,2.605,1928,2.312,1929,2.398,1930,1.84,1931,2.605,1932,2.605,1933,2.605]],["title/classes/BlockfrostAmount.html",[0,0.232,1898,3.268]],["body/classes/BlockfrostAmount.html",[0,0.417,2,0.627,3,0.043,4,0.038,5,0.038,10,0.199,11,0.348,18,0.281,19,0.006,20,0.428,22,0.911,23,0.4,34,0.178,36,0.043,83,0.003,84,0.003,95,2.066,117,1.167,121,1.984,138,2.342,140,2.308,155,0.863,227,2.775,228,2.86,229,1.074,230,3.864,231,3.876,232,1.09,234,3.086,235,1.83,269,0.803,285,2.283,332,2.146,349,1.758,361,3.207,362,3.424,363,2.972,373,3.316,377,1.703,379,1.012,380,0.914,462,2.653,473,1.965,545,1.507,546,1.92,559,1.911,615,4.025,619,1.737,623,1.758,642,1.84,644,3.363,650,1.796,671,1.454,697,1.876,702,2.454,725,2.014,755,2.008,835,1.92,997,2.312,998,2.791,1040,1.336,1048,2.272,1107,2.231,1287,2.066,1517,3.471,1520,2.47,1538,2.562,1566,2.18,1570,2.18,1571,2.18,1574,2.18,1575,2.728,1576,1.835,1577,3.17,1605,2.121,1608,3.471,1610,4.232,1658,2.121,1661,1.795,1843,2.014,1868,2.783,1869,2.783,1870,2.783,1871,2.783,1874,2.783,1875,2.783,1878,3.725,1879,2.783,1880,2.783,1881,2.783,1882,2.783,1885,5.014,1890,2.783,1891,2.783,1892,2.783,1893,2.783,1896,2.243,1897,2.243,1898,6.166,1899,2.783,1900,5.014,1901,3.214,1902,2.783,1903,4.39,1904,2.783,1905,4.356,1906,3.262,1907,4.047,1908,5.014,1909,2.783,1910,5.014,1911,2.783,1912,2.783,1913,2.783,1914,2.387,1915,2.783,1916,5.236,1917,2.783,1918,2.312,1919,3.876,1920,2.783,1921,4.047,1922,3.876,1923,2.783,1924,2.783,1925,2.783,1926,2.783,1927,2.783,1928,2.47,1929,2.562,1930,1.965,1931,2.783,1932,2.783,1933,2.783,1934,3.995,1935,3.995,1936,3.995,1937,3.995]],["title/classes/BlockfrostTransaction.html",[0,0.232,1910,3.268]],["body/classes/BlockfrostTransaction.html",[0,0.398,2,0.534,3,0.036,4,0.032,5,0.032,10,0.21,11,0.309,18,0.286,19,0.006,20,0.422,22,0.534,23,0.636,29,0.498,34,0.165,36,0.036,83,0.003,84,0.003,95,1.759,117,1.856,121,1.959,138,2.34,140,2.43,155,0.735,225,2.103,227,2.741,228,2.825,229,0.914,230,3.667,231,3.698,232,0.928,234,2.91,235,1.737,269,0.684,285,2.11,332,1.386,349,1.497,361,3.109,362,3.303,363,2.821,373,3.328,377,1.75,379,0.862,380,0.778,462,2.655,473,1.674,545,1.283,546,2.477,559,2.048,615,4.495,619,1.542,623,1.497,642,2.505,644,2.435,650,1.66,671,1.238,697,2.421,702,2.178,725,2.599,755,1.782,835,1.635,997,1.969,998,2.477,1040,1.138,1048,3.613,1107,1.98,1287,1.759,1517,4.151,1520,3.188,1538,3.306,1566,3.397,1570,3.397,1571,3.397,1574,3.397,1575,2.421,1576,2.859,1577,2.813,1605,1.806,1608,3.081,1610,3.849,1658,1.806,1661,1.529,1843,1.715,1868,2.37,1869,2.37,1870,2.37,1871,2.37,1874,2.37,1875,2.37,1878,3.306,1879,2.37,1880,2.37,1881,2.37,1882,2.37,1885,4.634,1886,2.37,1890,2.37,1891,2.37,1892,2.37,1893,2.37,1896,1.91,1897,1.91,1898,5.948,1899,2.37,1900,4.634,1901,2.923,1902,2.37,1903,4.454,1904,2.37,1905,4.286,1906,3.496,1907,3.592,1908,4.634,1909,2.37,1910,4.98,1911,2.37,1912,2.37,1913,2.37,1914,3.081,1915,2.37,1916,5.996,1917,2.37,1918,2.984,1919,4.98,1920,2.37,1921,5.201,1922,4.98,1923,3.592,1924,2.37,1925,4.337,1926,2.37,1927,4.337,1928,2.103,1929,3.306,1930,1.674,1931,2.37,1932,2.37,1933,2.37,1938,3.402,1939,3.402,1940,3.402,1941,3.402,1942,3.402,1943,3.402,1944,3.402,1945,3.402,1946,3.402,1947,3.402,1948,3.402,1949,3.402,1950,2.806,1951,3.402,1952,2.806,1953,3.402,1954,3.402,1955,3.402,1956,3.402,1957,3.402,1958,3.402,1959,3.402,1960,3.402,1961,3.402,1962,3.402,1963,3.402,1964,3.402]],["title/classes/BlockfrostTransactionEvent.html",[0,0.232,1885,3.268]],["body/classes/BlockfrostTransactionEvent.html",[0,0.415,2,0.617,3,0.042,4,0.037,5,0.037,10,0.198,11,0.344,18,0.284,19,0.006,20,0.421,22,0.617,23,0.467,34,0.177,36,0.042,83,0.003,84,0.003,95,2.034,117,1.364,121,1.981,138,2.403,140,2.295,155,0.85,225,3.552,227,2.772,228,2.857,229,1.057,230,3.846,231,3.86,232,1.073,234,3.07,235,1.822,269,0.791,285,2.266,332,1.544,349,1.731,361,3.198,362,3.413,363,2.958,373,3.299,377,1.698,379,0.997,380,0.9,462,2.64,473,1.935,545,1.484,546,1.89,559,1.89,615,4,619,1.718,623,1.731,642,2.006,644,2.654,650,1.783,671,1.432,697,1.847,702,2.426,725,1.983,755,2.743,835,1.89,997,2.277,998,2.76,1040,1.316,1048,2.654,1107,2.206,1287,2.034,1517,3.433,1520,2.432,1538,2.523,1566,2.146,1570,2.146,1571,2.146,1574,2.146,1575,3.726,1576,1.807,1577,3.134,1605,2.088,1608,3.433,1610,4.195,1658,2.088,1661,2.582,1843,1.983,1868,2.741,1869,2.741,1870,2.741,1871,2.741,1874,2.741,1875,2.741,1878,3.684,1879,2.741,1880,2.741,1881,2.741,1882,2.741,1885,5.294,1886,4.002,1890,2.741,1891,2.741,1892,2.741,1893,2.741,1896,2.209,1897,2.209,1898,6.065,1899,2.741,1900,5.294,1901,3.186,1902,2.741,1903,4.351,1904,2.741,1905,4.33,1906,3.226,1907,4.002,1908,5.294,1909,2.741,1910,5.294,1911,2.741,1912,2.741,1913,2.741,1914,2.351,1915,2.741,1916,5.198,1917,2.741,1918,2.277,1919,3.832,1920,2.741,1921,4.002,1922,3.832,1923,2.741,1924,2.741,1925,2.741,1926,2.741,1927,2.741,1928,2.432,1929,2.523,1930,3.338,1931,2.741,1932,2.741,1933,2.741,1965,3.934,1966,3.934,1967,3.934,1968,3.934]],["title/classes/BlockfrostTxInput.html",[0,0.232,1900,3.268]],["body/classes/BlockfrostTxInput.html",[0,0.41,2,0.59,3,0.04,4,0.036,5,0.036,10,0.204,11,0.332,18,0.284,19,0.006,20,0.426,22,0.59,23,0.561,29,0.705,34,0.173,36,0.04,83,0.003,84,0.003,95,1.943,117,1.638,121,1.975,138,2.363,140,2.398,155,0.812,225,2.324,227,2.763,228,2.848,229,1.01,230,3.79,231,3.81,232,1.026,234,3.02,235,1.795,269,0.755,285,2.217,332,1.493,349,1.654,361,3.171,362,3.379,363,2.916,373,3.316,377,1.698,379,0.952,380,0.86,462,2.671,473,1.849,545,1.417,546,1.806,559,2.174,615,3.926,619,2.183,623,2.907,642,2.267,644,2.584,650,2.015,671,1.368,697,1.765,702,3.083,725,1.895,755,1.92,835,1.806,997,2.175,998,2.669,1040,1.257,1048,3.189,1107,2.537,1287,1.943,1517,3.319,1520,2.324,1538,2.41,1566,2.051,1570,2.051,1571,2.051,1574,2.051,1575,2.609,1576,1.726,1577,3.983,1605,1.995,1608,3.319,1610,4.085,1658,1.995,1661,1.689,1843,1.895,1868,2.619,1869,2.619,1870,2.619,1871,2.619,1874,2.619,1875,2.619,1878,3.562,1879,2.619,1880,2.619,1881,2.619,1882,2.619,1885,4.87,1886,2.619,1890,2.619,1891,2.619,1892,2.619,1893,2.619,1896,2.11,1897,2.11,1898,6.086,1899,2.619,1900,5.196,1901,3.828,1902,2.619,1903,4.681,1904,2.619,1905,4.448,1906,3.71,1907,5.426,1908,4.87,1909,2.619,1910,4.87,1911,2.619,1912,2.619,1913,2.619,1914,2.246,1915,2.619,1916,5.086,1917,2.619,1918,2.175,1919,3.706,1920,2.619,1921,3.87,1922,3.706,1923,2.619,1924,2.619,1925,2.619,1926,2.619,1927,2.619,1928,2.324,1929,2.41,1930,1.849,1931,2.619,1932,2.619,1933,2.619,1950,3.1,1952,3.1,1969,3.758,1970,3.758,1971,3.758,1972,3.758,1973,3.758,1974,3.758,1975,3.758,1976,3.758,1977,3.758]],["title/classes/BlockfrostTxOutput.html",[0,0.232,1908,3.268]],["body/classes/BlockfrostTxOutput.html",[0,0.413,2,0.607,3,0.041,4,0.037,5,0.037,10,0.206,11,0.34,18,0.283,19,0.006,20,0.426,22,0.607,23,0.509,29,0.548,34,0.176,36,0.041,83,0.003,84,0.003,95,2,117,1.487,121,1.979,138,2.353,140,2.358,155,0.835,225,2.391,227,2.769,228,2.854,229,1.04,230,3.825,231,3.841,232,1.055,234,3.051,235,1.812,269,0.777,285,2.248,332,1.525,349,1.702,361,3.188,362,3.401,363,2.943,373,3.313,377,1.706,379,0.98,380,0.885,462,2.693,473,1.903,545,1.459,546,1.858,559,1.866,615,3.973,619,2.213,623,1.702,642,2.118,644,2.628,650,2.034,671,1.408,697,1.816,702,3.126,725,1.95,755,1.962,835,1.858,997,2.239,998,2.726,1040,1.293,1048,2.895,1107,2.58,1287,2,1517,3.39,1520,2.391,1538,2.48,1566,2.11,1570,2.11,1571,2.11,1574,2.11,1575,2.664,1576,1.776,1577,4.038,1605,2.053,1608,3.39,1610,4.154,1658,2.053,1661,1.738,1843,1.95,1868,2.695,1869,2.695,1870,2.695,1871,2.695,1874,2.695,1875,2.695,1878,3.638,1879,2.695,1880,2.695,1881,2.695,1882,2.695,1885,4.938,1886,2.695,1890,2.695,1891,2.695,1892,2.695,1893,2.695,1896,2.172,1897,2.172,1898,6.124,1899,2.695,1900,4.938,1901,3.155,1902,2.695,1903,4.746,1904,2.695,1905,4.763,1906,3.186,1907,3.953,1908,5.258,1909,2.695,1910,4.938,1911,2.695,1912,2.695,1913,2.695,1914,2.311,1915,2.695,1916,5.157,1917,2.695,1918,2.239,1919,3.785,1920,2.695,1921,3.953,1922,3.785,1923,2.695,1924,2.695,1925,2.695,1926,2.695,1927,2.695,1928,2.391,1929,2.48,1930,1.903,1931,2.695,1932,2.695,1933,2.695,1950,3.19,1952,3.19,1978,3.868,1979,3.868,1980,3.868,1981,3.868,1982,3.868]],["title/classes/BuildTransactionDto.html",[0,0.232,1592,3.029]],["body/classes/BuildTransactionDto.html",[0,0.438,2,0.707,3,0.048,4,0.043,5,0.043,10,0.112,11,0.379,12,0.739,18,0.269,19,0.006,20,0.437,23,0.503,34,0.174,36,0.095,62,1.167,83,0.003,84,0.003,117,1.471,121,1.939,123,2.016,138,2.399,140,2.027,144,3.897,155,0.973,170,2.654,212,1.448,219,1.65,225,2.785,227,2.718,228,2.802,229,1.211,230,3.567,231,3.22,232,1.229,234,2.711,235,1.78,249,2.264,269,1.743,288,2.425,332,1.967,361,3.142,362,2.711,363,2.744,369,1.903,373,3.277,375,1.864,377,1.31,379,1.604,380,1.674,446,3.114,463,2.069,619,1.347,642,2.134,650,1.897,652,5.17,656,2.117,671,2.664,751,3.814,754,3.68,755,2.891,757,2.907,758,3.68,759,3.114,760,2.216,809,2.476,1040,1.506,1048,2.862,1138,3.154,1592,3.914,1621,3.273,1633,2.785,1634,2.785,1886,3.139,1983,3.005,1984,3.993,1985,3.454,1986,4.504,1987,4.504,1988,4.504,1989,4.693,1990,4.059,1991,4.059,1992,4.059,1993,4.059,1994,4.504,1995,4.504,1996,4.223,1997,3.437,1998,4.223,1999,3.664,2000,3.005,2001,4.223,2002,4.223,2003,2.271,2004,2.889,2005,5.561,2006,4.324,2007,4.059,2008,2.889,2009,2.785,2010,4.223,2011,2.458]],["title/interfaces/BuildTransactionOutput.html",[640,1.105,2012,3.268]],["body/interfaces/BuildTransactionOutput.html",[0,0.109,3,0.025,4,0.022,5,0.022,10,0.12,11,0.226,12,0.681,15,0.982,18,0.243,19,0.006,20,0.414,22,0.967,29,0.676,30,0.383,31,0.996,34,0.21,35,0.489,36,0.075,37,1.418,49,0.795,54,1.033,55,2.455,58,1.159,59,1.131,61,1.495,62,1.439,64,0.899,66,1.452,76,0.666,78,2.007,83,0.002,84,0.002,97,2.713,100,1.506,101,1.204,123,1.777,138,2.386,140,2.1,141,1.33,144,1.033,146,0.952,151,0.475,158,2.369,161,1.291,168,0.732,169,2.339,170,1.938,174,3.061,177,2.802,178,1.699,180,1.353,209,0.808,212,1.41,214,1.376,216,0.916,219,1.495,222,0.851,232,0.627,234,1.784,235,1.188,236,0.93,239,1.597,241,1.775,249,2.205,252,1.882,254,2.063,256,1.104,262,1.33,265,1.159,269,0.968,272,1.629,274,2.423,276,1.629,281,1.291,285,1.694,288,1.096,292,1.188,312,1.919,315,1.584,317,2.556,328,3.906,332,2.271,338,0.698,341,1.584,342,2.062,348,2.182,370,1.736,372,3.031,375,2.232,377,1.187,379,1.921,380,0.865,438,1.291,462,0.709,463,1.056,545,0.867,558,1.421,559,1.244,613,2.977,619,1.668,622,1.421,628,1.254,629,1.188,640,1.495,641,0.867,642,0.618,644,1.883,645,1.22,646,1.33,648,1.291,649,1.291,650,1.952,656,2.536,659,1.373,665,1.22,666,1.22,667,1.22,668,1.22,671,2.842,673,2.877,677,1.474,696,1.22,702,0.971,749,2.034,750,0.899,751,2.68,753,2.123,754,2.455,755,2.423,756,1.159,757,1.736,758,2.455,759,1.86,760,1.131,793,1.056,805,1.33,809,2.182,835,1.816,897,1.421,987,2.356,1040,1.264,1103,1.421,1107,1.849,1126,2.424,1138,1.629,1153,1.373,1236,2.68,1287,1.188,1332,1.011,1378,1.421,1400,3.617,1401,4.187,1425,1.33,1463,2.627,1519,3.533,1524,1.188,1559,1.421,1562,1.22,1575,1.079,1576,1.056,1581,1.254,1587,3.108,1594,1.188,1605,2.007,1621,1.955,1623,2.427,1624,1.22,1635,1.533,1636,1.533,1637,1.373,1658,1.22,1661,1.699,1677,1.421,1696,1.533,1700,1.533,1702,3.212,1705,2.977,1706,2.895,1711,2.123,1712,3.108,1714,1.533,1716,1.421,1718,1.373,1774,2.007,1791,2.522,1801,1.421,1812,2.259,1815,1.373,1834,1.421,1837,1.291,1843,2.427,1845,1.33,1852,1.22,1859,1.188,1862,2.123,1863,1.291,1867,1.421,1896,1.291,1897,1.291,1901,2.895,1905,3.044,1930,2.369,1985,1.254,2003,1.159,2006,2.884,2011,1.254,2012,3.212,2013,1.33,2014,1.601,2015,2.259,2016,1.421,2017,1.421,2018,1.33,2019,1.33,2020,1.33,2021,2.961,2022,1.421,2023,2.424,2024,1.474,2025,1.601,2026,2.424,2027,1.601,2028,1.533,2029,1.601,2030,1.421,2031,1.373,2032,1.474,2033,1.421,2034,2.337,2035,1.373,2036,1.373,2037,1.373,2038,1.373,2039,1.373,2040,1.373,2041,1.421,2042,1.601,2043,1.533,2044,2.522,2045,1.533,2046,1.601,2047,2.634,2048,1.533,2049,1.601,2050,3.212,2051,1.533,2052,1.533,2053,1.533,2054,1.533,2055,1.533,2056,2.634,2057,1.421,2058,1.601,2059,1.421,2060,1.421,2061,3.212,2062,1.533,2063,1.533,2064,1.533,2065,1.533,2066,2.522,2067,1.533,2068,1.601,2069,1.601,2070,2.522,2071,4.619,2072,2.634,2073,3.355,2074,1.601,2075,1.601,2076,1.601,2077,1.601,2078,1.474,2079,3.623,2080,2.877,2081,2.259,2082,2.259,2083,2.877,2084,2.522,2085,2.522,2086,2.522,2087,2.063,2088,2.188,2089,2.634,2090,2.337,2091,2.337,2092,2.424,2093,3.334,2094,2.556,2095,2.877,2096,1.601,2097,1.254,2098,1.421,2099,2.063,2100,1.533,2101,1.533,2102,1.533,2103,1.601,2104,1.421,2105,1.33,2106,1.33,2107,1.373,2108,1.373,2109,1.373,2110,1.33,2111,1.601,2112,4.295,2113,2.634,2114,1.601,2115,1.131,2116,1.373,2117,1.601,2118,3.812,2119,1.601,2120,3.355,2121,1.373,2122,1.533,2123,1.601,2124,1.533,2125,1.601,2126,1.601,2127,1.533,2128,1.533,2129,1.601,2130,1.533,2131,1.601,2132,1.601,2133,1.601,2134,2.634,2135,2.337,2136,1.601,2137,2.634,2138,3.212,2139,4.619,2140,3.887,2141,3.887,2142,4.295,2143,2.522,2144,2.634,2145,2.522,2146,2.634,2147,2.522,2148,2.522,2149,2.634,2150,2.634,2151,2.634,2152,3.887,2153,2.634,2154,2.634,2155,1.601,2156,1.601,2157,1.373,2158,1.601,2159,2.634,2160,1.601,2161,2.634,2162,4.295,2163,1.601,2164,1.601,2165,1.601,2166,1.601,2167,1.601,2168,1.601,2169,1.601,2170,1.601,2171,1.474,2172,3.355,2173,1.601,2174,1.601,2175,1.474,2176,1.601,2177,1.601,2178,1.601,2179,1.601,2180,1.601,2181,1.131,2182,2.522,2183,2.337,2184,2.634,2185,1.373,2186,2.063,2187,1.601]],["title/interfaces/BuildTransactionParams.html",[640,1.105,753,2.751]],["body/interfaces/BuildTransactionParams.html",[0,0.229,3,0.052,4,0.046,5,0.046,10,0.121,11,0.398,15,1.412,18,0.255,19,0.006,20,0.444,22,1.043,31,1.834,34,0.18,36,0.052,37,1.381,62,0.892,72,1.567,83,0.004,84,0.004,100,1.928,125,2.509,138,1.226,140,1.34,144,3.857,145,4.462,147,4.635,148,3.74,151,1.001,169,2.345,170,2.013,177,2.488,180,2.15,219,1.091,222,1.792,236,1.637,252,2.105,274,2.83,288,1.403,312,2.651,315,1.592,338,2.02,341,1.592,342,2.966,348,1.892,349,2.129,366,3.57,377,0.866,462,1.493,640,1.714,641,1.825,642,1.301,650,1.156,671,1.761,742,4.864,743,3.739,744,3.739,745,6.174,746,6.061,747,5.356,748,4.635,749,3.211,750,1.892,751,3.196,752,3.371,753,4.269,754,3.602,755,2.83,756,2.439,757,2.222,758,3.776,759,2.38,760,2.38,761,3.228,762,3.538,763,3.538,764,2.439,765,5.874,766,3.228,767,5.874,768,3.228,769,3.739,770,6.632,771,3.739,772,4.635,773,3.739,774,3.739,775,3.739,776,4.967,777,3.739,778,3.371,779,3.739,780,3.103,781,4.4,782,2.991,783,3.103,784,2.891,785,3.739,786,3.739,787,3.739,788,3.739,789,3.739,790,3.739,791,3.739,792,5.14,793,2.222,794,3.739,795,2.439,796,3.739,797,3.739,798,3.739,799,3.739,800,3.739,801,3.739,802,3.739,803,3.739,804,3.739,805,2.8,806,3.739,807,3.739,808,3.538,809,1.892,810,3.739,818,3.196]],["title/interfaces/BuildTransactionParams-1.html",[379,1.034,640,0.92,753,2.291]],["body/interfaces/BuildTransactionParams-1.html",[0,0.109,3,0.025,4,0.022,5,0.022,10,0.12,11,0.227,12,0.682,15,0.983,18,0.243,19,0.006,20,0.418,22,0.969,29,0.223,30,0.384,31,0.998,34,0.21,35,0.491,36,0.075,37,1.42,49,0.797,54,1.036,55,2.459,58,1.162,59,1.134,61,1.497,62,1.44,64,0.902,66,1.455,76,0.668,78,2.009,83,0.002,84,0.002,97,2.717,100,1.51,101,1.207,123,1.78,138,2.388,140,2.103,141,1.334,144,2.512,146,0.955,151,0.477,158,2.374,161,1.295,168,0.734,169,2.342,170,1.941,174,3.064,177,2.804,178,1.703,180,1.355,209,0.811,212,1.413,214,1.379,216,0.919,219,1.088,222,0.854,232,0.629,234,1.788,235,1.19,236,0.932,239,1.601,241,1.78,249,2.209,252,1.884,254,2.068,256,1.108,262,1.334,265,1.162,269,0.97,272,1.634,274,2.426,276,1.634,281,1.295,285,1.698,288,1.099,292,1.192,312,1.923,315,1.587,317,2.562,328,3.91,332,2.273,338,0.7,341,1.587,342,2.065,348,2.186,370,1.741,372,3.035,375,2.235,377,1.001,379,1.923,380,0.867,438,1.295,462,0.711,463,1.059,545,0.869,558,1.425,559,1.247,613,2.984,619,1.671,622,1.425,628,1.258,629,1.192,640,1.497,641,0.869,642,0.62,644,1.887,645,1.224,646,1.334,648,1.295,649,1.295,650,1.814,656,2.539,659,1.378,665,1.224,666,1.224,667,1.224,668,1.224,671,2.554,673,2.884,677,1.478,696,1.224,702,0.974,749,2.038,750,0.902,751,1.821,753,2.71,754,3.087,755,2.702,756,1.162,757,1.741,758,2.459,759,1.865,760,1.134,793,1.059,805,1.334,809,2.186,835,1.821,897,1.425,987,2.361,1040,1.267,1103,1.425,1107,1.853,1126,2.43,1138,1.634,1153,1.378,1236,2.686,1287,1.192,1332,1.014,1378,1.425,1400,3.623,1401,4.193,1425,1.334,1463,2.633,1519,3.537,1524,1.192,1559,1.425,1562,1.224,1575,1.083,1576,1.059,1581,1.258,1587,3.113,1594,1.192,1605,2.012,1621,1.96,1623,2.433,1624,1.224,1635,1.538,1636,1.538,1637,1.378,1658,1.224,1661,1.703,1677,1.425,1696,1.538,1700,1.538,1702,3.219,1705,2.984,1706,2.9,1711,2.128,1712,3.113,1714,1.538,1716,1.425,1718,1.378,1774,2.012,1791,2.528,1801,1.425,1812,2.265,1815,1.378,1834,1.425,1837,1.295,1843,2.433,1845,1.334,1852,1.224,1859,1.192,1862,2.128,1863,1.295,1867,1.425,1896,1.295,1897,1.295,1901,2.9,1905,3.05,1930,2.374,1985,1.258,2003,1.162,2006,2.89,2011,1.258,2012,3.729,2013,1.334,2014,1.606,2015,2.265,2016,1.425,2017,1.425,2018,1.334,2019,1.334,2020,1.334,2021,2.967,2022,1.425,2023,2.43,2024,1.478,2025,1.606,2026,2.43,2027,1.606,2028,1.538,2029,1.606,2030,1.425,2031,1.378,2032,1.478,2033,1.425,2034,2.343,2035,1.378,2036,1.378,2037,1.378,2038,1.378,2039,1.378,2040,1.378,2041,1.425,2042,1.606,2043,1.538,2044,2.528,2045,1.538,2046,1.606,2047,2.641,2048,1.538,2049,1.606,2050,3.219,2051,1.538,2052,1.538,2053,1.538,2054,1.538,2055,1.538,2056,2.641,2057,1.425,2058,1.606,2059,1.425,2060,1.425,2061,3.219,2062,1.538,2063,1.538,2064,1.538,2065,1.538,2066,2.528,2067,1.538,2068,1.606,2069,1.606,2070,2.528,2071,4.626,2072,2.641,2073,3.362,2074,1.606,2075,1.606,2076,1.606,2077,1.606,2078,1.478,2079,3.628,2080,2.884,2081,2.265,2082,2.265,2083,2.884,2084,2.528,2085,2.528,2086,2.528,2087,2.068,2088,2.194,2089,2.641,2090,2.343,2091,2.343,2092,2.43,2093,3.34,2094,2.562,2095,2.884,2096,1.606,2097,1.258,2098,1.425,2099,2.068,2100,1.538,2101,1.538,2102,1.538,2103,1.606,2104,1.425,2105,1.334,2106,1.334,2107,1.378,2108,1.378,2109,1.378,2110,1.334,2111,1.606,2112,4.303,2113,2.641,2114,1.606,2115,1.134,2116,1.378,2117,1.606,2118,3.818,2119,1.606,2120,3.362,2121,1.378,2122,1.538,2123,1.606,2124,1.538,2125,1.606,2126,1.606,2127,1.538,2128,1.538,2129,1.606,2130,1.538,2131,1.606,2132,1.606,2133,1.606,2134,2.641,2135,2.343,2136,1.606,2137,2.641,2138,3.219,2139,4.626,2140,3.894,2141,3.894,2142,4.303,2143,2.528,2144,2.641,2145,2.528,2146,2.641,2147,2.528,2148,2.528,2149,2.641,2150,2.641,2151,2.641,2152,3.894,2153,2.641,2154,2.641,2155,1.606,2156,1.606,2157,1.378,2158,1.606,2159,2.641,2160,1.606,2161,2.641,2162,4.303,2163,1.606,2164,1.606,2165,1.606,2166,1.606,2167,1.606,2168,1.606,2169,1.606,2170,1.606,2171,1.478,2172,3.362,2173,1.606,2174,1.606,2175,1.478,2176,1.606,2177,1.606,2178,1.606,2179,1.606,2180,1.606,2181,1.134,2182,2.528,2183,2.343,2184,2.641,2185,1.378,2186,2.068,2187,1.606]],["title/interfaces/BurnLpTokensParams.html",[640,1.105,2188,3.582]],["body/interfaces/BurnLpTokensParams.html",[0,0.275,3,0.062,4,0.055,5,0.055,10,0.145,11,0.45,18,0.216,19,0.006,20,0.45,28,1.445,34,0.138,36,0.094,41,1.766,55,3.309,58,3.791,59,4.896,62,1.072,83,0.004,84,0.004,100,2.317,121,1.721,123,1.852,131,4.823,138,1.473,140,1.611,155,1.256,227,2.405,235,1.238,269,1.169,288,2.18,342,2.515,347,3.173,348,2.275,356,4.39,357,3.475,358,3.992,367,3.475,373,2.742,380,1.721,559,1.913,619,2.938,640,1.88,641,2.193,644,3.447,650,2.106,653,4.052,1236,2.794,1305,4.678,1764,6.14,1906,3.265,1984,3.173,2115,2.861,2181,4.921,2188,5.499,2189,3.595,2190,4.494,2191,4.494,2192,5.24,2193,6.81,2194,5.499,2195,3.88,2196,4.494,2197,4.494,2198,4.252,2199,4.494,2200,3.729,2201,4.252,2202,4.252,2203,4.052]],["title/classes/ChangeAssetsOwnerType1743678745097.html",[0,0.232,2204,4.381]],["body/classes/ChangeAssetsOwnerType1743678745097.html",[0,0.221,2,0.732,3,0.05,4,0.044,5,0.044,8,2.067,9,2.454,10,0.186,11,0.388,12,0.788,13,1.231,14,2.222,15,1.396,16,2.135,17,2.135,18,0.214,19,0.006,20,0.207,21,0.966,22,0.732,23,0.513,25,2.135,26,3.065,28,1.064,29,0.626,30,1.08,31,1.668,32,2.135,34,0.111,35,0.994,36,0.05,37,1.854,38,3.354,39,3.347,40,3.068,41,2.961,42,3.26,43,2.741,44,2.741,48,3.11,61,2.181,63,3.241,65,2.874,68,2.243,70,3.062,71,3.008,72,2.119,73,2.17,74,3.008,75,2.206,76,2.608,77,2.527,78,2.313,79,2.696,80,3.155,83,0.004,84,0.004,93,2.886,219,2.262,328,3.047,330,5.015,337,5.903,371,3.339,438,3.644,439,4.28,446,2.297,462,2.776,463,2.98,2204,7.21,2205,8.061,2206,4.668,2207,4.668,2208,4.668,2209,4.668,2210,4.175,2211,5.803,2212,7.21,2213,6.489,2214,4.175,2215,4.175]],["title/classes/ChangeIntervalToBigint1742311345554.html",[0,0.232,2216,4.381]],["body/classes/ChangeIntervalToBigint1742311345554.html",[0,0.252,2,0.835,3,0.057,4,0.051,5,0.051,8,2.259,9,2.625,10,0.133,11,0.425,12,0.825,13,1.346,14,2.311,15,1.452,16,2.334,17,2.334,18,0.229,19,0.006,20,0.236,21,1.1,22,0.835,23,0.549,25,2.334,26,3.15,28,1.163,29,0.685,30,1.181,31,1.761,32,2.334,34,0.126,35,1.133,36,0.057,37,1.841,38,3.349,39,3.334,40,3.163,41,2.938,42,3.163,43,2.894,44,2.894,48,2.943,61,2.064,63,2.894,65,2.814,70,3.081,71,2.847,72,2.005,73,2.372,74,2.847,75,2.412,76,2.468,77,2.668,78,1.824,79,2.372,80,2.847,83,0.004,84,0.004,101,3.128,603,7.613,604,6.582,662,6.582,2216,7.613,2217,8.512,2218,5.32,2219,5.32,2220,5.32,2221,5.32,2222,6.578,2223,7.021]],["title/classes/ContributeReq.html",[0,0.232,2224,3.268]],["body/classes/ContributeReq.html",[0,0.433,2,0.841,3,0.057,4,0.051,5,0.051,10,0.134,11,0.427,12,0.851,18,0.268,19,0.006,20,0.436,22,1.257,23,0.369,34,0.19,36,0.076,52,3.425,83,0.004,84,0.004,110,3.274,117,1.077,121,1.873,155,1.157,180,1.942,212,1.833,219,2.061,220,6.193,221,3.919,222,1.985,223,3.784,224,4.793,225,3.314,227,2.713,228,2.57,229,1.441,230,3.204,231,3.137,232,1.462,234,1.985,235,1.517,269,1.077,272,3.073,285,1.628,312,2.136,315,1.763,332,1.916,338,2.165,341,1.763,361,3.261,362,1.985,363,2.465,369,3.011,370,2.461,371,2.22,372,2.22,373,2.809,374,3.203,375,2.099,377,0.96,379,1.806,656,2.384,736,3.919,739,3.734,907,3.437,983,3.437,987,2.264,989,3.734,998,2.575,1032,3.734,1033,3.576,1034,4.142,1035,3.734,1036,3.734,1037,4.756,1038,6.368,1039,4.787,1515,3.576,1661,2.409,1918,3.102,1997,4.009,1999,3.102,2224,4.756,2225,4.142,2226,5.359,2227,5.509,2228,4.26,2229,6.243,2230,6.19,2231,4.142,2232,4.142,2233,4.142,2234,6.598,2235,6.598,2236,6.19,2237,5.581,2238,4.142,2239,4.142,2240,4.142]],["title/classes/ContributionAsset.html",[0,0.232,220,3.413]],["body/classes/ContributionAsset.html",[0,0.424,2,0.781,3,0.053,4,0.047,5,0.047,10,0.124,11,0.406,12,0.852,18,0.277,19,0.006,20,0.439,22,1.211,23,0.57,29,0.655,34,0.183,36,0.072,52,3.708,83,0.004,84,0.004,110,3.982,117,1.665,121,1.819,155,1.076,180,1.871,212,2.047,219,1.869,220,6.041,223,2.644,227,2.686,228,2.516,229,1.339,230,3.05,231,2.986,232,1.359,234,1.845,235,1.643,269,1.364,272,2.925,285,1.513,312,2.704,315,1.639,332,2.331,338,2.633,341,1.639,361,3.212,362,1.845,363,2.346,369,3.501,370,3.117,371,2.81,372,2.81,373,3.065,374,2.977,375,2.44,377,1.215,379,1.719,656,2.771,736,3.643,739,4.728,907,3.194,983,3.194,987,2.866,989,4.728,998,2.393,1032,3.471,1033,3.323,1034,3.991,1035,3.471,1036,3.471,1037,4.527,1038,6.234,1039,4.612,1048,3.019,1515,3.323,1661,3.05,1918,3.928,1997,3.892,1999,2.883,2224,3.323,2225,3.849,2227,5.244,2228,4.055,2229,6.06,2230,5.964,2231,5.244,2232,3.849,2233,3.849,2234,6.404,2235,6.404,2236,5.964,2237,5.377,2238,3.849,2239,3.849,2240,3.849,2241,4.981,2242,4.981,2243,4.981,2244,4.981,2245,4.981,2246,4.981,2247,4.981,2248,4.981,2249,4.981]],["title/controllers/ContributionController.html",[107,1.916,2250,4.04]],["body/controllers/ContributionController.html",[0,0.284,3,0.064,4,0.057,5,0.057,10,0.15,12,0.713,13,1.454,15,1.5,18,0.22,19,0.006,20,0.418,23,0.527,28,1.257,29,0.74,30,1.483,34,0.224,36,0.064,52,4.426,62,1.104,64,3.306,83,0.004,84,0.004,97,4.146,107,2.343,109,2.3,110,3.882,112,3.268,117,1.54,118,5.357,119,5.357,120,4.182,121,1.74,123,2.933,124,3.996,125,2.891,128,5.357,129,5.357,130,6.322,131,4.916,133,5.226,145,3.6,146,2.481,148,2.947,149,3.841,150,3.467,151,1.239,152,5.226,153,5.64,154,3.18,155,1.294,156,3.268,157,3.841,158,4.159,159,3.02,160,2.947,161,3.364,168,1.908,169,2.365,170,2.03,171,5.357,172,3.683,173,4.436,174,2.65,176,4.629,177,1.737,178,3.445,179,3.996,180,1.859,186,5.357,2224,6.471,2250,6.322,2251,5.99,2252,6.855,2253,5.99,2254,5.99,2255,5.357,2256,5.99,2257,5.89,2258,5.357,2259,5.357,2260,5.99,2261,5.99,2262,5.99,2263,5.99,2264,5.99,2265,5.99]],["title/modules/ContributionModule.html",[189,1.694,854,3.413]],["body/modules/ContributionModule.html",[0,0.309,3,0.07,4,0.062,5,0.062,19,0.006,34,0.238,36,0.07,62,1.205,83,0.004,84,0.004,109,3.11,110,3.002,138,2.051,151,1.352,159,4.082,160,3.215,189,3.042,191,3.002,192,3.002,193,3.14,194,3.14,195,3.069,196,4.228,197,4.228,202,5.756,203,3.891,204,3.14,205,3.002,207,3.984,208,3.379,209,2.298,210,4.554,212,1.853,213,3.469,214,2.947,215,3.67,216,2.605,217,4.36,853,5.956,854,7.013,881,4.779,1091,4.191,2250,7.256,2257,7.045,2258,5.845,2266,5.845,2267,6.535,2268,5.845,2269,5.845,2270,6.535,2271,6.535]],["title/injectables/ContributionService.html",[236,1.205,2257,3.413]],["body/injectables/ContributionService.html",[0,0.153,3,0.034,4,0.031,5,0.031,10,0.081,11,0.297,12,0.629,13,0.94,15,1.35,18,0.23,19,0.006,20,0.409,21,0.668,22,0.507,23,0.502,28,1.109,29,0.653,30,1.126,31,1.025,34,0.217,35,0.688,36,0.034,37,1.661,49,1.117,52,2.382,61,1.202,62,1.667,64,3.667,66,1.241,78,1.275,83,0.003,84,0.003,95,2.563,97,3.387,101,1.029,110,3.536,115,3.831,121,0.631,123,2.701,125,1.869,138,2.375,140,0.895,141,1.87,144,2.228,146,1.338,151,0.668,158,3.943,159,2.499,160,1.59,161,1.814,168,1.579,169,2.671,170,2.246,174,2.338,177,2.698,178,3.279,180,1.867,205,1.484,209,1.136,212,1.38,213,1.715,214,2.462,215,1.814,216,1.288,219,1.912,234,1.197,235,1.284,236,1.22,237,1.393,239,2.857,241,4.248,243,4.661,245,4.024,248,4.433,249,2.754,251,3.454,252,2.264,254,1.763,255,3.065,256,1.553,257,2.072,258,2.156,259,2.156,260,2.072,261,2.156,262,1.87,263,2.072,264,2.156,265,1.629,266,2.363,267,2.251,268,3.454,269,1.704,270,4.024,272,2.137,274,2.993,275,4.088,276,2.915,277,2.363,279,4.088,280,2.156,281,1.814,285,2.054,289,2.89,290,2.89,291,5.335,292,2.563,293,2.89,294,2.665,295,2.89,297,4.433,299,2.89,300,2.665,301,2.497,303,2.89,305,2.497,313,2.665,315,1.984,316,2.251,317,2.632,318,2.89,319,4.433,321,4.202,322,3.831,324,2.89,325,2.89,328,1.517,329,2.89,330,2.497,331,2.89,332,0.869,333,2.89,334,2.363,335,2.156,337,2.251,338,0.981,339,2.89,340,2.665,341,1.984,342,2.44,345,4.41,347,2.705,348,1.939,349,1.422,350,2.89,351,2.89,352,2.89,353,2.89,380,0.739,438,1.814,462,1.529,503,3.065,543,1.931,615,1.629,623,1.422,629,3.497,650,1.185,726,2.156,727,2.665,739,3.454,897,4.76,987,2.094,1091,2.072,1130,2.665,1135,2.665,1152,2.497,1198,2.497,1304,2.89,1332,1.422,1463,3.291,1524,2.563,1568,1.931,1587,3.41,1611,4.433,1711,3.798,1716,1.998,1719,2.497,1771,2.89,1801,1.998,1815,1.931,1816,4.661,1859,1.671,1914,1.931,1929,3.179,1930,2.439,2020,2.869,2032,3.868,2078,2.072,2121,1.931,2124,2.156,2127,3.307,2138,2.156,2224,5.347,2257,3.454,2259,2.89,2272,3.231,2273,4.957,2274,2.89,2275,4.974,2276,4.957,2277,4.088,2278,4.957,2279,3.231,2280,4.957,2281,3.231,2282,4.957,2283,4.957,2284,4.957,2285,5.393,2286,3.231,2287,4.957,2288,2.665,2289,2.665,2290,6.03,2291,4.957,2292,3.231,2293,4.957,2294,2.497,2295,3.231,2296,3.231,2297,3.231,2298,3.231,2299,3.231,2300,6.763,2301,2.89,2302,6.03,2303,6.03,2304,2.89,2305,3.231,2306,3.231,2307,3.231,2308,2.89,2309,4.088,2310,3.231,2311,2.665,2312,3.231,2313,3.231,2314,4.957,2315,3.231,2316,3.231,2317,4.957,2318,3.231,2319,3.231,2320,3.231,2321,3.231,2322,3.231,2323,2.497,2324,3.231,2325,3.231,2326,3.231,2327,3.231,2328,2.497,2329,3.231,2330,3.231,2331,4.957,2332,2.89,2333,3.231,2334,4.957]],["title/classes/ContributorWhitelist.html",[0,0.232,385,3.268]],["body/classes/ContributorWhitelist.html",[0,0.452,2,0.926,3,0.063,4,0.056,5,0.056,10,0.147,11,0.454,12,0.707,18,0.218,19,0.006,20,0.442,23,0.522,28,0.968,29,0.57,34,0.199,36,0.098,72,1.39,83,0.004,84,0.004,117,1.186,155,1.274,168,1.879,212,1.35,219,1.712,227,2.735,228,2.818,229,1.586,232,1.61,269,1.526,288,2.201,354,3.937,355,4.315,356,2.771,357,5.479,358,5.264,360,4.315,361,3.349,362,3.109,363,2.902,364,5.552,365,3.784,366,3.565,367,5.296,368,4.112,369,2.493,370,2.71,371,2.444,372,2.444,373,2.761,374,3.527,375,2.609,376,3.784,377,1.587,378,4.694,379,1.495,380,1.737,381,3.937,382,4.112,383,3.051,384,3.937,385,5.065,386,3.937,387,4.112,388,3.784,2335,7.591]],["title/entities/ContributorWhitelistEntity.html",[394,2.25,2336,3.582]],["body/entities/ContributorWhitelistEntity.html",[0,0.363,3,0.064,4,0.057,5,0.057,10,0.149,11,0.458,12,0.857,14,2.14,18,0.278,19,0.006,20,0.43,21,1.842,23,0.633,34,0.201,35,1.273,36,0.064,62,1.82,65,2.748,77,1.875,78,1.969,83,0.004,84,0.004,117,1.85,228,2.505,229,1.608,252,1.969,269,1.698,356,2.809,380,1.752,394,3.517,396,3.359,398,4.744,399,4.744,400,6.178,401,5.223,402,4.374,403,5.712,404,5.942,406,4.735,408,4.374,410,4.623,412,5.918,413,4.933,415,5.35,416,5.6,417,4.911,419,5.109,420,5.109,421,4.911,422,5.336,423,3.699,424,3.836,425,3.462,426,3.462,427,4.168,428,4.168,429,4.911,430,4.168,431,3.991,543,3.575,2336,5.6,2337,5.981,2338,5.981,2339,5.981,2340,5.981,2341,7.658,2342,5.981,2343,5.981]],["title/classes/CreateAssetDto.html",[0,0.232,1006,3.786]],["body/classes/CreateAssetDto.html",[0,0.409,2,0.867,3,0.059,4,0.053,5,0.053,10,0.138,11,0.435,12,0.514,18,0.288,19,0.006,20,0.432,23,0.656,29,0.89,34,0.205,36,0.078,83,0.004,84,0.004,117,1.917,121,1.421,123,2.591,155,1.194,212,1.265,227,2.724,229,1.486,231,3.202,232,1.509,235,1.177,257,5.759,260,3.545,288,2.506,312,2.203,332,2.186,338,2.47,361,3.243,362,3.202,363,3.105,373,1.819,377,1.651,380,2.15,642,2.594,944,2.935,967,5.216,968,6.286,969,6.286,980,7.604,981,8.629,982,4.944,983,4.666,984,4.944,985,4.944,987,2.335,988,4.043,989,3.852,991,4.944,993,6.507,997,3.2,998,3.496,999,4.944,1000,4.944,1001,4.944,1002,4.944,1003,4.944,1004,4.944,1005,4.944,1006,5.623,1007,4.944,1008,6.286,2344,5.528,2345,7.276,2346,5.528,2347,5.528,2348,5.528,2349,5.528,2350,5.528,2351,5.528,2352,5.528,2353,5.528,2354,5.528,2355,5.528]],["title/classes/CreatePoolDto.html",[0,0.232,2356,3.582]],["body/classes/CreatePoolDto.html",[0,0.394,2,0.907,3,0.062,4,0.055,5,0.055,10,0.144,11,0.449,12,0.538,18,0.268,19,0.006,20,0.414,21,1.55,23,0.642,29,0.723,34,0.178,36,0.08,83,0.004,84,0.004,117,1.876,121,1.901,155,1.249,212,1.323,227,2.679,232,1.578,235,1.231,269,1.671,272,3.23,285,2.276,288,2.173,361,3.098,362,3.08,363,2.591,369,2.443,375,1.703,377,1.489,379,1.899,380,1.715,559,2.465,619,2.241,650,1.791,656,1.934,772,5.222,998,3.995,1048,3.651,1236,4.565,1812,4.479,1906,4.209,2356,5.481,2357,8.497,2358,5.173,2359,6.425,2360,7.435,2361,7.435,2362,6.857,2363,6.857,2364,7.514,2365,6.181,2366,5.784,2367,5.784,2368,6.128,2369,6.181,2370,7.494,2371,5.784,2372,5.784,2373,7.514,2374,7.494,2375,5.784,2376,5.784,2377,5.792,2378,5.792,2379,5.784,2380,5.784,2381,6.702,2382,4.47,2383,5]],["title/classes/CreateProposalReq.html",[0,0.232,2384,3.786]],["body/classes/CreateProposalReq.html",[0,0.354,2,0.903,3,0.061,4,0.055,5,0.055,10,0.144,11,0.447,18,0.282,19,0.006,20,0.414,23,0.626,29,0.721,34,0.177,36,0.08,83,0.004,84,0.004,110,4.281,117,1.828,121,1.915,124,3.839,155,1.243,212,2.008,227,2.543,230,3.357,232,1.57,234,2.132,235,1.59,288,2.165,312,2.977,338,2.763,361,2.984,363,2.582,373,3.226,380,1.709,944,4.402,966,4.446,997,3.33,1048,3.558,1141,4.208,1762,8.134,1774,3.054,1997,3.894,2041,4.618,2384,5.772,2385,8.336,2386,5.146,2387,9.095,2388,6.68,2389,7.579,2390,8.776,2391,8.776,2392,7.468,2393,5.753,2394,5.753,2395,6.68,2396,5.753,2397,5.753,2398,6.16,2399,5.753,2400,5.753,2401,5.753,2402,5.753,2403,8.134,2404,5.753,2405,5.753,2406,6.68,2407,6.68,2408,6.68,2409,5.753,2410,5.753,2411,5.146,2412,5.753,2413,5.753]],["title/classes/DatabaseStruct1741879378411.html",[0,0.232,2414,4.381]],["body/classes/DatabaseStruct1741879378411.html",[0,0.135,2,0.447,3,0.03,4,0.027,5,0.027,8,1.433,9,1.832,10,0.139,11,0.269,12,0.738,13,0.853,14,1.939,15,1.164,16,1.48,17,1.48,18,0.273,19,0.005,20,0.127,21,2.005,22,0.447,23,0.383,25,1.48,26,2.686,28,0.738,29,0.434,30,0.749,31,1.308,32,1.48,34,0.068,35,0.607,36,0.03,37,1.846,38,2.899,39,3.266,41,2.633,42,3.325,48,3.273,49,2.89,54,1.282,61,2.102,62,0.526,63,2.947,68,4.405,70,2.761,71,2.899,72,2.191,74,2.899,76,2.513,77,1.982,78,2.099,79,2.115,80,3.131,83,0.002,84,0.002,91,4.074,93,4.733,94,2.086,96,1.829,97,1.255,98,2.455,101,2.761,102,1.987,121,0.878,169,0.88,174,0.986,212,0.653,219,1.552,269,1.789,285,1.921,292,1.475,307,1.829,327,2.086,328,1.339,332,0.767,337,1.987,338,1.366,366,1.339,371,3.797,379,1.14,398,4.106,399,4.298,400,2.086,438,1.602,439,4.825,446,4.577,462,3.083,470,5.348,473,3.766,481,5.36,500,2.352,544,5.915,545,3.587,546,4.57,547,6.627,548,6.511,550,5.915,601,1.829,602,2.551,620,4.074,627,1.764,639,3.29,650,1.075,909,2.204,910,2.352,911,2.352,912,2.352,913,2.551,1039,2.688,1168,2.352,1183,2.352,1184,2.352,1198,4.887,1326,1.903,1330,2.352,1551,2.086,1553,2.204,1555,2.204,1557,2.204,2210,2.551,2211,2.551,2212,4.023,2214,4.023,2215,2.551,2222,2.204,2223,2.352,2414,5.655,2415,6.323,2416,2.852,2417,2.852,2418,2.852,2419,2.852,2420,2.852,2421,4.879,2422,3.71,2423,2.852,2424,6.323,2425,2.352,2426,2.852,2427,4.982,2428,6.54,2429,2.852,2430,2.852,2431,2.852,2432,2.852,2433,5.655,2434,2.852,2435,5.57,2436,2.852,2437,5.57,2438,2.852,2439,2.852,2440,4.982,2441,2.551,2442,2.352,2443,2.352,2444,5.57,2445,2.852,2446,2.551,2447,4.982,2448,2.551,2449,4.594,2450,3.476,2451,3.29,2452,2.352,2453,4.982,2454,2.204,2455,2.352,2456,5.57,2457,2.852,2458,2.551,2459,2.551,2460,1.829,2461,2.352,2462,2.852,2463,2.551,2464,2.551,2465,2.551,2466,2.551,2467,2.852,2468,2.852,2469,2.551,2470,4.498,2471,2.852,2472,1.903,2473,2.551,2474,2.852,2475,2.852,2476,2.852,2477,2.852,2478,2.852,2479,4.498,2480,5.57,2481,4.982,2482,5.57,2483,2.852,2484,2.852,2485,2.551,2486,2.852,2487,2.852,2488,2.852,2489,2.852,2490,2.852,2491,2.852,2492,2.852,2493,4.498,2494,4.498,2495,4.498,2496,6.54,2497,4.498,2498,4.023,2499,4.498,2500,4.498,2501,4.498,2502,4.023,2503,4.498,2504,4.498]],["title/interfaces/Datum.html",[640,1.105,2021,2.601]],["body/interfaces/Datum.html",[3,0.054,4,0.048,5,0.048,10,0.126,11,0.409,18,0.279,19,0.006,20,0.451,29,0.803,36,0.098,52,2.418,54,2.262,62,0.928,83,0.004,84,0.004,97,2.215,125,2.577,212,1.151,272,3.587,328,3.908,332,2.339,377,1.827,543,3.008,559,2.738,601,3.227,640,1.75,641,1.898,642,1.353,671,1.832,702,2.126,818,3.283,1040,2.595,2021,4.619,2079,3.533,2094,4.958,2097,4.897,2099,3.729,2186,3.729,2460,3.227,2472,3.358,2505,3.889,2506,6.864,2507,6.864,2508,3.889,2509,3.889,2510,4.997,2511,5.996,2512,4.151,2513,3.889,2514,5.996,2515,5.281,2516,4.151,2517,3.889,2518,3.889,2519,5.281,2520,4.761,2521,5.281,2522,4.151,2523,4.151,2524,3.889,2525,4.151,2526,3.889,2527,4.559,2528,4.151,2529,5.636,2530,5.281,2531,4.151,2532,4.151,2533,4.151,2534,4.151,2535,3.507,2536,3.507,2537,4.761,2538,5.799,2539,6.864,2540,6.864,2541,5.799,2542,4.761,2543,3.507,2544,3.507,2545,3.358,2546,3.507,2547,3.507,2548,3.507,2549,3.507,2550,3.358,2551,3.507,2552,3.358,2553,3.507,2554,3.227,2555,3.507]],["title/interfaces/Datum1.html",[640,1.105,2527,3.268]],["body/interfaces/Datum1.html",[3,0.051,4,0.045,5,0.045,10,0.119,11,0.394,18,0.292,19,0.006,20,0.449,29,0.89,36,0.096,52,2.287,54,3.653,62,0.877,83,0.004,84,0.004,97,2.094,125,2.48,212,1.089,272,2.051,328,2.235,332,1.768,377,1.825,543,4.858,559,2.674,601,5.213,640,1.699,641,1.795,642,1.279,671,1.732,702,2.01,818,4.55,1040,1.592,2021,4.315,2079,3.401,2094,4.893,2097,4.112,2099,3.589,2186,3.589,2460,5.213,2472,3.175,2505,3.678,2506,3.925,2507,3.925,2508,3.678,2509,3.678,2510,4.81,2511,5.824,2512,3.925,2513,3.678,2514,5.824,2515,5.082,2516,3.925,2517,3.678,2518,3.678,2519,5.082,2520,4.582,2521,5.082,2522,3.925,2523,3.925,2524,3.678,2525,3.925,2526,3.678,2527,5.028,2528,3.925,2529,5.424,2530,5.082,2531,3.925,2532,3.925,2533,3.925,2534,3.925,2535,5.664,2536,5.664,2537,4.582,2538,5.664,2539,6.704,2540,6.704,2541,5.664,2542,4.582,2543,5.664,2544,5.664,2545,3.175,2546,3.316,2547,3.316,2548,3.316,2549,5.664,2550,5.424,2551,3.316,2552,3.175,2553,3.316,2554,5.213,2555,5.664]],["title/interfaces/DistributeLpTokensParams.html",[640,1.105,2202,3.582]],["body/interfaces/DistributeLpTokensParams.html",[0,0.275,3,0.062,4,0.055,5,0.055,10,0.145,11,0.45,18,0.216,19,0.006,20,0.45,28,1.445,34,0.138,36,0.094,41,2.284,55,2.559,58,3.791,59,4.896,62,1.072,83,0.004,84,0.004,100,2.317,121,1.721,123,1.852,131,4.823,138,1.473,140,1.611,155,1.256,227,2.405,235,1.238,269,1.169,288,2.18,342,2.515,347,3.173,348,2.275,356,4.39,357,3.475,358,3.992,367,3.475,373,2.742,380,1.721,559,1.913,619,2.938,640,1.88,641,2.193,644,3.447,650,2.106,653,4.052,1236,2.794,1305,4.678,1764,6.14,1906,3.265,1984,3.173,2115,2.861,2181,4.921,2188,4.252,2189,3.595,2190,4.494,2191,4.494,2192,4.052,2193,6.81,2194,4.252,2195,3.88,2196,4.494,2197,4.494,2198,4.252,2199,4.494,2200,3.729,2201,5.499,2202,5.499,2203,5.24]],["title/modules/DistributionModule.html",[189,1.694,855,3.413]],["body/modules/DistributionModule.html",[0,0.339,3,0.076,4,0.068,5,0.068,19,0.006,34,0.225,36,0.076,62,1.321,83,0.005,84,0.005,151,1.482,189,3.167,191,3.291,192,3.291,193,3.444,194,3.444,195,3.366,196,4.402,197,4.402,203,4.115,204,3.444,205,3.291,207,3.526,208,3.706,209,2.52,216,2.856,217,4.781,855,6.934,2556,6.409,2557,6.409,2558,6.409,2559,7.479,2560,7.166,2561,7.166]],["title/injectables/DistributionService.html",[236,1.205,2559,3.582]],["body/injectables/DistributionService.html",[0,0.181,3,0.041,4,0.036,5,0.036,10,0.095,12,0.789,13,1.067,15,1.306,18,0.263,19,0.006,20,0.25,22,0.883,23,0.584,28,1.391,29,0.819,30,1.365,31,1.522,34,0.175,35,0.814,36,0.041,37,1.022,62,1.563,83,0.003,84,0.003,121,0.747,123,2.613,151,0.791,168,1.792,169,2.887,170,1.013,177,2.936,180,1.989,209,1.345,216,1.524,236,1.384,237,1.648,241,3.456,256,1.837,265,1.928,269,1.131,285,1.161,377,1.829,379,0.969,619,1.143,747,4.26,818,3.537,928,4.64,1103,3.479,1236,3.537,1706,2.642,2092,3.608,2175,3.608,2304,5.031,2368,3.92,2545,3.753,2559,5.383,2562,3.824,2563,4.64,2564,5.626,2565,5.626,2566,5.626,2567,5.031,2568,5.626,2569,5.626,2570,5.031,2571,5.031,2572,5.626,2573,5.031,2574,5.626,2575,4.348,2576,5.626,2577,5.626,2578,5.626,2579,5.626,2580,5.626,2581,5.626,2582,5.626,2583,5.626,2584,5.626,2585,5.626,2586,5.626,2587,5.626,2588,3.154,2589,3.824,2590,5.626,2591,3.824,2592,5.626,2593,3.824,2594,5.626,2595,9.156,2596,3.824,2597,7.782,2598,5.626,2599,7.36,2600,8.48,2601,7.36,2602,3.824,2603,3.824,2604,5.626,2605,8.701,2606,9.264,2607,3.824,2608,5.626,2609,3.824,2610,3.824,2611,5.626,2612,3.824,2613,5.969,2614,5.969,2615,5.031,2616,5.626,2617,5.626,2618,5.626,2619,5.626,2620,6.582,2621,5.626,2622,7.843,2623,3.824,2624,3.824,2625,7.36,2626,7.36,2627,5.626,2628,5.626,2629,3.824,2630,6.674,2631,3.824,2632,5.626,2633,3.824,2634,5.626,2635,3.824,2636,3.824,2637,3.42,2638,6.582,2639,5.626,2640,5.626,2641,5.626,2642,6.674,2643,6.674,2644,3.824,2645,3.824,2646,5.626,2647,5.626,2648,5.626,2649,6.674,2650,6.674,2651,3.824,2652,6.674,2653,5.626,2654,6.674,2655,3.824,2656,5.626,2657,5.626,2658,5.626,2659,3.824,2660,3.824]],["title/injectables/DraftVaultsService.html",[236,1.205,2661,3.582]],["body/injectables/DraftVaultsService.html",[0,0.199,3,0.028,4,0.025,5,0.04,10,0.065,12,0.689,13,0.797,15,1.264,18,0.173,19,0.006,20,0.376,21,0.869,22,0.411,23,0.415,28,0.988,29,0.582,30,0.876,31,1.457,34,0.218,35,0.557,36,0.028,37,1.706,49,0.905,62,1.731,70,0.834,76,1.747,83,0.002,84,0.002,96,1.679,102,4.198,124,1.747,149,1.679,151,0.542,168,1.339,169,2.513,170,2.102,177,2.736,178,3.74,180,1.866,209,0.921,214,0.953,215,1.47,216,1.044,219,0.591,222,3.369,229,0.704,235,0.557,236,1.034,237,1.129,241,4.451,252,1.811,255,1.619,256,1.258,263,1.679,264,1.747,265,1.32,266,1.915,269,1.488,270,4.02,271,2.928,272,3.422,274,1.82,276,1.129,285,2.474,291,3.85,292,1.354,315,0.861,321,1.824,322,3.248,328,1.23,341,0.861,342,0.876,346,2.16,356,1.23,366,1.23,377,1.261,379,1.334,383,2.173,395,1.915,396,1.47,398,1.47,400,3.073,462,2.568,463,1.203,501,2.024,503,1.619,543,1.565,595,4.342,726,1.747,1034,2.722,1039,2.512,1103,2.599,1107,2.022,1110,3.6,1111,5.157,1123,2.16,1126,2.695,1134,3.466,1150,2.433,1153,1.565,1154,2.024,1155,2.024,1157,2.16,1158,2.342,1160,2.16,1181,1.915,1183,2.16,1184,2.16,1198,3.248,1267,2.024,1268,2.16,1369,4.938,1400,1.429,1401,1.565,1414,3.384,1415,1.679,1463,1.429,1469,2.16,1551,4.406,1802,3.073,2157,4.209,2228,2.512,2275,4.342,2311,2.16,2328,2.024,2336,1.915,2395,2.342,2421,2.804,2588,2.16,2661,3.073,2662,6.597,2663,2.618,2664,4.202,2665,4.708,2666,4.202,2667,4.708,2668,4.708,2669,5.264,2670,5.264,2671,5.264,2672,5.264,2673,2.618,2674,4.202,2675,2.618,2676,2.618,2677,5.389,2678,4.97,2679,6.346,2680,2.618,2681,4.708,2682,4.202,2683,5.389,2684,2.618,2685,2.342,2686,2.342,2687,2.342,2688,2.342,2689,2.16,2690,2.618,2691,2.618,2692,2.342,2693,2.16,2694,2.618,2695,2.16,2696,2.16,2697,2.16,2698,1.619,2699,1.824,2700,1.915,2701,2.16,2702,2.342,2703,2.618,2704,2.618,2705,2.618,2706,2.618,2707,6.597,2708,4.342,2709,5.264,2710,4.342,2711,5.264,2712,2.342,2713,2.804,2714,2.618,2715,3.759,2716,2.618,2717,2.618,2718,2.618,2719,4.202,2720,2.618,2721,2.618,2722,4.202,2723,2.342,2724,4.202,2725,2.618,2726,2.618,2727,2.618,2728,2.618,2729,2.618,2730,2.618,2731,2.618,2732,2.618,2733,2.342,2734,2.342,2735,2.618,2736,2.618,2737,2.342,2738,7.043,2739,4.202,2740,2.618,2741,2.618,2742,2.618,2743,2.618,2744,2.618,2745,2.618,2746,2.618,2747,2.618,2748,2.618,2749,2.618,2750,2.618,2751,6.025,2752,2.618,2753,5.264,2754,5.389,2755,5.389,2756,2.618,2757,4.708,2758,6.025,2759,2.618,2760,4.708,2761,6.025,2762,2.618,2763,5.264,2764,2.342,2765,2.618,2766,4.202,2767,2.618,2768,4.202,2769,2.618,2770,4.202,2771,2.618,2772,4.202,2773,2.618,2774,4.202,2775,2.618,2776,2.342,2777,2.618,2778,6.619,2779,4.202,2780,2.618,2781,2.618,2782,4.202,2783,2.618,2784,4.202,2785,2.618,2786,4.202,2787,2.618,2788,4.202,2789,2.618,2790,4.202,2791,2.618,2792,4.202,2793,2.618,2794,4.202,2795,2.618,2796,4.202,2797,2.618,2798,4.202,2799,2.618,2800,4.202,2801,2.618,2802,4.202,2803,2.618,2804,4.202,2805,2.618,2806,4.202,2807,2.618,2808,4.202,2809,2.618,2810,4.202,2811,2.618,2812,4.202,2813,2.618,2814,4.202,2815,2.618,2816,4.202,2817,2.618,2818,4.202,2819,2.618,2820,4.202,2821,2.618,2822,4.202,2823,2.618,2824,2.618,2825,5.264,2826,2.618,2827,4.202,2828,2.618,2829,2.618,2830,5.264,2831,2.618,2832,5.264,2833,2.618,2834,2.618,2835,2.618,2836,2.618,2837,2.618,2838,2.618,2839,2.618,2840,2.618,2841,1.915,2842,2.618,2843,2.618,2844,2.618,2845,2.618,2846,2.618,2847,2.618,2848,2.618,2849,2.618,2850,2.618,2851,2.618,2852,5.389,2853,2.618,2854,4.202,2855,2.618,2856,2.342,2857,2.618,2858,2.618,2859,2.618,2860,2.618,2861,2.618,2862,2.618,2863,2.618,2864,2.618,2865,2.16,2866,2.618,2867,2.618,2868,2.618,2869,2.618,2870,2.618,2871,2.618,2872,2.618,2873,2.618,2874,2.618,2875,2.618,2876,2.618,2877,2.618,2878,2.618,2879,2.618,2880,2.618,2881,2.618,2882,2.618,2883,2.618,2884,2.618,2885,2.618,2886,2.618,2887,2.024]],["title/classes/DropOldVauleFormEnum1742800589634.html",[0,0.232,2888,4.381]],["body/classes/DropOldVauleFormEnum1742800589634.html",[0,0.255,2,0.846,3,0.057,4,0.051,5,0.051,8,2.28,9,2.643,10,0.135,11,0.428,12,0.829,13,1.358,14,2.32,15,1.458,16,2.355,17,2.355,18,0.281,19,0.006,20,0.239,21,1.115,22,0.846,23,0.553,25,2.355,26,3.159,28,1.174,29,0.691,30,1.191,31,1.77,32,2.355,34,0.128,35,1.148,36,0.057,37,1.822,38,2.862,39,3.19,40,3.172,41,2.599,42,3.172,43,2.91,44,2.91,46,3.905,48,3.353,49,2.475,61,2.075,62,1.481,63,3.297,65,2.208,66,2.749,68,3.439,70,2.726,71,2.862,72,2.016,73,2.394,74,2.862,75,2.434,76,2.481,77,2.683,78,1.84,79,2.394,80,2.862,83,0.004,84,0.004,101,2.28,2449,7.058,2450,5.531,2451,5.875,2452,4.447,2461,5.903,2888,7.654,2889,8.558,2890,5.392,2891,5.392,2892,5.392,2893,5.392,2894,4.822,2895,5.531,2896,4.822,2897,7.654,2898,4.822,2899,4.822]],["title/interfaces/DtoRepresentsType.html",[640,1.105,2900,4.04]],["body/interfaces/DtoRepresentsType.html",[0,0.344,3,0.077,4,0.069,5,0.069,10,0.181,11,0.517,18,0.248,19,0.006,34,0.205,36,0.077,83,0.005,84,0.005,151,1.502,180,1.761,228,2.806,229,1.952,640,1.638,641,2.739,710,5.612,828,6.494,2228,5.901,2900,7.597,2901,6.494,2902,6.494,2903,5.612,2904,7.261,2905,7.261,2906,7.261]],["title/classes/ExtractLpTokensDto.html",[0,0.232,2907,4.04]],["body/classes/ExtractLpTokensDto.html",[0,0.398,2,0.93,3,0.063,4,0.056,5,0.056,10,0.21,11,0.456,18,0.274,19,0.006,20,0.417,23,0.632,29,0.934,34,0.2,36,0.063,58,4.24,59,4.849,62,1.403,83,0.004,84,0.004,117,1.845,121,1.793,123,2.678,138,2.248,140,2.108,155,1.28,227,2.563,228,2.642,229,1.593,232,1.617,249,3.008,269,1.53,288,2.573,356,3.949,361,3.017,362,3.115,363,2.908,377,1.644,380,1.924,619,2.745,650,1.819,1048,3.591,1305,4.041,1984,4.153,1997,4.168,2181,4.622,2189,5.809,2907,6.278,2908,9.394,2909,5.925,2910,6.936,2911,5.925,2912,5.925,2913,5.299,2914,5.925,2915,5.925,2916,5.925,2917,5.925,2918,5.925,2919,5.925,2920,5.925]],["title/interfaces/ExtractLpTokensParams.html",[640,1.105,2200,3.141]],["body/interfaces/ExtractLpTokensParams.html",[0,0.272,3,0.061,4,0.055,5,0.055,10,0.143,11,0.446,18,0.238,19,0.006,20,0.452,28,1.438,34,0.136,36,0.093,41,1.743,55,2.525,58,4.42,59,4.858,62,1.374,83,0.004,84,0.004,100,2.287,121,1.712,123,2.793,131,4.782,138,1.454,140,1.59,155,1.239,227,2.393,235,1.222,269,1.499,288,2.162,342,2.493,347,3.131,348,2.245,356,4.374,357,3.429,358,3.958,367,3.429,373,2.725,380,1.706,559,1.888,619,2.931,640,1.868,641,2.164,644,3.43,650,2.095,653,3.998,1236,2.757,1305,4.655,1764,6.109,1906,3.223,1984,4.068,2115,2.823,2181,4.934,2188,4.197,2189,3.548,2190,4.435,2191,4.435,2192,3.998,2193,6.776,2194,4.197,2195,3.829,2196,4.435,2197,4.435,2198,4.197,2199,5.762,2200,4.782,2201,4.197,2202,4.197,2203,3.998]],["title/interfaces/ExtractLpTokensParams-1.html",[379,1.034,640,0.92,2200,2.616]],["body/interfaces/ExtractLpTokensParams-1.html",[3,0.075,4,0.067,5,0.067,10,0.175,11,0.506,18,0.277,19,0.006,20,0.451,29,0.909,34,0.166,36,0.09,83,0.005,84,0.005,123,3,138,2.298,249,3.369,251,4.882,342,2.343,347,3.823,348,2.74,356,4.423,377,1.754,559,2.305,619,2.817,640,1.905,641,2.642,1091,4.493,2189,4.332,2195,4.674,2200,5.418,2910,7.768,2921,7.006,2922,7.006]],["title/entities/FileEntity.html",[394,2.25,1414,2.751]],["body/entities/FileEntity.html",[0,0.338,3,0.057,4,0.051,5,0.051,10,0.134,11,0.428,12,0.93,18,0.293,19,0.006,20,0.441,21,1.768,23,0.652,34,0.17,35,1.145,36,0.057,65,2.925,72,1.267,83,0.004,84,0.004,117,1.906,228,2.666,229,1.446,235,1.521,252,1.837,269,1.613,338,2.779,366,2.526,380,1.956,387,3.748,388,3.45,394,3.282,396,3.021,398,4.998,399,4.998,401,5.772,403,5.483,404,5.704,406,4.418,416,6.934,417,5.867,419,4.767,420,4.767,423,3.326,425,3.113,426,3.113,427,3.748,428,3.748,429,4.583,430,3.748,431,3.589,639,5.226,818,2.585,956,4.811,1039,3.215,1414,4.013,1551,6.508,1553,6.877,1555,6.877,1557,6.877,2923,5.379,2924,5.379,2925,5.379,2926,5.379,2927,5.379,2928,5.379,2929,5.379,2930,5.379,2931,5.379,2932,5.379,2933,5.379,2934,5.379,2935,5.379,2936,5.379,2937,5.379]],["title/classes/GetVaultTransactionsDto.html",[0,0.232,2938,4.04]],["body/classes/GetVaultTransactionsDto.html",[0,0.417,2,1.028,3,0.07,4,0.062,5,0.062,10,0.164,11,0.485,18,0.28,19,0.006,21,1.822,22,1.028,23,0.558,29,0.889,34,0.219,36,0.07,52,3.898,53,4.556,62,1.624,64,3.601,83,0.004,84,0.004,117,1.63,121,1.798,155,1.416,174,3.271,222,2.428,227,2.404,228,2.478,229,1.762,232,1.789,261,5.878,262,3.794,288,2.669,314,5.406,363,3.046,380,2.016,944,4.307,997,3.794,2020,5.476,2148,5.878,2294,7.114,2309,5.406,2938,6.691,2939,7.266,2940,6.555,2941,8.112,2942,6.555,2943,6.555,2944,6.555,2945,6.555,2946,6.555,2947,6.555]],["title/classes/GetVaultsDto.html",[0,0.232,2948,4.04]],["body/classes/GetVaultsDto.html",[0,0.388,2,0.878,3,0.06,4,0.053,5,0.053,10,0.14,11,0.439,12,0.683,18,0.259,19,0.006,21,1.95,22,1.284,23,0.62,29,0.942,34,0.206,36,0.093,53,4.12,83,0.004,84,0.004,97,3.229,98,4.004,99,4.705,117,1.812,121,1.696,155,1.209,222,2.074,227,2.37,228,2.443,229,1.505,232,1.528,288,2.683,363,3.003,376,4.705,377,1.314,379,2.074,380,2.157,383,2.895,398,3.144,399,3.144,425,3.241,426,3.241,503,4.537,726,5.46,944,4.912,997,3.241,1066,6.968,1110,4.004,1111,5.112,2009,4.537,2294,6.325,2677,7.319,2678,7.437,2679,7.888,2681,7.319,2715,7.768,2939,7.163,2948,6.052,2949,5.007,2950,8.064,2951,5.599,2952,5.599,2953,5.599,2954,5.599,2955,7.337,2956,5.599,2957,5.599,2958,5.599,2959,7.163,2960,5.599,2961,5.599,2962,6.562,2963,5.007,2964,6.562,2965,5.599,2966,5.007,2967,5.599,2968,5.599,2969,5.67,2970,5.599,2971,5.599,2972,5.599]],["title/controllers/GovernanceController.html",[107,1.916,2973,4.04]],["body/controllers/GovernanceController.html",[0,0.246,3,0.055,4,0.049,5,0.049,10,0.13,12,0.785,13,1.324,15,1.558,18,0.242,19,0.006,20,0.434,23,0.58,28,1.383,29,0.814,30,1.403,34,0.215,36,0.055,49,2.413,62,0.957,83,0.004,84,0.004,95,3.61,99,3.331,107,2.032,109,1.995,110,4.04,112,2.834,117,1.694,120,4.6,121,1.837,123,2.801,125,3.179,130,6.953,133,5.438,142,4.6,145,3.703,146,2.151,148,2.555,150,3.006,151,1.074,152,5.438,153,5.868,154,2.757,155,1.122,156,2.834,157,3.331,170,1.376,172,4.051,173,4.879,174,2.915,176,4.014,177,2.024,178,3.789,179,4.657,180,2.044,223,3.706,252,1.795,764,2.619,1124,3.798,1602,4.645,1661,3.544,2384,7.27,2389,7.27,2973,5.757,2974,5.194,2975,6.243,2976,6.243,2977,6.243,2978,7,2979,5.194,2980,5.194,2981,6.98,2982,5.194,2983,4.645,2984,5.194,2985,5.194,2986,5.194,2987,7.866,2988,4.645,2989,5.194,2990,7.539,2991,5.194,2992,5.194,2993,7.27,2994,5.194,2995,6.243,2996,5.194,2997,4.645,2998,4.645,2999,5.766,3000,4.645,3001,5.194,3002,5.194,3003,5.194,3004,5.194,3005,5.194,3006,5.194,3007,5.194,3008,5.194,3009,5.194,3010,5.194,3011,5.194,3012,5.194,3013,5.194,3014,5.194,3015,5.194]],["title/modules/GovernanceModule.html",[189,1.694,3016,3.786]],["body/modules/GovernanceModule.html",[0,0.334,3,0.075,4,0.067,5,0.067,19,0.006,34,0.229,36,0.075,62,1.3,83,0.005,84,0.005,109,3.257,110,3.238,151,1.459,189,3.145,191,3.238,192,3.238,193,3.388,194,3.388,195,3.311,196,4.371,197,4.371,203,4.075,204,3.388,205,3.238,207,3.469,208,3.646,209,2.48,216,2.81,217,4.704,2973,7.503,2999,7.465,3000,6.306,3016,7.665,3017,6.306,3018,6.306,3019,6.306,3020,7.051,3021,7.051]],["title/injectables/GovernanceService.html",[236,1.205,2999,3.582]],["body/injectables/GovernanceService.html",[0,0.234,3,0.053,4,0.047,5,0.047,10,0.123,12,0.805,13,1.28,15,1.546,18,0.248,19,0.006,20,0.444,23,0.595,28,1.418,29,0.835,30,1.375,34,0.217,35,1.052,36,0.053,37,1.226,62,1.594,83,0.004,84,0.004,95,2.555,98,2.697,101,1.574,110,4.099,123,2.754,125,2.899,142,3.683,151,1.022,168,2.15,169,1.525,170,1.309,174,1.709,177,1.957,178,4.18,180,2.164,209,1.738,214,1.799,216,1.97,235,1.437,236,1.661,237,2.13,240,4.076,241,3.879,245,4.503,252,2.295,254,2.697,255,3.056,256,2.375,263,3.169,264,3.297,265,2.491,268,4.703,269,1.66,274,2.989,275,5.566,276,3.56,277,3.614,292,2.555,347,3.683,348,2.64,426,2.86,429,4.328,545,1.864,548,6.04,795,3.403,1107,1.898,1124,3.614,1400,4.718,1587,3.403,1914,2.953,2135,3.056,2384,7.187,2389,6.897,2398,5.566,2975,6.036,2976,6.036,2977,6.036,2978,6.383,2983,6.036,2987,6.874,2988,6.036,2990,4.42,2993,7.187,2995,4.42,2997,4.42,2998,4.42,2999,4.936,3022,4.942,3023,4.942,3024,6.749,3025,4.942,3026,4.942,3027,4.942,3028,6.749,3029,4.942,3030,4.942,3031,4.942,3032,4.942,3033,4.942,3034,4.942,3035,4.942,3036,7.387,3037,6.749,3038,7.387,3039,4.942,3040,4.942,3041,6.749,3042,6.749,3043,4.942,3044,4.942]],["title/modules/JwtGlobalModule.html",[189,1.694,856,3.582]],["body/modules/JwtGlobalModule.html",[0,0.321,3,0.072,4,0.065,5,0.065,15,1.081,19,0.006,34,0.221,36,0.072,83,0.005,84,0.005,151,1.404,189,3.094,191,3.118,192,3.118,193,3.262,194,3.262,195,3.188,196,3.262,197,4.3,203,3.983,204,3.262,205,3.118,207,4.402,749,3.936,750,2.655,856,7.198,861,5.775,1233,4.965,1240,5.599,1413,8.003,1418,6.071,1419,6.071,1420,7.413,1421,6.071,1422,6.071,1423,6.071,1424,6.071,1425,3.929,3045,6.071,3046,6.071,3047,6.071,3048,7.43,3049,6.788,3050,6.788]],["title/interfaces/L4VaVault.html",[640,1.105,2526,3.786]],["body/interfaces/L4VaVault.html",[3,0.056,4,0.05,5,0.05,10,0.13,11,0.418,18,0.277,19,0.006,20,0.443,36,0.099,52,4.055,54,2.34,62,1.555,83,0.004,84,0.004,97,2.291,121,1.017,125,2.637,212,1.191,272,2.244,328,2.445,332,1.879,377,1.826,543,3.111,559,2.776,601,3.339,640,1.78,641,1.963,642,1.4,671,1.895,702,2.199,818,4.055,1040,1.741,2021,4.48,2079,3.615,2094,4.997,2097,4.307,2099,3.815,2186,3.815,2460,3.339,2472,3.474,2505,4.023,2506,4.294,2507,4.294,2508,4.023,2509,4.023,2510,5.113,2511,6.1,2512,4.294,2513,4.023,2514,6.1,2515,5.403,2516,4.294,2517,4.023,2518,4.023,2519,5.403,2520,4.872,2521,5.403,2522,5.766,2523,5.766,2524,5.403,2525,5.766,2526,5.403,2527,4.665,2528,4.294,2529,5.766,2530,5.403,2531,4.294,2532,4.294,2533,4.294,2534,4.294,2535,3.628,2536,3.628,2537,4.872,2538,5.88,2539,6.96,2540,6.96,2541,5.88,2542,4.872,2543,3.628,2544,3.628,2545,3.474,2546,3.628,2547,3.628,2548,3.628,2549,3.628,2550,3.474,2551,3.628,2552,3.474,2553,3.628,2554,3.339,2555,3.628]],["title/modules/LifecycleModule.html",[189,1.694,3051,3.582]],["body/modules/LifecycleModule.html",[0,0.31,3,0.07,4,0.062,5,0.062,19,0.006,34,0.236,36,0.07,62,1.208,83,0.004,84,0.004,110,3.011,151,1.356,159,3.305,189,3.046,191,3.011,192,3.011,193,3.15,194,3.15,195,3.078,196,4.233,197,4.233,203,3.898,204,3.15,205,3.011,207,3.991,208,3.389,209,2.305,212,1.856,213,3.48,216,2.612,217,4.373,853,5.96,854,6.716,855,6.716,862,5.862,863,5.066,881,4.794,883,5.862,3051,7.425,3052,5.862,3053,5.862,3054,6.555,3055,5.862,3056,7.817,3057,6.555,3058,6.555,3059,6.555,3060,6.555]],["title/injectables/LifecycleService.html",[236,1.205,3056,3.786]],["body/injectables/LifecycleService.html",[0,0.114,3,0.026,4,0.023,5,0.023,10,0.06,11,0.235,12,0.365,13,0.745,15,1.362,18,0.205,19,0.006,20,0.221,21,0.498,22,1.273,23,0.492,28,0.644,29,0.379,30,1.052,31,1.595,34,0.197,35,0.512,36,0.026,37,1.7,53,3.806,55,2.524,61,0.952,62,1.772,64,1.945,66,1.508,83,0.002,84,0.002,97,3.145,99,3.188,100,0.959,101,1.583,110,3.423,117,0.484,123,1.827,138,1.26,149,1.544,151,0.498,159,1.979,168,1.25,169,2.733,170,2.042,174,2.741,177,2.836,178,3.35,180,0.584,209,0.846,212,1.312,213,1.278,214,2.088,216,0.959,219,2.049,234,1.454,235,0.512,236,0.966,237,1.037,239,2.423,241,3.357,245,3.317,249,1.778,252,2.087,256,1.157,259,1.606,260,1.544,263,1.544,264,1.606,265,1.213,267,1.677,269,0.484,272,1.692,277,4.62,278,4.446,280,4.521,285,2.171,287,3.842,288,1.138,305,3.034,311,1.985,312,1.565,315,2.078,321,2.735,328,1.13,332,1.336,335,1.606,336,1.86,341,2.078,342,2.578,343,2.153,379,1.453,380,0.551,438,1.352,462,1.949,470,2.871,496,2.153,503,1.488,513,3.238,514,3.827,546,3.256,548,5.451,681,3.238,734,3.238,793,1.105,809,0.941,863,1.86,909,1.86,914,3.636,964,3.034,988,3.636,1015,3.238,1018,3.842,1102,2.153,1105,3.511,1107,1.508,1130,3.238,1141,2.871,1150,4.314,1152,1.86,1153,1.438,1272,1.606,1305,2.639,1332,1.727,1400,3.447,1401,2.346,1405,1.76,1538,2.518,1623,1.213,1638,3.678,1639,1.985,1705,3.074,1706,3.812,1802,1.76,1815,1.438,1816,3.842,1928,1.488,2013,1.393,2079,1.245,2087,3.9,2088,2.272,2092,4.052,2097,1.313,2109,1.438,2115,1.931,2121,1.438,2122,1.606,2128,1.606,2157,3.776,2171,4.584,2181,1.184,2192,1.677,2203,2.735,2237,1.677,2257,4.98,2285,4.446,2328,1.86,2377,1.86,2383,2.619,2422,1.985,2554,3.678,2559,5.227,2570,2.153,2571,2.153,2597,4.446,2613,2.153,2614,2.153,2620,3.511,2637,2.153,2638,2.153,2733,2.153,2734,3.511,2865,1.985,2895,1.86,2959,1.985,3056,3.034,3061,2.407,3062,3.926,3063,5.735,3064,5.735,3065,5.735,3066,5.735,3067,4.98,3068,4.971,3069,3.926,3070,3.926,3071,2.407,3072,2.407,3073,2.407,3074,2.407,3075,3.926,3076,2.407,3077,3.926,3078,2.407,3079,2.407,3080,1.985,3081,1.985,3082,2.407,3083,2.407,3084,2.407,3085,2.407,3086,4.971,3087,2.407,3088,2.407,3089,2.407,3090,5.735,3091,3.926,3092,5.735,3093,5.735,3094,5.735,3095,3.926,3096,3.926,3097,2.407,3098,4.971,3099,5.735,3100,7.147,3101,6.776,3102,9.149,3103,5.735,3104,2.407,3105,2.407,3106,3.926,3107,3.926,3108,2.407,3109,2.407,3110,2.407,3111,2.407,3112,2.407,3113,5.735,3114,3.926,3115,4.971,3116,3.926,3117,4.971,3118,2.407,3119,4.971,3120,2.407,3121,2.407,3122,2.407,3123,2.407,3124,2.407,3125,1.86,3126,2.407,3127,2.407,3128,2.407,3129,2.407,3130,1.86,3131,2.407,3132,2.407,3133,2.407,3134,2.407,3135,2.407,3136,2.407,3137,5.735,3138,3.926,3139,3.926,3140,2.407,3141,3.926,3142,6.539,3143,3.926,3144,6.318,3145,6.318,3146,6.318,3147,2.871,3148,3.926,3149,2.407,3150,2.407,3151,5.129,3152,3.926,3153,3.926,3154,2.407,3155,3.926,3156,3.926,3157,2.407,3158,2.407,3159,2.407,3160,3.926,3161,2.407,3162,2.407,3163,2.153,3164,4.971,3165,4.971,3166,2.407,3167,2.407,3168,2.407,3169,2.407,3170,2.407,3171,2.407,3172,2.407,3173,2.407,3174,2.407,3175,2.407,3176,2.407,3177,2.407,3178,2.407,3179,2.153,3180,2.407,3181,2.407,3182,2.407,3183,3.511,3184,2.407,3185,3.926,3186,2.407,3187,2.407,3188,2.407,3189,2.407,3190,2.407,3191,3.926,3192,2.407,3193,3.926,3194,2.407,3195,2.153,3196,3.926,3197,2.407,3198,2.407,3199,2.407,3200,7.453,3201,5.735,3202,2.407,3203,2.407,3204,1.985,3205,2.407,3206,2.407,3207,2.407,3208,2.407,3209,6.318,3210,6.318,3211,2.407,3212,2.407,3213,2.407,3214,3.511,3215,2.407,3216,2.407,3217,2.407,3218,2.407,3219,2.153,3220,2.407,3221,2.407,3222,2.407,3223,5.735,3224,3.926,3225,2.407,3226,2.407,3227,2.407,3228,3.926,3229,2.407,3230,2.407,3231,3.926,3232,2.407,3233,1.985,3234,2.407,3235,2.407,3236,2.407,3237,2.153,3238,2.407,3239,2.407,3240,2.407,3241,2.407,3242,2.407,3243,2.407,3244,2.407,3245,2.407,3246,2.153,3247,1.985,3248,2.407,3249,2.407,3250,2.407,3251,2.407,3252,2.407]],["title/entities/LinkEntity.html",[394,2.25,2698,3.029]],["body/entities/LinkEntity.html",[0,0.338,3,0.057,4,0.051,5,0.051,10,0.134,11,0.427,12,0.925,18,0.28,19,0.006,20,0.43,21,1.767,23,0.642,34,0.203,35,1.142,36,0.057,62,1.786,65,2.744,77,2.677,78,1.834,83,0.004,84,0.004,117,1.875,123,1.709,178,2.412,214,3.526,228,2.665,229,1.442,235,1.519,252,1.834,269,1.717,366,4.011,380,1.954,394,3.277,396,3.013,398,4.501,399,4.501,401,5.769,402,3.924,403,5.478,404,5.699,406,3.318,408,3.924,412,6.601,416,6.246,417,6.077,419,4.76,420,4.76,421,5.14,422,5.584,423,3.318,424,3.441,425,3.106,426,3.106,427,3.739,428,3.739,429,4.575,430,3.739,431,3.58,961,4.799,2421,3.58,2422,5.884,2698,4.411,3253,5.366,3254,5.366,3255,4.799,3256,5.366,3257,5.366,3258,5.366,3259,5.366,3260,5.366,3261,5.366,3262,5.366,3263,7.134,3264,7.134,3265,5.366,3266,5.366,3267,7.134,3268,5.366]],["title/classes/LoginReq.html",[0,0.232,1204,3.582]],["body/classes/LoginReq.html",[0,0.43,2,0.988,3,0.067,4,0.06,5,0.06,10,0.157,11,0.474,14,1.596,18,0.278,19,0.006,20,0.423,23,0.595,34,0.205,36,0.084,57,5.28,72,1.864,83,0.004,84,0.004,117,1.739,121,1.826,155,1.361,227,2.604,228,2.684,229,1.694,231,3.483,232,1.719,356,4.064,361,3.18,373,3.14,650,2.169,998,3.803,1107,3.323,1204,5.788,1207,6.98,1272,6.536,1273,6.687,1303,4.607,1305,5.067,1322,6.527,1997,4.482,3269,5.634,3270,6.3,3271,6.3,3272,7.078,3273,7.078,3274,6.3,3275,7.078,3276,6.3,3277,5.634,3278,5.634]],["title/classes/LpTokenOperationResult.html",[0,0.232,2195,3.268]],["body/classes/LpTokenOperationResult.html",[0,0.258,2,0.855,3,0.058,4,0.052,5,0.052,10,0.136,11,0.432,12,0.507,18,0.247,19,0.006,20,0.442,23,0.591,28,1.41,29,0.863,34,0.129,36,0.092,41,1.656,55,2.399,58,3.635,59,4.78,62,1.005,83,0.004,84,0.004,100,2.874,117,1.624,121,1.679,123,1.737,131,5.513,138,1.827,140,1.997,155,1.178,168,1.737,227,2.346,235,1.535,269,1.096,288,2.492,342,2.989,347,4.408,348,2.82,356,3.794,357,4.309,358,4.746,367,3.259,373,3.021,380,1.967,559,2.372,619,2.746,640,1.822,644,3.16,650,1.93,653,5.629,1048,3.16,1236,3.465,1305,4.289,1764,6.626,1906,4.049,1984,2.975,2115,3.547,2181,4.78,2188,3.988,2189,5.527,2190,6.908,2191,4.214,2192,3.799,2193,6.243,2194,3.988,2195,4.811,2196,5.572,2197,5.572,2198,5.273,2199,4.214,2200,3.497,2201,3.988,2202,3.988,2203,3.799,3279,7.21,3280,5.452,3281,5.452]],["title/controllers/LpTokensController.html",[107,1.916,3282,4.04]],["body/controllers/LpTokensController.html",[0,0.28,3,0.063,4,0.056,5,0.056,10,0.148,12,0.55,13,1.442,15,1.337,18,0.17,19,0.006,23,0.407,28,1.246,29,0.57,30,0.984,34,0.218,36,0.063,37,1.073,58,4.234,59,4.847,62,1.634,83,0.004,84,0.004,100,2.355,107,2.311,109,2.269,112,3.224,117,1.188,121,1.889,125,2.228,142,4.146,145,2.775,148,2.907,150,3.42,151,1.222,152,4.698,153,5.915,154,3.137,155,1.276,156,3.224,170,1.565,172,2.839,173,3.42,174,2.904,177,1.713,180,1.433,222,3.111,235,1.258,251,4.117,252,1.519,255,4.698,274,2.043,315,1.944,341,1.944,342,1.976,347,4.146,348,2.972,380,1.352,650,1.412,764,2.979,827,4.874,874,6.267,1073,4.874,1305,4.034,1332,2.6,1517,4.541,1901,3.568,2115,2.907,2181,4.88,2189,4.698,2713,5.069,2907,7.312,3282,6.267,3283,5.909,3284,6.795,3285,5.285,3286,5.909,3287,6.795,3288,5.909,3289,7.511,3290,8.398,3291,5.909,3292,5.909,3293,7.598,3294,5.909,3295,6.795,3296,6.795,3297,5.909,3298,5.909,3299,6.142,3300,5.285,3301,5.285,3302,5.909,3303,5.909,3304,5.909,3305,5.909,3306,5.909,3307,5.909,3308,5.909,3309,5.909,3310,5.909]],["title/modules/LpTokensModule.html",[189,1.694,857,3.582]],["body/modules/LpTokensModule.html",[0,0.311,3,0.07,4,0.062,5,0.062,19,0.006,34,0.236,36,0.07,59,3.23,62,1.497,83,0.004,84,0.004,109,3.118,138,1.663,151,1.358,159,4.094,160,3.23,189,3.048,191,3.015,192,3.015,193,3.154,194,3.154,195,3.083,196,4.236,197,4.236,202,5.763,203,3.902,204,3.154,205,3.015,207,3.995,208,3.395,209,2.309,210,4.574,216,2.616,750,2.568,853,5.962,857,7.366,861,5.658,874,5.414,881,4.801,1091,4.21,2189,4.059,3282,7.271,3299,7.399,3300,5.871,3301,5.871,3311,5.871,3312,5.871,3313,6.564,3314,5.871,3315,6.564,3316,6.564,3317,5.871]],["title/injectables/LpTokensService.html",[236,1.205,3299,3.582]],["body/injectables/LpTokensService.html",[0,0.102,3,0.023,4,0.02,5,0.02,10,0.17,11,0.214,12,0.598,13,0.68,15,1.178,18,0.242,19,0.006,20,0.405,21,0.445,22,0.841,23,0.539,28,1.339,29,0.574,30,1.421,31,1.328,34,0.207,35,0.458,36,0.023,37,1.344,41,1.807,49,0.745,52,1.035,55,2.358,58,3.238,59,4.677,61,1.115,62,1.53,72,0.507,76,0.624,78,1.75,83,0.002,84,0.002,121,0.421,123,2.168,131,4.746,138,2.416,140,2.393,142,2.509,146,3.439,151,0.445,158,3.16,159,3.432,160,1.06,161,1.209,168,1.141,169,2.865,170,2.312,174,2.639,177,2.747,180,1.443,209,0.757,212,0.493,216,0.858,219,1.209,232,0.588,235,1.267,236,0.881,237,0.928,239,2.264,241,3.197,245,3.068,249,1.917,251,3.204,252,2.221,254,1.175,255,1.332,256,1.035,261,1.437,262,1.246,265,1.086,268,1.5,269,1.291,274,2.871,276,2.31,281,2.583,285,1.088,305,2.768,309,1.776,313,1.776,315,1.763,328,1.682,332,0.963,341,1.763,342,1.99,345,1.575,347,4.371,348,2.328,356,3.679,369,1.513,370,0.989,372,1.484,375,0.634,377,0.641,379,0.546,463,0.989,559,2.113,619,2.483,623,1.576,627,1.332,644,0.842,645,1.143,646,1.246,648,1.209,649,1.209,650,2.064,653,3.734,656,0.72,660,1.926,665,1.143,666,1.143,667,1.143,668,1.143,671,0.784,696,2.441,719,1.776,734,1.776,747,2.662,749,2.876,750,0.842,754,1.576,755,1.238,793,0.989,795,1.086,809,1.401,975,1.776,987,1.943,1040,0.72,1091,1.381,1236,3.086,1272,1.437,1305,4.822,1332,2.358,1378,1.332,1380,1.437,1400,1.955,1463,2.509,1504,3.203,1515,1.437,1517,1.287,1518,3.554,1519,1.086,1520,2.215,1523,1.926,1524,2.378,1562,1.143,1576,0.989,1594,1.114,1623,1.086,1624,1.143,1661,3.06,1671,4.113,1711,3.01,1712,3.432,1716,1.332,1719,1.664,1764,5.871,1774,1.143,1802,1.575,1812,2.141,1815,1.287,1816,3.554,1852,1.143,1856,1.664,1859,1.114,1865,2.297,1901,1.011,1905,3.247,1928,1.332,1984,1.175,2015,2.141,2018,1.246,2019,1.246,2021,2.845,2023,3.437,2024,1.381,2026,2.297,2031,2.748,2032,2.949,2035,1.287,2036,1.287,2037,1.287,2038,1.287,2039,1.287,2040,1.287,2044,2.39,2045,1.437,2048,1.437,2050,3.576,2051,1.437,2052,1.437,2053,1.437,2054,2.39,2055,3.576,2061,3.068,2062,1.437,2063,1.437,2064,1.437,2065,1.437,2066,2.39,2067,1.437,2070,2.39,2079,1.114,2080,2.141,2081,2.141,2082,1.287,2083,2.141,2084,2.39,2085,2.39,2086,2.39,2087,1.955,2088,2.073,2093,1.287,2094,1.143,2095,1.287,2099,1.175,2100,1.437,2101,1.437,2102,1.437,2105,2.073,2106,1.246,2107,1.287,2108,1.287,2110,1.246,2115,4.295,2116,1.287,2145,1.437,2181,4.568,2185,1.287,2189,4.953,2192,2.496,2194,1.575,2195,3.576,2200,3.437,2201,1.575,2203,1.5,2237,1.5,2277,3.793,2289,1.776,2332,1.926,2365,1.776,2382,1.664,2383,1.437,2510,2.62,2511,1.664,2513,1.664,2514,1.664,2515,1.664,2530,4.142,2554,2.949,2567,3.203,2713,5.227,2910,1.776,3036,3.203,3038,4.793,3247,2.954,3284,3.203,3285,3.203,3287,4.793,3289,5.322,3295,4.113,3299,2.62,3318,8.009,3319,2.153,3320,3.554,3321,3.554,3322,3.582,3323,3.582,3324,5.359,3325,3.582,3326,2.153,3327,3.582,3328,3.582,3329,2.153,3330,4.599,3331,4.599,3332,3.582,3333,2.153,3334,5.359,3335,4.599,3336,2.153,3337,2.153,3338,3.582,3339,3.582,3340,3.582,3341,2.153,3342,3.582,3343,3.582,3344,2.153,3345,2.153,3346,3.582,3347,2.153,3348,2.153,3349,2.153,3350,2.153,3351,2.153,3352,2.153,3353,2.153,3354,1.926,3355,2.153,3356,2.153,3357,2.153,3358,4.599,3359,2.153,3360,2.153,3361,2.153,3362,1.664,3363,1.664,3364,4.599,3365,4.599,3366,1.926,3367,2.153,3368,2.153,3369,1.776,3370,1.664,3371,3.582,3372,2.153,3373,2.153,3374,2.153,3375,2.153,3376,2.153,3377,2.153,3378,1.926,3379,2.153,3380,2.153,3381,2.153,3382,2.153,3383,2.153,3384,2.153,3385,2.153,3386,2.153,3387,2.153,3388,3.582,3389,2.153,3390,2.153,3391,2.153,3392,2.153,3393,3.582,3394,2.153,3395,2.153,3396,2.153,3397,2.153,3398,2.153,3399,2.153,3400,2.153,3401,1.926,3402,3.582,3403,2.153,3404,2.153,3405,2.153,3406,2.153,3407,2.153,3408,2.153,3409,2.153,3410,2.153,3411,2.153,3412,3.203,3413,3.582,3414,2.153,3415,2.153,3416,2.153,3417,1.926,3418,1.926,3419,2.153,3420,2.153,3421,3.582,3422,2.153,3423,2.153,3424,4.599,3425,4.599,3426,2.153,3427,3.203,3428,3.582,3429,3.582,3430,2.153,3431,2.153,3432,1.926,3433,1.926,3434,2.153,3435,2.153,3436,2.153,3437,2.153,3438,2.153,3439,2.153,3440,2.153,3441,2.153]],["title/classes/MetadataFile.html",[0,0.232,2229,3.582]],["body/classes/MetadataFile.html",[0,0.43,2,0.825,3,0.056,4,0.05,5,0.05,10,0.131,11,0.421,12,0.878,18,0.274,19,0.006,20,0.442,22,1.244,23,0.546,34,0.188,36,0.075,52,3.381,83,0.004,84,0.004,110,3.891,117,1.594,121,1.842,155,1.135,180,1.923,212,1.815,219,1.789,220,5.902,223,2.79,227,2.706,228,2.556,229,1.413,230,3.162,231,3.096,232,1.434,234,1.947,235,1.498,269,1.056,272,3.033,285,1.596,312,2.095,315,1.729,332,1.892,338,2.137,341,1.729,361,3.248,362,1.947,363,2.433,369,2.972,370,2.414,371,2.177,372,2.177,373,2.787,374,3.141,375,2.072,377,0.941,379,1.783,656,2.353,736,3.844,739,3.662,907,3.371,983,3.371,987,2.22,989,3.662,998,2.526,1032,3.662,1033,3.507,1034,4.102,1035,3.662,1036,3.662,1037,4.695,1038,6.572,1039,4.74,1515,3.507,1661,2.362,1918,3.042,1997,3.978,1999,3.042,2224,3.507,2225,4.062,2227,5.438,2228,4.205,2229,6.458,2230,6.825,2231,4.062,2232,4.062,2233,4.062,2234,6.546,2235,6.546,2236,6.13,2237,5.527,2238,4.062,2239,4.062,2240,4.062,3442,7.094,3443,5.256,3444,5.256,3445,5.256]],["title/classes/NftAsset.html",[0,0.232,751,2.354]],["body/classes/NftAsset.html",[0,0.439,2,0.713,3,0.048,4,0.043,5,0.043,10,0.114,11,0.381,12,0.781,18,0.266,19,0.006,20,0.438,23,0.506,34,0.175,36,0.095,62,1.174,83,0.003,84,0.003,117,1.478,121,1.941,123,2.029,138,2.346,140,2.037,144,3.305,155,0.982,170,2.656,212,1.823,219,1.659,227,2.721,228,2.804,229,1.222,230,3.582,231,3.236,232,1.241,234,2.725,235,1.786,249,2.279,269,1.748,288,2.433,332,2.338,361,3.149,362,2.725,363,2.756,369,2.691,373,3.29,375,2.347,377,1.427,379,1.614,380,1.683,446,2.237,463,2.088,619,1.36,642,2.142,650,1.758,652,4.928,656,2.665,671,2.677,751,4.032,754,2.803,755,2.203,757,2.926,758,3.692,759,3.134,760,2.237,809,2.492,1040,1.52,1048,2.877,1138,3.435,1592,2.811,1621,3.294,1633,2.811,1634,2.811,1872,4.066,1983,3.033,1984,3.476,1985,2.481,1989,4.086,1990,2.916,1991,2.916,1992,2.916,1993,2.916,1996,4.251,1997,3.454,1998,4.251,1999,3.688,2000,3.033,2001,4.251,2002,4.251,2003,2.292,2004,2.916,2005,5.578,2006,4.339,2007,4.086,2008,2.916,2009,2.811,2010,4.251,2011,2.481,3446,4.546,3447,4.546,3448,4.546,3449,4.546,3450,4.546]],["title/classes/OnchainMetadata.html",[0,0.232,1037,3.268]],["body/classes/OnchainMetadata.html",[0,0.425,2,0.792,3,0.054,4,0.048,5,0.048,10,0.126,11,0.41,12,0.87,18,0.28,19,0.006,20,0.443,22,1.219,23,0.618,34,0.185,36,0.073,52,3.291,83,0.004,84,0.004,110,4.22,117,1.805,121,1.871,155,1.091,180,1.885,212,1.778,219,1.753,220,5.807,221,3.693,223,2.681,227,2.691,228,2.526,229,1.358,230,3.078,231,3.014,232,1.378,234,1.871,235,1.458,269,1.015,272,3.592,285,1.534,312,2.013,315,1.661,332,1.841,338,2.08,341,1.661,361,3.222,362,1.871,363,2.368,369,2.893,370,2.319,371,2.092,372,2.092,373,2.742,374,3.018,375,2.017,377,0.904,379,1.735,656,2.291,736,3.693,739,3.519,907,3.239,983,3.239,987,2.133,989,3.519,998,2.427,1032,3.519,1033,3.369,1034,4.505,1035,3.519,1036,3.519,1037,5.186,1038,6.513,1039,5.206,1515,3.369,1661,2.27,1918,2.923,1997,3.914,1999,2.923,2224,3.369,2225,3.903,2227,5.293,2228,4.093,2229,6.371,2230,6.007,2231,3.903,2232,3.903,2233,3.903,2234,6.441,2235,6.441,2236,6.007,2237,5.416,2238,3.903,2239,3.903,2240,3.903,3442,7.791,3451,5.05,3452,5.05,3453,5.05,3454,5.05,3455,5.05,3456,5.05,3457,5.05]],["title/classes/PaginatedResponseDto.html",[0,0.232,2689,4.04]],["body/classes/PaginatedResponseDto.html",[0,0.329,2,1.089,3,0.074,4,0.066,5,0.066,10,0.173,11,0.503,18,0.276,19,0.006,23,0.662,34,0.165,36,0.074,83,0.005,84,0.005,117,1.932,155,1.499,227,2.769,377,1.786,748,5.853,1110,4.93,1111,6.295,1150,5.229,1155,6.982,1157,7.451,2689,6.928,3458,9.771,3459,6.939,3460,6.939,3461,6.939,3462,6.939,3463,6.939,3464,6.939]],["title/classes/PaginationDto.html",[0,0.232,1066,3.786]],["body/classes/PaginationDto.html",[0,0.421,2,1.049,3,0.071,4,0.064,5,0.064,10,0.167,11,0.491,18,0.273,19,0.006,21,2.003,22,1.288,23,0.565,29,0.895,34,0.211,36,0.071,83,0.004,84,0.004,117,1.65,155,1.444,227,2.425,228,2.499,229,1.797,232,1.824,288,2.381,362,3.293,363,3.073,376,5.944,377,1.734,379,2.486,380,2.121,383,4.596,695,5.514,1066,6.346,1110,4.849,1111,6.193,2962,7.344,2963,5.979,2966,5.979,3465,6.685,3466,6.685,3467,6.685,3468,8.211]],["title/classes/PolicyId1749726859213.html",[0,0.232,3469,4.381]],["body/classes/PolicyId1749726859213.html",[0,0.284,2,0.94,3,0.064,4,0.057,5,0.057,8,2.441,9,2.781,10,0.15,11,0.459,12,0.857,13,1.454,14,2.387,15,1.5,16,2.522,17,2.522,18,0.243,19,0.006,20,0.266,21,1.239,22,0.94,23,0.582,25,2.522,26,3.222,28,1.257,29,0.74,30,1.276,31,1.843,32,2.522,34,0.142,35,1.275,36,0.064,37,1.762,38,3.244,39,3.191,40,3.244,41,2.706,42,3.244,43,3.03,44,3.03,61,2.161,70,2.838,71,2.98,72,2.099,73,2.563,74,2.98,75,2.606,76,2.584,77,2.793,78,1.971,79,2.563,80,2.98,83,0.004,84,0.004,3469,7.969,3470,8.91,3471,5.99,3472,5.99,3473,5.99,3474,5.99]],["title/classes/PolicyIdRestore1749727852748.html",[0,0.232,3475,4.381]],["body/classes/PolicyIdRestore1749727852748.html",[0,0.278,2,0.921,3,0.063,4,0.056,5,0.056,8,2.41,9,2.754,10,0.147,11,0.453,12,0.852,13,1.435,14,2.374,15,1.492,16,2.489,17,2.489,18,0.24,19,0.006,20,0.26,21,1.214,22,0.921,23,0.576,25,2.489,26,3.21,28,1.241,29,0.73,30,1.259,31,1.829,32,2.489,34,0.139,35,1.25,36,0.063,37,1.788,38,3.291,39,3.237,40,3.23,41,2.78,42,3.23,43,3.007,44,3.007,61,2.144,65,1.811,70,2.915,71,2.957,72,2.083,73,2.53,74,2.957,75,2.572,76,2.564,77,2.772,78,1.945,79,2.53,80,2.957,83,0.004,84,0.004,101,2.41,328,3.553,371,2.431,439,3.116,3475,7.909,3476,8.843,3477,5.869,3478,5.869,3479,5.869,3480,5.869]],["title/classes/PublicProfileRes.html",[0,0.232,3481,4.04]],["body/classes/PublicProfileRes.html",[0,0.235,2,0.778,3,0.053,4,0.047,5,0.047,10,0.124,11,0.405,12,0.77,18,0.279,19,0.006,20,0.431,22,1.298,23,0.663,29,0.898,34,0.196,36,0.053,83,0.004,84,0.004,117,1.937,121,1.504,155,1.071,221,3.626,222,2.506,227,2.65,228,2.844,235,2.142,269,1.547,288,2.59,377,1.481,380,2.319,425,4.457,426,4.457,462,2.087,650,1.84,1042,7.397,1318,6.049,1320,5.365,1326,5.137,1328,5.631,1414,4.861,1415,3.18,2228,5.759,2698,5.114,2699,3.455,2903,7.506,3481,5.579,3482,9.712,3483,4.958,3484,5.631,3485,7.742,3486,4.958,3487,4.958,3488,8.934,3489,4.958,3490,4.958,3491,4.958,3492,4.958,3493,4.958,3494,4.958,3495,4.958,3496,4.958,3497,4.958,3498,4.435,3499,4.435,3500,6.05]],["title/classes/PublishVaultDto.html",[0,0.232,3501,4.04]],["body/classes/PublishVaultDto.html",[0,0.404,2,0.957,3,0.065,4,0.058,5,0.058,10,0.152,11,0.464,18,0.257,19,0.006,20,0.432,23,0.617,29,0.914,34,0.202,36,0.065,62,1.429,83,0.004,84,0.004,117,1.803,121,1.752,123,2.715,138,2.437,144,3.831,155,1.317,222,2.259,227,2.527,228,2.604,229,1.639,232,1.664,234,2.259,235,1.298,269,1.803,288,2.601,361,3.149,363,2.947,373,3.202,380,1.774,758,3.947,809,3.622,1040,2.593,1048,3.509,1989,4.972,1990,4.972,1991,4.972,1992,4.972,1993,4.972,1997,3.641,2004,4.972,2005,4.972,2006,4.638,2007,3.911,3501,6.394,3502,9.26,3503,6.098,3504,6.098,3505,4.713,3506,6.098,3507,5.03,3508,6.098,3509,6.098,3510,6.098,3511,6.098,3512,6.098]],["title/injectables/RawBodyMiddleware.html",[236,1.205,3513,4.381]],["body/injectables/RawBodyMiddleware.html",[0,0.299,3,0.067,4,0.06,5,0.06,8,2.01,10,0.158,11,0.474,12,0.587,13,1.503,15,1.379,18,0.181,19,0.006,21,1.305,22,0.99,23,0.545,28,1.035,29,0.609,30,1.05,34,0.206,36,0.067,37,1.146,49,2.181,83,0.004,84,0.004,125,2.379,133,3.901,145,4.394,151,1.305,159,3.181,169,2.672,170,2.293,177,2.297,180,1.53,236,1.949,237,2.72,239,3.836,252,2.037,315,2.076,341,2.076,342,2.649,349,3.996,642,2.328,795,4.579,1192,5.643,1234,4.614,1340,7.142,1502,5.643,1560,5.643,1562,3.349,1608,3.771,1665,7.49,1666,5.643,1677,3.901,1678,5.204,1688,5.643,2377,6.122,3163,8.367,3513,7.084,3514,8.659,3515,6.309,3516,7.921,3517,9.081,3518,6.309,3519,7.921,3520,6.309,3521,7.921,3522,6.309,3523,6.309,3524,7.921,3525,6.309,3526,6.309,3527,6.309,3528,6.309,3529,6.309,3530,6.309,3531,6.309,3532,6.309]],["title/classes/RenameFieldFixEnum1742800375799.html",[0,0.232,3533,4.381]],["body/classes/RenameFieldFixEnum1742800375799.html",[0,0.246,2,0.814,3,0.055,4,0.049,5,0.049,8,2.222,9,2.592,10,0.13,11,0.417,12,0.818,13,1.323,14,2.294,15,1.442,16,2.295,17,2.295,18,0.279,19,0.006,20,0.23,21,1.073,22,0.814,23,0.542,25,2.295,26,3.134,28,1.144,29,0.673,30,1.161,31,1.743,32,2.295,34,0.123,35,1.104,36,0.055,37,1.826,38,2.818,39,3.167,40,3.145,41,2.559,42,3.145,43,2.865,44,2.865,46,3.806,48,3.383,49,2.412,61,2.195,62,1.705,63,3.274,65,2.152,66,2.679,68,3.351,70,2.684,71,2.818,72,1.985,73,2.333,74,2.818,75,2.371,76,2.443,77,2.641,78,1.793,79,2.333,80,2.818,83,0.004,84,0.004,101,2.684,463,3.203,2449,6.95,2450,5.39,2451,6.766,2452,6.95,2461,7.468,2894,4.64,2895,6.089,2896,4.64,2897,7.536,2898,4.64,2899,4.64,3533,7.536,3534,8.426,3535,5.188,3536,5.188,3537,5.188,3538,5.188]],["title/classes/RenameFields1746536544579.html",[0,0.232,3539,4.381]],["body/classes/RenameFields1746536544579.html",[0,0.231,2,0.764,3,0.052,4,0.046,5,0.046,8,2.128,9,2.509,10,0.122,11,0.4,12,0.801,13,1.268,14,2.251,15,1.415,16,2.198,17,2.198,18,0.261,19,0.006,20,0.216,21,1.007,22,0.764,23,0.525,25,2.198,26,3.093,28,1.096,29,0.645,30,1.112,31,1.698,32,2.198,34,0.116,35,1.037,36,0.052,37,1.86,38,3.368,39,3.348,40,3.099,41,2.962,42,3.181,43,2.791,44,2.791,48,2.974,61,2.086,63,2.925,65,2.859,68,3.211,70,3.106,71,2.877,72,2.026,73,2.235,74,2.877,75,2.272,76,2.494,77,2.696,78,1.961,79,2.551,80,2.877,83,0.004,84,0.004,93,4.132,101,3.155,271,4.656,307,4.285,371,2.767,439,3.547,481,5.264,2447,6.822,2448,5.976,2460,4.285,2465,5.976,2469,5.976,2498,5.976,3539,7.342,3540,8.209,3541,4.87,3542,4.87,3543,4.87,3544,4.87,3545,4.356,3546,6.682,3547,6.682,3548,5.976,3549,7.628,3550,6.682,3551,6.682]],["title/classes/RenameInvestmentToAcquire1746531791148.html",[0,0.232,3552,4.381]],["body/classes/RenameInvestmentToAcquire1746531791148.html",[0,0.173,2,0.572,3,0.039,4,0.035,5,0.035,8,1.73,9,2.135,10,0.091,11,0.325,12,0.716,13,1.03,14,2.043,15,1.284,16,1.786,17,1.786,18,0.284,19,0.006,20,0.162,21,0.754,22,0.572,23,0.447,25,1.786,26,2.885,28,0.891,29,0.524,30,0.904,31,1.487,32,1.786,34,0.087,35,0.776,36,0.039,37,1.874,38,3.373,39,3.357,40,2.87,41,2.961,42,3.197,43,2.445,44,2.445,45,5.557,46,3.924,47,3.007,48,3.357,49,2.787,50,4.197,51,3.971,52,2.609,53,3.05,54,3.232,55,2.39,56,3.971,57,3.623,61,1.955,63,3.269,64,2.124,65,2.931,66,2.762,67,3.007,68,3.874,69,5.931,70,3.092,71,2.696,72,1.899,73,1.816,74,2.696,75,1.846,76,2.338,77,2.254,78,1.396,79,1.816,80,2.87,81,3.007,82,3.007,83,0.003,84,0.003,91,5.259,92,2.817,94,3.971,95,2.808,96,3.483,97,2.39,98,2.963,99,3.483,101,3.208,102,3.784,103,2.817,104,5.557,105,2.817,106,2.817,212,1.242,271,2.54,317,4.922,446,2.672,473,2.672,481,3.483,499,4.857,545,2.712,546,3.455,547,5.01,662,4.479,2222,4.197,2450,4.197,2451,3.971,2453,5.804,2454,4.197,2455,4.479,2463,4.857,2464,4.857,2481,6.431,2485,4.857,2496,4.857,2502,4.857,3548,4.857,3552,6.431,3553,7.191,3554,3.645,3555,3.645,3556,3.645,3557,3.645,3558,4.857,3559,5.43,3560,6.489,3561,5.43,3562,5.43,3563,5.43,3564,7.191,3565,5.43,3566,5.43,3567,3.26]],["title/classes/RenameVaultField1742382533813.html",[0,0.232,3568,4.381]],["body/classes/RenameVaultField1742382533813.html",[0,0.275,2,0.91,3,0.062,4,0.055,5,0.055,8,2.391,9,2.738,10,0.145,11,0.449,12,0.849,13,1.424,14,2.367,15,1.487,16,2.47,17,2.47,18,0.239,19,0.006,20,0.257,21,1.2,22,0.91,23,0.573,25,2.47,26,3.203,28,1.231,29,0.725,30,1.249,31,1.821,32,2.47,34,0.138,35,1.235,36,0.062,37,1.784,38,3.124,39,3.231,40,3.222,41,2.674,42,3.222,43,2.993,44,2.993,46,4.096,48,3.044,61,2.135,63,2.993,65,2.316,70,2.804,71,2.944,72,2.073,73,2.511,74,2.944,75,2.552,76,2.552,77,2.759,78,1.93,79,2.511,80,2.944,83,0.004,84,0.004,101,2.391,2466,6.714,3558,6.714,3568,7.873,3569,8.803,3570,5.799,3571,5.799,3572,5.799,3573,5.799]],["title/classes/ReplaceLockedStateToGovernance1743424803837.html",[0,0.232,3574,4.381]],["body/classes/ReplaceLockedStateToGovernance1743424803837.html",[0,0.252,2,0.834,3,0.057,4,0.051,5,0.051,8,2.257,9,2.624,10,0.133,11,0.424,12,0.825,13,1.345,14,2.31,15,1.452,16,2.332,17,2.332,18,0.28,19,0.006,20,0.236,21,1.099,22,0.834,23,0.549,25,2.332,26,3.15,28,1.162,29,0.684,30,1.18,31,1.76,32,2.332,34,0.126,35,1.131,36,0.057,37,1.831,38,3.162,39,3.231,40,3.162,41,2.692,42,3.162,43,2.893,44,2.893,46,3.867,48,3.269,49,2.451,54,3.185,61,2.063,63,3.215,65,2.461,66,2.722,68,3.406,70,2.823,71,2.845,72,2.004,73,2.37,74,2.845,75,2.41,76,2.467,77,2.667,78,1.822,79,2.37,80,2.845,83,0.004,84,0.004,91,6.222,92,4.106,94,5.183,96,4.545,97,3.119,98,3.867,99,3.408,101,2.71,102,4.939,103,4.106,104,6.575,105,4.106,106,4.106,545,2.004,546,2.553,547,3.702,3574,7.609,3575,8.508,3576,5.313,3577,5.313,3578,5.313,3579,5.313,3580,7.087]],["title/classes/SignatureData.html",[0,0.232,1207,3.582]],["body/classes/SignatureData.html",[0,0.433,2,1.01,3,0.069,4,0.061,5,0.061,10,0.161,11,0.48,14,2.033,18,0.27,19,0.006,20,0.426,23,0.552,34,0.207,36,0.086,57,4.296,72,2.217,83,0.004,84,0.004,117,1.612,121,1.838,155,1.391,227,2.619,228,2.699,229,1.731,231,3.53,232,1.757,356,3.024,361,3.2,373,3.157,650,1.917,998,3.855,1107,3.356,1204,4.709,1207,6.883,1272,6.619,1273,4.976,1303,5.867,1305,4.64,1322,5.311,1997,4.507,3269,5.759,3272,7.175,3273,5.759,3275,5.759,3277,7.175,3278,7.175,3581,6.439,3582,6.439]],["title/classes/SocialLink.html",[0,0.232,365,3.141]],["body/classes/SocialLink.html",[0,0.451,2,0.913,3,0.062,4,0.055,5,0.055,10,0.145,11,0.45,12,0.82,18,0.239,19,0.006,20,0.444,23,0.574,28,0.955,29,0.562,34,0.198,36,0.097,72,1.371,83,0.004,84,0.004,117,1.513,155,1.257,168,1.854,212,1.332,219,1.697,227,2.73,228,2.813,229,1.565,232,1.589,269,1.513,288,2.182,354,3.885,355,4.258,356,2.734,357,5.456,358,5.254,360,4.258,361,3.341,362,3.09,363,2.884,364,5.504,365,4.827,366,4.14,367,5.269,368,4.057,369,2.46,370,2.674,371,2.411,372,2.411,373,2.744,374,3.48,375,2.216,376,3.734,377,1.579,378,4.654,379,1.475,380,1.722,381,3.885,382,4.057,383,3.011,384,3.885,385,3.885,386,3.885,387,4.057,388,3.734,3583,7.526,3584,5.822,3585,5.822]],["title/classes/SocialLinkDto.html",[0,0.232,3586,4.04]],["body/classes/SocialLinkDto.html",[0,0.414,2,0.894,3,0.061,4,0.054,5,0.079,10,0.142,11,0.444,12,0.881,18,0.237,19,0.006,20,0.426,22,0.894,23,0.511,34,0.208,36,0.079,83,0.004,84,0.004,98,3.111,101,2.365,117,1.492,121,1.912,155,1.231,214,3.184,223,3.027,227,2.672,228,2.7,229,1.533,230,3.337,232,1.556,234,2.112,235,1.214,288,2.745,302,4.702,361,3.219,362,3.059,363,3.319,365,4.761,366,4.447,373,3.221,377,1.478,380,2.166,998,3.567,1034,4.523,1048,2.904,1138,2.457,1150,4.297,1318,4.169,1320,3.972,1326,3.804,1328,4.169,1380,3.804,1519,3.743,2003,2.874,2421,3.804,2841,6.632,3484,4.169,3586,6.809,3587,7.384,3588,5.099,3589,6.123,3590,5.701,3591,5.701,3592,6.759,3593,5.701,3594,5.701,3595,5.099,3596,4.702,3597,5.099,3598,4.169,3599,5.099,3600,5.099,3601,5.099,3602,5.099,3603,5.099,3604,4.406,3605,5.099,3606,5.099,3607,6.64,3608,4.169,3609,5.099,3610,5.099,3611,5.099]],["title/classes/SubmitTransactionDto.html",[0,0.232,1621,2.533]],["body/classes/SubmitTransactionDto.html",[0,0.436,2,0.696,3,0.047,4,0.042,5,0.042,10,0.111,11,0.375,12,0.734,18,0.268,19,0.006,20,0.44,23,0.542,29,0.604,34,0.172,36,0.095,62,1.338,83,0.003,84,0.003,117,1.584,121,1.935,123,2.511,138,2.434,140,2.01,144,3.737,155,0.958,170,2.634,212,1.433,219,1.637,222,1.643,227,2.714,228,2.797,229,1.193,230,3.543,231,3.193,232,1.21,234,2.688,235,1.77,249,2.24,269,1.782,288,2.571,332,1.951,361,3.131,362,2.688,363,2.726,369,1.874,373,3.291,375,1.844,377,1.299,379,1.586,380,1.66,446,2.183,463,2.037,619,1.326,642,2.235,650,1.734,652,4.875,656,2.094,671,2.642,751,3.788,754,2.755,755,2.165,757,2.876,758,3.902,759,3.081,760,2.183,809,3.252,1040,2.094,1048,3.084,1138,3.128,1592,2.743,1621,3.753,1633,2.743,1634,2.743,1983,2.96,1984,3.417,1985,2.421,1989,4.654,1990,2.845,1991,2.845,1992,2.845,1993,2.845,1996,4.178,1997,3.408,1998,4.178,1999,3.624,2000,2.96,2001,4.178,2002,4.178,2003,2.236,2004,2.845,2005,5.687,2006,4.586,2007,4.016,2008,2.845,2009,2.743,2010,4.178,2011,2.421,3505,3.428,3507,5.164,3612,3.967,3613,4.436,3614,4.436,3615,3.967,3616,4.436,3617,4.436]],["title/interfaces/SubmitTransactionParams.html",[640,1.105,2028,3.268]],["body/interfaces/SubmitTransactionParams.html",[0,0.109,3,0.025,4,0.022,5,0.022,10,0.12,11,0.227,12,0.682,15,0.983,18,0.243,19,0.006,20,0.421,22,0.968,29,0.465,30,0.383,31,0.997,34,0.21,35,0.49,36,0.075,37,1.419,49,0.796,54,1.035,55,2.458,58,1.161,59,1.133,61,1.496,62,1.44,64,0.901,66,1.454,76,0.668,78,2.009,83,0.002,84,0.002,97,2.716,100,1.509,101,1.206,123,2.234,138,2.414,140,2.102,141,1.333,144,1.035,146,0.954,151,0.476,158,2.372,161,1.293,168,0.734,169,2.341,170,1.94,174,3.063,177,2.803,178,1.702,180,1.354,209,0.81,212,1.412,214,1.378,216,0.918,219,1.087,222,0.853,232,0.628,234,1.786,235,1.189,236,0.932,239,1.6,241,1.778,249,2.208,252,1.883,254,2.066,256,1.107,262,1.333,265,1.161,269,0.969,272,1.632,274,2.425,276,1.632,281,1.293,285,1.696,288,1.098,292,1.191,312,1.922,315,1.586,317,2.56,328,3.909,332,2.273,338,0.699,341,1.586,342,2.064,348,2.185,370,1.739,372,3.034,375,2.234,377,1,379,1.922,380,0.866,438,1.293,462,0.711,463,1.058,545,0.869,558,1.424,559,1.246,613,2.981,619,1.67,622,1.424,628,1.257,629,1.191,640,1.497,641,0.869,642,0.619,644,1.886,645,1.223,646,1.333,648,1.293,649,1.293,650,1.813,656,2.538,659,1.376,665,1.223,666,1.223,667,1.223,668,1.223,671,2.553,673,2.882,677,1.477,696,1.223,702,0.973,749,2.037,750,0.901,751,1.819,753,2.126,754,2.458,755,2.425,756,1.161,757,1.739,758,2.458,759,1.863,760,1.133,793,1.058,805,1.333,809,2.743,835,1.819,897,1.424,987,2.359,1040,1.266,1103,1.424,1107,1.852,1126,2.428,1138,1.632,1153,1.376,1236,2.684,1287,1.191,1332,1.013,1378,1.424,1400,3.621,1401,4.191,1425,1.333,1463,2.631,1519,3.536,1524,1.191,1559,1.424,1562,1.223,1575,1.082,1576,1.058,1581,1.257,1587,3.112,1594,1.191,1605,2.01,1621,1.958,1623,2.431,1624,1.223,1635,1.537,1636,1.537,1637,1.376,1658,1.223,1661,1.702,1677,1.424,1696,1.537,1700,1.537,1702,3.217,1705,2.981,1706,2.898,1711,2.126,1712,3.112,1714,1.537,1716,1.424,1718,1.376,1774,2.01,1791,2.526,1801,1.424,1812,2.263,1815,1.376,1834,1.424,1837,1.293,1843,2.431,1845,1.333,1852,1.223,1859,1.191,1862,2.126,1863,1.293,1867,1.424,1896,1.293,1897,1.293,1901,2.898,1905,3.048,1930,2.372,1985,1.257,2003,1.161,2006,2.888,2011,1.257,2012,2.526,2013,1.333,2014,1.605,2015,2.263,2016,1.424,2017,1.424,2018,1.333,2019,1.333,2020,1.333,2021,2.965,2022,1.424,2023,2.428,2024,1.477,2025,1.605,2026,2.428,2027,1.605,2028,2.526,2029,1.605,2030,1.424,2031,1.376,2032,1.477,2033,1.424,2034,2.341,2035,1.376,2036,1.376,2037,1.376,2038,1.376,2039,1.376,2040,1.376,2041,1.424,2042,1.605,2043,1.537,2044,2.526,2045,1.537,2046,1.605,2047,2.638,2048,1.537,2049,1.605,2050,3.217,2051,1.537,2052,1.537,2053,1.537,2054,1.537,2055,1.537,2056,2.638,2057,1.424,2058,1.605,2059,1.424,2060,1.424,2061,3.217,2062,1.537,2063,1.537,2064,1.537,2065,1.537,2066,2.526,2067,1.537,2068,1.605,2069,1.605,2070,2.526,2071,4.624,2072,2.638,2073,3.36,2074,1.605,2075,1.605,2076,1.605,2077,1.605,2078,1.477,2079,3.626,2080,2.882,2081,2.263,2082,2.263,2083,2.882,2084,2.526,2085,2.526,2086,2.526,2087,2.066,2088,2.192,2089,2.638,2090,2.341,2091,2.341,2092,2.428,2093,3.338,2094,2.56,2095,2.882,2096,1.605,2097,1.257,2098,1.424,2099,2.066,2100,1.537,2101,1.537,2102,1.537,2103,1.605,2104,1.424,2105,1.333,2106,1.333,2107,1.376,2108,1.376,2109,1.376,2110,1.333,2111,1.605,2112,4.3,2113,2.638,2114,1.605,2115,1.133,2116,1.376,2117,1.605,2118,3.816,2119,1.605,2120,3.36,2121,1.376,2122,1.537,2123,1.605,2124,1.537,2125,1.605,2126,1.605,2127,1.537,2128,1.537,2129,1.605,2130,1.537,2131,1.605,2132,1.605,2133,1.605,2134,2.638,2135,2.341,2136,1.605,2137,2.638,2138,3.217,2139,4.624,2140,3.892,2141,3.892,2142,4.3,2143,2.526,2144,2.638,2145,2.526,2146,2.638,2147,2.526,2148,2.526,2149,2.638,2150,2.638,2151,2.638,2152,3.892,2153,2.638,2154,2.638,2155,1.605,2156,1.605,2157,1.376,2158,1.605,2159,2.638,2160,1.605,2161,2.638,2162,4.3,2163,1.605,2164,1.605,2165,1.605,2166,1.605,2167,1.605,2168,1.605,2169,1.605,2170,1.605,2171,1.477,2172,3.36,2173,1.605,2174,1.605,2175,1.477,2176,1.605,2177,1.605,2178,1.605,2179,1.605,2180,1.605,2181,1.133,2182,2.526,2183,2.341,2184,2.638,2185,1.376,2186,2.066,2187,1.605]],["title/classes/SubmitVaultTxDto.html",[0,0.232,2008,3.141]],["body/classes/SubmitVaultTxDto.html",[0,0.435,2,0.691,3,0.047,4,0.042,5,0.042,10,0.11,11,0.373,12,0.731,18,0.268,19,0.006,20,0.439,23,0.541,29,0.601,34,0.172,36,0.094,62,1.332,83,0.003,84,0.003,117,1.58,121,1.934,123,2.503,138,2.431,140,2.003,144,3.727,155,0.951,170,2.632,212,1.425,219,1.63,222,2.308,227,2.712,228,2.795,229,1.184,230,3.532,231,3.181,232,1.202,234,2.678,235,1.765,249,2.229,269,1.779,288,2.621,332,1.943,361,3.126,362,2.678,363,2.717,369,1.861,373,3.289,375,1.834,377,1.294,379,1.579,380,1.654,446,2.167,463,2.023,619,1.317,642,1.184,650,1.728,652,4.859,656,2.084,671,2.631,751,3.776,754,2.742,755,2.154,757,2.861,758,3.895,759,3.065,760,2.167,809,3.244,1040,2.084,1048,3.074,1138,3.116,1592,2.724,1621,4.576,1633,2.724,1634,2.724,1983,2.939,1984,3.4,1985,2.403,1989,4.636,1990,2.825,1991,2.825,1992,2.825,1993,2.825,1996,4.157,1997,3.395,1998,4.157,1999,3.606,2000,2.939,2001,4.157,2002,4.157,2003,2.221,2004,2.825,2005,5.676,2006,4.576,2007,3.996,2008,3.996,2009,3.852,2010,4.157,2011,2.403,2964,7.029,3505,3.404,3507,3.633,3612,3.939,3615,3.939,3618,4.405,3619,4.405,3620,4.405,3621,4.405,3622,4.405]],["title/classes/TagDto.html",[0,0.232,3623,4.381]],["body/classes/TagDto.html",[0,0.432,2,1.113,3,0.076,4,0.068,5,0.068,10,0.177,11,0.51,12,0.914,18,0.244,19,0.006,20,0.378,23,0.586,28,1.164,29,0.685,34,0.217,36,0.076,83,0.005,84,0.005,117,1.426,121,1.386,155,1.533,168,2.26,227,2.323,228,2.395,229,1.908,232,1.937,357,5.088,358,5.136,361,2.895,367,4.241,373,2.801,1048,2.776,1138,3.059,1997,3.999,2852,7.615,3623,7.615,3624,7.096,3625,8.514,3626,7.096]],["title/entities/TagEntity.html",[394,2.25,2700,3.582]],["body/entities/TagEntity.html",[0,0.388,3,0.071,4,0.064,5,0.064,10,0.167,11,0.491,12,0.913,18,0.255,19,0.006,20,0.411,23,0.611,34,0.211,35,1.421,36,0.071,40,2.743,62,1.808,65,2.531,73,2.232,78,1.716,83,0.004,84,0.004,101,2.951,117,1.785,222,3.039,228,2.307,229,1.794,235,1.746,269,1.911,394,3.066,396,3.748,401,4.127,406,5.072,421,5.261,423,4.127,424,4.281,473,3.284,2700,5.999,2856,5.97,3627,6.674,3628,6.674,3629,6.674,3630,6.674,3631,6.674,3632,6.674,3633,8.203,3634,6.674,3635,8.203,3636,8.203,3637,6.674,3638,8.203]],["title/controllers/TaptoolsController.html",[107,1.916,3639,4.04]],["body/controllers/TaptoolsController.html",[0,0.276,3,0.089,4,0.055,5,0.055,10,0.145,12,0.542,13,1.428,15,1.404,18,0.216,19,0.006,20,0.391,22,1.308,23,0.401,28,0.955,29,0.562,30,0.969,31,1.204,34,0.222,36,0.062,37,1.058,62,1.625,83,0.004,84,0.004,107,2.278,109,2.236,112,3.177,117,1.17,120,4.107,121,1.783,123,2.397,125,2.196,142,4.551,146,2.411,149,3.734,150,3.37,151,1.204,152,4.654,153,5.564,154,3.091,155,1.257,156,3.177,157,3.734,160,2.865,170,1.542,172,3.617,173,4.356,174,3.048,180,1.825,219,2.109,252,1.497,254,4.107,269,1.17,274,2.602,276,3.244,315,1.915,341,1.915,342,2.789,650,1.799,738,5.207,764,2.936,829,4.654,841,3.885,842,3.885,1141,6.448,1150,4.356,1305,3.996,1559,3.6,1706,2.734,2121,4.498,2713,3.885,3067,5.811,3147,4.258,3369,4.802,3412,5.207,3639,6.208,3640,5.822,3641,5.207,3642,6.731,3643,5.822,3644,5.822,3645,5.822,3646,5.822,3647,5.816,3648,5.207,3649,4.802,3650,5.207,3651,5.207,3652,5.822,3653,5.822,3654,5.822,3655,5.822,3656,5.822,3657,5.822,3658,5.822,3659,5.822,3660,5.822,3661,5.822]],["title/modules/TaptoolsModule.html",[189,1.694,3048,3.582]],["body/modules/TaptoolsModule.html",[0,0.331,3,0.075,4,0.067,5,0.067,19,0.006,34,0.232,36,0.075,62,1.289,83,0.005,84,0.005,109,3.241,151,1.447,189,3.134,191,3.213,192,3.213,193,3.361,194,3.361,195,3.285,196,4.356,197,4.356,203,4.056,204,3.361,205,3.213,207,3.441,208,3.617,209,2.46,212,1.931,213,3.713,216,2.788,217,4.667,3048,7.242,3067,7.105,3639,7.477,3651,6.256,3662,6.256,3663,6.256,3664,6.256,3665,6.994,3666,6.994]],["title/injectables/TaptoolsService.html",[236,1.205,3067,3.413]],["body/injectables/TaptoolsService.html",[0,0.093,3,0.021,4,0.019,5,0.019,10,0.049,11,0.199,12,0.765,13,0.63,15,1.4,18,0.218,19,0.006,20,0.408,21,1.169,22,1.29,23,0.557,28,1.125,29,0.662,30,1.229,31,1.768,34,0.18,35,0.419,36,0.021,37,1.47,49,0.68,52,3.296,53,3.444,62,1.4,66,1.275,72,1.015,83,0.002,84,0.002,100,1.323,121,0.841,123,1.801,146,2.096,151,0.407,159,0.992,160,0.968,168,1.057,169,2.885,170,2.143,172,4.06,174,0.68,177,2.83,180,2.072,209,0.692,212,2.103,213,1.044,216,0.784,219,2.063,222,1.596,223,1.044,234,0.729,235,0.707,236,0.817,237,0.848,239,2.138,240,1.622,241,3.066,243,3.329,245,2.215,252,2.197,254,1.073,256,0.945,257,1.261,258,1.312,259,1.312,260,1.261,265,0.992,267,1.37,268,1.37,269,1.233,270,1.312,274,2.469,276,1.431,280,4.926,285,2.648,294,1.622,310,1.622,315,2.349,317,1.044,332,1.649,334,1.438,336,1.52,338,1.537,341,2.349,342,1.891,356,2.655,369,1.82,372,1.375,375,1.922,377,1.098,379,1.091,380,0.76,383,1.017,429,2.763,462,1.024,514,2.215,535,2.428,559,1.092,619,0.588,644,1.299,650,0.47,656,2.706,671,1.842,673,3.024,684,4.174,747,1.922,762,3.15,776,3.272,781,3.55,784,1.984,795,2.85,963,1.759,966,4.739,983,1.261,1008,3.329,1009,3.329,1012,3.853,1013,3.853,1014,5.384,1015,4.663,1016,5.056,1017,1.622,1018,5.301,1019,5.657,1032,1.37,1033,1.312,1034,1.017,1035,1.37,1036,1.37,1037,1.312,1038,1.37,1039,1.175,1040,0.658,1107,0.755,1135,1.622,1138,0.848,1141,3.15,1148,1.37,1150,2.493,1152,1.52,1153,1.984,1164,2.738,1166,1.622,1172,1.759,1305,3.92,1308,3.553,1332,1.896,1340,1.622,1400,1.073,1405,1.438,1463,3.743,1489,5.058,1518,1.52,1519,0.992,1520,1.216,1661,2.756,1705,3.129,1706,3.862,1770,2.738,1779,1.759,1788,1.622,1799,4.663,1903,2.129,2003,0.992,2006,1.717,2078,1.261,2115,3.017,2135,1.216,2143,2.874,2157,1.175,2171,3.245,2175,2.763,2181,3.017,2198,3.701,2294,3.329,2382,3.329,2388,1.759,2411,2.969,2615,5.056,2764,1.759,3067,2.313,3142,4.174,3147,4.135,3183,1.759,3214,2.969,3233,1.622,3369,1.622,3417,1.759,3427,1.759,3641,2.969,3642,2.969,3647,2.566,3648,1.759,3649,1.622,3650,2.969,3667,1.967,3668,4.308,3669,5.056,3670,4.308,3671,4.308,3672,5.06,3673,3.32,3674,3.32,3675,3.32,3676,3.32,3677,3.32,3678,3.32,3679,1.967,3680,1.967,3681,1.967,3682,3.32,3683,1.967,3684,3.32,3685,1.967,3686,3.32,3687,8.222,3688,1.967,3689,3.32,3690,1.967,3691,3.32,3692,1.967,3693,3.32,3694,1.967,3695,3.32,3696,1.967,3697,3.32,3698,3.32,3699,1.967,3700,4.308,3701,3.32,3702,3.15,3703,1.967,3704,3.32,3705,1.967,3706,4.308,3707,1.759,3708,1.967,3709,1.759,3710,3.553,3711,1.967,3712,3.32,3713,3.32,3714,1.967,3715,4.308,3716,1.967,3717,4.308,3718,4.308,3719,1.967,3720,1.967,3721,1.967,3722,1.967,3723,3.32,3724,3.32,3725,6.132,3726,1.967,3727,4.308,3728,6.132,3729,5.06,3730,4.308,3731,1.967,3732,6.132,3733,3.32,3734,1.967,3735,1.967,3736,1.967,3737,3.32,3738,3.32,3739,3.32,3740,1.967,3741,1.967,3742,1.967,3743,1.967,3744,5.06,3745,6.132,3746,1.967,3747,3.32,3748,2.969,3749,3.32,3750,1.759,3751,4.308,3752,1.967,3753,3.32,3754,1.967,3755,3.32,3756,3.32,3757,4.663,3758,3.32,3759,1.967,3760,3.32,3761,1.967,3762,3.32,3763,3.32,3764,5.384,3765,3.32,3766,5.384,3767,3.32,3768,4.174,3769,4.174,3770,3.32,3771,5.06,3772,5.06,3773,3.32,3774,1.967,3775,4.526,3776,5.06,3777,4.308,3778,1.967,3779,1.967,3780,1.967,3781,1.967,3782,4.308,3783,1.967,3784,1.967,3785,1.967,3786,3.32,3787,1.967,3788,1.967,3789,3.32,3790,1.967,3791,1.967,3792,3.32,3793,1.967,3794,1.967,3795,1.967,3796,1.967,3797,1.967,3798,1.967,3799,1.967,3800,1.967,3801,1.967,3802,1.967,3803,1.967,3804,3.32,3805,1.967,3806,1.967,3807,3.32,3808,1.967,3809,3.32,3810,1.967,3811,1.967,3812,3.32,3813,1.967,3814,1.967,3815,1.967,3816,1.967,3817,1.967,3818,1.967,3819,1.967,3820,1.967,3821,1.967,3822,1.967,3823,1.967,3824,1.967,3825,1.967,3826,1.967,3827,1.967,3828,1.759,3829,1.967,3830,1.967,3831,1.967,3832,1.967,3833,3.32,3834,1.967,3835,1.967,3836,2.566,3837,1.967,3838,3.32,3839,1.967,3840,1.967,3841,1.759,3842,1.967,3843,3.32,3844,1.967,3845,1.967,3846,1.967,3847,1.967,3848,1.967,3849,1.967,3850,3.32,3851,1.967,3852,1.967,3853,1.759,3854,5.06,3855,1.967,3856,1.967,3857,5.653,3858,1.967,3859,3.32,3860,1.967,3861,1.967,3862,1.967,3863,1.967,3864,4.308,3865,4.308,3866,3.32,3867,3.32,3868,1.967,3869,1.967,3870,1.967,3871,1.967,3872,1.967,3873,1.967,3874,3.32,3875,1.967,3876,1.967,3877,1.967,3878,1.967]],["title/classes/TokenInfo.html",[0,0.232,2373,4.04]],["body/classes/TokenInfo.html",[0,0.407,2,0.974,3,0.066,4,0.059,5,0.059,10,0.155,11,0.469,12,0.73,18,0.247,19,0.006,20,0.422,21,1.285,23,0.591,34,0.186,36,0.084,83,0.004,84,0.004,117,1.728,121,1.925,155,1.341,212,1.795,227,2.71,232,1.695,235,1.322,269,1.728,272,2.677,285,1.886,288,1.801,361,3.166,362,3.185,363,2.712,369,3.313,375,2.531,377,1.539,379,1.574,380,1.421,559,2.043,619,2.785,650,1.874,656,2.875,772,4.328,998,4.131,1048,3.363,1236,4.475,1812,3.712,1906,3.488,2356,4.542,2357,8.076,2358,5.555,2359,4.8,2360,5.555,2361,5.555,2362,5.122,2363,5.122,2364,6.469,2365,5.122,2368,5.465,2369,5.122,2373,7.448,2377,4.8,2378,4.8,2381,7.015,2382,4.8,2383,5.233,3879,6.21,3880,6.21,3881,7.843,3882,6.21,3883,6.21]],["title/entities/Transaction.html",[138,1.241,394,2.25]],["body/entities/Transaction.html",[0,0.321,3,0.053,4,0.047,5,0.047,10,0.192,11,0.405,12,0.879,14,1.953,18,0.29,19,0.006,20,0.431,23,0.669,29,0.799,34,0.212,35,1.058,36,0.053,62,1.686,65,2.947,78,2.352,83,0.004,84,0.004,117,1.953,121,0.97,138,1.953,155,1.073,174,3.091,212,2.093,219,1.738,227,1.849,228,2.514,229,1.336,235,2.123,249,1.778,261,5.78,262,2.877,269,1.549,377,1.482,379,1.259,394,2.283,396,2.791,401,5.357,406,3.073,417,6.231,421,4.345,422,4.721,423,3.073,424,3.187,473,3.333,613,3.073,614,4.099,616,6.358,617,6.358,618,6.894,619,2.305,622,4.766,623,3.392,925,5.588,944,4.944,1048,1.944,1878,4.345,2020,5.014,3884,4.97,3885,6.775,3886,4.97,3887,4.445,3888,6.775,3889,4.97,3890,4.97,3891,4.97,3892,4.97,3893,4.97,3894,4.97,3895,4.97,3896,4.97,3897,4.97,3898,4.97,3899,4.97,3900,4.97,3901,4.97,3902,4.97,3903,4.97,3904,4.97,3905,4.97,3906,4.97,3907,4.97,3908,6.059,3909,6.059,3910,4.97,3911,4.97,3912,4.97,3913,4.97,3914,4.97]],["title/interfaces/TransactionBuildResponse.html",[640,1.105,756,2.47]],["body/interfaces/TransactionBuildResponse.html",[0,0.228,3,0.051,4,0.046,5,0.046,10,0.12,11,0.397,15,1.41,18,0.246,19,0.006,20,0.448,22,1.04,31,1.831,34,0.18,36,0.051,37,1.377,62,0.887,72,1.561,83,0.004,84,0.004,100,1.918,125,2.499,138,1.219,140,2.262,144,2.978,145,4.457,147,4.617,148,3.729,151,0.995,169,2.339,170,2.007,177,2.483,180,2.147,219,1.085,222,1.782,236,1.63,252,2.1,274,2.824,288,1.395,312,2.641,315,1.583,338,2.013,341,1.583,342,2.961,348,1.882,349,2.117,366,3.56,377,0.861,462,1.485,640,1.709,641,1.815,642,1.293,650,1.15,671,1.751,742,4.846,743,3.718,744,3.718,745,6.165,746,6.052,747,5.349,748,4.617,749,3.202,750,1.882,751,3.184,752,3.352,753,3.721,754,2.117,755,1.664,756,3.341,757,3.751,758,3.769,759,4.018,760,4.018,761,3.21,762,3.519,763,3.519,764,2.426,765,5.857,766,3.21,767,5.857,768,3.21,769,3.718,770,6.619,771,3.718,772,4.617,773,3.718,774,3.718,775,3.718,776,4.958,777,3.718,778,3.352,779,3.718,780,3.086,781,4.387,782,2.975,783,3.086,784,2.875,785,3.718,786,3.718,787,3.718,788,3.718,789,3.718,790,3.718,791,3.718,792,5.121,793,2.21,794,3.718,795,2.426,796,3.718,797,3.718,798,3.718,799,3.718,800,3.718,801,3.718,802,3.718,803,3.718,804,3.718,805,2.785,806,3.718,807,3.718,808,3.519,809,1.882,810,3.718]],["title/interfaces/TransactionBuildResponse-1.html",[379,1.034,640,0.92,756,2.057]],["body/interfaces/TransactionBuildResponse-1.html",[0,0.246,3,0.055,4,0.049,5,0.049,10,0.13,11,0.418,15,1.111,18,0.242,19,0.006,20,0.431,30,1.162,31,1.444,34,0.2,36,0.09,37,1.432,66,1.995,72,1.644,83,0.004,84,0.004,100,2.782,138,2.52,140,1.934,142,2.834,145,2.439,146,2.891,148,2.555,151,1.074,168,1.654,169,2.714,170,2.33,177,2.444,180,1.693,236,1.717,239,2.949,249,2.497,252,2.262,274,2.915,315,2.296,341,2.296,342,2.819,358,4.669,627,4.316,628,2.834,629,3.61,640,1.574,641,1.959,642,1.396,746,3.465,749,3.331,750,2.032,756,3.519,757,4.16,758,2.285,766,3.465,768,3.465,776,4.564,780,3.331,781,4.564,782,4.316,783,4.477,784,4.172,795,2.619,809,2.73,836,4.014,944,2.757,987,2.194,1107,2.681,1332,3.072,1412,3.211,1438,5.766,1524,2.686,1562,3.706,1587,3.519,1594,4.077,1596,4.014,1623,2.619,1624,3.706,1712,2.619,1826,4.014,1827,4.284,1828,4.284,1830,4.284,1832,4.284,1833,4.284,1834,3.211,1836,4.284,1837,2.917,1839,4.284,1841,5.394,1842,3.798,1843,2.619,1844,5.394,1845,3.006,1846,4.284,1847,4.284,1848,6.503,1849,4.284,1850,4.284,1851,4.284,1852,4.186,1853,4.284,1854,4.284,1855,4.284,1856,4.014,1857,4.284,1858,4.014,1859,3.61,1860,4.014,1861,4.284,1862,2.917,1863,2.917,1864,6.503,1865,3.331,1866,4.284,1867,3.211]],["title/interfaces/TransactionBuildResponse-2.html",[640,0.92,756,2.057,793,1.874]],["body/interfaces/TransactionBuildResponse-2.html",[0,0.109,3,0.024,4,0.022,5,0.022,10,0.12,11,0.226,12,0.681,15,0.981,18,0.246,19,0.006,20,0.424,22,0.967,29,0.222,30,0.382,31,0.996,34,0.21,35,0.489,36,0.075,37,1.418,49,0.794,54,1.032,55,2.454,58,1.158,59,1.13,61,1.494,62,1.439,64,0.898,66,1.451,76,0.666,78,2.007,83,0.002,84,0.002,97,2.712,100,1.506,101,1.203,123,1.776,138,2.386,140,2.263,141,1.33,144,1.032,146,0.951,151,0.475,158,2.368,161,1.29,168,0.732,169,2.339,170,1.938,174,3.061,177,2.802,178,1.698,180,1.352,209,0.808,212,1.41,214,1.375,216,0.915,219,1.085,222,0.851,232,0.627,234,1.783,235,1.187,236,0.93,239,1.596,241,1.774,249,2.205,252,1.882,254,2.062,256,1.104,262,1.33,265,1.158,269,0.967,272,1.629,274,2.422,276,1.629,281,1.29,285,1.694,288,1.095,292,1.188,312,1.918,315,1.583,317,2.555,328,3.906,332,2.271,338,0.698,341,1.583,342,2.061,348,2.181,370,1.735,372,3.031,375,2.232,377,0.998,379,1.921,380,0.864,438,1.29,462,0.709,463,1.055,545,0.866,558,1.42,559,1.243,613,2.976,619,1.668,622,1.42,628,1.253,629,1.188,640,1.495,641,0.866,642,0.617,644,1.883,645,1.219,646,1.33,648,1.29,649,1.29,650,1.812,656,2.535,659,1.373,665,1.219,666,1.219,667,1.219,668,1.219,671,2.55,673,2.876,677,1.473,696,1.219,702,0.97,749,2.033,750,0.898,751,1.816,753,2.122,754,2.454,755,2.422,756,1.905,757,2.831,758,2.454,759,3.032,760,2.744,793,1.055,805,1.33,809,2.181,835,1.816,897,1.42,987,2.356,1040,1.264,1103,1.42,1107,1.848,1126,2.423,1138,1.629,1153,1.373,1236,2.68,1287,1.188,1332,1.011,1378,1.42,1400,3.617,1401,4.186,1425,1.33,1463,2.626,1519,3.532,1524,1.188,1559,1.42,1562,1.219,1575,1.079,1576,1.055,1581,1.253,1587,3.107,1594,1.188,1605,2.006,1621,1.954,1623,2.427,1624,1.219,1635,1.533,1636,1.533,1637,1.373,1658,1.219,1661,1.698,1677,1.42,1696,1.533,1700,1.533,1702,3.211,1705,2.976,1706,2.894,1711,2.122,1712,3.107,1714,1.533,1716,1.42,1718,1.373,1774,2.006,1791,2.521,1801,1.42,1812,2.258,1815,1.373,1834,1.42,1837,1.29,1843,2.427,1845,1.33,1852,1.219,1859,1.188,1862,2.122,1863,1.29,1867,1.42,1896,1.29,1897,1.29,1901,2.894,1905,3.043,1930,2.368,1985,1.253,2003,1.158,2006,2.884,2011,1.253,2012,2.521,2013,1.33,2014,1.6,2015,2.258,2016,1.42,2017,1.42,2018,1.33,2019,1.33,2020,1.33,2021,2.96,2022,1.42,2023,2.423,2024,1.473,2025,1.6,2026,2.423,2027,1.6,2028,1.533,2029,1.6,2030,1.42,2031,1.373,2032,1.473,2033,1.42,2034,2.336,2035,1.373,2036,1.373,2037,1.373,2038,1.373,2039,1.373,2040,1.373,2041,1.42,2042,1.6,2043,1.533,2044,2.521,2045,1.533,2046,1.6,2047,2.633,2048,1.533,2049,1.6,2050,3.211,2051,1.533,2052,1.533,2053,1.533,2054,1.533,2055,1.533,2056,2.633,2057,1.42,2058,1.6,2059,1.42,2060,1.42,2061,3.211,2062,1.533,2063,1.533,2064,1.533,2065,1.533,2066,2.521,2067,1.533,2068,1.6,2069,1.6,2070,2.521,2071,4.618,2072,2.633,2073,3.354,2074,1.6,2075,1.6,2076,1.6,2077,1.6,2078,1.473,2079,3.622,2080,2.876,2081,2.258,2082,2.258,2083,2.876,2084,2.521,2085,2.521,2086,2.521,2087,2.062,2088,2.187,2089,2.633,2090,2.336,2091,2.336,2092,2.423,2093,3.333,2094,2.555,2095,2.876,2096,1.6,2097,1.253,2098,1.42,2099,2.062,2100,1.533,2101,1.533,2102,1.533,2103,1.6,2104,1.42,2105,1.33,2106,1.33,2107,1.373,2108,1.373,2109,1.373,2110,1.33,2111,1.6,2112,4.294,2113,2.633,2114,1.6,2115,1.13,2116,1.373,2117,1.6,2118,3.811,2119,1.6,2120,3.354,2121,1.373,2122,1.533,2123,1.6,2124,1.533,2125,1.6,2126,1.6,2127,1.533,2128,1.533,2129,1.6,2130,1.533,2131,1.6,2132,1.6,2133,1.6,2134,2.633,2135,2.336,2136,1.6,2137,2.633,2138,3.211,2139,4.618,2140,3.886,2141,3.886,2142,4.294,2143,2.521,2144,2.633,2145,2.521,2146,2.633,2147,2.521,2148,2.521,2149,2.633,2150,2.633,2151,2.633,2152,3.886,2153,2.633,2154,2.633,2155,1.6,2156,1.6,2157,1.373,2158,1.6,2159,2.633,2160,1.6,2161,2.633,2162,4.294,2163,1.6,2164,1.6,2165,1.6,2166,1.6,2167,1.6,2168,1.6,2169,1.6,2170,1.6,2171,1.473,2172,3.354,2173,1.6,2174,1.6,2175,1.473,2176,1.6,2177,1.6,2178,1.6,2179,1.6,2180,1.6,2181,1.13,2182,2.521,2183,2.336,2184,2.633,2185,1.373,2186,2.062,2187,1.6]],["title/classes/TransactionBuildResponseDto.html",[0,0.232,1633,3.029]],["body/classes/TransactionBuildResponseDto.html",[0,0.436,2,0.697,3,0.047,4,0.042,5,0.042,10,0.111,11,0.375,12,0.734,18,0.268,19,0.006,20,0.44,23,0.543,34,0.172,36,0.095,62,1.156,83,0.003,84,0.003,117,1.586,121,1.936,123,1.997,138,2.415,140,2.392,144,3.265,155,0.96,170,2.663,212,1.435,219,1.638,227,2.714,228,2.797,229,1.195,230,3.546,231,3.197,232,1.213,234,2.691,235,1.771,249,2.243,269,1.672,288,2.413,332,1.953,361,3.133,362,2.691,363,2.728,369,1.878,373,3.292,375,1.846,377,1.301,379,1.589,380,1.662,446,2.187,463,2.88,619,1.329,642,2.237,650,1.736,652,4.879,656,2.097,671,2.645,751,3.792,754,2.759,755,2.168,757,3.822,758,3.987,759,4.094,760,3.574,809,2.453,1040,1.486,1048,3.087,1138,3.132,1592,2.748,1621,3.242,1633,3.877,1634,2.748,1983,2.966,1984,3.422,1985,2.425,1989,4.021,1990,2.851,1991,2.851,1992,2.851,1993,2.851,1996,4.184,1997,3.412,1998,4.184,1999,3.629,2000,2.966,2001,4.184,2002,4.184,2003,2.241,2004,2.851,2005,5.537,2006,4.686,2007,4.021,2008,2.851,2009,2.748,2010,4.184,2011,3.422,3915,7.265,3916,4.445,3917,4.445,3918,4.445,3919,4.445,3920,4.445]],["title/classes/TransactionModelFix1743089378621.html",[0,0.232,3921,4.381]],["body/classes/TransactionModelFix1743089378621.html",[0,0.236,2,0.783,3,0.053,4,0.048,5,0.048,8,2.165,9,2.542,10,0.125,11,0.407,12,0.808,13,1.289,14,2.268,15,1.425,16,2.236,17,2.236,18,0.287,19,0.006,20,0.222,21,1.406,22,0.783,23,0.532,25,2.236,26,3.11,28,1.115,29,0.656,30,1.131,31,1.716,32,2.236,34,0.119,35,1.063,36,0.053,37,1.838,38,2.994,39,3.199,40,3.117,41,2.519,42,3.161,43,2.82,44,2.82,45,5.971,46,3.708,48,3.268,49,2.671,50,3.858,51,3.651,52,2.399,55,2.197,56,3.651,57,3.331,61,2.011,63,3.17,64,2.658,65,2.097,66,2.61,68,4.169,70,2.642,71,2.774,72,2.044,73,2.273,74,2.774,75,2.311,76,2.405,77,2.6,78,1.747,79,2.273,80,2.774,83,0.004,84,0.004,93,4.202,100,1.99,101,2.165,174,1.726,269,1.366,327,3.651,338,1.516,371,3.2,439,4.102,446,2.456,462,2.762,544,3.858,550,3.858,613,3.087,614,4.118,615,2.517,620,4.97,622,3.087,623,2.197,624,6.91,626,4.465,627,3.087,628,2.724,629,2.582,635,4.465,636,4.465,639,3.651,2440,7.418,2441,6.078,2442,5.605,2443,5.605,3921,7.418,3922,8.294,3923,4.992,3924,4.992,3925,4.992,3926,4.992,3927,4.992,3928,4.992,3929,4.992,3930,8.294,3931,4.992,3932,4.992]],["title/classes/TransactionOutput.html",[0,0.232,652,3.029]],["body/classes/TransactionOutput.html",[0,0.436,2,0.699,3,0.047,4,0.042,5,0.042,10,0.111,11,0.376,12,0.735,18,0.271,19,0.006,20,0.434,23,0.5,29,0.834,34,0.173,36,0.095,62,1.157,83,0.003,84,0.003,117,1.462,121,1.936,123,2,138,2.335,140,2.015,144,3.269,155,0.962,170,2.651,212,1.437,219,2.002,222,1.65,225,2.754,227,2.715,228,2.798,229,1.197,230,3.55,231,3.2,232,1.215,234,2.694,235,1.773,249,2.246,269,1.674,288,2.574,332,1.955,361,3.134,362,2.694,363,2.731,369,1.882,373,3.283,375,1.849,377,1.414,379,1.591,380,1.905,446,2.191,463,2.046,619,1.878,642,2.123,650,2.065,652,5.149,656,2.1,671,3.232,751,4.001,754,2.763,755,2.171,757,2.884,758,3.664,759,3.089,760,2.191,809,2.456,1040,1.49,1048,2.845,1138,3.589,1592,2.754,1621,3.247,1633,2.754,1634,2.754,1983,2.972,1984,3.969,1985,2.43,1989,4.027,1990,2.856,1991,2.856,1992,2.856,1993,2.856,1996,4.19,1997,3.416,1998,4.19,1999,3.635,2000,4.19,2001,4.19,2002,5.269,2003,3.166,2004,2.856,2005,5.541,2006,4.306,2007,4.027,2008,2.856,2009,2.754,2010,4.19,2011,2.43,3933,4.454,3934,4.454,3935,4.454,3936,4.454,3937,4.454,3938,4.454]],["title/interfaces/TransactionSubmitResponse.html",[640,1.105,1845,2.835]],["body/interfaces/TransactionSubmitResponse.html",[0,0.248,3,0.056,4,0.05,5,0.05,10,0.131,11,0.42,15,1.118,18,0.227,19,0.006,20,0.424,30,1.168,31,1.452,34,0.201,36,0.09,37,1.438,66,2.011,72,1.653,83,0.004,84,0.004,100,2.798,138,2.522,140,1.945,142,2.858,145,2.46,146,2.907,148,2.577,151,1.083,168,1.668,169,2.721,170,2.336,177,2.453,180,1.702,236,1.727,239,2.965,249,3.155,252,2.268,274,2.925,315,2.309,341,2.309,342,2.829,358,3.727,627,4.34,628,2.858,629,3.63,640,1.583,641,1.975,642,1.408,746,3.494,749,3.345,750,2.049,756,2.64,757,3.636,758,2.305,766,3.494,768,3.494,776,4.583,780,3.359,781,4.583,782,4.34,783,4.502,784,4.195,795,2.64,809,2.746,836,4.047,944,2.78,987,2.212,1107,2.696,1332,3.089,1412,3.238,1438,5.79,1524,2.708,1562,3.727,1587,3.539,1594,4.094,1596,4.047,1623,2.64,1624,3.727,1712,2.64,1826,4.047,1827,4.32,1828,4.32,1830,4.32,1832,4.32,1833,4.32,1834,3.238,1836,4.32,1837,2.941,1839,4.32,1841,5.425,1842,3.83,1843,2.64,1844,5.425,1845,4.063,1846,4.32,1847,4.32,1848,6.53,1849,4.32,1850,4.32,1851,4.32,1852,4.203,1853,4.32,1854,4.32,1855,4.32,1856,4.047,1857,4.32,1858,4.047,1859,3.63,1860,4.047,1861,4.32,1862,2.941,1863,2.941,1864,6.53,1865,3.359,1866,4.32,1867,3.238]],["title/interfaces/TransactionSubmitResponse-1.html",[379,1.034,640,0.92,1845,2.361]],["body/interfaces/TransactionSubmitResponse-1.html",[0,0.11,3,0.025,4,0.022,5,0.022,10,0.121,11,0.228,12,0.684,15,0.987,18,0.235,19,0.006,20,0.415,22,0.973,29,0.224,30,0.387,31,1.003,34,0.211,35,0.494,36,0.075,37,1.423,49,0.803,54,1.044,55,2.47,58,1.171,59,1.143,61,1.503,62,1.444,64,0.908,66,1.464,76,0.673,78,2.014,83,0.002,84,0.002,97,2.728,100,1.52,101,1.214,123,1.788,138,2.39,140,2.108,141,1.344,144,1.044,146,0.962,151,0.48,158,2.386,161,1.304,168,0.74,169,2.348,170,1.947,174,3.068,177,2.806,178,1.714,180,1.361,209,0.817,212,1.418,214,1.388,216,0.926,219,1.094,222,0.86,232,0.634,234,1.797,235,1.195,236,0.938,239,1.611,241,1.791,249,2.629,252,1.89,254,2.08,256,1.116,262,1.344,265,1.171,269,0.975,272,1.644,274,2.434,276,1.644,281,1.304,285,1.705,288,1.105,292,1.201,312,1.933,315,1.596,317,2.575,328,3.918,332,2.278,338,0.705,341,1.596,342,2.073,348,2.196,370,1.751,372,3.044,375,2.241,377,1.005,379,1.928,380,0.872,438,1.304,462,0.717,463,1.067,545,0.876,558,1.436,559,1.254,613,2.999,619,1.679,622,1.436,628,1.267,629,1.201,640,1.503,641,0.876,642,0.624,644,1.897,645,1.233,646,1.344,648,1.304,649,1.304,650,1.819,656,2.545,659,1.388,665,1.233,666,1.233,667,1.233,668,1.233,671,2.562,673,2.899,677,1.489,696,1.233,702,0.981,749,2.049,750,0.908,751,1.832,753,2.141,754,2.47,755,2.434,756,1.171,757,1.751,758,2.47,759,1.876,760,1.143,793,1.067,805,1.344,809,2.196,835,1.832,897,1.436,987,2.372,1040,1.275,1103,1.436,1107,1.863,1126,2.445,1138,1.644,1153,1.388,1236,2.698,1287,1.201,1332,1.022,1378,1.436,1400,3.636,1401,4.207,1425,1.344,1463,2.647,1519,3.549,1524,1.201,1559,1.436,1562,1.233,1575,1.091,1576,1.067,1581,1.267,1587,3.126,1594,1.201,1605,2.024,1621,1.972,1623,2.445,1624,1.233,1635,1.55,1636,1.55,1637,1.388,1658,1.233,1661,1.714,1677,1.436,1696,1.55,1700,1.55,1702,3.236,1705,2.999,1706,2.912,1711,2.141,1712,3.126,1714,1.55,1716,1.436,1718,1.388,1774,2.024,1791,2.544,1801,1.436,1812,2.279,1815,1.388,1834,1.436,1837,1.304,1843,2.445,1845,2.207,1852,1.233,1859,1.201,1862,2.141,1863,1.304,1867,1.436,1896,1.304,1897,1.304,1901,2.912,1905,3.063,1930,2.386,1985,1.267,2003,1.171,2006,2.903,2011,1.267,2012,2.544,2013,1.344,2014,1.618,2015,2.279,2016,1.436,2017,1.436,2018,1.344,2019,1.344,2020,1.344,2021,2.98,2022,1.436,2023,2.445,2024,1.489,2025,1.618,2026,2.445,2027,1.618,2028,1.55,2029,1.618,2030,1.436,2031,1.388,2032,1.489,2033,1.436,2034,2.358,2035,1.388,2036,1.388,2037,1.388,2038,1.388,2039,1.388,2040,1.388,2041,1.436,2042,1.618,2043,1.55,2044,2.544,2045,1.55,2046,1.618,2047,2.657,2048,1.55,2049,1.618,2050,3.236,2051,1.55,2052,1.55,2053,1.55,2054,1.55,2055,1.55,2056,2.657,2057,1.436,2058,1.618,2059,1.436,2060,1.436,2061,3.236,2062,1.55,2063,1.55,2064,1.55,2065,1.55,2066,2.544,2067,1.55,2068,1.618,2069,1.618,2070,2.544,2071,4.643,2072,2.657,2073,3.38,2074,1.618,2075,1.618,2076,1.618,2077,1.618,2078,1.489,2079,3.64,2080,2.899,2081,2.279,2082,2.279,2083,2.899,2084,2.544,2085,2.544,2086,2.544,2087,2.08,2088,2.207,2089,2.657,2090,2.358,2091,2.358,2092,2.445,2093,3.355,2094,2.575,2095,2.899,2096,1.618,2097,1.267,2098,1.436,2099,2.08,2100,1.55,2101,1.55,2102,1.55,2103,1.618,2104,1.436,2105,1.344,2106,1.344,2107,1.388,2108,1.388,2109,1.388,2110,1.344,2111,1.618,2112,4.32,2113,2.657,2114,1.618,2115,1.143,2116,1.388,2117,1.618,2118,3.833,2119,1.618,2120,3.38,2121,1.388,2122,1.55,2123,1.618,2124,1.55,2125,1.618,2126,1.618,2127,1.55,2128,1.55,2129,1.618,2130,1.55,2131,1.618,2132,1.618,2133,1.618,2134,2.657,2135,2.358,2136,1.618,2137,2.657,2138,3.236,2139,4.643,2140,3.912,2141,3.912,2142,4.32,2143,2.544,2144,2.657,2145,2.544,2146,2.657,2147,2.544,2148,2.544,2149,2.657,2150,2.657,2151,2.657,2152,3.912,2153,2.657,2154,2.657,2155,1.618,2156,1.618,2157,1.388,2158,1.618,2159,2.657,2160,1.618,2161,2.657,2162,4.32,2163,1.618,2164,1.618,2165,1.618,2166,1.618,2167,1.618,2168,1.618,2169,1.618,2170,1.618,2171,1.489,2172,3.38,2173,1.618,2174,1.618,2175,1.489,2176,1.618,2177,1.618,2178,1.618,2179,1.618,2180,1.618,2181,1.143,2182,2.544,2183,2.358,2184,2.657,2185,1.388,2186,2.08,2187,1.618]],["title/classes/TransactionSubmitResponseDto.html",[0,0.232,1634,3.029]],["body/classes/TransactionSubmitResponseDto.html",[0,0.442,2,0.739,3,0.05,4,0.045,5,0.045,10,0.118,11,0.391,12,0.753,18,0.259,19,0.006,20,0.438,23,0.324,34,0.178,36,0.096,62,1.204,83,0.004,84,0.004,117,0.947,121,1.949,123,2.081,138,2.395,140,2.242,144,3.37,155,1.018,170,2.634,212,1.495,219,1.691,227,2.732,228,2.815,229,1.267,230,3.638,231,3.299,232,1.286,234,2.777,235,1.81,249,3.041,269,1.709,288,2.465,332,2.015,361,3.174,362,2.777,363,2.799,369,1.991,373,3.283,375,1.923,377,1.342,379,1.655,380,1.715,446,2.319,463,2.165,619,1.409,642,1.756,650,1.792,652,5.005,656,2.185,671,2.729,751,3.89,754,2.875,755,2.259,757,3,758,3.741,759,3.214,760,2.319,809,2.555,1040,1.576,1048,1.844,1138,3.232,1592,2.914,1621,3.378,1633,2.914,1634,4.039,1983,3.144,1984,3.564,1985,2.572,1989,4.189,1990,3.022,1991,3.022,1992,3.022,1993,3.022,1996,4.358,1997,3.521,1998,4.358,1999,3.781,2000,3.144,2001,4.358,2002,4.358,2003,2.376,2004,3.022,2005,5.641,2006,4.396,2007,4.189,2008,3.022,2009,2.914,2010,4.358,2011,2.572,3939,4.713,3940,4.713]],["title/controllers/TransactionsController.html",[107,1.916,3941,4.04]],["body/controllers/TransactionsController.html",[0,0.292,3,0.066,4,0.059,5,0.059,10,0.154,12,0.575,13,1.483,15,1.568,18,0.177,19,0.006,20,0.38,23,0.59,28,1.013,29,0.596,30,1.427,34,0.214,36,0.066,64,3.636,83,0.004,84,0.004,107,2.416,109,2.372,112,3.37,117,1.723,125,3.234,138,2.283,140,2.165,146,2.558,150,3.575,151,1.277,152,5.572,154,3.279,155,1.334,156,3.37,157,3.961,158,4.218,160,4.434,170,1.636,172,4.12,173,3.575,180,2.303,214,3.28,249,2.796,462,2.645,642,2.423,764,3.114,1405,5.715,1661,3.512,3233,6.446,3296,6.99,3941,6.446,3942,6.175,3943,9.011,3944,9.011,3945,6.99,3946,6.175,3947,7.432,3948,6.175,3949,6.175,3950,6.175,3951,5.523,3952,6.175,3953,6.175,3954,5.523,3955,6.175,3956,6.175,3957,6.175,3958,6.175,3959,6.175,3960,6.175,3961,6.175,3962,6.175,3963,6.175]],["title/modules/TransactionsModule.html",[189,1.694,202,2.927]],["body/modules/TransactionsModule.html",[0,0.327,3,0.074,4,0.066,5,0.066,19,0.006,34,0.234,36,0.074,62,1.544,83,0.005,84,0.005,109,3.217,138,1.75,151,1.429,158,5.009,160,3.398,189,3.117,191,3.172,192,3.172,193,3.319,194,3.319,195,3.243,196,4.332,197,4.332,202,5.903,203,4.025,204,3.319,205,3.172,207,3.398,208,3.571,209,2.429,212,1.916,213,3.667,216,2.753,642,1.857,1091,4.429,3317,6.177,3941,7.436,3954,6.177,3964,6.177,3965,6.177,3966,6.177,3967,6.906,3968,6.906]],["title/injectables/TransactionsService.html",[158,2.41,236,1.205]],["body/injectables/TransactionsService.html",[0,0.156,3,0.035,4,0.031,5,0.031,10,0.082,12,0.854,13,0.956,15,1.603,18,0.28,19,0.006,20,0.445,23,0.632,28,1.506,29,0.886,30,1.528,31,2.027,34,0.198,35,0.702,36,0.035,37,1.55,61,1.658,62,1.604,64,1.291,78,1.758,83,0.003,84,0.003,115,3.892,121,0.644,123,2.859,124,4.562,138,2.348,140,0.914,146,1.366,151,0.682,158,2.478,160,4.559,168,1.604,169,1.885,170,1.618,174,3.103,177,2.524,180,2.203,209,1.16,212,1.398,213,1.752,216,1.315,219,1.661,236,1.239,237,1.422,241,4.087,243,4.721,245,4.076,249,3.052,252,1.571,254,1.8,256,1.585,258,2.201,261,4.913,265,1.663,267,2.299,268,2.299,269,1.934,270,4.562,274,2.112,276,3.174,285,1.002,314,2.721,340,2.721,345,2.413,377,0.591,379,0.836,462,1.885,503,4.992,616,2.721,617,2.721,619,1.506,623,2.216,642,2.491,650,1.634,726,5.387,818,2.42,1091,2.116,1107,1.267,1134,2.721,1154,2.55,1164,2.721,1166,2.721,1179,2.951,1180,2.951,2020,5.038,2043,2.201,2130,3.36,2147,2.201,2252,4.505,2255,4.505,2274,2.951,2277,4.154,2289,2.721,2301,6.115,2308,7.221,2309,2.721,3370,3.892,3945,4.505,3951,4.505,3969,3.299,3970,5.037,3971,5.037,3972,5.037,3973,5.037,3974,5.037,3975,5.037,3976,5.037,3977,5.464,3978,5.037,3979,5.037,3980,3.299,3981,5.037,3982,3.299,3983,5.037,3984,3.299,3985,5.037,3986,3.299,3987,3.299,3988,5.037,3989,3.299,3990,5.037,3991,5.037,3992,3.299,3993,5.037,3994,3.299,3995,5.037,3996,3.299,3997,5.037,3998,3.299,3999,3.299,4000,3.299,4001,5.037,4002,3.299,4003,5.037,4004,3.299,4005,5.037,4006,3.299,4007,3.299,4008,3.299,4009,3.299,4010,3.299,4011,3.299,4012,3.299,4013,3.299,4014,3.299,4015,3.299,4016,3.299,4017,3.299,4018,3.299,4019,5.037,4020,5.037,4021,3.299,4022,3.299,4023,3.299,4024,5.037,4025,3.299,4026,3.299,4027,3.299,4028,3.299]],["title/classes/TxUpdateReq.html",[0,0.232,136,4.04]],["body/classes/TxUpdateReq.html",[0,0.442,2,1.178,3,0.08,4,0.071,5,0.071,10,0.188,11,0.527,18,0.216,19,0.006,20,0.391,23,0.517,34,0.209,36,0.08,83,0.005,84,0.005,110,4.044,117,1.51,136,7.263,228,2.476,229,2.019,232,2.05,249,3.342,1997,4.135,4029,7.51,4030,7.51,4031,7.51]],["title/classes/UpdateFieldsType1741946649594.html",[0,0.232,4032,4.381]],["body/classes/UpdateFieldsType1741946649594.html",[0,0.259,2,0.86,3,0.058,4,0.052,5,0.052,8,2.304,9,2.664,10,0.137,11,0.433,12,0.833,13,1.373,14,2.33,15,1.464,16,2.38,17,2.38,18,0.232,19,0.006,20,0.243,21,1.134,22,0.86,23,0.557,25,2.38,26,3.169,28,1.186,29,0.698,30,1.204,31,1.782,32,2.38,34,0.13,35,1.167,36,0.058,37,1.826,38,3.299,39,3.306,40,3.184,41,2.891,42,3.184,43,2.928,44,2.928,48,2.978,61,2.088,63,2.928,65,2.657,70,3.032,71,2.88,72,2.028,73,2.419,74,2.88,75,2.46,76,2.497,77,2.7,78,1.86,79,2.419,80,2.88,83,0.004,84,0.004,101,3.032,545,2.728,546,3.476,547,5.041,604,5.967,2222,6.656,2223,7.103,4032,7.703,4033,8.612,4034,5.48,4035,5.48,4036,5.48,4037,5.48]],["title/classes/UpdateProfileDto.html",[0,0.232,3598,3.582]],["body/classes/UpdateProfileDto.html",[0,0.39,2,0.769,3,0.052,4,0.047,5,0.082,10,0.122,11,0.402,12,0.848,18,0.27,19,0.006,20,0.423,22,1.053,23,0.627,29,0.936,34,0.195,36,0.072,83,0.004,84,0.004,98,3.663,101,2.622,117,1.832,121,1.893,155,1.059,214,3.379,222,1.816,223,3.564,227,2.599,228,2.611,229,1.318,230,3.017,232,1.338,234,1.816,235,1.044,288,2.847,302,5.537,361,3.1,362,2.836,363,3.209,365,4.909,366,4.181,373,3.23,377,1.594,380,2.086,998,3.226,1034,4.8,1048,3.566,1138,2.894,1150,4.765,1318,5.598,1320,5.334,1326,5.107,1328,5.598,1380,4.479,1519,4.15,2003,3.384,2421,4.479,2841,6.02,2913,7.362,3484,5.598,3505,3.789,3586,5.537,3587,8.302,3588,4.385,3589,4.044,3592,6.663,3595,4.385,3596,4.044,3597,4.385,3598,4.909,3599,6.004,3600,6.004,3601,6.004,3602,6.004,3603,6.004,3604,5.188,3605,6.004,3606,6.004,3607,7.362,3608,4.909,3609,6.004,3610,6.004,3611,6.004,4038,4.903,4039,4.903,4040,4.903,4041,4.903,4042,4.903,4043,4.903,4044,6.713,4045,4.903,4046,4.903]],["title/classes/UpdateRelationto1742209228422.html",[0,0.232,4047,4.381]],["body/classes/UpdateRelationto1742209228422.html",[0,0.26,2,0.863,3,0.059,4,0.052,5,0.052,8,2.31,9,2.669,10,0.137,11,0.434,12,0.834,13,1.376,14,2.333,15,1.466,16,2.386,17,2.386,18,0.233,19,0.006,20,0.244,21,1.138,22,0.863,23,0.558,25,2.386,26,3.171,28,1.189,29,0.7,30,1.207,31,1.784,32,2.386,34,0.131,35,1.171,36,0.059,37,1.826,38,3.301,39,3.307,40,3.186,41,2.894,42,3.186,43,2.933,44,2.933,48,2.982,61,2.091,63,2.933,65,2.661,70,3.035,71,2.884,72,2.031,73,2.425,74,2.884,75,2.466,76,2.501,77,2.704,78,1.865,79,2.425,80,2.884,83,0.004,84,0.004,101,3.035,371,2.278,439,2.92,481,5.203,2473,6.486,4047,7.714,4048,8.625,4049,5.5,4050,5.5,4051,5.5,4052,5.5,4053,7.252,4054,7.252,4055,7.252]],["title/classes/UpdateType1742819100112.html",[0,0.232,4056,4.381]],["body/classes/UpdateType1742819100112.html",[0,0.281,2,0.93,3,0.063,4,0.056,5,0.056,8,2.424,9,2.766,10,0.148,11,0.456,12,0.854,13,1.444,14,2.38,15,1.496,16,2.504,17,2.504,18,0.241,19,0.006,20,0.263,21,1.226,22,0.93,23,0.579,25,2.504,26,3.216,28,1.248,29,0.735,30,1.267,31,1.836,32,2.504,34,0.141,35,1.261,36,0.063,37,1.758,38,2.968,39,3.184,40,3.236,41,2.695,42,3.236,43,3.017,44,3.017,48,3.068,61,2.152,63,3.017,70,2.827,71,2.968,72,2.09,73,2.545,74,2.968,75,2.588,76,2.573,77,2.782,78,1.957,79,2.545,80,2.968,83,0.004,84,0.004,4056,7.937,4057,8.874,4058,5.925,4059,5.925,4060,5.925,4061,5.925]],["title/classes/UpdateTypes1746532933340.html",[0,0.232,4062,4.381]],["body/classes/UpdateTypes1746532933340.html",[0,0.27,2,0.893,3,0.061,4,0.054,5,0.054,8,2.363,9,2.714,10,0.142,11,0.444,12,0.844,13,1.407,14,2.355,15,1.48,16,2.44,17,2.44,18,0.237,19,0.006,20,0.253,21,1.178,22,0.893,23,0.568,25,2.44,26,3.192,28,1.217,29,0.716,30,1.235,31,1.808,32,2.44,34,0.135,35,1.212,36,0.061,37,1.792,38,3.108,39,3.244,40,3.21,41,2.655,42,3.245,43,2.972,44,2.972,46,4.048,48,3.134,61,2.198,63,3.082,70,2.887,71,3.032,72,2.135,73,2.481,74,3.032,75,2.522,76,2.628,77,2.842,78,2.121,79,2.759,80,3.032,83,0.004,84,0.004,271,5.749,2433,6.634,3567,5.092,4062,7.818,4063,8.741,4064,5.694,4065,5.694,4066,5.694,4067,5.694]],["title/classes/UploadImageDto.html",[0,0.232,4068,4.381]],["body/classes/UploadImageDto.html",[0,0.351,2,1.162,3,0.079,4,0.07,5,0.094,10,0.185,11,0.523,18,0.251,19,0.006,20,0.388,23,0.51,34,0.176,36,0.079,83,0.005,84,0.005,117,1.489,121,1.706,155,1.6,221,5.418,227,2.384,1034,4.517,1352,6.388,1354,5.602,1519,4.404,4068,7.812,4069,8.735,4070,7.409,4071,8.735,4072,7.409]],["title/entities/User.html",[214,1.783,394,2.25]],["body/entities/User.html",[0,0.294,3,0.047,4,0.042,5,0.042,10,0.11,11,0.372,12,0.924,14,1.828,18,0.287,19,0.006,20,0.428,21,1.967,23,0.669,34,0.197,35,0.934,36,0.047,62,1.629,65,2.906,83,0.003,84,0.003,101,2.297,117,1.953,121,1.532,214,2.261,228,2.716,229,1.179,235,1.923,252,1.597,269,1.577,285,2.611,377,1.539,380,1.795,383,3.213,394,2.015,396,2.464,398,4.051,399,4.051,401,5.929,402,3.208,403,5.031,404,5.234,406,2.713,408,3.208,417,5.31,419,4.145,420,4.145,421,4.626,423,2.713,424,2.813,425,2.539,426,2.539,427,3.057,428,3.057,429,3.984,430,3.057,431,2.927,471,5.574,473,3.057,558,5.12,559,2.581,620,4.543,650,1.875,793,3.603,925,3.618,928,6.47,929,7.016,930,5.556,931,7.016,1160,5.124,1273,3.39,1318,3.208,1320,3.057,1326,5.234,1328,3.208,1330,6.47,1414,4.964,2425,5.949,2427,5.556,2428,5.556,2698,5.12,2708,5.949,2710,5.949,2737,5.556,3255,3.924,3484,3.208,3887,3.924,3908,5.556,3909,6.451,4073,4.387,4074,6.451,4075,4.387,4076,4.387,4077,4.387,4078,4.387,4079,4.387,4080,4.387,4081,4.387,4082,4.387,4083,4.387,4084,4.387,4085,4.387,4086,4.387,4087,4.387,4088,4.387,4089,4.387,4090,4.387,4091,6.212,4092,4.387,4093,4.387,4094,4.387,4095,4.387,4096,4.387,4097,4.387,4098,4.387,4099,4.387,4100,4.387,4101,7.213,4102,4.387,4103,4.387,4104,4.387]],["title/controllers/UsersController.html",[107,1.916,4105,4.04]],["body/controllers/UsersController.html",[0,0.209,3,0.047,4,0.042,5,0.088,10,0.11,12,0.772,13,1.184,14,1.993,15,1.549,18,0.226,19,0.006,20,0.321,23,0.571,28,1.361,29,0.801,30,1.531,34,0.218,36,0.047,61,2.193,83,0.003,84,0.003,107,1.726,109,1.695,112,2.408,117,1.668,120,4.528,121,1.821,125,3.13,133,5.593,145,2.93,146,1.828,147,3.075,148,2.172,150,2.555,151,0.913,154,2.343,155,0.953,156,2.408,157,2.83,170,1.169,172,3.988,173,4.553,174,3.224,177,2.281,178,3.872,179,5.248,180,2.012,214,3.136,252,2.215,269,1.254,349,3.185,388,4.001,470,3.228,764,2.225,829,5.327,834,5.782,841,2.945,842,2.945,1034,4.822,1107,3.021,1234,5.293,1255,5.043,1352,6.3,1354,5.801,1361,6.472,1362,6.472,1363,6.472,1364,6.472,1365,3.947,1366,3.947,1367,3.64,1371,5.969,1378,3.858,1379,5.58,1380,4.163,1381,5.58,2383,5.748,3204,7.691,3592,7.557,3598,5.753,3608,5.753,3947,6.488,4105,5.146,4106,4.413,4107,5.58,4108,5.58,4109,5.58,4110,6.472,4111,6.472,4112,4.413,4113,4.413,4114,4.413,4115,3.947,4116,6.239,4117,5.58,4118,4.413,4119,4.413,4120,4.413,4121,7.035,4122,4.413,4123,4.413,4124,4.413,4125,6.239,4126,4.413,4127,4.413,4128,4.413,4129,4.413,4130,4.413,4131,4.413,4132,4.413,4133,3.947,4134,3.947,4135,3.947,4136,4.413,4137,4.413,4138,4.413,4139,4.413,4140,4.413,4141,4.413,4142,4.413,4143,4.413,4144,4.413,4145,4.413,4146,4.413,4147,6.239,4148,4.413,4149,6.239,4150,4.413,4151,6.239,4152,4.413,4153,4.413]],["title/modules/UsersModule.html",[189,1.694,858,3.413]],["body/modules/UsersModule.html",[0,0.32,3,0.072,4,0.064,5,0.064,19,0.006,34,0.236,36,0.072,83,0.005,84,0.005,109,3.177,151,1.4,189,3.09,191,3.108,192,3.108,193,3.252,194,3.252,195,3.178,196,4.294,197,4.294,203,3.975,204,3.252,205,3.108,207,4.07,208,3.499,209,2.38,214,2.463,215,3.8,852,6.481,858,6.971,1251,6.053,1255,7.076,1414,4.646,1415,4.34,2698,5.115,2699,4.716,4105,7.37,4135,6.053,4154,6.053,4155,6.053,4156,6.767,4157,6.053,4158,6.767,4159,6.053,4160,6.767]],["title/injectables/UsersService.html",[236,1.205,1255,3.413]],["body/injectables/UsersService.html",[0,0.238,3,0.035,4,0.031,5,0.084,10,0.082,11,0.301,12,0.81,13,0.955,15,1.55,18,0.245,19,0.006,20,0.439,21,0.681,22,0.517,23,0.599,28,1.399,29,0.823,30,1.385,31,1.899,34,0.21,35,0.701,36,0.035,37,1.667,49,2.544,61,1.881,76,1.77,83,0.003,84,0.003,101,1.602,151,0.681,168,1.602,169,2.49,170,1.809,177,2.745,178,4.033,180,2.018,209,1.158,214,3.424,215,1.85,222,1.864,229,0.886,235,1.071,236,1.238,237,1.42,239,2.886,241,4.086,252,2.139,255,2.037,256,1.583,266,2.409,269,1.559,270,5.176,274,2.544,276,3.172,285,1.854,301,5.687,338,1.528,358,3.24,366,1.547,394,2.311,471,2.546,501,3.888,650,1.928,888,6.43,987,1.392,1034,4.011,1107,1.265,1123,2.717,1255,3.505,1267,2.546,1268,2.717,1317,2.946,1325,2.946,1329,4.499,1352,5.673,1354,3.226,1369,5.384,1383,4.499,1414,4.532,1415,2.113,1428,4.499,1463,2.745,1469,2.717,1541,4.499,1543,4.499,1551,4.996,1553,3.888,1555,3.888,1556,4.499,1557,3.888,1922,3.357,2157,1.969,2228,1.969,2275,4.149,2311,6.398,2421,4.072,2425,4.149,2667,5.459,2668,5.459,2685,2.946,2686,2.946,2698,2.037,2699,2.295,2702,2.946,2708,5.635,2710,6.398,2723,4.499,2754,4.499,2755,5.459,2757,5.459,2776,2.946,2841,4.464,3142,4.149,3204,4.149,3432,2.946,3481,2.717,3592,4.717,3598,4.996,3608,3.679,4074,6.938,4107,4.499,4108,4.499,4109,4.499,4110,4.499,4111,4.499,4115,4.499,4117,2.946,4121,5.459,4133,2.946,4134,2.946,4161,3.294,4162,5.031,4163,5.031,4164,3.294,4165,5.031,4166,5.031,4167,3.294,4168,3.294,4169,5.031,4170,3.294,4171,5.031,4172,3.294,4173,3.294,4174,5.031,4175,3.294,4176,5.031,4177,3.294,4178,5.031,4179,3.294,4180,5.031,4181,3.294,4182,5.031,4183,3.294,4184,3.294,4185,3.294,4186,5.031,4187,5.031,4188,3.294,4189,3.294,4190,3.294,4191,3.294,4192,5.031,4193,3.294,4194,3.294,4195,3.294,4196,3.294,4197,3.294,4198,6.831,4199,5.031,4200,3.294,4201,3.294,4202,5.031,4203,5.031,4204,3.294,4205,6.103,4206,3.294,4207,6.103,4208,5.031,4209,3.294,4210,3.294,4211,5.031,4212,3.294,4213,3.294,4214,3.294,4215,3.294,4216,3.294,4217,3.294,4218,3.294,4219,3.294,4220,3.294,4221,3.294,4222,3.294,4223,3.294,4224,3.294,4225,3.294,4226,3.294,4227,5.031,4228,5.031,4229,5.031,4230,5.031,4231,5.031]],["title/classes/VaultAssetsSummaryDto.html",[0,0.232,3647,3.786]],["body/classes/VaultAssetsSummaryDto.html",[0,0.26,2,0.862,3,0.059,4,0.052,5,0.052,10,0.137,11,0.485,18,0.289,19,0.006,20,0.382,22,1.352,23,0.646,34,0.13,36,0.059,61,1.757,62,1.696,83,0.004,84,0.004,117,1.886,121,1.833,155,1.186,160,4.686,219,2.287,222,2.035,223,3.847,227,2.599,332,1.477,338,1.669,375,1.618,377,1.816,473,3.565,545,2.733,559,1.807,642,2.561,656,1.837,987,3.061,1014,4.531,1018,4.246,1019,4.531,1040,2.883,1048,3.671,1150,4.99,1155,5.6,1706,3.403,2181,4.409,3147,5.299,3370,5.6,3647,5.6,3649,7.856,3748,6.48,3757,7.391,3764,6.687,3766,6.687,3768,6.687,3769,6.687,3836,5.6,4232,4.913,4233,5.493,4234,5.493,4235,5.493,4236,5.493,4237,5.493,4238,4.913,4239,4.913]],["title/interfaces/VaultConfig.html",[640,1.105,1628,3.582]],["body/interfaces/VaultConfig.html",[0,0.132,3,0.03,4,0.027,5,0.027,10,0.07,11,0.264,12,0.511,14,1.391,15,0.994,18,0.272,19,0.006,20,0.438,22,1.19,23,0.192,28,0.457,29,0.801,30,0.736,31,1.135,34,0.187,36,0.059,37,1.379,49,1.898,54,1.253,55,1.227,61,1.331,62,1.494,66,1.697,83,0.002,84,0.002,123,0.888,138,2.216,140,2.006,146,1.83,151,0.577,168,0.888,169,2.614,170,2.01,177,2.668,180,1.514,219,1.238,235,1.329,236,1.087,239,1.867,249,0.998,252,2.084,269,0.56,274,2.159,276,1.202,285,2.573,307,4.005,315,1.806,316,1.943,332,1.679,338,1.342,341,1.806,342,2.632,348,2.443,372,2.999,375,2.317,377,1.62,378,2.732,379,2.331,543,2.641,546,2.123,601,2.834,640,0.997,641,1.052,642,0.75,645,1.48,646,1.614,648,1.566,649,1.566,650,1.492,656,2.71,659,1.667,665,1.48,666,1.48,667,1.48,668,1.48,694,1.943,696,1.48,697,2.075,703,2.039,749,2.319,750,1.091,754,2.748,755,2.159,793,2.521,809,2.663,818,3.001,835,2.123,907,1.788,944,2.914,967,3.52,987,2.638,1040,1.836,1138,1.202,1332,1.227,1354,2.834,1425,1.614,1519,2.767,1524,1.442,1587,1.406,1594,2.838,1623,2.767,1624,1.48,1628,4.014,1638,1.788,1706,1.31,1712,3.432,1718,1.667,1737,5.261,1774,1.48,1837,1.566,1852,2.914,1859,1.442,1862,1.566,1863,2.482,1865,1.788,1901,2.578,1930,1.372,2013,1.614,2015,2.641,2016,1.724,2017,1.724,2018,1.614,2019,1.614,2021,2.914,2022,1.724,2030,1.724,2031,1.667,2033,1.724,2034,4.478,2035,1.667,2036,1.667,2037,1.667,2038,3.732,2039,1.667,2040,1.667,2057,2.732,2059,2.732,2060,2.732,2079,3.52,2080,3.732,2081,3.28,2082,3.28,2083,1.667,2087,3.407,2088,3.614,2090,2.732,2091,2.732,2093,4.328,2094,3.315,2095,3.732,2097,2.411,2098,2.732,2099,3.407,2104,3.394,2105,2.558,2106,3.177,2107,3.28,2108,3.28,2109,3.28,2110,3.177,2115,1.372,2116,1.667,2118,1.724,2183,3.861,2185,2.641,2186,2.411,2323,2.155,2460,2.834,2472,1.861,2520,3.079,2527,2.948,2535,3.079,2536,3.079,2537,3.079,2538,4.351,2541,4.351,2542,3.079,2543,1.943,2544,1.943,2545,1.861,2546,1.943,2547,1.943,2548,1.943,2549,3.079,2550,1.861,2551,1.943,2552,1.861,2553,1.943,2554,2.834,2555,3.079,2713,1.861,3125,5.597,3130,2.155,3320,4.826,3321,2.155,3362,6.547,3363,2.155,3702,3.232,4240,2.155,4241,5.614,4242,5.614,4243,5.614,4244,5.614,4245,5.614,4246,4.978,4247,3.415,4248,2.155,4249,2.155,4250,2.3,4251,4.527,4252,4.567,4253,3.415,4254,4.242,4255,2.155,4256,2.3,4257,2.3,4258,3.645,4259,2.155,4260,2.3,4261,6.258,4262,3.645,4263,2.3,4264,2.3,4265,2.155,4266,2.155,4267,2.155,4268,3.415,4269,2.155,4270,2.3,4271,2.3,4272,3.415,4273,3.645,4274,5.15,4275,3.645,4276,3.645,4277,5.15,4278,3.645,4279,2.3,4280,2.3,4281,3.645,4282,3.645,4283,2.3,4284,2.3,4285,2.3,4286,2.3,4287,4.527,4288,2.3,4289,3.645,4290,3.645,4291,2.3,4292,2.3,4293,2.3,4294,2.3,4295,2.3,4296,2.039,4297,2.3,4298,2.3,4299,2.3,4300,2.3,4301,2.3,4302,2.3,4303,2.3]],["title/interfaces/VaultCreateConfig.html",[640,1.105,4253,3.786]],["body/interfaces/VaultCreateConfig.html",[0,0.133,3,0.03,4,0.027,5,0.027,10,0.07,11,0.265,12,0.512,14,1.395,15,0.997,18,0.271,19,0.006,20,0.436,22,1.192,23,0.193,28,0.459,29,0.802,30,0.738,31,1.139,34,0.187,36,0.059,37,1.381,49,1.903,54,1.259,55,1.233,61,1.335,62,1.496,66,1.703,83,0.002,84,0.002,123,1.994,138,2.218,140,2.01,146,1.837,151,0.579,168,0.892,169,2.617,170,2.013,177,2.67,180,1.518,219,1.241,235,1.333,236,1.091,239,1.873,249,1.002,252,2.087,269,0.563,274,2.164,276,1.207,285,2.576,307,4.015,315,1.811,316,1.952,332,1.683,338,1.347,341,1.811,342,2.636,348,2.449,372,3.005,375,2.009,377,1.622,378,2.742,379,2.333,543,2.65,546,2.131,601,2.844,640,1,641,1.056,642,0.753,645,1.487,646,1.621,648,1.573,649,1.573,650,1.496,656,2.714,659,1.674,665,1.487,666,1.487,667,1.487,668,1.487,694,1.952,696,1.487,697,2.083,703,2.048,749,2.325,750,1.096,754,2.755,755,2.164,793,2.528,809,2.668,818,3.008,835,2.131,907,1.796,944,2.922,967,3.53,987,2.645,1040,1.841,1138,1.207,1332,1.233,1354,2.844,1425,1.621,1519,2.775,1524,1.448,1587,1.412,1594,2.847,1623,2.775,1624,1.487,1628,3.243,1638,1.796,1706,1.315,1712,3.439,1718,1.674,1737,5.272,1774,1.487,1837,1.573,1852,2.922,1859,1.448,1862,1.573,1863,2.49,1865,1.796,1901,2.585,1930,1.378,2013,1.621,2015,2.65,2016,1.732,2017,1.732,2018,1.621,2019,1.621,2021,2.922,2022,1.732,2030,1.732,2031,1.674,2033,1.732,2034,4.486,2035,1.674,2036,1.674,2037,1.674,2038,3.741,2039,1.674,2040,1.674,2057,2.742,2059,2.742,2060,2.742,2079,3.528,2080,3.741,2081,3.29,2082,3.29,2083,1.674,2087,3.416,2088,3.623,2090,2.742,2091,2.742,2093,4.336,2094,3.323,2095,3.741,2097,2.42,2098,2.742,2099,3.416,2104,3.404,2105,2.567,2106,3.186,2107,3.29,2108,3.29,2109,3.29,2110,3.186,2115,1.378,2116,1.674,2118,1.732,2183,3.871,2185,2.65,2186,2.42,2323,2.165,2460,2.844,2472,1.869,2520,3.09,2527,2.959,2535,3.09,2536,3.09,2537,3.09,2538,4.362,2541,4.362,2542,3.09,2543,1.952,2544,1.952,2545,1.869,2546,1.952,2547,1.952,2548,1.952,2549,3.09,2550,1.869,2551,1.952,2552,1.869,2553,1.952,2554,2.844,2555,3.09,2713,1.869,3125,5.607,3130,2.165,3320,2.165,3321,2.165,3362,6.555,3363,2.165,3702,3.243,4240,2.165,4241,5.626,4242,5.626,4243,5.626,4244,5.626,4245,5.626,4246,4.989,4247,3.427,4248,2.165,4249,2.165,4250,2.31,4251,4.54,4252,4.578,4253,4.254,4254,4.254,4255,2.165,4256,2.31,4257,2.31,4258,3.658,4259,2.165,4260,2.31,4261,6.269,4262,3.658,4263,2.31,4264,2.31,4265,2.165,4266,2.165,4267,2.165,4268,3.427,4269,2.165,4270,2.31,4271,2.31,4272,3.427,4273,3.658,4274,5.163,4275,3.658,4276,3.658,4277,5.163,4278,3.658,4279,2.31,4280,2.31,4281,3.658,4282,3.658,4283,2.31,4284,2.31,4285,2.31,4286,2.31,4287,4.54,4288,2.31,4289,3.658,4290,3.658,4291,2.31,4292,2.31,4293,2.31,4294,2.31,4295,2.31,4296,2.048,4297,2.31,4298,2.31,4299,2.31,4300,2.31,4301,2.31,4302,2.31,4303,2.31]],["title/injectables/VaultInsertingService.html",[236,1.205,1637,2.927]],["body/injectables/VaultInsertingService.html",[0,0.1,3,0.023,4,0.02,5,0.02,10,0.113,11,0.211,12,0.769,13,0.669,15,1.335,18,0.254,19,0.006,20,0.416,21,0.437,22,0.998,23,0.522,28,1.043,29,0.651,30,1.059,31,1.316,34,0.206,35,0.45,36,0.072,37,1.377,49,0.731,54,0.95,55,2.331,58,1.065,59,1.04,61,1.428,62,1.397,64,0.826,66,1.354,76,0.613,78,1.949,83,0.002,84,0.002,97,2.591,100,1.405,101,1.123,121,0.413,123,2.026,138,2.385,140,2.1,141,1.223,144,0.95,146,0.875,151,0.437,158,3.321,161,1.187,168,1.123,169,2.653,170,2.187,174,3.005,177,2.774,178,2.039,180,1.284,209,0.743,212,1.347,214,1.283,216,0.842,219,1.023,222,0.783,232,0.577,234,1.681,235,1.128,236,0.867,237,0.911,239,2.237,241,2.487,249,2.106,252,1.889,254,1.924,256,1.015,262,1.223,265,1.065,269,0.912,272,1.52,274,2.334,276,1.52,281,1.187,285,1.609,288,1.022,292,1.093,312,1.808,315,1.493,317,2.409,328,3.813,332,2.22,338,0.642,341,1.493,342,1.969,348,2.072,370,1.619,372,2.929,375,2.163,377,0.948,379,1.861,380,0.807,438,1.187,462,0.652,463,0.97,545,0.797,558,1.306,559,1.16,613,2.805,619,1.584,622,1.306,628,1.153,629,1.093,640,1.435,642,2.093,644,1.775,645,1.122,646,1.223,648,1.187,649,1.187,650,1.755,656,2.457,659,1.263,665,1.122,666,1.122,667,1.122,668,1.122,671,2.457,673,2.711,677,1.355,696,2.409,702,0.893,747,1.223,749,2.851,750,0.826,751,1.694,753,2.974,754,2.331,755,2.334,756,1.065,757,1.619,758,2.331,759,1.735,760,1.04,793,0.97,805,2.041,809,2.303,811,2.725,812,2.725,835,1.694,897,1.306,987,2.487,1040,1.179,1103,2.18,1107,1.742,1126,2.261,1138,1.52,1153,1.263,1236,2.545,1287,1.093,1332,0.93,1378,1.306,1400,3.471,1401,4.033,1425,1.223,1463,2.476,1519,3.403,1524,1.823,1559,1.306,1562,1.122,1575,0.992,1576,0.97,1581,1.153,1587,3.207,1594,1.093,1605,2.812,1610,2.18,1621,2.739,1623,2.67,1624,1.872,1635,1.41,1636,1.41,1637,2.107,1658,1.122,1661,1.585,1677,1.306,1696,1.41,1700,1.41,1702,3.027,1705,2.805,1706,2.765,1711,2.974,1712,3.704,1714,1.41,1716,1.306,1718,1.263,1774,1.872,1791,2.352,1801,1.306,1812,2.107,1815,1.263,1834,2.18,1837,1.98,1843,2.287,1845,1.223,1852,1.122,1859,1.093,1862,1.98,1863,1.187,1867,1.306,1896,1.187,1897,1.187,1901,2.765,1905,2.89,1930,2.232,1985,1.153,2003,1.065,2006,2.739,2011,1.153,2012,2.352,2013,4.506,2014,1.472,2015,2.107,2016,1.306,2017,1.306,2018,1.223,2019,1.223,2020,1.223,2021,2.812,2022,1.306,2023,2.261,2024,1.355,2025,1.472,2026,2.261,2027,1.472,2028,1.41,2029,2.457,2030,2.805,2031,2.711,2032,2.91,2033,1.306,2034,2.18,2035,1.263,2036,1.263,2037,1.263,2038,1.263,2039,1.263,2040,1.263,2041,1.306,2042,1.472,2043,1.41,2044,2.352,2045,1.41,2046,1.472,2047,2.457,2048,1.41,2049,1.472,2050,3.027,2051,1.41,2052,1.41,2053,1.41,2054,1.41,2055,1.41,2056,2.457,2057,1.306,2058,1.472,2059,1.306,2060,1.306,2061,3.027,2062,1.41,2063,1.41,2064,1.41,2065,1.41,2066,2.352,2067,1.41,2068,1.472,2069,1.472,2070,2.352,2071,4.432,2072,2.457,2073,3.161,2074,1.472,2075,1.472,2076,1.472,2077,1.472,2078,1.355,2079,3.49,2080,2.711,2081,2.107,2082,2.107,2083,2.711,2084,2.352,2085,2.352,2086,2.352,2087,1.924,2088,2.041,2089,2.457,2090,2.18,2091,2.18,2092,2.261,2093,3.165,2094,2.409,2095,2.711,2096,1.472,2097,1.153,2098,1.306,2099,1.924,2100,1.41,2101,1.41,2102,1.41,2103,1.472,2104,1.306,2105,1.223,2106,1.223,2107,1.263,2108,1.263,2109,1.263,2110,1.223,2111,1.472,2112,4.103,2113,2.457,2114,1.472,2115,1.04,2116,1.263,2117,1.472,2118,3.641,2119,1.472,2120,3.161,2121,1.263,2122,1.41,2123,1.472,2124,1.41,2125,1.472,2126,1.472,2127,1.41,2128,1.41,2129,1.472,2130,1.41,2131,1.472,2132,1.472,2133,2.457,2134,2.457,2135,2.18,2136,1.472,2137,2.457,2138,3.027,2139,4.432,2140,3.69,2141,3.69,2142,4.103,2143,2.352,2144,2.457,2145,2.352,2146,2.457,2147,2.352,2148,2.352,2149,2.457,2150,2.457,2151,2.457,2152,3.69,2153,2.457,2154,2.457,2155,1.472,2156,2.457,2157,1.263,2158,1.472,2159,2.457,2160,1.472,2161,2.457,2162,4.103,2163,1.472,2164,1.472,2165,1.472,2166,1.472,2167,1.472,2168,1.472,2169,1.472,2170,1.472,2171,1.355,2172,3.161,2173,1.472,2174,1.472,2175,1.355,2176,1.472,2177,1.472,2178,1.472,2179,2.457,2180,1.472,2181,1.04,2182,2.352,2183,2.18,2184,2.457,2185,1.263,2186,1.924,2187,1.472,2588,1.743,4304,3.526,4305,3.526,4306,3.526,4307,3.526,4308,2.113,4309,2.113,4310,2.113,4311,2.113,4312,2.113,4313,2.113,4314,2.113,4315,2.113]],["title/injectables/VaultManagingService.html",[236,1.205,1638,3.141]],["body/injectables/VaultManagingService.html",[0,0.123,3,0.028,4,0.025,5,0.025,10,0.065,11,0.25,12,0.714,13,0.791,14,1.325,15,1.346,18,0.269,19,0.006,20,0.428,21,0.536,22,1.203,23,0.582,28,1.15,29,0.634,30,1.167,31,1.451,34,0.182,36,0.056,37,1.339,49,2.072,54,1.166,55,1.141,61,1.268,62,1.558,66,1.602,83,0.002,84,0.002,121,0.506,123,0.826,125,0.978,138,2.28,140,2.124,146,1.727,151,0.536,168,1.328,169,2.893,170,2.383,177,2.631,180,1.453,219,1.18,235,1.276,236,1.026,237,1.118,239,2.531,249,0.928,252,2.134,269,0.838,274,2.072,276,1.118,285,2.521,307,3.843,315,1.721,316,1.807,332,1.611,338,1.267,341,1.721,342,2.564,348,2.344,372,2.905,375,1.933,377,1.514,378,2.579,379,2.299,543,2.492,546,2.004,601,2.675,640,0.941,642,2.273,645,1.377,646,1.501,648,1.457,649,1.457,650,1.432,656,2.646,659,1.55,665,1.377,666,1.377,667,1.377,668,1.377,694,1.807,696,2.777,697,1.959,703,1.897,749,2.963,750,1.015,754,2.637,755,2.072,793,2.402,809,2.743,813,1.897,818,2.879,835,2.004,907,1.663,944,2.777,967,3.355,987,2.774,1040,1.749,1138,1.118,1332,1.141,1354,2.675,1425,1.501,1519,2.637,1524,2.157,1587,2.103,1594,2.705,1623,3.021,1624,2.214,1628,5.129,1638,2.675,1706,1.218,1712,3.989,1718,1.55,1737,3.223,1774,1.377,1837,2.342,1852,2.777,1859,1.341,1862,1.457,1863,2.342,1865,1.663,1901,2.457,1930,1.276,2013,4.894,2015,2.492,2016,1.604,2017,1.604,2018,1.501,2019,1.501,2021,2.777,2022,1.604,2030,3.234,2031,3.126,2033,1.604,2034,4.337,2035,1.55,2036,1.55,2037,1.55,2038,3.581,2039,1.55,2040,1.55,2057,2.579,2059,2.579,2060,2.579,2079,3.395,2080,3.581,2081,3.126,2082,3.126,2083,1.55,2087,3.27,2088,3.468,2090,2.579,2091,2.579,2093,4.191,2094,3.181,2095,3.581,2097,2.276,2098,2.579,2099,3.27,2104,3.234,2105,2.414,2106,3.028,2107,3.126,2108,3.126,2109,3.126,2110,3.028,2115,1.276,2116,1.55,2118,1.604,2183,3.705,2185,2.492,2186,2.276,2323,2.004,2460,2.675,2472,1.73,2520,2.906,2527,2.783,2535,2.906,2536,2.906,2537,2.906,2538,4.175,2541,4.175,2542,2.906,2543,1.807,2544,1.807,2545,1.73,2546,1.807,2547,1.807,2548,1.807,2549,2.906,2550,1.73,2551,1.807,2552,1.73,2553,1.807,2554,2.675,2555,2.906,2713,2.783,3125,4.042,3130,2.004,3320,2.004,3321,4.042,3362,6.414,3363,2.004,3702,3.05,4240,2.004,4241,3.44,4242,3.44,4243,3.44,4244,3.44,4245,3.44,4246,3.05,4247,3.223,4248,2.004,4249,2.004,4250,2.139,4251,4.314,4252,4.382,4253,4.631,4254,4.042,4255,2.004,4256,3.44,4257,4.314,4258,4.314,4259,2.004,4260,3.44,4261,6.081,4262,3.44,4263,2.139,4264,2.139,4265,2.004,4266,2.004,4267,2.004,4268,3.223,4269,2.004,4270,2.139,4271,2.139,4272,3.223,4273,3.44,4274,4.942,4275,3.44,4276,3.44,4277,4.942,4278,3.44,4279,2.139,4280,2.139,4281,3.44,4282,3.44,4283,2.139,4284,2.139,4285,2.139,4286,2.139,4287,4.314,4288,3.44,4289,3.44,4290,3.44,4291,2.139,4292,3.44,4293,2.139,4294,2.139,4295,2.139,4296,1.897,4297,2.139,4298,2.139,4299,2.139,4300,2.139,4301,3.44,4302,2.139,4303,2.139,4316,4.17,4317,4.17,4318,4.17,4319,4.17,4320,4.17,4321,2.594,4322,2.594,4323,2.594,4324,2.594,4325,2.594,4326,2.594,4327,2.594,4328,2.594,4329,2.594,4330,2.594]],["title/classes/VaultShortResponse.html",[0,0.232,2693,4.04]],["body/classes/VaultShortResponse.html",[0,0.172,2,0.344,3,0.023,4,0.021,5,0.035,10,0.055,11,0.217,12,0.83,18,0.268,19,0.006,20,0.392,22,1.499,23,0.574,29,0.861,34,0.187,36,0.039,53,2.615,54,2.435,61,0.531,62,1.513,83,0.002,84,0.002,97,2.643,98,1.196,117,1.677,121,1.958,140,0.607,155,0.473,174,1.256,177,1.35,180,0.881,212,1.065,213,1.163,214,1.695,215,1.231,219,1.461,222,1.346,223,1.163,227,2.725,228,2.84,235,2.124,252,1.846,263,4.4,264,1.462,269,0.936,272,1.566,280,4.79,285,1.104,288,2.831,291,3.962,310,3.84,347,1.983,354,1.462,377,1.688,380,2.315,385,1.462,386,1.462,395,3.405,425,1.268,426,1.268,462,2.704,473,1.788,514,2.425,535,3.405,545,2.043,546,3.45,548,1.602,595,2.997,619,0.655,650,0.524,725,2.347,795,1.105,914,1.602,944,3.954,967,2.331,971,1.96,1017,1.807,1033,1.462,1034,3.106,1048,3.263,1150,2.695,1181,3.405,1236,2.603,1320,3.244,1326,5.256,1341,1.693,1391,1.807,1414,3.853,1415,1.405,1706,1.029,1878,2.331,1914,2.172,1929,1.405,1930,1.078,2009,1.355,2041,3.35,2087,2.541,2228,5.962,2288,4.468,2328,1.693,2336,3.405,2368,1.527,2421,2.425,2454,4.643,2459,5.373,2550,1.462,2552,1.462,2575,1.693,2693,3.84,2695,1.807,2696,1.807,2697,1.807,2698,3.35,2699,1.527,2700,3.405,2701,1.807,2760,1.96,2841,2.658,2865,2.997,2903,7.718,2978,1.693,3080,3.84,3081,3.84,3147,1.602,3151,5.373,3370,1.693,3378,1.96,3484,3.962,3485,6.421,3498,1.96,3499,1.96,3500,4.164,3608,2.658,3750,4.845,3828,1.96,3836,2.808,4246,4.393,4331,2.191,4332,4.656,4333,4.656,4334,4.656,4335,4.656,4336,3.634,4337,2.191,4338,2.191,4339,2.191,4340,3.634,4341,2.191,4342,2.191,4343,2.191,4344,3.634,4345,2.191,4346,3.634,4347,2.191,4348,2.191,4349,2.191,4350,3.634,4351,6.007,4352,2.191,4353,2.191,4354,2.191,4355,2.191,4356,2.191,4357,2.191,4358,4.164,4359,4.845,4360,7.179,4361,6.477,4362,1.96,4363,2.191,4364,2.191,4365,2.191,4366,4.656,4367,2.191,4368,2.191,4369,2.191,4370,2.191,4371,3.634,4372,3.634,4373,3.634,4374,3.634,4375,2.191,4376,3.634,4377,3.634,4378,3.634,4379,3.634,4380,3.634,4381,4.656,4382,3.634,4383,3.634,4384,2.191,4385,3.634,4386,2.191,4387,2.191,4388,2.191,4389,2.191,4390,2.191,4391,2.191,4392,2.191,4393,2.191,4394,2.191,4395,2.191,4396,2.191,4397,2.191,4398,2.191,4399,2.191,4400,2.191,4401,2.191,4402,2.191,4403,2.191,4404,2.191,4405,2.191,4406,2.191,4407,2.191,4408,3.634,4409,2.191]],["title/classes/VaultStatusUpdate1745573712493.html",[0,0.232,4410,4.381]],["body/classes/VaultStatusUpdate1745573712493.html",[0,0.256,2,0.848,3,0.058,4,0.051,5,0.051,8,2.283,9,2.646,10,0.135,11,0.429,12,0.83,13,1.36,14,2.321,15,1.459,16,2.358,17,2.358,18,0.281,19,0.006,20,0.24,21,1.118,22,0.848,23,0.553,25,2.358,26,3.16,28,1.176,29,0.692,30,1.193,31,1.772,32,2.358,34,0.128,35,1.151,36,0.058,37,1.823,38,3.064,39,3.191,40,3.174,41,2.602,42,3.174,43,2.913,44,2.913,46,3.912,48,3.282,49,2.479,54,3.222,61,2.077,63,3.227,65,2.212,66,2.753,68,3.445,70,2.728,71,2.865,72,2.018,73,2.397,74,2.865,75,2.438,76,2.484,77,2.685,78,1.843,79,2.397,80,2.865,83,0.004,84,0.004,91,6.265,92,4.177,94,5.243,95,2.795,96,4.598,97,3.155,98,3.912,99,4.598,101,2.283,102,4.995,103,4.177,104,6.62,105,4.177,106,4.177,4410,7.661,4411,8.566,4412,5.405,4413,5.405,4414,5.405,4415,5.405]],["title/controllers/VaultsController.html",[107,1.916,4416,4.04]],["body/controllers/VaultsController.html",[0,0.143,3,0.032,4,0.029,5,0.029,10,0.075,12,0.855,13,0.892,14,1.191,15,1.45,18,0.244,19,0.006,20,0.39,21,1.757,23,0.584,28,1.393,29,0.82,30,1.602,31,0.972,34,0.209,36,0.032,37,1.284,49,1.626,53,2.64,55,2.87,62,1.818,64,3.526,83,0.003,84,0.003,95,2.431,96,4.182,97,2.069,98,2.565,101,2.9,107,1.18,109,1.159,112,1.646,117,1.707,120,4.635,121,1.845,125,2.459,133,5.975,138,1.191,142,3.558,145,3.32,146,1.25,148,2.313,149,6.148,150,1.746,151,0.624,154,1.602,155,0.652,156,1.646,157,1.935,158,2.842,159,1.521,160,1.485,161,1.694,168,0.961,169,2.012,170,1.727,172,4.082,173,4.917,174,3.3,177,2.463,178,4.093,179,5.667,180,2.098,214,2.103,223,4.785,239,1.986,252,0.776,269,1.625,272,2.027,274,1.626,276,1.301,287,3.633,315,1.547,317,1.602,321,3.276,341,1.547,342,2.364,349,3.558,379,1.191,383,2.431,398,4.205,399,4.205,629,3.872,725,2.37,795,2.37,829,5.35,834,5.919,841,2.013,842,2.013,1067,4.205,1082,5.166,1083,5.166,1107,3.262,1110,2.565,1111,3.276,1128,2.698,1148,2.102,1150,3.775,1562,1.602,1600,4.205,2121,3.897,2563,3.878,2573,4.205,2661,4.224,2665,4.205,2683,5.832,2687,4.205,2688,2.698,2692,2.698,2712,6.696,2778,4.205,2887,6.966,2938,7.006,2948,7.006,2969,3.633,3433,6.696,3501,6.448,3977,4.205,4416,3.878,4417,3.017,4418,5.776,4419,4.701,4420,5.776,4421,4.701,4422,4.701,4423,4.701,4424,4.701,4425,5.776,4426,3.017,4427,8.086,4428,7.487,4429,4.701,4430,4.701,4431,3.017,4432,3.017,4433,4.701,4434,3.017,4435,3.017,4436,6.521,4437,3.017,4438,3.017,4439,3.017,4440,3.017,4441,3.017,4442,3.017,4443,4.701,4444,3.017,4445,3.017,4446,3.017,4447,4.701,4448,3.017,4449,3.017,4450,3.017,4451,4.701,4452,3.017,4453,3.017,4454,3.017,4455,3.017,4456,3.017,4457,3.017,4458,4.701,4459,4.701,4460,3.017,4461,3.017,4462,3.017,4463,4.701,4464,3.017,4465,3.017,4466,4.205,4467,3.017,4468,3.017,4469,3.017,4470,3.017,4471,4.764,4472,3.017,4473,3.017,4474,3.017,4475,3.017,4476,3.017,4477,3.017,4478,3.017,4479,3.017,4480,3.017,4481,3.017,4482,3.017,4483,3.017,4484,3.017,4485,3.017,4486,4.701,4487,5.776,4488,5.776,4489,3.017,4490,3.017,4491,3.017,4492,3.017,4493,3.017,4494,3.017,4495,3.017,4496,4.701,4497,3.017,4498,3.017,4499,3.017,4500,3.017,4501,3.017,4502,3.017,4503,3.017,4504,3.017,4505,3.017,4506,3.017,4507,3.017]],["title/modules/VaultsModule.html",[189,1.694,859,3.582]],["body/modules/VaultsModule.html",[0,0.276,3,0.062,4,0.055,5,0.055,19,0.006,34,0.241,36,0.062,62,1.387,83,0.004,84,0.004,109,2.89,151,1.204,159,3.795,160,2.865,189,2.884,191,2.674,192,2.674,193,2.798,194,2.798,195,2.734,196,4.007,197,4.007,202,5.588,203,3.617,204,2.798,205,2.674,207,3.703,208,3.011,209,2.048,210,4.057,212,1.722,213,3.091,214,2.74,215,3.27,216,2.321,280,3.885,395,5.504,852,6.239,853,5.782,859,7.439,881,4.258,1181,5.504,1414,4.227,1415,3.734,2336,5.504,2661,7.279,2695,4.802,2696,4.802,2697,4.802,2698,4.654,2699,4.057,2700,5.504,2701,4.802,2887,4.5,3051,6.838,4159,5.207,4416,6.879,4466,6.731,4471,8.21,4508,5.207,4509,5.822,4510,5.207,4511,5.207,4512,5.822,4513,5.822,4514,5.822,4515,5.822]],["title/classes/VoteReq.html",[0,0.232,2993,3.786]],["body/classes/VoteReq.html",[0,0.397,2,1.087,3,0.074,4,0.066,5,0.066,10,0.173,11,0.502,18,0.241,19,0.006,20,0.416,23,0.577,29,0.906,34,0.199,36,0.074,83,0.005,84,0.005,110,4.146,117,1.687,121,1.639,124,4.622,155,1.496,227,2.464,232,1.891,288,2.433,361,3.07,373,3.087,380,1.92,1048,3.283,1997,3.941,2389,6.486,2398,6.922,2978,6.486,2993,6.486,4516,6.928,4517,9.61,4518,9.61,4519,8.392,4520,6.928,4521,6.928,4522,6.922,4523,6.928,4524,6.928]],["title/controllers/VyfiController.html",[107,1.916,4525,4.04]],["body/controllers/VyfiController.html",[0,0.264,3,0.06,4,0.053,5,0.053,10,0.139,12,0.86,13,1.39,15,1.539,18,0.28,19,0.006,20,0.439,23,0.562,28,1.341,29,0.789,30,1.36,34,0.206,36,0.06,49,2.533,83,0.004,84,0.004,107,2.185,109,2.145,112,3.047,117,1.643,125,3.083,145,2.623,148,2.748,149,3.582,151,1.155,152,5.365,154,2.965,155,1.206,170,1.479,172,3.928,180,1.982,235,1.968,252,1.883,288,2.681,292,3.788,317,2.965,377,1.554,764,2.816,1124,4.084,2356,6.99,2359,6.962,2368,6.565,2378,7.281,2383,4.887,2575,6.705,4525,6.041,4526,5.585,4527,7.31,4528,6.551,4529,6.551,4530,5.585,4531,8.269,4532,8.269,4533,7.325,4534,7.325,4535,5.585,4536,5.585,4537,5.585,4538,5.585,4539,4.995,4540,7.325,4541,5.585,4542,5.585,4543,4.995,4544,5.585,4545,5.585,4546,6.551,4547,8.676,4548,7.325,4549,4.995,4550,5.978,4551,4.995,4552,5.585,4553,5.585,4554,5.585,4555,5.585,4556,5.585,4557,5.585,4558,5.585,4559,5.585,4560,5.585,4561,5.585,4562,5.585]],["title/modules/VyfiModule.html",[189,1.694,4563,3.786]],["body/modules/VyfiModule.html",[0,0.334,3,0.075,4,0.067,5,0.067,19,0.006,34,0.229,36,0.075,83,0.005,84,0.005,109,3.257,151,1.459,189,3.145,191,3.238,192,3.238,193,3.388,194,3.388,195,3.311,196,4.371,197,4.371,203,4.075,204,3.388,205,3.238,207,3.469,750,2.758,861,5.91,1411,6.995,1412,4.36,4525,7.503,4550,7.465,4551,6.306,4563,7.665,4564,6.306,4565,6.306,4566,6.306,4567,7.051,4568,7.051]],["title/injectables/VyfiService.html",[236,1.205,4550,3.582]],["body/injectables/VyfiService.html",[0,0.163,3,0.055,4,0.033,5,0.033,10,0.086,11,0.311,12,0.785,13,0.987,15,1.443,18,0.272,19,0.006,20,0.407,21,1.076,22,0.816,23,0.594,28,1.294,29,0.762,30,1.249,34,0.194,36,0.037,37,1.488,49,1.798,59,1.693,72,1.477,83,0.003,84,0.003,125,2.635,138,1.999,151,0.712,168,1.657,169,2.923,170,2.368,177,2.838,180,1.913,219,0.776,235,1.107,236,1.28,237,1.484,252,2.169,274,2.833,276,1.484,285,1.045,292,2.69,315,2.063,317,3.709,332,1.398,338,1.58,341,2.063,342,2.337,348,1.346,349,1.515,366,1.616,372,2.597,375,2.057,377,0.616,380,0.788,503,2.128,645,2.761,650,1.885,656,2.337,665,1.827,666,1.827,667,1.827,668,1.827,671,3.143,694,3.624,697,3.281,747,3.011,749,3.461,750,1.346,754,1.515,755,1.19,763,5.991,776,3.629,778,3.624,781,3.629,782,3.216,783,3.336,784,3.108,793,2.389,795,3.161,809,1.346,818,3.791,1107,1.322,1124,2.517,1312,2.839,1332,2.759,1412,2.128,1438,5.77,1519,2.622,1594,1.78,1623,1.735,1706,3.523,1788,5.171,1799,2.839,1801,2.128,1802,2.517,1841,5.4,1842,2.517,1852,1.827,1859,3.242,1860,2.66,1865,2.207,1901,2.944,1903,2.207,1914,2.057,1919,2.296,2018,1.992,2019,1.992,2105,1.992,2106,1.992,2110,1.992,2182,3.47,2356,5.77,2359,5.798,2362,5.171,2363,6.188,2364,2.839,2368,5.708,2369,2.839,2378,5.4,2575,2.66,3418,3.078,3545,3.078,3775,3.078,4259,2.66,4265,2.66,4266,2.66,4267,2.66,4268,4.02,4269,2.66,4272,2.66,4527,4.652,4528,4.652,4529,4.652,4531,6.249,4532,6.249,4539,4.652,4543,4.652,4546,3.078,4549,3.078,4550,3.804,4569,3.078,4570,6.269,4571,6.71,4572,6.269,4573,6.269,4574,3.442,4575,5.201,4576,5.201,4577,3.442,4578,3.442,4579,3.442,4580,3.442,4581,3.442,4582,5.201,4583,3.442,4584,5.201,4585,5.201,4586,3.442,4587,5.201,4588,3.442,4589,3.078,4590,3.078,4591,3.078,4592,3.078,4593,3.442,4594,3.078,4595,3.078,4596,3.078,4597,3.078,4598,3.078,4599,4.652,4600,3.078,4601,3.078,4602,3.078,4603,3.078,4604,3.078,4605,3.078,4606,3.078,4607,3.078,4608,3.442,4609,3.442,4610,3.442,4611,3.442,4612,3.442,4613,3.442,4614,3.442,4615,3.442,4616,6.269,4617,3.442,4618,5.201,4619,3.442,4620,6.269,4621,3.442,4622,5.201,4623,3.442,4624,3.442,4625,3.442,4626,3.442,4627,3.442,4628,3.442,4629,3.442,4630,3.442,4631,5.201,4632,3.442,4633,3.442,4634,3.442,4635,3.442,4636,5.201,4637,3.442,4638,3.442,4639,3.442,4640,3.442,4641,5.201,4642,3.442,4643,3.442,4644,3.442,4645,3.442,4646,3.442,4647,3.442,4648,3.442,4649,3.442,4650,3.442,4651,3.442,4652,3.442,4653,3.442,4654,3.442,4655,3.442,4656,3.442,4657,3.442,4658,3.442,4659,3.442,4660,3.442,4661,3.442,4662,3.442]],["title/classes/WalletSummaryDto.html",[0,0.232,3710,4.04]],["body/classes/WalletSummaryDto.html",[0,0.328,2,1.087,3,0.074,4,0.066,5,0.066,10,0.173,11,0.502,18,0.284,19,0.006,20,0.416,23,0.672,34,0.164,36,0.074,83,0.005,84,0.005,172,4.338,212,1.585,219,2.036,377,1.786,818,3.329,1009,6.977,1305,4.793,1706,3.254,2181,3.409,3709,6.196,3710,6.922,3757,5.714,3764,7.446,3766,7.446,3768,7.446,3769,5.714,4232,6.196,4238,6.196,4239,6.196,4663,9.883,4664,6.928,4665,6.928,4666,6.928,4667,6.928]],["title/injectables/WebhookVerificationService.html",[236,1.205,1640,3.582]],["body/injectables/WebhookVerificationService.html",[0,0.234,3,0.053,4,0.047,5,0.047,10,0.123,11,0.404,12,0.628,13,1.28,18,0.237,19,0.006,20,0.413,21,1.022,22,0.775,23,0.595,28,1.107,29,0.651,30,0.823,34,0.182,36,0.053,64,1.933,83,0.004,84,0.004,142,2.697,151,1.022,159,2.491,168,1.574,169,2.91,170,2.527,177,2.649,180,2.003,235,1.052,236,1.661,237,2.13,239,3.489,252,2.124,274,2.333,315,1.626,341,1.626,342,2.257,377,1.208,380,1.759,383,2.555,501,3.819,545,3.115,559,2.22,642,2.399,696,3.583,749,3.77,750,1.933,764,2.491,778,4.703,809,2.64,813,3.614,1132,4.42,1148,4.703,1253,6.036,1272,6.559,1287,3.49,1303,4.936,1332,2.175,1391,4.076,1400,2.697,1402,3.614,1405,3.614,1562,2.623,1608,4.593,1610,3.056,1619,4.42,1640,4.936,1658,3.583,1669,6.036,1675,4.42,1677,4.173,1678,4.076,1774,2.623,1918,2.86,2041,4.173,2563,5.566,3247,4.076,3401,4.42,3604,5.94,3836,5.216,3841,4.42,4296,3.614,4668,8.925,4669,4.942,4670,7.686,4671,7.686,4672,6.749,4673,6.749,4674,8.646,4675,4.942,4676,6.749,4677,4.942,4678,4.942,4679,4.942,4680,4.942,4681,4.942,4682,4.942,4683,4.942,4684,4.942,4685,7.686,4686,4.942,4687,7.686,4688,4.942,4689,4.942,4690,4.942,4691,4.942,4692,4.942,4693,4.942,4694,7.686,4695,6.749,4696,4.942,4697,4.942,4698,4.942,4699,4.942,4700,4.942,4701,4.942,4702,4.942,4703,4.942,4704,4.942,4705,4.942,4706,4.942,4707,4.942,4708,4.942,4709,4.942,4710,4.942,4711,4.942,4712,8.646,4713,4.942,4714,4.942,4715,4.942,4716,4.942,4717,4.942,4718,4.942,4719,4.942,4720,6.749,4721,4.942,4722,6.749,4723,4.942,4724,4.942,4725,4.942,4726,4.942,4727,4.942,4728,4.942,4729,4.942,4730,4.942,4731,4.942,4732,4.942,4733,4.942,4734,4.942]],["title/dependencies.html",[192,2.709,4735,3.648]],["body/dependencies.html",[0,0.387,19,0.006,35,1.742,83,0.004,84,0.004,145,3.12,151,1.374,155,1.435,192,3.052,209,2.337,229,1.786,232,1.813,338,2.018,348,2.599,446,3.269,473,3.269,648,3.731,649,3.731,665,4.343,666,3.527,667,3.527,668,4.343,750,2.599,758,2.924,863,5.135,865,5.942,866,5.942,893,5.48,1233,4.859,1234,4.859,1263,5.942,1270,5.942,1341,5.135,1367,5.48,1368,5.942,1402,4.859,1412,4.108,1464,5.48,1465,5.942,1665,5.48,1770,5.48,1842,4.859,3604,5.135,3669,5.942,3707,5.942,4736,6.644,4737,6.644,4738,6.644,4739,6.644,4740,6.644,4741,6.644,4742,6.644,4743,8.18,4744,6.644,4745,6.644,4746,6.644,4747,6.644,4748,6.644,4749,6.644,4750,6.644,4751,6.644,4752,6.644,4753,6.644,4754,6.644,4755,6.644,4756,6.644,4757,6.644,4758,6.644,4759,6.644,4760,6.644,4761,6.644,4762,6.644,4763,6.644,4764,6.644,4765,6.644,4766,6.644,4767,6.644,4768,6.644,4769,6.644,4770,6.644,4771,6.644,4772,6.644,4773,6.644,4774,6.644]],["title/miscellaneous/enumerations.html",[4775,2.616,4776,5.275]],["body/miscellaneous/enumerations.html",[10,0.121,12,0.618,14,1.683,19,0.006,22,1.641,51,4.857,52,3.191,53,4.976,54,3.676,55,2.923,56,4.857,57,4.431,58,2.434,59,3.268,60,4.317,61,1.17,62,1.224,83,0.004,84,0.004,95,4.229,96,4.259,97,3.599,98,4.835,99,5.245,100,3.686,110,2.217,169,2.343,212,1.104,257,4.259,258,4.431,259,4.431,261,4.431,263,4.259,307,4.259,327,5.981,398,2.711,399,2.711,425,2.794,426,2.794,513,5.478,514,4.431,535,4.857,627,5.718,628,3.624,629,4.582,630,5.94,642,1.785,726,4.431,988,5.981,1138,2.863,1168,5.478,1826,3.731,1843,4.123,1844,6.32,2020,3.844,2079,3.434,2288,5.478,2385,4.317,2386,5.94,2403,5.94,2406,5.94,2407,5.94,2408,5.94,2442,5.478,2443,5.478,2446,4.317,2451,4.857,2454,3.731,2455,3.981,2458,5.94,2678,5.478,2679,5.478,2887,5.133,2895,3.731,2939,3.981,2949,7.314,2950,5.94,2959,5.478,2969,5.133,3080,5.478,3081,5.478,3366,4.317,4246,4.857,4252,4.857,4358,5.94,4359,5.94,4775,3.096,4776,4.317,4777,7.592,4778,9.078,4779,4.827,4780,4.827,4781,6.641,4782,4.827,4783,6.79,4784,6.641,4785,4.827,4786,4.827,4787,4.827,4788,4.827,4789,6.641,4790,4.317,4791,6.641,4792,4.827,4793,4.827,4794,4.827,4795,4.827]],["title/miscellaneous/functions.html",[4775,2.616,4796,5.275]],["body/miscellaneous/functions.html",[10,0.157,12,0.92,18,0.281,19,0.006,20,0.442,21,1.636,22,1.24,28,1.621,29,0.954,83,0.004,84,0.004,120,3.433,121,1.544,172,3.799,174,2.734,195,4.061,228,2.224,249,2.251,375,1.852,377,1.624,623,2.768,642,2.126,643,5.189,656,2.644,696,4.198,711,5.626,712,7.072,719,5.189,720,7.072,723,5.626,740,5.626,824,6.522,825,5.626,826,7.072,829,4.889,1901,2.954,2023,5.071,2024,5.071,2228,4.725,2900,6.522,2901,5.626,2902,7.072,2903,6.111,3354,7.072,4247,6.111,4248,6.111,4249,6.111,4775,4.035,4796,5.626,4797,6.291,4798,7.734,4799,6.291,4800,7.907,4801,6.291,4802,8.114,4803,6.291,4804,5.626,4805,6.291,4806,6.291,4807,9.072,4808,6.291,4809,6.291,4810,7.907,4811,7.907,4812,6.291,4813,6.291,4814,6.291]],["title/index.html",[10,0.102,3219,3.648,4815,4.079]],["body/index.html",[4,0.051,5,0.051,19,0.006,66,2.076,72,1.273,83,0.004,84,0.004,121,1.056,205,4.208,241,2.539,252,1.39,292,4.737,311,4.458,316,3.766,373,3.014,394,2.483,546,3.865,644,2.114,784,3.23,964,4.177,1154,4.177,1312,5.913,1401,4.807,1464,5.913,1485,4.834,1813,4.834,1858,5.54,2087,2.95,2135,4.433,2383,3.606,2524,6.62,2969,4.177,3179,4.834,3195,7.661,3237,4.834,3246,4.834,3589,5.913,3596,4.458,3853,6.412,4296,3.953,4522,7.065,4816,5.405,4817,5.405,4818,8.043,4819,5.405,4820,5.405,4821,5.405,4822,7.169,4823,8.043,4824,5.405,4825,5.405,4826,9.7,4827,5.405,4828,9.7,4829,8.043,4830,5.405,4831,7.169,4832,5.405,4833,7.169,4834,5.405,4835,7.169,4836,5.405,4837,7.169,4838,5.405,4839,5.405,4840,8.043,4841,5.405,4842,5.405,4843,5.405,4844,5.405,4845,5.405,4846,8.566,4847,9.491,4848,9.161,4849,7.169,4850,5.405,4851,5.405,4852,5.405,4853,7.169,4854,7.169,4855,7.169,4856,5.405,4857,9.161,4858,8.566,4859,5.405,4860,5.405,4861,5.405,4862,5.405,4863,5.405,4864,8.566,4865,5.405,4866,5.405,4867,5.405,4868,5.405,4869,7.169,4870,5.405,4871,5.405,4872,5.405,4873,5.405,4874,5.405,4875,7.169,4876,5.405,4877,5.405,4878,5.405,4879,7.169,4880,5.405,4881,5.405,4882,7.169,4883,5.405,4884,5.405,4885,5.405,4886,5.405,4887,5.405,4888,5.405,4889,5.405,4890,5.405,4891,7.169,4892,5.405,4893,5.405,4894,5.405,4895,5.405,4896,5.405,4897,5.405,4898,5.405,4899,7.169,4900,5.405,4901,5.405,4902,5.405,4903,5.405,4904,7.169,4905,5.405,4906,5.405,4907,5.405,4908,7.169,4909,7.169,4910,5.405,4911,5.405,4912,5.405,4913,5.405,4914,5.405,4915,5.405,4916,5.405,4917,4.834,4918,5.405,4919,5.405,4920,5.405,4921,5.405,4922,5.405,4923,4.834]],["title/modules.html",[191,3.081]],["body/modules.html",[19,0.005,83,0.005,84,0.005,190,5.107,191,3.207,202,4.174,846,5.397,850,5.107,851,5.107,852,4.659,853,4.318,854,4.866,855,4.866,856,5.107,857,5.107,858,4.866,859,5.107,3016,5.397,3048,5.107,3051,5.107,4522,8.514,4563,5.397,4924,10.322,4925,10.322,4926,10.322]],["title/overview.html",[4927,6]],["body/overview.html",[2,0.671,19,0.006,83,0.003,84,0.003,109,1.644,158,4.318,163,6.419,189,1.48,190,6.562,191,1.966,192,1.966,193,2.057,194,2.057,195,2.01,196,2.057,197,2.057,198,3.828,199,3.828,200,3.828,201,3.828,202,5.602,203,2.933,204,2.057,205,1.966,237,1.845,379,1.084,383,2.213,396,2.403,641,1.614,761,4.747,839,5.204,846,7.808,847,3.828,848,3.828,849,3.828,850,6.237,851,6.562,852,5.987,853,6.223,854,6.531,855,6.116,856,6.237,857,6.775,858,6.363,859,7.156,1075,6.419,1087,3.828,1088,3.828,1089,3.828,1209,6.419,1218,3.828,1244,3.828,1245,3.828,1246,3.828,1255,6.116,1369,5.856,1407,3.828,1408,3.828,1409,3.828,1637,5.245,1638,5.629,1640,6.419,1707,3.828,1708,3.828,1709,3.828,1711,4.929,1712,4.425,2257,6.116,2266,3.828,2268,3.828,2269,3.828,2556,3.828,2557,3.828,2558,3.828,2559,6.419,2661,6.419,2999,6.419,3016,6.339,3017,3.828,3018,3.828,3019,3.828,3045,3.828,3046,3.828,3047,3.828,3048,6.775,3051,6.924,3052,3.828,3053,3.828,3055,3.828,3056,6.783,3067,6.116,3299,6.419,3311,3.828,3312,3.828,3314,3.828,3662,3.828,3663,3.828,3664,3.828,3964,3.828,3965,3.828,3966,3.828,4154,3.828,4155,3.828,4157,3.828,4471,7.239,4508,3.828,4510,3.828,4511,3.828,4550,6.419,4563,6.339,4564,3.828,4565,3.828,4566,3.828,4927,3.828,4928,4.28,4929,4.28,4930,4.28,4931,4.28,4932,4.28]],["title/properties.html",[11,0.353,4735,3.648]],["body/properties.html",[11,0.475,19,0.006,83,0.005,84,0.005,121,1.549,835,3.812,4917,7.095,4923,7.095,4933,7.932,4934,7.932]],["title/miscellaneous/typealiases.html",[4775,2.616,4935,5.898]],["body/miscellaneous/typealiases.html",[10,0.188,18,0.286,19,0.006,83,0.005,84,0.005,642,2.023,818,4.722,2094,4.68,2186,4.81,2505,5.814,2508,5.814,2509,5.814,2510,6.446,2517,5.814,2518,5.814,2519,6.812,2521,6.812,4775,4.825,4936,7.523,4937,9.641]],["title/miscellaneous/variables.html",[4775,2.616,4938,5.275]],["body/miscellaneous/variables.html",[10,0.11,14,1.114,15,0.7,18,0.254,19,0.006,20,0.195,21,2.031,22,1.541,37,0.799,58,2.216,72,1.035,83,0.003,84,0.003,125,1.658,169,1.356,177,2.801,180,2.228,214,2.629,219,0.991,252,1.857,285,2.687,307,2.819,349,2.738,369,1.857,370,2.857,372,2.577,377,1.293,379,1.576,462,2.423,619,1.86,623,1.934,642,2.228,643,3.626,650,1.487,658,3.931,669,5.564,670,3.931,671,3.22,672,3.931,673,3.718,674,3.931,675,5.564,676,3.931,677,3.99,678,3.931,679,3.931,680,3.931,681,5.131,682,3.931,683,3.931,684,3.626,685,3.931,686,3.931,687,3.931,688,3.931,689,3.931,690,5.564,691,3.931,692,3.931,693,3.931,694,4.335,695,5.131,696,2.334,697,2.064,698,3.931,699,5.564,700,3.931,701,3.931,702,2.628,703,3.215,704,3.931,705,3.931,706,3.931,707,3.931,708,3.931,709,3.931,749,3.05,793,3.317,914,3.215,987,3.5,988,3.215,1227,3.931,1267,4.808,1334,3.931,1371,5.131,1372,5.564,1380,2.933,1414,3.494,1515,2.933,1559,4.465,1706,3.687,1719,3.397,1720,7.022,1772,5.564,1773,5.564,1774,3.303,1776,5.564,1777,3.931,1928,2.718,2013,2.544,2026,3.99,3702,4.55,3947,3.626,4240,4.808,4252,3.215,4254,4.808,4255,3.397,4362,7.911,4569,3.931,4571,5.564,4589,3.931,4590,3.931,4591,3.931,4592,3.931,4594,5.564,4595,3.931,4596,3.931,4597,3.931,4598,3.931,4599,5.564,4600,3.931,4601,3.931,4602,3.931,4603,3.931,4604,3.931,4605,3.931,4606,3.931,4607,3.931,4775,2.819,4783,3.931,4790,3.931,4798,3.931,4802,5.564,4804,3.931,4938,3.931,4939,4.396,4940,7.221,4941,6.221,4942,7.221,4943,6.221,4944,6.221,4945,4.396,4946,7.221,4947,6.221,4948,6.221,4949,6.221,4950,7.221,4951,7.221,4952,6.221,4953,4.396,4954,4.396,4955,4.396,4956,4.396,4957,4.396,4958,4.396,4959,6.221,4960,4.396,4961,4.396,4962,4.396,4963,4.396,4964,4.396,4965,4.396,4966,4.396,4967,4.396,4968,4.396,4969,4.396,4970,4.396,4971,4.396,4972,4.396,4973,4.396,4974,4.396,4975,4.396,4976,4.396,4977,4.396,4978,4.396,4979,4.396,4980,4.396]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":285,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedReserveVaule1747821437539.html":{},"interfaces/Amount.html":{},"entities/Asset.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["0'})@isstring()@expose",{"_index":1944,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["0.0.1",{"_index":4933,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":2620,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["0.14.1",{"_index":4759,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":4769,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":4738,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":4771,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4758,"title":{},"body":{"dependencies.html":{}}}],["0x",{"_index":3439,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["0x123...abc",{"_index":2196,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["0})@isnumber()@expose",{"_index":1950,"title":{},"body":{"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1",{"_index":379,"title":{"interfaces/BuildTransactionParams-1.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse-1.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":4760,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":4740,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":4773,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":4762,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":4756,"title":{},"body":{"dependencies.html":{}}}],["1.9",{"_index":4597,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["1/100",{"_index":1002,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["10",{"_index":383,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"classes/ContributorWhitelist.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{},"injectables/TaptoolsService.html":{},"entities/User.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{},"overview.html":{}}}],["10.0.0",{"_index":4743,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":4752,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":4757,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":4746,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":4749,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1688,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{}}}],["1000",{"_index":1774,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/CreateProposalReq.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["1000000",{"_index":2003,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{}}}],["10000000",{"_index":2096,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["1024",{"_index":1372,"title":{},"body":{"controllers/AwsController.html":{},"miscellaneous/variables.html":{}}}],["10})@expose",{"_index":2963,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["10})@isoptional()@isnumber()@expose({name",{"_index":1049,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["11.0.5",{"_index":4748,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":4774,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":2411,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/TaptoolsService.html":{}}}],["123.jpg",{"_index":3607,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd",{"_index":374,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{}}}],["1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@isnotempty()@expose",{"_index":2246,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@isstring()@matches(/^[0",{"_index":1053,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["1234abcd",{"_index":2010,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["1234abcd...'})@expose",{"_index":3917,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["1234abcd...'})@expose({name",{"_index":3939,"title":{},"body":{"classes/TransactionSubmitResponseDto.html":{}}}],["123e4567",{"_index":1990,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["12d3",{"_index":1992,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["14",{"_index":4929,"title":{},"body":{"overview.html":{}}}],["14.1.2",{"_index":4741,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":3742,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["1647611205",{"_index":1915,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1647611205})@isnumber()@expose",{"_index":1942,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["1647611209",{"_index":1933,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1647611209})@isnumber()@expose",{"_index":1876,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["1664454750",{"_index":1899,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1664454750'})@isstring()@expose",{"_index":1934,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["17",{"_index":4928,"title":{},"body":{"overview.html":{}}}],["174345",{"_index":1920,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["174345'})@isstring()@expose",{"_index":1946,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["1900000",{"_index":4596,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["1].unit",{"_index":2047,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["1_000_000).tostring",{"_index":2174,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["1d",{"_index":1424,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["1e",{"_index":3858,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["1e6",{"_index":2611,"title":{},"body":{"injectables/DistributionService.html":{}}}],["1})@expose",{"_index":2966,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["1})@isnotempty()@expose",{"_index":2248,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["1})@isnumber()@expose",{"_index":1872,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/NftAsset.html":{}}}],["1})@isoptional()@isnumber()@expose({name",{"_index":1051,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["2",{"_index":793,"title":{"interfaces/TransactionBuildResponse-2.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"entities/User.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["2.1692.0",{"_index":4755,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":930,"title":{},"body":{"entities/Asset.html":{},"entities/User.html":{}}}],["200",{"_index":120,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"miscellaneous/functions.html":{}}}],["2000000",{"_index":4599,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["200})@apiconsumes('multipart/form",{"_index":4125,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@get",{"_index":837,"title":{},"body":{"controllers/AppController.html":{}}}],["200})@get('/csv/:id",{"_index":1346,"title":{},"body":{"controllers/AwsController.html":{}}}],["200})@get('/image/:id",{"_index":1349,"title":{},"body":{"controllers/AwsController.html":{}}}],["200})@get('/profile/:id",{"_index":4118,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@httpcode(httpstatus.ok)@post('login",{"_index":1205,"title":{},"body":{"controllers/AuthController.html":{}}}],["200})@useguards(authguard",{"_index":3645,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["200})@useguards(authguard)@get",{"_index":4452,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get(':id",{"_index":4448,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get(':id/transactions",{"_index":4455,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get('acquired/:vaultid",{"_index":1071,"title":{},"body":{"controllers/AssetsController.html":{}}}],["200})@useguards(authguard)@get('contributed/:vaultid",{"_index":1068,"title":{},"body":{"controllers/AssetsController.html":{}}}],["200})@useguards(authguard)@get('my",{"_index":4444,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get('my/drafts",{"_index":4440,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get('profile",{"_index":4113,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@useguards(authguard)@patch('profile",{"_index":4122,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@useguards(authguard)@post",{"_index":4437,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@post('/publish",{"_index":4460,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@post('burn",{"_index":4429,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@post('save",{"_index":4464,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useinterceptors(undefined)@post('/upload')@useguards(authguard",{"_index":1358,"title":{},"body":{"controllers/AwsController.html":{}}}],["200})@useinterceptors(undefined)@useguards(authguard)@post('/handle",{"_index":1355,"title":{},"body":{"controllers/AwsController.html":{}}}],["201",{"_index":130,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{}}}],["23",{"_index":4930,"title":{},"body":{"overview.html":{}}}],["24",{"_index":4255,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["2561",{"_index":1880,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["3",{"_index":2237,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["3.0.0",{"_index":4767,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4744,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1778,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["30000",{"_index":1777,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["32",{"_index":4932,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":1495,"title":{},"body":{"injectables/AwsService.html":{}}}],["3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be",{"_index":1912,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be'})@isstring()@expose",{"_index":1938,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["4",{"_index":1928,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":4742,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":4772,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":3724,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["401",{"_index":1613,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["404",{"_index":738,"title":{},"body":{"interfaces/Amount.html":{},"controllers/TaptoolsController.html":{}}}],["415e",{"_index":1892,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["426",{"_index":1924,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["426614174000",{"_index":2004,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["426614174000'})@isuuid()@expose({name",{"_index":1994,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["426})@isnumber()@expose",{"_index":1957,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["4761",{"_index":1881,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2",{"_index":1998,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2'})@isstring()@expose",{"_index":3448,"title":{},"body":{"classes/NftAsset.html":{}}}],["4c34766149676f722033",{"_index":2238,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["4})@isnumber()@expose",{"_index":1961,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["5",{"_index":1380,"title":{},"body":{"controllers/AwsController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/LpTokensService.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["5.0",{"_index":2640,"title":{},"body":{"injectables/DistributionService.html":{}}}],["5.0.1",{"_index":4750,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":4764,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":4761,"title":{},"body":{"dependencies.html":{}}}],["5.9",{"_index":4603,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1799,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["53554741",{"_index":4607,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["5432",{"_index":892,"title":{},"body":{"modules/AppModule.html":{}}}],["56",{"_index":370,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["56044914",{"_index":1917,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["56044914})@isnumber()@expose",{"_index":1959,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["56051594",{"_index":1926,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["56051594})@isoptional()@expose",{"_index":1954,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["5900000",{"_index":4602,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["5mb",{"_index":1381,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["6",{"_index":3417,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["6.0.0",{"_index":4739,"title":{},"body":{"dependencies.html":{}}}],["6.0.4",{"_index":4754,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3702,"title":{},"body":{"injectables/TaptoolsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":4688,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["6233638f28d6",{"_index":1932,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["6233638f28d6'})@isstring()@expose",{"_index":1894,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["635f",{"_index":1891,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["64",{"_index":3441,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["7",{"_index":3419,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["7.8.1",{"_index":4770,"title":{},"body":{"dependencies.html":{}}}],["7012249",{"_index":1913,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["7012249})@isnumber()@expose",{"_index":1940,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["8",{"_index":4618,"title":{},"body":{"injectables/VyfiService.html":{}}}],["8.1.0",{"_index":4751,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":4766,"title":{},"body":{"dependencies.html":{}}}],["83a400",{"_index":2005,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["83a400...'})@expose",{"_index":3915,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["83a400...'})@isstring()@expose",{"_index":3507,"title":{},"body":{"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["83a400...'})@isstring()@isnotempty()@expose",{"_index":3511,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e",{"_index":3278,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["84a400",{"_index":2007,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["9",{"_index":2489,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["90",{"_index":4931,"title":{},"body":{"overview.html":{}}}],["904bebf8c7f5d9ee343147cf8bbee24ec1beafe1e73c7d0a1c74b83c4f7a0b35#2",{"_index":3375,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["91",{"_index":3833,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b",{"_index":1911,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b'})@isstring()@expose",{"_index":1948,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["98",{"_index":1525,"title":{},"body":{"injectables/AwsService.html":{}}}],["98b62937438e",{"_index":1931,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["98b62937438e'})@isstring()@expose",{"_index":1883,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c",{"_index":2239,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["9]{98",{"_index":1509,"title":{},"body":{"injectables/AwsService.html":{}}}],["9a",{"_index":1054,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["9fa1",{"_index":1882,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["__data",{"_index":2514,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["__dirname",{"_index":900,"title":{},"body":{"modules/AppModule.html":{}}}],["__variant",{"_index":2511,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["_req",{"_index":1616,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["a.added_at",{"_index":3174,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.added_by",{"_index":3181,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.asset_id",{"_index":3178,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.contract_address",{"_index":3173,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.id",{"_index":3171,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.isfungibletoken).length",{"_index":3773,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["a.isnft).length",{"_index":3772,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["a.origin_type",{"_index":3176,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.policy_id",{"_index":3177,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.policyid).join",{"_index":2325,"title":{},"body":{"injectables/ContributionService.html":{}}}],["a.quantity",{"_index":3175,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.type",{"_index":3172,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.unit",{"_index":3395,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["a.vault_id",{"_index":3182,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883",{"_index":3277,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["a456",{"_index":1993,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["a5a8",{"_index":1893,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["abstain",{"_index":2413,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["acc",{"_index":4973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc[snakekey",{"_index":4971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accepted",{"_index":350,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["access",{"_index":1128,"title":{},"body":{"injectables/AssetsService.html":{},"controllers/VaultsController.html":{}}}],["accesskeyid",{"_index":1477,"title":{},"body":{"injectables/AwsService.html":{}}}],["accesstoken",{"_index":1323,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1298,"title":{},"body":{"injectables/AuthService.html":{}}}],["acl",{"_index":1484,"title":{},"body":{"injectables/AwsService.html":{}}}],["acquire",{"_index":53,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["acquire(vaultid",{"_index":246,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquire.controller",{"_index":211,"title":{},"body":{"modules/AcquireModule.html":{}}}],["acquire.service",{"_index":164,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{}}}],["acquire_open_window_time",{"_index":3562,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquire_open_window_type",{"_index":3561,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquire_phase_start",{"_index":3563,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquire_reserve",{"_index":3551,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["acquire_window",{"_index":4298,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["acquire_window_duration",{"_index":3559,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquirecontroller",{"_index":108,"title":{"controllers/AcquireController.html":{}},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{}}}],["acquired",{"_index":513,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"injectables/LifecycleService.html":{},"miscellaneous/enumerations.html":{}}}],["acquiredurationms",{"_index":3191,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquireend",{"_index":3193,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquiremodule",{"_index":190,"title":{"modules/AcquireModule.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["acquireopenwindowtime",{"_index":4389,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquireopenwindowtype",{"_index":4388,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquirephasestart",{"_index":4409,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquirer",{"_index":2865,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["acquirer_whitelist",{"_index":271,"title":{},"body":{"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateTypes1746532933340.html":{}}}],["acquirer_whitelist_csv",{"_index":2724,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquirer_whitelist_csv_id",{"_index":3564,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquireradamap",{"_index":3198,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquireradamap[userid",{"_index":3221,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquirereq",{"_index":127,"title":{"classes/AcquireReq.html":{}},"body":{"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{}}}],["acquirereq.assets",{"_index":282,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquirereq.assets.length",{"_index":284,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquirereq.assets.map(async",{"_index":323,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquirereserve",{"_index":4392,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquirers",{"_index":2571,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["acquirerwhitelist",{"_index":354,"title":{"classes/AcquirerWhitelist.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/VaultShortResponse.html":{}}}],["acquirerwhitelistcsv",{"_index":386,"title":{"classes/AcquirerWhitelistCsv.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/VaultShortResponse.html":{}}}],["acquirerwhitelistcsvkey",{"_index":2761,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquirerwhitelistentity",{"_index":395,"title":{"entities/AcquirerWhitelistEntity.html":{}},"body":{"entities/AcquirerWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["acquirerwhitelistfile",{"_index":2763,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquirerwhitelistrepository",{"_index":2670,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquireservice",{"_index":163,"title":{"injectables/AcquireService.html":{}},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"overview.html":{}}}],["acquirestart",{"_index":3189,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquirevaults",{"_index":3185,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquirewindow",{"_index":4241,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["acquirewindowduration",{"_index":4383,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["action",{"_index":80,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["active",{"_index":3040,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["actual",{"_index":3427,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["actually",{"_index":2777,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["ada",{"_index":1706,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/variables.html":{}}}],["ada_price_usd",{"_index":3716,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["adaanvilapiurl",{"_index":4570,"title":{},"body":{"injectables/VyfiService.html":{}}}],["adaprice",{"_index":3725,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["adapriceusd",{"_index":3687,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["adasent",{"_index":2597,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["add",{"_index":70,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["addassettovault",{"_index":1095,"title":{},"body":{"injectables/AssetsService.html":{}}}],["addassettovault(userid",{"_index":1106,"title":{},"body":{"injectables/AssetsService.html":{}}}],["addcontractaddresstovault.ts",{"_index":434,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault.ts:18",{"_index":436,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault.ts:4",{"_index":435,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault.ts:6",{"_index":437,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault1745662880319",{"_index":432,"title":{"classes/AddContractAddressToVault1745662880319.html":{}},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["added",{"_index":975,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/LpTokensService.html":{}}}],["added_at",{"_index":909,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{}}}],["added_by",{"_index":337,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["addedaauired.ts",{"_index":506,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired.ts:25",{"_index":508,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired.ts:4",{"_index":507,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired.ts:6",{"_index":509,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired1748361017536",{"_index":504,"title":{"classes/AddedAauired1748361017536.html":{}},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedassetsstatus.ts",{"_index":528,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus.ts:23",{"_index":530,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus.ts:4",{"_index":529,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus.ts:6",{"_index":531,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus1748264767365",{"_index":526,"title":{"classes/AddedAssetsStatus1748264767365.html":{}},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetvaultname.ts",{"_index":521,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname.ts:18",{"_index":523,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname.ts:4",{"_index":522,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname.ts:6",{"_index":524,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname1745921850315",{"_index":519,"title":{"classes/AddedAssetVaultName1745921850315.html":{}},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedat",{"_index":976,"title":{},"body":{"entities/Asset.html":{}}}],["addedat'})@column({name",{"_index":915,"title":{},"body":{"entities/Asset.html":{}}}],["addedby",{"_index":918,"title":{},"body":{"entities/Asset.html":{}}}],["addedby'})@manytoone(undefined",{"_index":917,"title":{},"body":{"entities/Asset.html":{}}}],["addedby.id",{"_index":974,"title":{},"body":{"entities/Asset.html":{}}}],["addedby.id)@joincolumn({name",{"_index":919,"title":{},"body":{"entities/Asset.html":{}}}],["addedcontributorwhitelist.ts",{"_index":539,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist.ts:23",{"_index":541,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist.ts:4",{"_index":540,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist.ts:6",{"_index":542,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist1742484041497",{"_index":537,"title":{"classes/AddedContributorWhitelist1742484041497.html":{}},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addeddelete.ts",{"_index":554,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete.ts:20",{"_index":556,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete.ts:4",{"_index":555,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete.ts:6",{"_index":557,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete1747838327085",{"_index":552,"title":{"classes/AddedDelete1747838327085.html":{}},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addedliquidationhash.ts",{"_index":562,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash.ts:18",{"_index":564,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash.ts:4",{"_index":563,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash.ts:6",{"_index":565,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash1749046550619",{"_index":560,"title":{"classes/AddedLiquidationHash1749046550619.html":{}},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedmaxassetscount.ts",{"_index":569,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount.ts:18",{"_index":571,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount.ts:4",{"_index":570,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount.ts:6",{"_index":572,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount1747911428750",{"_index":567,"title":{"classes/AddedMaxAssetsCount1747911428750.html":{}},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedpublicationhash.ts",{"_index":576,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash.ts:18",{"_index":578,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash.ts:4",{"_index":577,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash.ts:6",{"_index":579,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash1745583708330",{"_index":574,"title":{"classes/AddedPublicationHash1745583708330.html":{}},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedreservevaule.ts",{"_index":583,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule.ts:19",{"_index":585,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule.ts:4",{"_index":584,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule.ts:6",{"_index":586,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule1747821437539",{"_index":581,"title":{"classes/AddedReserveVaule1747821437539.html":{}},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedtags.ts",{"_index":591,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags.ts:26",{"_index":593,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags.ts:4",{"_index":592,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags.ts:6",{"_index":594,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags1741943808652",{"_index":589,"title":{"classes/AddedTags1741943808652.html":{}},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtransactionmodelandrelations.ts",{"_index":609,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations.ts:39",{"_index":611,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations.ts:4",{"_index":610,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations.ts:6",{"_index":612,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations1743588383672",{"_index":607,"title":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addindextotransaction.ts",{"_index":442,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction.ts:22",{"_index":444,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction.ts:4",{"_index":443,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction.ts:6",{"_index":445,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction1744024797075",{"_index":440,"title":{"classes/AddIndexToTransaction1744024797075.html":{}},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addinvestmenttotxtype.ts",{"_index":452,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype.ts:25",{"_index":454,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype.ts:4",{"_index":453,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype.ts:6",{"_index":455,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype1744032453542",{"_index":450,"title":{"classes/AddInvestmentToTxType1744032453542.html":{}},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["additional",{"_index":2395,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/DraftVaultsService.html":{}}}],["additionalproperties",{"_index":989,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["addnewvaultstatus.ts",{"_index":87,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnewvaultstatus.ts:17",{"_index":89,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnewvaultstatus.ts:4",{"_index":88,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnewvaultstatus.ts:6",{"_index":90,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnullableformetadata.ts",{"_index":458,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata.ts:18",{"_index":460,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata.ts:4",{"_index":459,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata.ts:6",{"_index":461,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata1743687086047",{"_index":456,"title":{"classes/AddNullableForMetadata1743687086047.html":{}},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addr1",{"_index":1523,"title":{},"body":{"injectables/AwsService.html":{},"injectables/LpTokensService.html":{}}}],["addr1[a",{"_index":1506,"title":{},"body":{"injectables/AwsService.html":{}}}],["addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a",{"_index":1902,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a'})@isstring()@expose",{"_index":1969,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["addr1q934ccfkwy292",{"_index":3275,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv",{"_index":1909,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv'})@isstring()@expose",{"_index":1978,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["addr1qy2k4r9",{"_index":2001,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["addr1qy2k4r9...'})@expose",{"_index":3933,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["addr1qy2k4r9...'})@isstring()@expose({name",{"_index":1986,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["addr1qy5dasujdtm4hzrtamca9sjetu78hgqt8rkqs9tu69n0vq47wr70fcgkj4fe9tyr6z2jz8qvwvrc2gq04ltky960fw0smcuf0t",{"_index":4605,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["addr_test1",{"_index":3434,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["addr_test1qpjavykfl5n4t47xklzyuccevgple0e4c7mke2m6cd0z0fwy0pq8p292lgrquq7hx75c4wpvz0h8cjp69mp7men3nw8s46zete",{"_index":4592,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":650,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ContributionService.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublicProfileRes.html":{},"classes/SignatureData.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["address'})@column({unique",{"_index":4075,"title":{},"body":{"entities/User.html":{}}}],["address'})@isstring",{"_index":2370,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["address.'})@apiresponse({status",{"_index":3288,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["address.from_bytes(buffer.from(addresshex",{"_index":1282,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.startswith('addr1",{"_index":3435,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["address.startswith('addr_test",{"_index":3714,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["address.startswith('addr_test1",{"_index":3436,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["address.startswith('stake1",{"_index":3437,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["address.startswith('stake_test1",{"_index":3438,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["addresses",{"_index":1504,"title":{},"body":{"injectables/AwsService.html":{},"injectables/LpTokensService.html":{}}}],["addresses.length",{"_index":1530,"title":{},"body":{"injectables/AwsService.html":{}}}],["addresses.push(address",{"_index":1528,"title":{},"body":{"injectables/AwsService.html":{}}}],["addresshex",{"_index":1278,"title":{},"body":{"injectables/AuthService.html":{}}}],["addressmatches",{"_index":1302,"title":{},"body":{"injectables/AuthService.html":{}}}],["addstakeandwalletaddress.ts",{"_index":466,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress.ts:21",{"_index":468,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress.ts:4",{"_index":467,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress.ts:6",{"_index":469,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress1743433439139",{"_index":464,"title":{"classes/AddStakeAndWalletAddress1743433439139.html":{}},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addtotalacquiredvalueinada.ts",{"_index":476,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada.ts:18",{"_index":478,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada.ts:4",{"_index":477,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada.ts:6",{"_index":479,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada1750670509513",{"_index":474,"title":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalassetscost.ts",{"_index":484,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost.ts:19",{"_index":486,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost.ts:4",{"_index":485,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost.ts:6",{"_index":487,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost1747665618438",{"_index":482,"title":{"classes/AddTotalAssetsCost1747665618438.html":{}},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addupdatetransactiontype.ts",{"_index":7,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addupdatetransactiontype.ts:25",{"_index":27,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addupdatetransactiontype.ts:4",{"_index":24,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addupdatetransactiontype.ts:6",{"_index":33,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addvaultlifecyclefields.ts",{"_index":492,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["addvaultlifecyclefields.ts:14",{"_index":493,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["addvaultlifecyclefields.ts:4",{"_index":494,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["addvaultlifecyclefields1741943808653",{"_index":490,"title":{"classes/AddVaultLifecycleFields1741943808653.html":{}},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["admin",{"_index":2554,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["admin_key_hash",{"_index":2184,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["adminhash",{"_index":2030,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["adminkeyhash",{"_index":3320,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["adminskey",{"_index":2031,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["against",{"_index":303,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["age",{"_index":4690,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["age=3600",{"_index":1392,"title":{},"body":{"controllers/AwsController.html":{}}}],["aiken",{"_index":2522,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["aliases",{"_index":4936,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allacquirer",{"_index":2871,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["allacquirer.size",{"_index":2873,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["allocation",{"_index":2576,"title":{},"body":{"injectables/DistributionService.html":{}}}],["allow",{"_index":289,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["allowed",{"_index":378,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["allowedpolicies",{"_index":4242,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["allowing",{"_index":4870,"title":{},"body":{"index.html":{}}}],["alphanumeric",{"_index":1526,"title":{},"body":{"injectables/AwsService.html":{}}}],["already",{"_index":1802,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/VyfiService.html":{}}}],["alter",{"_index":63,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["always",{"_index":4302,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["amazing",{"_index":4913,"title":{},"body":{"index.html":{}}}],["amoun",{"_index":3379,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["amount",{"_index":619,"title":{"interfaces/Amount.html":{}},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/CreatePoolDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["amount.unit",{"_index":732,"title":{},"body":{"interfaces/Amount.html":{}}}],["amountoflpstoclaim",{"_index":3393,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["amounts",{"_index":1903,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["analyze",{"_index":2161,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["andwhere('vault.acquire_phase_start",{"_index":3186,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.acquire_window_duration",{"_index":3187,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_duration",{"_index":3109,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_open_window_time",{"_index":3106,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_open_window_type",{"_index":3096,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_phase_start",{"_index":3108,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["anvil",{"_index":780,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["anvil.app/v2/services/transactions",{"_index":4585,"title":{},"body":{"injectables/VyfiService.html":{}}}],["anvilapi",{"_index":1827,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["anvilapiconfig",{"_index":742,"title":{"interfaces/AnvilApiConfig.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["anvilapikey",{"_index":1828,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["anvilapiservice",{"_index":761,"title":{"injectables/AnvilApiService.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"overview.html":{}}}],["api",{"_index":776,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["api.service",{"_index":1715,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["api.service.ts",{"_index":744,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["api.service.ts:115",{"_index":815,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:129",{"_index":822,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:32",{"_index":823,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:33",{"_index":814,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:40",{"_index":819,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:48",{"_index":821,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:56",{"_index":820,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:64",{"_index":817,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api_version",{"_index":1869,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["apibearerauth",{"_index":3296,"title":{},"body":{"controllers/LpTokensController.html":{},"controllers/TransactionsController.html":{}}}],["apibody",{"_index":4548,"title":{},"body":{"controllers/VyfiController.html":{}}}],["apiconsumes",{"_index":4131,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiconsumes('multipart/form",{"_index":4147,"title":{},"body":{"controllers/UsersController.html":{}}}],["apidoc",{"_index":829,"title":{},"body":{"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"miscellaneous/functions.html":{}}}],["apidoc(__namedparameters",{"_index":4803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apidoc({summary",{"_index":834,"title":{},"body":{"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["apidocparams",{"_index":824,"title":{"interfaces/ApiDocParams.html":{}},"body":{"interfaces/ApiDocParams.html":{},"miscellaneous/functions.html":{}}}],["apikey",{"_index":763,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"injectables/VyfiService.html":{}}}],["apioperation",{"_index":152,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/VyfiController.html":{}}}],["apiproperty",{"_index":227,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{}}}],["apiproperty()@dtorepresent({transform",{"_index":3488,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["apiproperty()@isstring",{"_index":3442,"title":{},"body":{"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["apiproperty()@isstring()@expose",{"_index":360,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["apiproperty()@isurl()@expose",{"_index":3585,"title":{},"body":{"classes/SocialLink.html":{}}}],["apiproperty({description",{"_index":1048,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributionAsset.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/LpTokenOperationResult.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{}}}],["apiproperty({enum",{"_index":2941,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["apiproperty({required",{"_index":1042,"title":{},"body":{"classes/AssetWhitelist.html":{},"classes/PublicProfileRes.html":{}}}],["apiproperty({type",{"_index":221,"title":{},"body":{"classes/AcquireReq.html":{},"classes/ContributeReq.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/UploadImageDto.html":{}}}],["apipropertyoptional",{"_index":2227,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["apipropertyoptional({description",{"_index":2243,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["apiquery",{"_index":4547,"title":{},"body":{"controllers/VyfiController.html":{}}}],["apiresponse",{"_index":153,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{}}}],["apitags",{"_index":154,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["apitags('acquire",{"_index":166,"title":{},"body":{"controllers/AcquireController.html":{}}}],["apitags('assets",{"_index":1077,"title":{},"body":{"controllers/AssetsController.html":{}}}],["apitags('auth",{"_index":1212,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('blockchain",{"_index":1642,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["apitags('contributions",{"_index":2260,"title":{},"body":{"controllers/ContributionController.html":{}}}],["apitags('files",{"_index":1373,"title":{},"body":{"controllers/AwsController.html":{}}}],["apitags('governance",{"_index":3001,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["apitags('info",{"_index":843,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('lp",{"_index":3302,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["apitags('taptools",{"_index":3653,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["apitags('transactions",{"_index":3955,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["apitags('users",{"_index":4136,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('vaults",{"_index":4472,"title":{},"body":{"controllers/VaultsController.html":{}}}],["apitags('vyfi",{"_index":4552,"title":{},"body":{"controllers/VyfiController.html":{}}}],["apiversion",{"_index":833,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["app.controller",{"_index":867,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":840,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":831,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["application",{"_index":4848,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":783,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["applications",{"_index":4822,"title":{},"body":{"index.html":{}}}],["apply",{"_index":3387,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["applycontributeparams",{"_index":2023,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/functions.html":{}}}],["applycontributeparams(input",{"_index":4805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applydecorators",{"_index":828,"title":{},"body":{"interfaces/ApiDocParams.html":{},"interfaces/DtoRepresentsType.html":{}}}],["applydecorators(apioperation",{"_index":830,"title":{},"body":{"interfaces/ApiDocParams.html":{}}}],["applydecorators(transform",{"_index":2904,"title":{},"body":{"interfaces/DtoRepresentsType.html":{}}}],["appmodule",{"_index":846,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciation",{"_index":4398,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["appservice",{"_index":839,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"overview.html":{}}}],["array",{"_index":1040,"title":{},"body":{"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["array(len",{"_index":4962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.from(allacquirer).map(walletaddress",{"_index":2875,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["array.from(assetmap.values",{"_index":3851,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["array.from(balances.entries",{"_index":3794,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["array.isarray(acquirereq.assets",{"_index":283,"title":{},"body":{"injectables/AcquireService.html":{}}}],["array.isarray(obj",{"_index":4965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(signedtx.signatures",{"_index":4303,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["arraybuffer",{"_index":4956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asc",{"_index":2959,"title":{},"body":{"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"miscellaneous/enumerations.html":{}}}],["asset",{"_index":212,"title":{"entities/Asset.html":{}},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/AwsController.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/enumerations.html":{}}}],["asset.asset_id",{"_index":3849,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.asset_name",{"_index":3218,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.assetid",{"_index":3854,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.assetname",{"_index":2077,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.deleted",{"_index":3120,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.dex_price",{"_index":1174,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.dto",{"_index":1125,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.dto.ts",{"_index":982,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:13",{"_index":994,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:17",{"_index":995,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:22",{"_index":992,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:35",{"_index":990,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:41",{"_index":2355,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:45",{"_index":2354,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:49",{"_index":2344,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:54",{"_index":2352,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:58",{"_index":2351,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:63",{"_index":2347,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:68",{"_index":2346,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:73",{"_index":2349,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:9",{"_index":996,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.entity",{"_index":3910,"title":{},"body":{"entities/Transaction.html":{}}}],["asset.floor_price",{"_index":1173,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.id",{"_index":3216,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.isnft",{"_index":3878,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.last_valuation",{"_index":1175,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.locked_at",{"_index":1167,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.metadata",{"_index":3850,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.origin_type",{"_index":3214,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["asset.policy_id",{"_index":3848,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.policy_id}.${asset.asset_name",{"_index":3220,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.policy_id}_${asset.asset_id",{"_index":3842,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.policyid",{"_index":2078,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.policyid}.${asset.assetid",{"_index":3870,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.quantity",{"_index":1705,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.released_at",{"_index":1170,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.status",{"_index":1164,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["asset.transaction",{"_index":3888,"title":{},"body":{"entities/Transaction.html":{}}}],["asset.type",{"_index":1172,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TaptoolsService.html":{}}}],["asset.unit",{"_index":673,"title":{},"body":{"interfaces/Amount.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["asset.unit.slice(0",{"_index":677,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["asset.unit.slice(56",{"_index":2176,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.valueada",{"_index":3876,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.valueusd",{"_index":3877,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.vault",{"_index":1180,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TransactionsService.html":{}}}],["asset.vault.owner.id",{"_index":1161,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.vault.vault_status",{"_index":1163,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40",{"_index":2233,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["asset_appreciation",{"_index":2473,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["asset_count_cap_max",{"_index":1183,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["asset_count_cap_min",{"_index":1184,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["asset_id",{"_index":330,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{}}}],["asset_name",{"_index":2097,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["asset_sale",{"_index":2406,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["asset_value_${policyid}_${assetname",{"_index":3826,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset_vault_name",{"_index":525,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["asset_whitelist",{"_index":2536,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["asset_window",{"_index":601,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["assetdetails",{"_index":3801,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetdetails.data",{"_index":3803,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetid",{"_index":966,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/CreateProposalReq.html":{},"injectables/TaptoolsService.html":{}}}],["assetid'})@column({name",{"_index":921,"title":{},"body":{"entities/Asset.html":{}}}],["assetitem",{"_index":324,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem.assetname",{"_index":331,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem.policyid",{"_index":329,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem.quantity",{"_index":333,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem?.metadata",{"_index":339,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetmap",{"_index":3839,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetmap.get(key",{"_index":3844,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetmap.set(key",{"_index":3847,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetmetadatadto",{"_index":980,"title":{"classes/AssetMetadataDto.html":{}},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["assetname",{"_index":656,"title":{},"body":{"interfaces/Amount.html":{},"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/functions.html":{}}}],["assetname.new(buffer.from(asset.unit.slice(56",{"_index":686,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetorigintype",{"_index":259,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"miscellaneous/enumerations.html":{}}}],["assetorigintype.acquired",{"_index":336,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["assetorigintype.contributed",{"_index":1152,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["assetrepository",{"_index":243,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["assets",{"_index":219,"title":{},"body":{"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/variables.html":{}}}],["assets\".\"origin_type",{"_index":533,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["assets.controller",{"_index":1092,"title":{},"body":{"modules/AssetsModule.html":{}}}],["assets.filter(asset",{"_index":675,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assets.find(asset",{"_index":672,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assets.length",{"_index":727,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{}}}],["assets.map(asset",{"_index":1156,"title":{},"body":{"injectables/AssetsService.html":{}}}],["assets.map(async",{"_index":1179,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TransactionsService.html":{}}}],["assets.new",{"_index":682,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assets.service",{"_index":1076,"title":{},"body":{"controllers/AssetsController.html":{},"modules/AssetsModule.html":{}}}],["assets_offered_percent",{"_index":2606,"title":{},"body":{"injectables/DistributionService.html":{}}}],["assets_origin_type_enum",{"_index":518,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["assets_origin_type_enum_old",{"_index":511,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["assets_whitelist",{"_index":1198,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["assetsbyusers",{"_index":3196,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["assetscontroller",{"_index":1061,"title":{"controllers/AssetsController.html":{}},"body":{"controllers/AssetsController.html":{},"modules/AssetsModule.html":{}}}],["assetscount",{"_index":4374,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["assetslist",{"_index":2073,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["assetsmodule",{"_index":850,"title":{"modules/AssetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules.html":{},"overview.html":{}}}],["assetsprices",{"_index":4376,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["assetsrepository",{"_index":1105,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{}}}],["assetsresponse",{"_index":3780,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetsresponse.data.received_sum.foreach(asset",{"_index":3785,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetsresponse.data.sent_sum.foreach(asset",{"_index":3788,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetsservice",{"_index":1075,"title":{"injectables/AssetsService.html":{}},"body":{"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"overview.html":{}}}],["assetstatus",{"_index":258,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["assetstatus.locked",{"_index":1166,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["assetstatus.pending",{"_index":334,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{}}}],["assetstatus.released",{"_index":1169,"title":{},"body":{"injectables/AssetsService.html":{}}}],["assetstovalue",{"_index":669,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetstovalue(amount",{"_index":709,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue",{"_index":681,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LifecycleService.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue.insert",{"_index":685,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue.len",{"_index":688,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue.totalvalueada",{"_index":3145,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["assetsvalue.totalvalueusd",{"_index":3146,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["assetswhitelist",{"_index":4407,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["assetswhitelistentity",{"_index":1181,"title":{"entities/AssetsWhitelistEntity.html":{}},"body":{"entities/AssetsWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["assetswhitelistrepository",{"_index":2669,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["assetswithvalues",{"_index":3852,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.filter(a",{"_index":3874,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.length",{"_index":3873,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.map(asset",{"_index":3875,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.push",{"_index":3859,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assettype",{"_index":257,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"injectables/TaptoolsService.html":{},"miscellaneous/enumerations.html":{}}}],["assettype.cnt",{"_index":326,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{}}}],["assettype.nft",{"_index":1135,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{}}}],["assetvalue",{"_index":3860,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetvalue?.priceada",{"_index":3862,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetvalue?.priceusd",{"_index":3863,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetvaluedto",{"_index":1009,"title":{"classes/AssetValueDto.html":{}},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["assetvaultname",{"_index":3130,"title":{},"body":{"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["assetwhitelist",{"_index":368,"title":{"classes/AssetWhitelist.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["assetwhitelistdto",{"_index":1046,"title":{"classes/AssetWhitelistDto.html":{}},"body":{"classes/AssetWhitelistDto.html":{}}}],["assetwindow",{"_index":4243,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["async",{"_index":15,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":1798,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["attempting",{"_index":1808,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["attributes",{"_index":983,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["auth",{"_index":1201,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":1250,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":1210,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.guard",{"_index":157,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AwsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["authcontroller",{"_index":1199,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticated",{"_index":3947,"title":{},"body":{"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":1322,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["authguard",{"_index":156,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"guards/AuthGuard.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["authmodule",{"_index":851,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4917,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1787,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["authservice",{"_index":1209,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["auto",{"_index":1472,"title":{},"body":{"injectables/AwsService.html":{}}}],["autoloadentities",{"_index":902,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":3032,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["avoid",{"_index":2764,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/TaptoolsService.html":{}}}],["await",{"_index":37,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1464,"title":{},"body":{"injectables/AwsService.html":{},"dependencies.html":{},"index.html":{}}}],["aws.controller",{"_index":1416,"title":{},"body":{"modules/AwsModule.html":{}}}],["aws.s3",{"_index":1461,"title":{},"body":{"injectables/AwsService.html":{}}}],["aws.service",{"_index":1370,"title":{},"body":{"controllers/AwsController.html":{},"modules/AwsModule.html":{}}}],["aws_bucket/aws.controller",{"_index":4132,"title":{},"body":{"controllers/UsersController.html":{}}}],["aws_bucket/aws.module",{"_index":4159,"title":{},"body":{"modules/UsersModule.html":{},"modules/VaultsModule.html":{}}}],["aws_bucket/aws.service",{"_index":2686,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["awscontroller",{"_index":1333,"title":{"controllers/AwsController.html":{}},"body":{"controllers/AwsController.html":{},"modules/AwsModule.html":{}}}],["awsmodule",{"_index":852,"title":{"modules/AwsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AwsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["awsservice",{"_index":1369,"title":{"injectables/AwsService.html":{}},"body":{"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["axios",{"_index":1770,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{},"dependencies.html":{}}}],["axios.get('https://api.coingecko.com/api/v3/simple/price",{"_index":3719,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.baseurl}/token/price",{"_index":3827,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.baseurl}/wallet/portfolio/positions?address=${walletaddress",{"_index":3740,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}/assets/${assetid",{"_index":3774,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}addresses/${walletaddress",{"_index":3778,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}addresses/${walletaddress}/total",{"_index":3781,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}assets/${asset.unit",{"_index":3802,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.scannerurl}${endpoint",{"_index":1786,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["axios.isaxioserror(err",{"_index":3737,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.post",{"_index":1790,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["b",{"_index":772,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["b255d78aaf821388e00cbc03e09add05810e346b2b1f2a5db236752aec116a50",{"_index":3376,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["back",{"_index":2169,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["backers",{"_index":4914,"title":{},"body":{"index.html":{}}}],["backward",{"_index":3866,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["badrequestexception",{"_index":255,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('asset",{"_index":1162,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('assets",{"_index":1131,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('at",{"_index":286,"title":{},"body":{"injectables/AcquireService.html":{}}}],["badrequestexception('cannot",{"_index":2741,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["badrequestexception('csv",{"_index":1532,"title":{},"body":{"injectables/AwsService.html":{}}}],["badrequestexception('dex",{"_index":1140,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('draft",{"_index":2725,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["badrequestexception('failed",{"_index":346,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{}}}],["badrequestexception('governance",{"_index":3031,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["badrequestexception('invalid",{"_index":3365,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["badrequestexception('only",{"_index":1165,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('token",{"_index":1137,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('user",{"_index":301,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('vault",{"_index":279,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{}}}],["badrequestexception(`error",{"_index":1536,"title":{},"body":{"injectables/AwsService.html":{}}}],["badrequestexception(`vault",{"_index":1177,"title":{},"body":{"injectables/AssetsService.html":{}}}],["balance",{"_index":2198,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/TaptoolsService.html":{}}}],["balances",{"_index":3782,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["balances.get('lovelace",{"_index":3791,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["balances.get(asset.unit",{"_index":3790,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["balances.set(asset.unit",{"_index":3786,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["banner",{"_index":3608,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["banner_image",{"_index":2710,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["banner_image_id",{"_index":2428,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{}}}],["bannerimage",{"_index":1320,"title":{},"body":{"injectables/AuthService.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{}}}],["bannerimage'})@onetoone(undefined)@joincolumn({name",{"_index":4077,"title":{},"body":{"entities/User.html":{}}}],["bannerimg",{"_index":2757,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["bannerimgkey",{"_index":2755,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["base",{"_index":777,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["base_address_preprod",{"_index":4591,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["baseallocation",{"_index":4332,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["based",{"_index":2135,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/GovernanceService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["baseurl",{"_index":762,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["basic",{"_index":3432,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/UsersService.html":{}}}],["batch",{"_index":3806,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["batches",{"_index":3797,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["batchresults",{"_index":3804,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["batchsize",{"_index":3800,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["bearer",{"_index":1243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BlockchainScannerService.html":{}}}],["because...'})@isstring",{"_index":4523,"title":{},"body":{"classes/VoteReq.html":{}}}],["before",{"_index":1538,"title":{},"body":{"injectables/AwsService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/LifecycleService.html":{}}}],["beforeinsert",{"_index":419,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["beforeupdate",{"_index":420,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["being",{"_index":1803,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["between",{"_index":2488,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["bigint",{"_index":662,"title":{},"body":{"interfaces/Amount.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["bignum",{"_index":657,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{}}}],["bignum.from_str(string(asset.quantity",{"_index":687,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["binary",{"_index":4071,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["blaze",{"_index":4736,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":615,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ContributionService.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["block_height",{"_index":1570,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["block_time",{"_index":1571,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockchain",{"_index":1587,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["blockchain.controller",{"_index":1717,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["blockchain.service",{"_index":1718,"title":{},"body":{"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["blockchain/addresses/${address}/transactions",{"_index":1820,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["blockchain/database",{"_index":3042,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["blockchainaddressresponse",{"_index":1564,"title":{"interfaces/BlockchainAddressResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaincontractresponse",{"_index":1580,"title":{"interfaces/BlockchainContractResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaincontroller",{"_index":1585,"title":{"controllers/BlockchainController.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{}}}],["blockchainmodule",{"_index":853,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainscanner",{"_index":2032,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["blockchainscannerservice",{"_index":1711,"title":{"injectables/BlockchainScannerService.html":{}},"body":{"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"overview.html":{}}}],["blockchainservice",{"_index":1712,"title":{"injectables/BlockchainService.html":{}},"body":{"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"overview.html":{}}}],["blockchaintokenresponse",{"_index":1583,"title":{"interfaces/BlockchainTokenResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaintransactionlistitem",{"_index":1568,"title":{"interfaces/BlockchainTransactionListItem.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"injectables/ContributionService.html":{}}}],["blockchaintransactionlistresponse",{"_index":1572,"title":{"interfaces/BlockchainTransactionListResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaintransactionresponse",{"_index":1573,"title":{"interfaces/BlockchainTransactionResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaintxs",{"_index":2291,"title":{},"body":{"injectables/ContributionService.html":{}}}],["blockchainutxo",{"_index":1567,"title":{"interfaces/BlockchainUtxo.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchainwebhookdto",{"_index":1605,"title":{"classes/BlockchainWebhookDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["blockfrost",{"_index":696,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["blockfrost.addressesutxosall(address.to_bech32",{"_index":698,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["blockfrost.assetstransactions(unit",{"_index":724,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrost.txsutxos(assets[0].tx_hash",{"_index":729,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrost/blockfrost",{"_index":648,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"dependencies.html":{}}}],["blockfrostamount",{"_index":1898,"title":{"classes/BlockfrostAmount.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrostapi",{"_index":2015,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["blockfrostservererror",{"_index":647,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrostservererror).status_code",{"_index":737,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrosttestneturl",{"_index":3668,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["blockfrosttransaction",{"_index":1910,"title":{"classes/BlockfrostTransaction.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrosttransactionevent",{"_index":1885,"title":{"classes/BlockfrostTransactionEvent.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrosttransaction})@isobject()@validatenested()@type(undefined)@expose",{"_index":1967,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["blockfrosttxinput",{"_index":1900,"title":{"classes/BlockfrostTxInput.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrosttxoutput",{"_index":1908,"title":{"classes/BlockfrostTxOutput.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockheight",{"_index":1696,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["blueprint",{"_index":2026,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["blueprint.validators.find(v",{"_index":2062,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["board",{"_index":4907,"title":{},"body":{"index.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AuthController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"dependencies.html":{}}}],["body.middleware.ts",{"_index":3515,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["body.middleware.ts:7",{"_index":3520,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["body.middleware.ts:9",{"_index":3518,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["boolean",{"_index":559,"title":{},"body":{"classes/AddedDelete1747838327085.html":{},"entities/Asset.html":{},"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/CreatePoolDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["bootstrap",{"_index":195,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":3412,"title":{},"body":{"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{}}}],["bound_type",{"_index":2538,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["browse",{"_index":4926,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4924,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1342,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{}}}],["bucketkey",{"_index":1443,"title":{},"body":{"injectables/AwsService.html":{}}}],["bucketname",{"_index":1427,"title":{},"body":{"injectables/AwsService.html":{}}}],["buffer",{"_index":645,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["buffer.from(details.asset_name",{"_index":3810,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["buffer.from(headermap.header(label.new_text('address')).to_bytes",{"_index":1279,"title":{},"body":{"injectables/AuthService.html":{}}}],["buffer.from(payload).tostring('utf8",{"_index":1296,"title":{},"body":{"injectables/AuthService.html":{}}}],["buffer.from(str).tostring('hex",{"_index":741,"title":{},"body":{"interfaces/Amount.html":{}}}],["buffer.isbuffer(req.body",{"_index":1667,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["build",{"_index":1594,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["build/:id",{"_index":4433,"title":{},"body":{"controllers/VaultsController.html":{}}}],["building",{"_index":1858,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"index.html":{}}}],["buildresponse",{"_index":1852,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["buildresponse.complete",{"_index":1855,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["buildresponse.data",{"_index":4645,"title":{},"body":{"injectables/VyfiService.html":{}}}],["builds",{"_index":1832,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["buildtransaction",{"_index":811,"title":{},"body":{"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"injectables/VaultInsertingService.html":{}}}],["buildtransaction(@body",{"_index":1646,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["buildtransaction(params",{"_index":805,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["buildtransaction(txdata",{"_index":1830,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["buildtransactiondto",{"_index":1592,"title":{"classes/BuildTransactionDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["buildtransactionoutput",{"_index":2012,"title":{"interfaces/BuildTransactionOutput.html":{}},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["buildtransactionparams",{"_index":753,"title":{"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["built",{"_index":1596,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["burn",{"_index":55,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["burnconfig",{"_index":4322,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["burnconfig.assetvaultname",{"_index":4290,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["burnconfig.customeraddress",{"_index":4291,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["burndto",{"_index":3331,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burned",{"_index":734,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{}}}],["burning",{"_index":2192,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["burnlp",{"_index":2509,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["burnlptokens",{"_index":3322,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burnlptokens(burndto",{"_index":3328,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burnlptokensparams",{"_index":2188,"title":{"interfaces/BurnLpTokensParams.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["burnpublishatempt",{"_index":4418,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burnpublishatempt(id",{"_index":4426,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burns",{"_index":3330,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burntx",{"_index":3123,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["burntx.presignedtx",{"_index":3133,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["burnvault",{"_index":1588,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["burnvault(@request",{"_index":1648,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["burnvault(req",{"_index":1599,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["burnvaultattempt",{"_index":4419,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burnvaultattempt(@param('id",{"_index":4504,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burnvaultattempt(id",{"_index":4432,"title":{},"body":{"controllers/VaultsController.html":{}}}],["business",{"_index":2566,"title":{},"body":{"injectables/DistributionService.html":{}}}],["by'})@expose",{"_index":2956,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["bypass",{"_index":290,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["bytes",{"_index":1923,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e",{"_index":2232,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75",{"_index":1904,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75'})@isstring()@expose",{"_index":1976,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["cache",{"_index":3669,"title":{},"body":{"injectables/TaptoolsService.html":{},"dependencies.html":{}}}],["cached",{"_index":3732,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["cachedprice",{"_index":3717,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["cachekey",{"_index":3715,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["calculate",{"_index":3142,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"injectables/UsersService.html":{}}}],["calculateacquirerexample",{"_index":2582,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculateacquirerexample(params",{"_index":2590,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatecontributorexample",{"_index":2583,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatecontributorexample(params",{"_index":2592,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatelpada",{"_index":2584,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatelpada(adasent",{"_index":2594,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculates",{"_index":3658,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["calculatetotalvalueretained",{"_index":2585,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatetotalvalueretained(netada",{"_index":2598,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatevaultassetsvalue",{"_index":3671,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["calculatevaultassetsvalue(vaultid",{"_index":3679,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["calculatevtprice",{"_index":2586,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatevtprice(adasent",{"_index":2604,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculating",{"_index":2568,"title":{},"body":{"injectables/DistributionService.html":{}}}],["callanvilapi",{"_index":774,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["callanvilapi(undefined",{"_index":816,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["can't",{"_index":3868,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["canactivate",{"_index":1221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":1226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancelada",{"_index":2518,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["cancelasset",{"_index":2517,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["cardano",{"_index":1518,"title":{},"body":{"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["cardano/uplc",{"_index":4737,"title":{},"body":{"dependencies.html":{}}}],["cardanoaddressregex",{"_index":1505,"title":{},"body":{"injectables/AwsService.html":{}}}],["cardanoaddressregex.test(address",{"_index":1516,"title":{},"body":{"injectables/AwsService.html":{}}}],["cascade",{"_index":77,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/LinkEntity.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["cascade'})@joincolumn({name",{"_index":413,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{}}}],["case",{"_index":3856,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["catch",{"_index":341,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["category",{"_index":984,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["cbor",{"_index":758,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{},"dependencies.html":{}}}],["cd153e0a",{"_index":1879,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["certificate_index",{"_index":2534,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["cf68eb9c",{"_index":1890,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["chain",{"_index":739,"title":{},"body":{"interfaces/Amount.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["change",{"_index":1985,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["change_output_index",{"_index":2516,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["changeaddress",{"_index":754,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["changeassetsownertype.ts",{"_index":2206,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype.ts:32",{"_index":2208,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype.ts:4",{"_index":2207,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype.ts:6",{"_index":2209,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype1743678745097",{"_index":2204,"title":{"classes/ChangeAssetsOwnerType1743678745097.html":{}},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeintervaltobigint.ts",{"_index":2218,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint.ts:23",{"_index":2220,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint.ts:4",{"_index":2219,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint.ts:6",{"_index":2221,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint1742311345554",{"_index":2216,"title":{"classes/ChangeIntervalToBigint1742311345554.html":{}},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changes",{"_index":4838,"title":{},"body":{"index.html":{}}}],["channel",{"_index":4884,"title":{},"body":{"index.html":{}}}],["character",{"_index":371,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFields1746536544579.html":{},"classes/SocialLink.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["characters",{"_index":1527,"title":{},"body":{"injectables/AwsService.html":{}}}],["check",{"_index":292,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"index.html":{}}}],["checking",{"_index":3141,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["checkmonitoringaddress",{"_index":1723,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["checkmonitoringaddress(vaultaddress",{"_index":1736,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["checkpool",{"_index":4527,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["checkpool(networkid",{"_index":4530,"title":{},"body":{"controllers/VyfiController.html":{}}}],["checkpool(params",{"_index":4576,"title":{},"body":{"injectables/VyfiService.html":{}}}],["chk_9d2496e0bc2b30a41372df4bd4",{"_index":2487,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["cip25",{"_index":2090,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["claim",{"_index":3400,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["class",{"_index":0,"title":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"classes/VoteReq.html":{},"classes/WalletSummaryDto.html":{}},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"classes/VoteReq.html":{},"classes/WalletSummaryDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":1360,"title":{},"body":{"controllers/AwsController.html":{}}}],["classtoplain",{"_index":1123,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["classtoplain(asset",{"_index":1147,"title":{},"body":{"injectables/AssetsService.html":{}}}],["classtoplain(selecteduser",{"_index":4225,"title":{},"body":{"injectables/UsersService.html":{}}}],["classtoplain(user",{"_index":4200,"title":{},"body":{"injectables/UsersService.html":{}}}],["classtoplain(usersource",{"_index":4193,"title":{},"body":{"injectables/UsersService.html":{}}}],["classtoplain(vault",{"_index":2722,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["clicks",{"_index":4869,"title":{},"body":{"index.html":{}}}],["closing",{"_index":2455,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"miscellaneous/enumerations.html":{}}}],["cloud",{"_index":4856,"title":{},"body":{"index.html":{}}}],["cluster_acquiremodule",{"_index":198,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_acquiremodule_exports",{"_index":200,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_acquiremodule_imports",{"_index":199,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_acquiremodule_providers",{"_index":201,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":847,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":848,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":849,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_assetsmodule",{"_index":1087,"title":{},"body":{"modules/AssetsModule.html":{},"overview.html":{}}}],["cluster_assetsmodule_exports",{"_index":1089,"title":{},"body":{"modules/AssetsModule.html":{},"overview.html":{}}}],["cluster_assetsmodule_providers",{"_index":1088,"title":{},"body":{"modules/AssetsModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1244,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":1247,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":1245,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_awsmodule",{"_index":1407,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_exports",{"_index":1409,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_providers",{"_index":1408,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule",{"_index":1707,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_exports",{"_index":1708,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":1710,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["cluster_blockchainmodule_providers",{"_index":1709,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_contributionmodule",{"_index":2266,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_exports",{"_index":2268,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_imports",{"_index":2267,"title":{},"body":{"modules/ContributionModule.html":{}}}],["cluster_contributionmodule_providers",{"_index":2269,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_distributionmodule",{"_index":2556,"title":{},"body":{"modules/DistributionModule.html":{},"overview.html":{}}}],["cluster_distributionmodule_exports",{"_index":2557,"title":{},"body":{"modules/DistributionModule.html":{},"overview.html":{}}}],["cluster_distributionmodule_providers",{"_index":2558,"title":{},"body":{"modules/DistributionModule.html":{},"overview.html":{}}}],["cluster_governancemodule",{"_index":3017,"title":{},"body":{"modules/GovernanceModule.html":{},"overview.html":{}}}],["cluster_governancemodule_exports",{"_index":3019,"title":{},"body":{"modules/GovernanceModule.html":{},"overview.html":{}}}],["cluster_governancemodule_providers",{"_index":3018,"title":{},"body":{"modules/GovernanceModule.html":{},"overview.html":{}}}],["cluster_jwtglobalmodule",{"_index":3045,"title":{},"body":{"modules/JwtGlobalModule.html":{},"overview.html":{}}}],["cluster_jwtglobalmodule_exports",{"_index":3047,"title":{},"body":{"modules/JwtGlobalModule.html":{},"overview.html":{}}}],["cluster_jwtglobalmodule_imports",{"_index":3046,"title":{},"body":{"modules/JwtGlobalModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule",{"_index":3052,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule_exports",{"_index":3055,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule_imports",{"_index":3054,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["cluster_lifecyclemodule_providers",{"_index":3053,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lptokensmodule",{"_index":3311,"title":{},"body":{"modules/LpTokensModule.html":{},"overview.html":{}}}],["cluster_lptokensmodule_exports",{"_index":3312,"title":{},"body":{"modules/LpTokensModule.html":{},"overview.html":{}}}],["cluster_lptokensmodule_imports",{"_index":3313,"title":{},"body":{"modules/LpTokensModule.html":{}}}],["cluster_lptokensmodule_providers",{"_index":3314,"title":{},"body":{"modules/LpTokensModule.html":{},"overview.html":{}}}],["cluster_taptoolsmodule",{"_index":3662,"title":{},"body":{"modules/TaptoolsModule.html":{},"overview.html":{}}}],["cluster_taptoolsmodule_exports",{"_index":3663,"title":{},"body":{"modules/TaptoolsModule.html":{},"overview.html":{}}}],["cluster_taptoolsmodule_providers",{"_index":3664,"title":{},"body":{"modules/TaptoolsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule",{"_index":3964,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_exports",{"_index":3966,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_providers",{"_index":3965,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":4154,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":4155,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":4156,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":4157,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_vaultsmodule",{"_index":4508,"title":{},"body":{"modules/VaultsModule.html":{},"overview.html":{}}}],["cluster_vaultsmodule_exports",{"_index":4510,"title":{},"body":{"modules/VaultsModule.html":{},"overview.html":{}}}],["cluster_vaultsmodule_imports",{"_index":4509,"title":{},"body":{"modules/VaultsModule.html":{}}}],["cluster_vaultsmodule_providers",{"_index":4511,"title":{},"body":{"modules/VaultsModule.html":{},"overview.html":{}}}],["cluster_vyfimodule",{"_index":4564,"title":{},"body":{"modules/VyfiModule.html":{},"overview.html":{}}}],["cluster_vyfimodule_exports",{"_index":4565,"title":{},"body":{"modules/VyfiModule.html":{},"overview.html":{}}}],["cluster_vyfimodule_providers",{"_index":4566,"title":{},"body":{"modules/VyfiModule.html":{},"overview.html":{}}}],["cnt",{"_index":327,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["collateral",{"_index":1907,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["collector",{"_index":3605,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["column",{"_index":65,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"entities/User.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["column({name",{"_index":925,"title":{},"body":{"entities/Asset.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":3885,"title":{},"body":{"entities/Transaction.html":{}}}],["column({type",{"_index":940,"title":{},"body":{"entities/Asset.html":{}}}],["column({unique",{"_index":3629,"title":{},"body":{"entities/TagEntity.html":{}}}],["columns",{"_index":495,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"injectables/AwsService.html":{}}}],["combined",{"_index":2002,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["come",{"_index":4876,"title":{},"body":{"index.html":{}}}],["comment",{"_index":532,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{}}}],["compare",{"_index":4729,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["comparing",{"_index":2283,"title":{},"body":{"injectables/ContributionService.html":{}}}],["compatibility",{"_index":3867,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["complete",{"_index":757,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["components",{"_index":4703,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["compute",{"_index":4710,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["computed",{"_index":4716,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["config",{"_index":4259,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["configmodule",{"_index":861,"title":{},"body":{"modules/AppModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LpTokensModule.html":{},"modules/VyfiModule.html":{}}}],["configmodule.forroot",{"_index":884,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["configservice",{"_index":749,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"guards/AuthGuard.html":{},"modules/AwsModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/JwtGlobalModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('jwt_secret",{"_index":1421,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["configuration",{"_index":4258,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["configured",{"_index":778,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["confirmed",{"_index":629,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('anvil",{"_index":804,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.error('error",{"_index":1308,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/TaptoolsService.html":{}}}],["console.error('webhook",{"_index":1691,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["console.error(`error",{"_index":3777,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["console.error(error",{"_index":2886,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["console.log('base",{"_index":788,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('body",{"_index":791,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('endpoint",{"_index":794,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('error",{"_index":1854,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["console.log('headers",{"_index":790,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('input",{"_index":2103,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["console.log('method",{"_index":789,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('received",{"_index":1679,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["console.log('transaction",{"_index":2177,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["console.log('tx",{"_index":4014,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["console.log(json.stringify(inputwithnopreloaded",{"_index":3410,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["console.log(json.stringify(output",{"_index":3398,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["console.warn(`could",{"_index":3812,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["const",{"_index":177,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":4593,"title":{},"body":{"injectables/VyfiService.html":{}}}],["constraint",{"_index":42,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["constrplutusdata",{"_index":661,"title":{},"body":{"interfaces/Amount.html":{}}}],["construct",{"_index":4634,"title":{},"body":{"injectables/VyfiService.html":{}}}],["constructor",{"_index":168,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/SocialLink.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TagDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["constructor(assetsrepository",{"_index":1102,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{}}}],["constructor(configservice",{"_index":813,"title":{},"body":{"injectables/AnvilApiService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["constructor(filerepository",{"_index":1437,"title":{},"body":{"injectables/AwsService.html":{}}}],["constructor(httpservice",{"_index":4574,"title":{},"body":{"injectables/VyfiService.html":{}}}],["constructor(jwtservice",{"_index":1223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(partial",{"_index":357,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{}}}],["constructor(private",{"_index":764,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VyfiController.html":{},"injectables/WebhookVerificationService.html":{}}}],["constructor(transactionrepository",{"_index":2274,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["constructor(transactionsservice",{"_index":3326,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["constructor(usersrepository",{"_index":4164,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":1254,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(vaultrepository",{"_index":240,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/GovernanceService.html":{},"injectables/TaptoolsService.html":{}}}],["constructor(vaultsrepository",{"_index":2588,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/VaultInsertingService.html":{}}}],["containing",{"_index":1524,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["contains",{"_index":1533,"title":{},"body":{"injectables/AwsService.html":{}}}],["content",{"_index":782,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["contenttype",{"_index":1447,"title":{},"body":{"injectables/AwsService.html":{}}}],["context",{"_index":1229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1235,"title":{},"body":{"guards/AuthGuard.html":{}}}],["continue",{"_index":2171,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["contract",{"_index":1929,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ContributionService.html":{},"classes/VaultShortResponse.html":{}}}],["contract_address",{"_index":438,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{},"entities/Asset.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["contract_type",{"_index":2535,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["contractaddress",{"_index":967,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/BlockchainScannerService.html":{},"classes/CreateAssetDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["contractaddress'})@column({name",{"_index":923,"title":{},"body":{"entities/Asset.html":{}}}],["contractdeployed",{"_index":1849,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["contractdeployed.json",{"_index":1853,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["contracts",{"_index":2523,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["contracttype",{"_index":4244,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["contribute",{"_index":52,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AcquireReq.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"classes/GetVaultTransactionsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"injectables/TaptoolsService.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["contribute'})@isarray()@validatenested({each",{"_index":224,"title":{},"body":{"classes/AcquireReq.html":{},"classes/ContributeReq.html":{}}}],["contribute(@req",{"_index":2262,"title":{},"body":{"controllers/ContributionController.html":{}}}],["contribute(req",{"_index":2253,"title":{},"body":{"controllers/ContributionController.html":{}}}],["contribute(vaultid",{"_index":2278,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contribute.contribute",{"_index":2064,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["contributed",{"_index":514,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["contributed_assets",{"_index":2506,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["contributereq",{"_index":2224,"title":{"classes/ContributeReq.html":{}},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["contributereq.assets.filter(asset",{"_index":2319,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contributereq.assets.length",{"_index":2317,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contributereq.assets.map(async",{"_index":2330,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contribution",{"_index":97,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"classes/GetVaultsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["contribution.controller",{"_index":2271,"title":{},"body":{"modules/ContributionModule.html":{}}}],["contribution.service",{"_index":2258,"title":{},"body":{"controllers/ContributionController.html":{},"modules/ContributionModule.html":{}}}],["contribution/acquire",{"_index":3035,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["contribution/contribution.module",{"_index":3059,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["contribution/contribution.service",{"_index":3084,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contribution/dto/contribute.req",{"_index":233,"title":{},"body":{"classes/AcquireReq.html":{}}}],["contribution/dto/txupdate.req",{"_index":162,"title":{},"body":{"controllers/AcquireController.html":{}}}],["contribution_duration",{"_index":603,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["contribution_open_window_time",{"_index":2462,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["contribution_open_window_type",{"_index":2461,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum",{"_index":2896,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum_old",{"_index":2898,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["contribution_phase_start",{"_index":498,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["contributionasset",{"_index":220,"title":{"classes/ContributionAsset.html":{}},"body":{"classes/AcquireReq.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["contributioncontroller",{"_index":2250,"title":{"controllers/ContributionController.html":{}},"body":{"controllers/ContributionController.html":{},"modules/ContributionModule.html":{}}}],["contributionduration",{"_index":4382,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributiondurationms",{"_index":3113,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionend",{"_index":3115,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionmodule",{"_index":854,"title":{"modules/ContributionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/LifecycleModule.html":{},"modules.html":{},"overview.html":{}}}],["contributionopenwindowtime",{"_index":4387,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributionopenwindowtype",{"_index":4386,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributionphasestart",{"_index":4408,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributionservice",{"_index":2257,"title":{"injectables/ContributionService.html":{}},"body":{"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"overview.html":{}}}],["contributionstart",{"_index":3111,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionvaults",{"_index":3107,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionwindowtype",{"_index":3080,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["contributionwindowtype.custom",{"_index":3105,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionwindowtype.uponvaultlaunch",{"_index":3097,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributor",{"_index":2328,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["contributor/acquirer",{"_index":2578,"title":{},"body":{"injectables/DistributionService.html":{}}}],["contributor_whitelist",{"_index":543,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["contributoritems",{"_index":2880,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["contributors",{"_index":2570,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["contributorshare",{"_index":2617,"title":{},"body":{"injectables/DistributionService.html":{}}}],["contributorvaluemap",{"_index":3199,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributorvaluemap[userid",{"_index":3222,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributorwhitelist",{"_index":385,"title":{"classes/ContributorWhitelist.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/VaultShortResponse.html":{}}}],["contributorwhitelistentity",{"_index":2336,"title":{"entities/ContributorWhitelistEntity.html":{}},"body":{"entities/ContributorWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["contributorwhitelistrepository",{"_index":2671,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["control",{"_index":1390,"title":{},"body":{"controllers/AwsController.html":{}}}],["controller",{"_index":107,"title":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}},"body":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["controller('/info",{"_index":844,"title":{},"body":{"controllers/AppController.html":{}}}],["controller('acquire",{"_index":167,"title":{},"body":{"controllers/AcquireController.html":{}}}],["controller('assets",{"_index":1078,"title":{},"body":{"controllers/AssetsController.html":{}}}],["controller('auth",{"_index":1213,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('blockchain",{"_index":1643,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["controller('contribute",{"_index":2261,"title":{},"body":{"controllers/ContributionController.html":{}}}],["controller('governance",{"_index":3002,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["controller('lp",{"_index":3303,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["controller('taptools",{"_index":3652,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["controller('transactions",{"_index":3956,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["controller('users",{"_index":4137,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('vaults",{"_index":4473,"title":{},"body":{"controllers/VaultsController.html":{}}}],["controller('vyfi",{"_index":4553,"title":{},"body":{"controllers/VyfiController.html":{}}}],["controllers",{"_index":109,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["convert",{"_index":2175,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["core",{"_index":2565,"title":{},"body":{"injectables/DistributionService.html":{}}}],["corresponding",{"_index":2299,"title":{},"body":{"injectables/ContributionService.html":{}}}],["cosekey",{"_index":1260,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosekey.from_bytes(buffer.from(signature.key",{"_index":1283,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosesign1",{"_index":1259,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosesign1.from_bytes(buffer.from(signature.signature",{"_index":1275,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosigning",{"_index":4405,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["cosigning_threshold",{"_index":2478,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["cosigningthreshold",{"_index":4406,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["cost",{"_index":4372,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["couldn't",{"_index":3156,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["count",{"_index":725,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["count(a.id",{"_index":3167,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["countcapmax",{"_index":384,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["countcapmax'})@column({name",{"_index":1185,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["countcapmin",{"_index":381,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["countcapmin'})@column({name",{"_index":1187,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["courses",{"_index":4890,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":4843,"title":{},"body":{"index.html":{}}}],["create",{"_index":49,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"injectables/AcquireService.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["create(userdata",{"_index":4166,"title":{},"body":{"injectables/UsersService.html":{}}}],["createassetdto",{"_index":1006,"title":{"classes/CreateAssetDto.html":{}},"body":{"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"classes/CreateAssetDto.html":{}}}],["createburntx",{"_index":4316,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["createburntx(burnconfig",{"_index":4288,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["created",{"_index":95,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ContributionService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["created_at",{"_index":398,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"entities/User.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["createdat",{"_index":426,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"injectables/GovernanceService.html":{},"entities/LinkEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["createdat'})@column({name",{"_index":2924,"title":{},"body":{"entities/FileEntity.html":{}}}],["createdat'})@column({type",{"_index":402,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["createhmac('sha256",{"_index":4713,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["createliquiditypool",{"_index":4528,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["createliquiditypool(@body",{"_index":4558,"title":{},"body":{"controllers/VyfiController.html":{}}}],["createliquiditypool(createpooldto",{"_index":4539,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["createonchainvaulttx",{"_index":4317,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["createonchainvaulttx(vaultconfig",{"_index":4260,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["createparamdecorator((data",{"_index":4975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpooldto",{"_index":2356,"title":{"classes/CreatePoolDto.html":{}},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["createproposal",{"_index":2975,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["createproposal(@req",{"_index":3004,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["createproposal(req",{"_index":2979,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["createproposal(vaultid",{"_index":3024,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["createproposalreq",{"_index":2384,"title":{"classes/CreateProposalReq.html":{}},"body":{"classes/CreateProposalReq.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["createquerybuilder('vault",{"_index":3093,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["createtransaction",{"_index":3970,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createtransaction(data",{"_index":3981,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createvault",{"_index":4420,"title":{},"body":{"controllers/VaultsController.html":{}}}],["createvault(req",{"_index":4435,"title":{},"body":{"controllers/VaultsController.html":{}}}],["createvaultreq",{"_index":4436,"title":{},"body":{"controllers/VaultsController.html":{}}}],["creating",{"_index":344,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AuthService.html":{}}}],["creation",{"_index":1914,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{}}}],["creation_threshold",{"_index":2474,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["creationthreshold",{"_index":4400,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["creatorid",{"_index":3039,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["credential",{"_index":2017,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["credential.from_scripthash(scripthash.from_hex(policy_id",{"_index":2058,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["credential.from_scripthash(scripthash.from_hex(this.scpolicyid",{"_index":4262,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["credentials",{"_index":1476,"title":{},"body":{"injectables/AwsService.html":{}}}],["cron",{"_index":3078,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["cron(cronexpression.every_minute",{"_index":3075,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["cronexpression",{"_index":3079,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["crypto",{"_index":3604,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["csv",{"_index":1341,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/VaultShortResponse.html":{},"dependencies.html":{}}}],["ctn",{"_index":2443,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["ctx",{"_index":4976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":3828,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["current",{"_index":2041,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/CreateProposalReq.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["current_timestamp",{"_index":404,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["currentbalance",{"_index":3789,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["currenttime",{"_index":4720,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["custom",{"_index":988,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{},"injectables/LifecycleService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["custom_metadata",{"_index":2549,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["customer",{"_index":3413,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["customer_address",{"_index":2182,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{}}}],["customeraddress",{"_index":3125,"title":{},"body":{"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["custommetadata",{"_index":4245,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["customstartvaults",{"_index":3104,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["dao",{"_index":4789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":1107,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["data')@useguards(authguard)@post('profile/banner')@useinterceptors(undefined",{"_index":4126,"title":{},"body":{"controllers/UsersController.html":{}}}],["data')@useguards(authguard)@post('profile/image')@useinterceptors(undefined",{"_index":4129,"title":{},"body":{"controllers/UsersController.html":{}}}],["data.acquireopenwindowtime",{"_index":2822,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquireopenwindowtype",{"_index":2825,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirereserve",{"_index":2802,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelist",{"_index":2866,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelist.length",{"_index":2867,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelist?.map(item",{"_index":2869,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelistcsv?.key",{"_index":2762,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirewindowduration",{"_index":2820,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.amount",{"_index":4013,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["data.assets",{"_index":4012,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["data.assetswhitelist",{"_index":2858,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.assetswhitelist.length",{"_index":2859,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.assetswhitelist.map(whitelistitem",{"_index":2860,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.bannerimage?.split('image/')[1",{"_index":2756,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.contributionduration",{"_index":2818,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.contributionopenwindowtime",{"_index":2827,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.contributionopenwindowtype",{"_index":2830,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.cosigningthreshold",{"_index":2814,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.creationthreshold",{"_index":2806,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.description",{"_index":2790,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.dexprice",{"_index":1139,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.executionthreshold",{"_index":2812,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.floorprice",{"_index":1144,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.fttokendecimals",{"_index":2792,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.fttokenimg?.split('image/')[1",{"_index":2759,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.fttokensupply",{"_index":2794,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.id",{"_index":2739,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.liquiditypoolcontribution",{"_index":2804,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.metadata",{"_index":1145,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.name",{"_index":2779,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.privacy",{"_index":2782,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.quantity",{"_index":1143,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.sociallinks",{"_index":2842,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.sociallinks.length",{"_index":2843,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.sociallinks.map(linkitem",{"_index":2844,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.startthreshold",{"_index":2808,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.tags.map(async",{"_index":2850,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.tags?.length",{"_index":2849,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.terminationtype",{"_index":2796,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.timeelapsedisequaltotime",{"_index":2832,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.tokenid",{"_index":1136,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.tokensforacquires",{"_index":2800,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.type",{"_index":1134,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/TransactionsService.html":{}}}],["data.valuationamount",{"_index":2788,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.valuationcurrency",{"_index":2786,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.valuemethod",{"_index":2784,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.vault_id",{"_index":4010,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["data.vaultappreciation",{"_index":2816,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.vaultid",{"_index":1127,"title":{},"body":{"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{}}}],["data.vaultimage?.split('image/')[1",{"_index":2752,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.vaulttokenticker",{"_index":2798,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.votethreshold",{"_index":2810,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.whitelistcontributors",{"_index":2878,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.whitelistcontributors.length",{"_index":2879,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.whitelistcontributors.map(item",{"_index":2881,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data[0",{"_index":1514,"title":{},"body":{"injectables/AwsService.html":{}}}],["data_hash",{"_index":1577,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["database",{"_index":897,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["database/acquirerwhitelist.entity",{"_index":2695,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/asset.entity",{"_index":213,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/assetswhitelist.entity",{"_index":2696,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/contributorwhitelist.entity",{"_index":2697,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/core/**/*.entity{.ts,.js",{"_index":901,"title":{},"body":{"modules/AppModule.html":{}}}],["database/file.entity",{"_index":1415,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"classes/PublicProfileRes.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/link.entity",{"_index":2699,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/PublicProfileRes.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/tag.entity",{"_index":2701,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/transaction.entity",{"_index":1091,"title":{},"body":{"modules/AssetsModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{}}}],["database/user.entity",{"_index":215,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/AuthModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/vault.entity",{"_index":216,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"modules/VaultsModule.html":{}}}],["databasestruct.ts",{"_index":2416,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct.ts:4",{"_index":2417,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct.ts:6",{"_index":2419,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct.ts:82",{"_index":2418,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct1741879378411",{"_index":2414,"title":{"classes/DatabaseStruct1741879378411.html":{}},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasetxs",{"_index":2290,"title":{},"body":{"injectables/ContributionService.html":{}}}],["date",{"_index":914,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["date().gettime",{"_index":4277,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["date().toisostring",{"_index":429,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"entities/LinkEntity.html":{},"injectables/TaptoolsService.html":{},"entities/User.html":{}}}],["date(acquirestart.gettime",{"_index":3194,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(contributionstart.gettime",{"_index":3116,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(data.acquireopenwindowtime).toisostring",{"_index":2824,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["date(data.contributionopenwindowtime).toisostring",{"_index":2829,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["date(obj.phaseendtime",{"_index":4365,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["date(value).toisostring",{"_index":4361,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["date(vault.acquire_open_window_time",{"_index":3159,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(vault.acquire_phase_start",{"_index":3190,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(vault.contribution_phase_start",{"_index":3112,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["datum",{"_index":2021,"title":{"interfaces/Datum.html":{}},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["datum1",{"_index":2527,"title":{"interfaces/Datum1.html":{}},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["datum_tag",{"_index":2507,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["datumtag",{"_index":3396,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["db",{"_index":2304,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DistributionService.html":{}}}],["dbtx",{"_index":2300,"title":{},"body":{"injectables/ContributionService.html":{}}}],["dbtx.status",{"_index":2305,"title":{},"body":{"injectables/ContributionService.html":{}}}],["debugging",{"_index":1678,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/WebhookVerificationService.html":{}}}],["decimal",{"_index":928,"title":{},"body":{"entities/Asset.html":{},"injectables/DistributionService.html":{},"entities/User.html":{}}}],["decimals",{"_index":1033,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["declarations",{"_index":194,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["decode",{"_index":3813,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["decoded",{"_index":1274,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.headers().protected().deserialized_headers",{"_index":1277,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.payload",{"_index":1288,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.signed_data().to_bytes",{"_index":1292,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorator",{"_index":4979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":117,"title":{},"body":{"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"controllers/AppController.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{}}}],["decorators/api",{"_index":841,"title":{},"body":{"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["decorators/dto",{"_index":3498,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["deeper",{"_index":4886,"title":{},"body":{"index.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"injectables/LpTokensService.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_initial_delay_ms",{"_index":1773,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["default_max_delay_ms",{"_index":1776,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["default_max_retries",{"_index":1772,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["defineshape",{"_index":4800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defineshape(schema",{"_index":4806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["definitions",{"_index":4807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delete",{"_index":76,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["deleted",{"_index":558,"title":{},"body":{"classes/AddedDelete1747838327085.html":{},"entities/Asset.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"entities/User.html":{},"injectables/VaultInsertingService.html":{}}}],["denied",{"_index":1129,"title":{},"body":{"injectables/AssetsService.html":{}}}],["dependencies",{"_index":192,"title":{"dependencies.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":4846,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":4859,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":4853,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":4868,"title":{},"body":{"index.html":{}}}],["deposit",{"_index":1921,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["desc",{"_index":726,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["desc)'})@expose",{"_index":2960,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["description",{"_index":121,"title":{},"body":{"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"interfaces/L4VaVault.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["description'})@column({nullable",{"_index":4081,"title":{},"body":{"entities/User.html":{}}}],["description/bio",{"_index":3602,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["destination",{"_index":2000,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["detailed",{"_index":2388,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/TaptoolsService.html":{}}}],["details",{"_index":1661,"title":{},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/GovernanceController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/VaultInsertingService.html":{}}}],["details'})@apiresponse({status",{"_index":2985,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["details.asset_name",{"_index":3809,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.decimals",{"_index":3818,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.fingerprint",{"_index":3817,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.initial_mint_tx_hash",{"_index":3824,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.metadata",{"_index":3808,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.onchain_metadata",{"_index":3807,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.onchain_metadata?.files",{"_index":3822,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.policy_id",{"_index":3816,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.quantity",{"_index":3825,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.ticker",{"_index":3815,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["detected",{"_index":1875,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["determine",{"_index":2134,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["dev",{"_index":1546,"title":{},"body":{"injectables/AwsService.html":{}}}],["development",{"_index":4829,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":4895,"title":{},"body":{"index.html":{}}}],["dex_price",{"_index":910,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["dexprice",{"_index":969,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"classes/CreateAssetDto.html":{}}}],["dexprice'})@column({name",{"_index":927,"title":{},"body":{"entities/Asset.html":{}}}],["diff",{"_index":4366,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["differently",{"_index":3250,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["digest('hex",{"_index":4715,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["directly",{"_index":1344,"title":{},"body":{"controllers/AwsController.html":{}}}],["discord",{"_index":4883,"title":{},"body":{"index.html":{}}}],["display",{"_index":3599,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["displayname",{"_index":1012,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{}}}],["distribute",{"_index":60,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"miscellaneous/enumerations.html":{}}}],["distributed",{"_index":3431,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["distributelp",{"_index":4794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["distributelptokens",{"_index":3323,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["distributelptokens(dropdto",{"_index":3332,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["distributelptokensparams",{"_index":2202,"title":{"interfaces/DistributeLpTokensParams.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["distribution.service",{"_index":2561,"title":{},"body":{"modules/DistributionModule.html":{}}}],["distribution/distribution.module",{"_index":3058,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["distribution/distribution.service",{"_index":3082,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["distributionmodule",{"_index":855,"title":{"modules/DistributionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DistributionModule.html":{},"modules/LifecycleModule.html":{},"modules.html":{},"overview.html":{}}}],["distributions",{"_index":2569,"title":{},"body":{"injectables/DistributionService.html":{}}}],["distributionservice",{"_index":2559,"title":{"injectables/DistributionService.html":{}},"body":{"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{},"overview.html":{}}}],["dive",{"_index":4885,"title":{},"body":{"index.html":{}}}],["doc.decorator",{"_index":842,"title":{},"body":{"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["doc.decorator.ts",{"_index":826,"title":{},"body":{"interfaces/ApiDocParams.html":{},"miscellaneous/functions.html":{}}}],["docs",{"_index":4707,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["documentation",{"_index":4854,"title":{},"body":{"index.html":{}}}],["doe",{"_index":3601,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["don't",{"_index":3840,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["down",{"_index":16,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["down(queryrunner",{"_index":25,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["draft",{"_index":2887,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"miscellaneous/enumerations.html":{}}}],["draftvaultsservice",{"_index":2661,"title":{"injectables/DraftVaultsService.html":{}},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"overview.html":{}}}],["drop",{"_index":41,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["dropdto",{"_index":3335,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["dropoldvauleformenum.ts",{"_index":2890,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum.ts:27",{"_index":2892,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum.ts:4",{"_index":2891,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum.ts:6",{"_index":2893,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum1742800589634",{"_index":2888,"title":{"classes/DropOldVauleFormEnum1742800589634.html":{}},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropping",{"_index":2201,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["drops",{"_index":3334,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["dto",{"_index":1671,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/LpTokensService.html":{}}}],["dto/acquire.req",{"_index":165,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{}}}],["dto/asset",{"_index":3708,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["dto/contribute.req",{"_index":2259,"title":{},"body":{"controllers/ContributionController.html":{},"injectables/ContributionService.html":{}}}],["dto/create",{"_index":1124,"title":{},"body":{"injectables/AssetsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["dto/createvault.req",{"_index":4467,"title":{},"body":{"controllers/VaultsController.html":{}}}],["dto/extract",{"_index":3297,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["dto/get",{"_index":2687,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["dto/login.req",{"_index":1211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/paginated",{"_index":2690,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["dto/pagination.dto",{"_index":1074,"title":{},"body":{"controllers/AssetsController.html":{}}}],["dto/public",{"_index":4183,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/publish",{"_index":4469,"title":{},"body":{"controllers/VaultsController.html":{}}}],["dto/savedraft.req",{"_index":2692,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["dto/transaction.dto",{"_index":1635,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["dto/update",{"_index":4133,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/vault.response",{"_index":2694,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["dto/vote.req",{"_index":2998,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["dto/wallet",{"_index":3711,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["dto/webhook.dto",{"_index":1636,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["dtorepresent",{"_index":2903,"title":{},"body":{"interfaces/DtoRepresentsType.html":{},"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/functions.html":{}}}],["dtorepresent(__namedparameters",{"_index":4813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dtorepresentstype",{"_index":2900,"title":{"interfaces/DtoRepresentsType.html":{}},"body":{"interfaces/DtoRepresentsType.html":{},"miscellaneous/functions.html":{}}}],["duplicate",{"_index":2765,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["duration",{"_index":4381,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["during",{"_index":1132,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/WebhookVerificationService.html":{}}}],["e",{"_index":736,"title":{},"body":{"interfaces/Amount.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["e2e",{"_index":4841,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":1991,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["each",{"_index":234,"title":{},"body":{"classes/AcquireReq.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateProposalReq.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{}}}],["ed25519e_sk1eqleq0gr7awjymmkcehm4pza8ffq385fyxkntqe74u384fgfs4w7vncmhdlc2u2l78g4r82ctfw6s36dnuguadxh3lggluy9pwansegfprll7",{"_index":4590,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["ed25519signature",{"_index":1264,"title":{},"body":{"injectables/AuthService.html":{}}}],["ed25519signature.from_bytes(decoded.signature",{"_index":1290,"title":{},"body":{"injectables/AuthService.html":{}}}],["edition",{"_index":1001,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["efficient",{"_index":4819,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":4851,"title":{},"body":{"index.html":{}}}],["elapsed",{"_index":4384,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["empty",{"_index":964,"title":{},"body":{"entities/Asset.html":{},"injectables/AwsService.html":{},"injectables/LifecycleService.html":{},"index.html":{}}}],["emurgo/cardano",{"_index":665,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["encoded",{"_index":2006,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["end",{"_index":2088,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["ended",{"_index":3119,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["endpoint",{"_index":745,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["ends",{"_index":4344,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["endtime",{"_index":4364,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["endtime.gettime",{"_index":4367,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["ensure",{"_index":316,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"index.html":{}}}],["enterprise",{"_index":4898,"title":{},"body":{"index.html":{}}}],["enterpriseaddress",{"_index":2016,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["enterpriseaddress.new(0",{"_index":2057,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["entities",{"_index":396,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":394,"title":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["entity('assets",{"_index":962,"title":{},"body":{"entities/Asset.html":{}}}],["entity('tags",{"_index":3637,"title":{},"body":{"entities/TagEntity.html":{}}}],["entity('transactions",{"_index":3911,"title":{},"body":{"entities/Transaction.html":{}}}],["entity('users",{"_index":4104,"title":{},"body":{"entities/User.html":{}}}],["entry.wallet_address",{"_index":299,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["enum",{"_index":944,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/BlockchainService.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["enum('created",{"_index":626,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["enum('custom",{"_index":2450,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["enum('dao",{"_index":2457,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('draft",{"_index":94,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["enum('invested",{"_index":512,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{}}}],["enum('lbe",{"_index":2448,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["enum('mint",{"_index":50,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["enum('nft",{"_index":2436,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('pending",{"_index":2438,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('private",{"_index":2445,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('single",{"_index":2441,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["enumerations",{"_index":4776,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3360,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["err",{"_index":1489,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{}}}],["err.message",{"_index":3729,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["err.response?.data?.message",{"_index":3738,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["err.response?.status",{"_index":3739,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["error",{"_index":342,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DraftVaultsService.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["error('admin_key_hash",{"_index":3359,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["error('anvil",{"_index":775,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["error('api",{"_index":779,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["error('blockfrost",{"_index":4696,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["error('blockfrost_api_key",{"_index":4659,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error('blockfrost_webhook_auth_token",{"_index":4692,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["error('contribute",{"_index":2065,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["error('failed",{"_index":1856,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/LpTokensService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["error('invalid",{"_index":3831,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["error('must",{"_index":728,"title":{},"body":{"interfaces/Amount.html":{}}}],["error('no",{"_index":1865,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/LpTokensService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["error('pool",{"_index":4629,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error('transaction",{"_index":2113,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["error('vault",{"_index":733,"title":{},"body":{"interfaces/Amount.html":{}}}],["error('vyfi_api_key",{"_index":4643,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error(`anvil",{"_index":800,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["error(`failed",{"_index":1859,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["error(`transaction",{"_index":2130,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["error.message",{"_index":1332,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["error.response?.status",{"_index":4614,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error.stack",{"_index":3424,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["error?.message",{"_index":4495,"title":{},"body":{"controllers/VaultsController.html":{}}}],["errordata",{"_index":798,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["errordata.message",{"_index":802,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["errors",{"_index":1561,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{}}}],["even",{"_index":3137,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["event",{"_index":1610,"title":{},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["event.data.tx",{"_index":2136,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["event.id",{"_index":1681,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["event.payload",{"_index":2160,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["event.payload.map(txevent",{"_index":1694,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["event.type",{"_index":2158,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["event.webhook_id",{"_index":1683,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["eventid",{"_index":1680,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["events",{"_index":1658,"title":{},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["events'})@apiresponse({status",{"_index":1609,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["eventtime",{"_index":4727,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["exactly",{"_index":2069,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["example",{"_index":373,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VoteReq.html":{},"index.html":{}}}],["exclude",{"_index":3908,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["exclude()@onetomany(undefined",{"_index":3887,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["excludeextraneousvalues",{"_index":2723,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["excludes",{"_index":4116,"title":{},"body":{"controllers/UsersController.html":{}}}],["execution",{"_index":4403,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["execution_threshold",{"_index":2477,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["executioncontext",{"_index":1227,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["executionthreshold",{"_index":4404,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["exist",{"_index":3545,"title":{},"body":{"classes/RenameFields1746536544579.html":{},"injectables/VyfiService.html":{}}}],["existing",{"_index":4213,"title":{},"body":{"injectables/UsersService.html":{}}}],["existingasset",{"_index":3843,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["existingasset.quantity",{"_index":3846,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["existingvault",{"_index":2738,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.acquirer_whitelist?.length",{"_index":2747,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.assets_whitelist?.length",{"_index":2745,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.contributor_whitelist?.length",{"_index":2749,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.social_links?.length",{"_index":2743,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.vault_status",{"_index":2740,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.acquirer_whitelist_csv?.file_key",{"_index":2773,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.banner_image?.file_key",{"_index":2769,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.ft_token_img?.file_key",{"_index":2771,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.vault_image?.file_key",{"_index":2767,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["exists",{"_index":317,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["exists'})@apiquery({name",{"_index":4535,"title":{},"body":{"controllers/VyfiController.html":{}}}],["expected",{"_index":4734,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["expectedmessage",{"_index":1297,"title":{},"body":{"injectables/AuthService.html":{}}}],["expectedsignature",{"_index":4712,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["experience",{"_index":4888,"title":{},"body":{"index.html":{}}}],["experienced",{"_index":3603,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["expires",{"_index":1494,"title":{},"body":{"injectables/AwsService.html":{}}}],["expiresin",{"_index":1423,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["exports",{"_index":197,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["expose",{"_index":228,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/functions.html":{}}}],["expose()@isnotempty()@isobject()@validatenested()@type(undefined)@apiproperty({description",{"_index":3270,"title":{},"body":{"classes/LoginReq.html":{}}}],["expose()@isnotempty()@isstring()@apiproperty({description",{"_index":3272,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["expose(expose",{"_index":2906,"title":{},"body":{"interfaces/DtoRepresentsType.html":{}}}],["expose({name",{"_index":401,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["express",{"_index":1234,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/AwsController.html":{},"injectables/RawBodyMiddleware.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1352,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["extends",{"_index":2009,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/GetVaultsDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultShortResponse.html":{}}}],["extract",{"_index":58,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["extract'})@isnumber()@isnotempty()@expose",{"_index":2911,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["extractada",{"_index":2512,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["extractasset",{"_index":2513,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["extractdto",{"_index":3295,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extracted",{"_index":3422,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["extracting",{"_index":2199,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["extraction",{"_index":3289,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extractlp",{"_index":3366,"title":{},"body":{"injectables/LpTokensService.html":{},"miscellaneous/enumerations.html":{}}}],["extractlptokens",{"_index":3284,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extractlptokens(@body",{"_index":3308,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["extractlptokens(extractdto",{"_index":3285,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extractlptokensdto",{"_index":2907,"title":{"classes/ExtractLpTokensDto.html":{}},"body":{"classes/ExtractLpTokensDto.html":{},"controllers/LpTokensController.html":{}}}],["extractlptokensparams",{"_index":2200,"title":{"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["extracts",{"_index":3287,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extracttokenfromheader",{"_index":1222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":1230,"title":{},"body":{"guards/AuthGuard.html":{}}}],["f]{56",{"_index":1056,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["fa",{"_index":1055,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["factory",{"_index":2369,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["failed",{"_index":100,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["fails",{"_index":3138,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["fallback",{"_index":1673,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["false",{"_index":380,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddedDelete1747838327085.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"classes/NftAsset.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["false})@dtorepresent({transform",{"_index":3485,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["false})@expose",{"_index":2952,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["false})@isarray()@isoptional()@isobject({each",{"_index":4042,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["false})@isnumber()@isoptional",{"_index":4044,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["false})@isoptional()@expose",{"_index":1972,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["false})@isoptional()@isarray()@isstring({each",{"_index":3612,"title":{},"body":{"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["false})@isoptional()@isenum(transactiontype)@expose",{"_index":2944,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["false})@isoptional()@isnumber()@expose",{"_index":1043,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["false})@isoptional()@isstring()@expose",{"_index":3509,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["false})@isoptional()@isstring({each",{"_index":3504,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["false})@isstring()@isoptional()@expose",{"_index":2913,"title":{},"body":{"classes/ExtractLpTokensDto.html":{},"classes/UpdateProfileDto.html":{}}}],["false})@matches(/^[0",{"_index":1193,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["fast",{"_index":4862,"title":{},"body":{"index.html":{}}}],["fdp",{"_index":2551,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["features",{"_index":4872,"title":{},"body":{"index.html":{}}}],["fee",{"_index":622,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["fees",{"_index":1919,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/VyfiService.html":{}}}],["fetch",{"_index":2615,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/TaptoolsService.html":{}}}],["fetch(`${this.anvilapi}/transactions/build",{"_index":1850,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["fetch(url.tostring",{"_index":796,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["fetching",{"_index":3728,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["few",{"_index":4864,"title":{},"body":{"index.html":{}}}],["field",{"_index":2955,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["fields",{"_index":2776,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{}}}],["file.entity",{"_index":4102,"title":{},"body":{"entities/User.html":{}}}],["file.mimetype",{"_index":1543,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["file.originalname",{"_index":1556,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["file.size",{"_index":4230,"title":{},"body":{"injectables/UsersService.html":{}}}],["file_key",{"_index":1551,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["file_name",{"_index":1555,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["file_type",{"_index":1557,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["file_url",{"_index":1553,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["fileentity",{"_index":1414,"title":{"entities/FileEntity.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{},"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":1366,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["filename",{"_index":387,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"entities/FileEntity.html":{},"classes/SocialLink.html":{}}}],["filename'})@column({name",{"_index":2928,"title":{},"body":{"entities/FileEntity.html":{}}}],["filerepository",{"_index":1440,"title":{},"body":{"injectables/AwsService.html":{}}}],["files",{"_index":1039,"title":{},"body":{"classes/AssetValueDto.html":{},"controllers/AwsController.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["files\"(\"id",{"_index":2496,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["filesrepository",{"_index":2668,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["filetype",{"_index":388,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"controllers/AwsController.html":{},"classes/ContributorWhitelist.html":{},"entities/FileEntity.html":{},"classes/SocialLink.html":{},"controllers/UsersController.html":{}}}],["filetype'})@column({name",{"_index":2930,"title":{},"body":{"entities/FileEntity.html":{}}}],["filetypevalidator",{"_index":1361,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["filter",{"_index":2294,"title":{},"body":{"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/TaptoolsService.html":{}}}],["filter(([unit",{"_index":3795,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["filter(tx",{"_index":2297,"title":{},"body":{"injectables/ContributionService.html":{}}}],["filtered",{"_index":4443,"title":{},"body":{"controllers/VaultsController.html":{}}}],["find",{"_index":1304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContributionService.html":{}}}],["findbyaddress",{"_index":4162,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyaddress(address",{"_index":4169,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":3971,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["findbyid(id",{"_index":3983,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["fingerprint",{"_index":1032,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["first",{"_index":1801,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{}}}],["firstvaluefrom",{"_index":1841,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["firstvaluefrom(this.httpservice.get(`${this.vyfiapiurl}/pool/${poolid",{"_index":4662,"title":{},"body":{"injectables/VyfiService.html":{}}}],["firstvaluefrom(this.httpservice.get(`${url}?${queryparams.tostring",{"_index":4613,"title":{},"body":{"injectables/VyfiService.html":{}}}],["fit",{"_index":4293,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["fixed",{"_index":307,"title":{},"body":{"injectables/AcquireService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fixedtransaction",{"_index":2018,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["fixedtransaction.from_bytes(buffer.from(buildresponse.complete",{"_index":2107,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["fixedtransaction.from_bytes(buffer.from(transaction.complete",{"_index":4646,"title":{},"body":{"injectables/VyfiService.html":{}}}],["fk_1e942f889da974dfccec3b4ecbf",{"_index":2493,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_20094ffc712b516cb4a7444de3b",{"_index":633,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["fk_2b3fd4667b2be7a2d7a329083cc",{"_index":44,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["fk_3e6ff48532fbe552bbb6c4098bd",{"_index":2502,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["fk_4996e41bd51ba848c8f6ac22a03",{"_index":2498,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["fk_657d44500fe38e604f4a6306620",{"_index":2497,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_67ab781bada0c0fd71e38f5d3a4",{"_index":2504,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_6f6b9ff91b18b69d88c11e4f5d8",{"_index":2499,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_969c7c69dd286d6e17dedd27923",{"_index":2213,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["fk_96d6f1aafc327443850f263cd50",{"_index":2495,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_9dcbee9dfaf5bc1d498d568216f",{"_index":2212,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["fk_9f8dea86e48a7216c4f5369c1e4",{"_index":2494,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_a6a3f7811be6df590c8da538d40",{"_index":2501,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_adf9f0b047319be1ec67ac1d1eb",{"_index":43,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["fk_bfa8eb1a193e5e4a9dc4d2b7257",{"_index":2500,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_c15eb8818056ac23754262fdd3a",{"_index":2503,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_c211339d9110a71f1e7b65d87b5",{"_index":3566,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["fk_cba6b5306e74553edd3b94a000a",{"_index":3567,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateTypes1746532933340.html":{}}}],["fk_dad5613b25986784cf01e7fdaae",{"_index":551,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["fk_f93b9856ae3dfe138275ad9d684",{"_index":448,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["floor_price",{"_index":911,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["floorprice",{"_index":968,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"classes/CreateAssetDto.html":{}}}],["floorprice'})@column({name",{"_index":933,"title":{},"body":{"entities/Asset.html":{}}}],["focus",{"_index":4871,"title":{},"body":{"index.html":{}}}],["follow",{"_index":4902,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":71,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["format",{"_index":1519,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["formatmetadatatext",{"_index":4573,"title":{},"body":{"injectables/VyfiService.html":{}}}],["formatmetadatatext(tokena",{"_index":4579,"title":{},"body":{"injectables/VyfiService.html":{}}}],["formulas",{"_index":2574,"title":{},"body":{"injectables/DistributionService.html":{}}}],["forward",{"_index":1343,"title":{},"body":{"controllers/AwsController.html":{}}}],["found",{"_index":276,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["fractional",{"_index":4370,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["fractionalization",{"_index":2544,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["framework",{"_index":4818,"title":{},"body":{"index.html":{}}}],["from'})@isstring()@isnotempty()@expose",{"_index":2917,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["frontend",{"_index":1345,"title":{},"body":{"controllers/AwsController.html":{}}}],["ft",{"_index":3750,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["ft.adavalue",{"_index":3756,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.balance",{"_index":3754,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.price",{"_index":3755,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.ticker",{"_index":3753,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.unit",{"_index":3752,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft_acquire_reserve",{"_index":3548,"title":{},"body":{"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["ft_investment_reserve",{"_index":3558,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{}}}],["ft_investment_reverse",{"_index":2466,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameVaultField1742382533813.html":{}}}],["ft_investment_window",{"_index":602,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_decimals",{"_index":2470,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_img",{"_index":2711,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["ft_token_img_id",{"_index":2482,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_supply",{"_index":2468,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_ticker",{"_index":3547,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["fttokendecimals",{"_index":4397,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["fttokenimg",{"_index":2760,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["fttokenimgkey",{"_index":2758,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["fttokensupply",{"_index":4395,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["full",{"_index":4897,"title":{},"body":{"index.html":{}}}],["function",{"_index":710,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/ApiDocParams.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/DtoRepresentsType.html":{}}}],["functions",{"_index":4796,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fungible",{"_index":3748,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["g",{"_index":4867,"title":{},"body":{"index.html":{}}}],["gains",{"_index":1330,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{}}}],["gains'})@column({type",{"_index":4083,"title":{},"body":{"entities/User.html":{}}}],["generate",{"_index":1312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VyfiService.html":{},"index.html":{}}}],["generate_assetname_from_txhash_index",{"_index":4247,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["generate_assetname_from_txhash_index(txhash",{"_index":711,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["generate_tag_from_txhash_index",{"_index":3354,"title":{},"body":{"injectables/LpTokensService.html":{},"miscellaneous/functions.html":{}}}],["generate_tag_from_txhash_index(tx_hash",{"_index":719,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LpTokensService.html":{},"miscellaneous/functions.html":{}}}],["generatemocktransactionhash",{"_index":3324,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["generates",{"_index":3338,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["generateusername",{"_index":1269,"title":{},"body":{"injectables/AuthService.html":{}}}],["generator",{"_index":1270,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["get('/csv/:id",{"_index":1394,"title":{},"body":{"controllers/AwsController.html":{}}}],["get('/image/:id",{"_index":1384,"title":{},"body":{"controllers/AwsController.html":{}}}],["get('/profile/:id",{"_index":4141,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id",{"_index":4492,"title":{},"body":{"controllers/VaultsController.html":{}}}],["get(':id/transactions",{"_index":4499,"title":{},"body":{"controllers/VaultsController.html":{}}}],["get(':txhash",{"_index":3961,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get(':txhash')@apioperation({summary",{"_index":3952,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('acquired/:vaultid",{"_index":1084,"title":{},"body":{"controllers/AssetsController.html":{}}}],["get('check",{"_index":4533,"title":{},"body":{"controllers/VyfiController.html":{}}}],["get('contributed/:vaultid",{"_index":1079,"title":{},"body":{"controllers/AssetsController.html":{}}}],["get('my",{"_index":4483,"title":{},"body":{"controllers/VaultsController.html":{}}}],["get('my/drafts",{"_index":4489,"title":{},"body":{"controllers/VaultsController.html":{}}}],["get('pool/:poolid",{"_index":4560,"title":{},"body":{"controllers/VyfiController.html":{}}}],["get('pool/:poolid')@apioperation({summary",{"_index":4544,"title":{},"body":{"controllers/VyfiController.html":{}}}],["get('profile",{"_index":4138,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('proposals/:proposalid",{"_index":3013,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get('proposals/:proposalid')@useguards(authguard)@apioperation({summary",{"_index":2984,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get('received",{"_index":3959,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('received')@apioperation({summary",{"_index":3946,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('sent",{"_index":3957,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('sent')@apioperation({summary",{"_index":3949,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('summary",{"_index":3654,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["get('summary')@apidoc({summary",{"_index":3644,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["get('transactions",{"_index":186,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["get('transactions')@apioperation({summary",{"_index":118,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["get('vault/:vaultid/assets/value",{"_index":3657,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["get('vaults/:vaultid/proposals",{"_index":3006,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get('vaults/:vaultid/proposals')@useguards(authguard)@apioperation({summary",{"_index":2989,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get(endpoint",{"_index":769,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["getacquiredassets",{"_index":1096,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getacquiredassets(userid",{"_index":1109,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getacquiretransactions",{"_index":3972,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getacquiretransactions(vaultid",{"_index":3985,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getadaprice",{"_index":3672,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getaddressbalance",{"_index":1724,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddressbalance(address",{"_index":1740,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddresstransactions",{"_index":1725,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddresstransactions(address",{"_index":1742,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddressutxos",{"_index":1726,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddressutxos(address",{"_index":1744,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getassetdetails",{"_index":3673,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getassetdetails(assetid",{"_index":3682,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getassetsgroupedbyuser",{"_index":3062,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["getassetsgroupedbyuser(vaultid",{"_index":3070,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["getassetvalue",{"_index":3674,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getassetvalue(policyid",{"_index":3684,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getcontractstate",{"_index":1727,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getcontractstate(contractaddress",{"_index":1746,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getcontributedassets",{"_index":1063,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getcontributedassets(@request",{"_index":1080,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getcontributedassets(req",{"_index":1065,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getcontributiontransactions",{"_index":2252,"title":{},"body":{"controllers/ContributionController.html":{},"injectables/TransactionsService.html":{}}}],["getcontributiontransactions(@query('vaultid",{"_index":2264,"title":{},"body":{"controllers/ContributionController.html":{}}}],["getcontributiontransactions(vaultid",{"_index":2255,"title":{},"body":{"controllers/ContributionController.html":{},"injectables/TransactionsService.html":{}}}],["getcsv",{"_index":1429,"title":{},"body":{"injectables/AwsService.html":{}}}],["getcsv(bucketkey",{"_index":1441,"title":{},"body":{"injectables/AwsService.html":{}}}],["getcsvfile",{"_index":1335,"title":{},"body":{"controllers/AwsController.html":{}}}],["getcsvfile(@param('id",{"_index":1395,"title":{},"body":{"controllers/AwsController.html":{}}}],["getcsvfile(id",{"_index":1339,"title":{},"body":{"controllers/AwsController.html":{}}}],["getdraftvaultbyid",{"_index":2664,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["getdraftvaultbyid(id",{"_index":2674,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["getimage",{"_index":1430,"title":{},"body":{"injectables/AwsService.html":{}}}],["getimage(bucketkey",{"_index":1444,"title":{},"body":{"injectables/AwsService.html":{}}}],["getimagefile",{"_index":1336,"title":{},"body":{"controllers/AwsController.html":{}}}],["getimagefile(@param('id",{"_index":1385,"title":{},"body":{"controllers/AwsController.html":{}}}],["getimagefile(id",{"_index":1348,"title":{},"body":{"controllers/AwsController.html":{}}}],["getinvestedassets",{"_index":1064,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getinvestedassets(@request",{"_index":1085,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getinvestedassets(req",{"_index":1070,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getinvestmenttransactions",{"_index":113,"title":{},"body":{"controllers/AcquireController.html":{}}}],["getinvestmenttransactions(@query('vaultid",{"_index":187,"title":{},"body":{"controllers/AcquireController.html":{}}}],["getinvestmenttransactions(vaultid",{"_index":116,"title":{},"body":{"controllers/AcquireController.html":{}}}],["getlastvaultupdate",{"_index":3973,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getlastvaultupdate(vaultid",{"_index":3988,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getmainnetwalletsummary",{"_index":3675,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getmainnetwalletsummary(walletaddress",{"_index":3686,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getmany",{"_index":3098,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["getmimetypefromarraybuffer",{"_index":4941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmydraftvaults",{"_index":2665,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["getmydraftvaults(@request",{"_index":4490,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmydraftvaults(req",{"_index":4439,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmydraftvaults(userid",{"_index":2676,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["getmyvaults",{"_index":4421,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmyvaults(@request",{"_index":4484,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmyvaults(req",{"_index":4442,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getpoolinfo",{"_index":4529,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["getpoolinfo(@query('poolid",{"_index":4561,"title":{},"body":{"controllers/VyfiController.html":{}}}],["getpoolinfo(poolid",{"_index":4543,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["getpresignedurl",{"_index":1431,"title":{},"body":{"injectables/AwsService.html":{}}}],["getpresignedurl(bucketname",{"_index":1446,"title":{},"body":{"injectables/AwsService.html":{}}}],["getprofile",{"_index":4107,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getprofile(@request",{"_index":4139,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(req",{"_index":4112,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(userid",{"_index":4171,"title":{},"body":{"injectables/UsersService.html":{}}}],["getproposal",{"_index":2976,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getproposal(@param('proposalid",{"_index":3014,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["getproposal(proposalid",{"_index":2983,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getproposals",{"_index":2977,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getproposals(@param('vaultid",{"_index":3007,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["getproposals(vaultid",{"_index":2988,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getpublicprofile",{"_index":4108,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getpublicprofile(@param('id",{"_index":4142,"title":{},"body":{"controllers/UsersController.html":{}}}],["getpublicprofile(userid",{"_index":4115,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getreceivedtransactions",{"_index":3943,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gets3",{"_index":1432,"title":{},"body":{"injectables/AwsService.html":{}}}],["getsenttransactions",{"_index":3944,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gettestnetwalletsummary",{"_index":3676,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["gettestnetwalletsummary(walletaddress",{"_index":3689,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getting",{"_index":3219,"title":{"index.html":{}},"body":{"injectables/LifecycleService.html":{}}}],["gettokeninfo",{"_index":1728,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettokeninfo(policyid",{"_index":1748,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettransaction",{"_index":3945,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["gettransaction(@param('txhash",{"_index":3962,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gettransaction(txhash",{"_index":3951,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["gettransactiondetails",{"_index":1729,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettransactiondetails(txhash",{"_index":1750,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettransactionsbyreceiver",{"_index":3974,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbyreceiver(address",{"_index":3993,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbysender",{"_index":3975,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbysender(address",{"_index":3995,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbystatus",{"_index":3976,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbystatus(status",{"_index":3997,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getuser",{"_index":4943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getutxos",{"_index":694,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["getutxos(address",{"_index":4582,"title":{},"body":{"injectables/VyfiService.html":{}}}],["getutxos(address.from_bech32(vaultconfig.customeraddress",{"_index":4263,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["getvaultassets",{"_index":1097,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getvaultassets(userid",{"_index":1113,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getvaultassetsvalue(@param('vaultid",{"_index":3660,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["getvaultbyid",{"_index":4422,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaultbyid(@param('id",{"_index":4493,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaultbyid(id",{"_index":4446,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaults",{"_index":4423,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaults(@query",{"_index":4497,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaults(query",{"_index":4450,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaultsdto",{"_index":2948,"title":{"classes/GetVaultsDto.html":{}},"body":{"classes/GetVaultsDto.html":{},"controllers/VaultsController.html":{}}}],["getvaulttransactions",{"_index":3977,"title":{},"body":{"injectables/TransactionsService.html":{},"controllers/VaultsController.html":{}}}],["getvaulttransactions(@param('id",{"_index":4500,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaulttransactions(id",{"_index":4454,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaulttransactions(vaultid",{"_index":3999,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getvaulttransactionsdto",{"_index":2938,"title":{"classes/GetVaultTransactionsDto.html":{}},"body":{"classes/GetVaultTransactionsDto.html":{},"controllers/VaultsController.html":{}}}],["getvaultutxo",{"_index":4248,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["getvaultutxo(policyid",{"_index":723,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["getvaultutxo(this.scpolicyid",{"_index":4289,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["getwalletsummary",{"_index":3642,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["getwalletsummary(@query('address",{"_index":3655,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["getwalletsummary(address",{"_index":3643,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["getwalletsummary(walletaddress",{"_index":3691,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["global",{"_index":1420,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["gold",{"_index":1004,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["governance",{"_index":99,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"miscellaneous/enumerations.html":{}}}],["governance.controller",{"_index":3021,"title":{},"body":{"modules/GovernanceModule.html":{}}}],["governance.service",{"_index":3000,"title":{},"body":{"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{}}}],["governance_phase_start",{"_index":3580,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["governancecontroller",{"_index":2973,"title":{"controllers/GovernanceController.html":{}},"body":{"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{}}}],["governancemodule",{"_index":3016,"title":{"modules/GovernanceModule.html":{}},"body":{"modules/GovernanceModule.html":{},"modules.html":{},"overview.html":{}}}],["governanceservice",{"_index":2999,"title":{"injectables/GovernanceService.html":{}},"body":{"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"overview.html":{}}}],["graph",{"_index":4893,"title":{},"body":{"index.html":{}}}],["group",{"_index":3183,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["grow",{"_index":4910,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1218,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":1219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handle",{"_index":2157,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{}}}],["handleblockchainevent",{"_index":4304,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["handleblockchainevent(event",{"_index":2156,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["handleburnvault",{"_index":4305,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["handleburnvault(userid",{"_index":2179,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["handlecontributiontoinvestment",{"_index":3063,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlecsvfiles",{"_index":1337,"title":{},"body":{"controllers/AwsController.html":{}}}],["handlecsvfiles(file",{"_index":1351,"title":{},"body":{"controllers/AwsController.html":{}}}],["handleinvestmenttogovernance",{"_index":3064,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlepublishedtocontribution",{"_index":3065,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlescannerevent",{"_index":4306,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["handlescannerevent(event",{"_index":2133,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["handlevaultlifecycletransitions",{"_index":3066,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlewebhook",{"_index":1589,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["handlewebhook(@body",{"_index":1663,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["handlewebhook(event",{"_index":1604,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["hands",{"_index":4887,"title":{},"body":{"index.html":{}}}],["handy",{"_index":4877,"title":{},"body":{"index.html":{}}}],["hasacquirerwhitelistcsv",{"_index":2772,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["hasassets",{"_index":3121,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["hasbannerimage",{"_index":2768,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["hasfttokenimage",{"_index":2770,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["hash",{"_index":140,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["hash'})@useguards(authguard)@apiresponse({status",{"_index":139,"title":{},"body":{"controllers/AcquireController.html":{}}}],["hash.to_hex",{"_index":718,"title":{},"body":{"interfaces/Amount.html":{}}}],["hash_plutus_data",{"_index":663,"title":{},"body":{"interfaces/Amount.html":{}}}],["hash_plutus_data(plutusdata",{"_index":717,"title":{},"body":{"interfaces/Amount.html":{}}}],["hasn't",{"_index":3118,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["hasvaultimage",{"_index":2766,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["header",{"_index":4694,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["headermap",{"_index":1276,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers",{"_index":781,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["height",{"_index":2296,"title":{},"body":{"injectables/ContributionService.html":{}}}],["help",{"_index":4891,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":1268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["here",{"_index":311,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/LifecycleService.html":{},"index.html":{}}}],["hex",{"_index":372,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["hex')).to_hex",{"_index":3405,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["hex').tostring('utf8",{"_index":3811,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["hexadecimal",{"_index":1057,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["hmac",{"_index":4711,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["holds",{"_index":2194,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["host",{"_index":888,"title":{},"body":{"modules/AppModule.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["http",{"_index":1547,"title":{},"body":{"injectables/AwsService.html":{}}}],["httpcode",{"_index":1208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BlockchainController.html":{}}}],["httpcode(200",{"_index":1657,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["httpcode(httpstatus.ok",{"_index":1214,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":3706,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["httpexception('failed",{"_index":3730,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["httpexception('invalid",{"_index":3723,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["httpmodule",{"_index":1411,"title":{},"body":{"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/VyfiModule.html":{}}}],["https",{"_index":1548,"title":{},"body":{"injectables/AwsService.html":{}}}],["https://api.vyfi.io",{"_index":4587,"title":{},"body":{"injectables/VyfiService.html":{}}}],["https://cardano",{"_index":3697,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["https://nestjs.com",{"_index":4921,"title":{},"body":{"index.html":{}}}],["https://openapi.taptools.io/api/v1",{"_index":3695,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["https://preprod.api.ada",{"_index":4584,"title":{},"body":{"injectables/VyfiService.html":{}}}],["https://twitter.com/username",{"_index":3597,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["https://twitter.com/username'})@isstring()@expose",{"_index":3593,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["httpservice",{"_index":1438,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["httpstatus",{"_index":827,"title":{},"body":{"interfaces/ApiDocParams.html":{},"controllers/AuthController.html":{},"controllers/LpTokensController.html":{}}}],["httpstatus.bad_request",{"_index":3306,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["httpstatus.created",{"_index":3305,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["httpstatus.unauthorized",{"_index":3307,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["id",{"_index":269,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"entities/Asset.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["id's",{"_index":1403,"title":{},"body":{"controllers/AwsController.html":{}}}],["id'})@primarygeneratedcolumn('uuid",{"_index":3255,"title":{},"body":{"entities/LinkEntity.html":{},"entities/User.html":{}}}],["identifier",{"_index":1878,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"entities/Transaction.html":{},"classes/VaultShortResponse.html":{}}}],["ids",{"_index":3720,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["idx_2b3fd4667b2be7a2d7a329083c",{"_index":599,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["idx_9dcbee9dfaf5bc1d498d568216",{"_index":2215,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["idx_adf9f0b047319be1ec67ac1d1e",{"_index":600,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["idx_f93b9856ae3dfe138275ad9d68",{"_index":447,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["ignore",{"_index":3408,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["igor",{"_index":2236,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["image",{"_index":1034,"title":{},"body":{"classes/AssetValueDto.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/DraftVaultsService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLinkDto.html":{},"injectables/TaptoolsService.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["image.dto.ts",{"_index":4070,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["image.dto.ts:9",{"_index":4072,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["image/banner",{"_index":3609,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["image/jpeg",{"_index":1499,"title":{},"body":{"injectables/AwsService.html":{}}}],["image/png",{"_index":2235,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["image/profile",{"_index":3606,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["imageentity",{"_index":4963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imageentity?.file_url",{"_index":4964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imageurl",{"_index":985,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["imgkey",{"_index":2751,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["immediate",{"_index":3090,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["immediatestartvaults",{"_index":3091,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["implement",{"_index":3036,"title":{},"body":{"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{}}}],["implementation",{"_index":3247,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/WebhookVerificationService.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"guards/AuthGuard.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["imports",{"_index":207,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{}}}],["include",{"_index":2775,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["included",{"_index":3134,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["includes",{"_index":2573,"title":{},"body":{"injectables/DistributionService.html":{},"controllers/VaultsController.html":{}}}],["including",{"_index":2231,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":3343,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["information",{"_index":2383,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/TokenInfo.html":{},"controllers/UsersController.html":{},"controllers/VyfiController.html":{},"index.html":{}}}],["information'})@isobject",{"_index":2374,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["infrastructure",{"_index":4874,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":2964,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["initialdelayms",{"_index":1794,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["initially",{"_index":4680,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["initiated",{"_index":3290,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["inject",{"_index":1425,"title":{},"body":{"modules/AwsModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/JwtGlobalModule.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["inject(blockchainservice",{"_index":2033,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["injectable",{"_index":236,"title":{"injectables/AcquireService.html":{},"injectables/AnvilApiService.html":{},"injectables/AppService.html":{},"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AppService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["injectables",{"_index":237,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AnvilApiService.html":{},"injectables/AppService.html":{},"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"overview.html":{}}}],["injectrepository",{"_index":256,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{}}}],["injectrepository(acquirerwhitelistentity",{"_index":2704,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(asset",{"_index":267,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["injectrepository(assetswhitelistentity",{"_index":2703,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(contributorwhitelistentity",{"_index":2705,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(fileentity",{"_index":1469,"title":{},"body":{"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(linkentity",{"_index":2702,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(tagentity",{"_index":2706,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(transaction",{"_index":2289,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{}}}],["injectrepository(user",{"_index":266,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(vault",{"_index":265,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["inline",{"_index":2081,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["inline_datum",{"_index":1578,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["input",{"_index":1901,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":1575,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["inputs[0]?.address",{"_index":2167,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["inputwithnopreloaded",{"_index":3406,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["inputwithnopreloaded.preloadedscripts",{"_index":3409,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["inserting.service",{"_index":752,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["inserting.service.ts",{"_index":2014,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:279",{"_index":4312,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:332",{"_index":4311,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:360",{"_index":4309,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:451",{"_index":4310,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:69",{"_index":4315,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:70",{"_index":4313,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:71",{"_index":4314,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:72",{"_index":4307,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:89",{"_index":4308,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["install",{"_index":4866,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":4827,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1559,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":4684,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["insufficient",{"_index":2197,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["int",{"_index":1262,"title":{},"body":{"injectables/AuthService.html":{}}}],["integer",{"_index":620,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"entities/User.html":{}}}],["integration",{"_index":3037,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["intended",{"_index":4681,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["interact",{"_index":4894,"title":{},"body":{"index.html":{}}}],["interface",{"_index":640,"title":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"interfaces/ApiDocParams.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/DtoRepresentsType.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{}},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/DtoRepresentsType.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"classes/LpTokenOperationResult.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["interfaces",{"_index":641,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"interfaces/ApiDocParams.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/DtoRepresentsType.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"overview.html":{}}}],["internal",{"_index":2145,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["internalservererrorexception",{"_index":3349,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["internalservererrorexception('failed",{"_index":3425,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["internalstatus",{"_index":2152,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["interval",{"_index":604,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["invalid",{"_index":1517,"title":{},"body":{"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["invalid_before",{"_index":1925,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["invalid_hereafter",{"_index":1927,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["invalidassets",{"_index":2318,"title":{},"body":{"injectables/ContributionService.html":{}}}],["invalidassets.length",{"_index":2322,"title":{},"body":{"injectables/ContributionService.html":{}}}],["invalidassets.map(a",{"_index":2324,"title":{},"body":{"injectables/ContributionService.html":{}}}],["inversejoincolumn",{"_index":3633,"title":{},"body":{"entities/TagEntity.html":{}}}],["invest",{"_index":114,"title":{},"body":{"controllers/AcquireController.html":{}}}],["invest(@req",{"_index":175,"title":{},"body":{"controllers/AcquireController.html":{}}}],["invest(req",{"_index":126,"title":{},"body":{"controllers/AcquireController.html":{}}}],["invested",{"_index":535,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["investment",{"_index":54,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"miscellaneous/enumerations.html":{}}}],["investment_open_window_time",{"_index":2464,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["investment_open_window_type",{"_index":2463,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["investment_phase_start",{"_index":499,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["investment_window",{"_index":2543,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["investment_window_duration",{"_index":2222,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["investmentwindowtype",{"_index":3081,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["investmentwindowtype.custom",{"_index":3157,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["investmentwindowtype.uponassetwindowclosing",{"_index":3140,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["investor",{"_index":302,"title":{},"body":{"injectables/AcquireService.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["investoritems",{"_index":2874,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["investors_whitelist",{"_index":2433,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/UpdateTypes1746532933340.html":{}}}],["investors_whitelist_csv_id",{"_index":2481,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["ipfs://qmcqzb25hmkanenzs8zqasl6j6jrsh4grn6hzpd5uasarw",{"_index":2234,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["is_inclusive",{"_index":2541,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["isada",{"_index":2071,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["isarray",{"_index":230,"title":{},"body":{"classes/AcquireReq.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateProposalReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isboolean",{"_index":2381,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["isenum",{"_index":997,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{}}}],["isenum(assettype",{"_index":1007,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["isenum(assettype)@apiproperty({enum",{"_index":2353,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["isenum(proposaltype",{"_index":2410,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["isenum(sortorder",{"_index":2972,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(sortorder)@isoptional()@apiproperty({enum",{"_index":2958,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(transactionstatus",{"_index":2946,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["isenum(transactiontype",{"_index":2947,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["isenum(vaultfilter",{"_index":2970,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(vaultfilter)@isoptional()@apiproperty({enum",{"_index":2951,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(vaultsortfield",{"_index":2971,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(vaultsortfield)@isoptional()@apiproperty({enum",{"_index":2954,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isfungibletoken",{"_index":1013,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{}}}],["isglobal",{"_index":885,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["isnft",{"_index":1014,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["isnotempty",{"_index":1997,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/VoteReq.html":{}}}],["isnotempty()@expose",{"_index":4030,"title":{},"body":{"classes/TxUpdateReq.html":{}}}],["isnumber",{"_index":362,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/ExtractLpTokensDto.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isnumber()@apiproperty",{"_index":2350,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["isnumber()@isoptional()@apiproperty({required",{"_index":2345,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["isnumber()@isoptional()@min(1)@type(undefined)@apiproperty({required",{"_index":2962,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["isobject",{"_index":998,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SignatureData.html":{},"classes/SocialLinkDto.html":{},"classes/TokenInfo.html":{},"classes/UpdateProfileDto.html":{}}}],["isobject()@apiproperty({type",{"_index":986,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["isoptional",{"_index":363,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isretryableerror",{"_index":1730,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["isretryableerror(error",{"_index":1752,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["isstring",{"_index":361,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VoteReq.html":{}}}],["isstring()@apiproperty",{"_index":993,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":991,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["istestnetaddress",{"_index":3677,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["istestnetaddress(address",{"_index":3693,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["isurl",{"_index":364,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["isuuid",{"_index":1996,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["isvalid",{"_index":1689,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["isvalidaddress",{"_index":3325,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["isvalidaddress(address",{"_index":3340,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["isverified",{"_index":1299,"title":{},"body":{"injectables/AuthService.html":{}}}],["iswhitelisted",{"_index":297,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["item",{"_index":4016,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["item.id",{"_index":4018,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["item.policyid",{"_index":2883,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["item.walletaddress",{"_index":2870,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["items",{"_index":1155,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"classes/PaginatedResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["iterate",{"_index":3202,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["job",{"_index":4904,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":4906,"title":{},"body":{"index.html":{}}}],["john",{"_index":3600,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["join",{"_index":3179,"title":{},"body":{"injectables/LifecycleService.html":{},"index.html":{}}}],["joincolumn",{"_index":421,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["joined",{"_index":965,"title":{},"body":{"entities/Asset.html":{}}}],["jointable",{"_index":3636,"title":{},"body":{"entities/TagEntity.html":{}}}],["js",{"_index":649,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"dependencies.html":{}}}],["json",{"_index":2095,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["json.parse(rawbody",{"_index":1672,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["json.parse(rawtext",{"_index":3532,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["json.parse(value",{"_index":2240,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["json.stringify(assets",{"_index":3213,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["json.stringify(body",{"_index":792,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["json.stringify(buildresponse",{"_index":1857,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["json.stringify(req.body",{"_index":1676,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["json.stringify(transferdetails",{"_index":2178,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["json.stringify(txdata",{"_index":1851,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["json_agg",{"_index":3169,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["json_build_object",{"_index":3170,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["jsonb",{"_index":639,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["jwt",{"_index":1313,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtglobalmodule",{"_index":856,"title":{"modules/JwtGlobalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JwtGlobalModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmodule",{"_index":1413,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["jwtmodule.registerasync",{"_index":1418,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["jwtpayload",{"_index":1314,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice",{"_index":1224,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":4918,"title":{},"body":{"index.html":{}}}],["key",{"_index":72,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"classes/LoginReq.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"injectables/VyfiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key'})@column({name",{"_index":2926,"title":{},"body":{"entities/FileEntity.html":{}}}],["key.header(label.new_int(int.new_negative(bignum.from_str('2')))).as_bytes",{"_index":1285,"title":{},"body":{"injectables/AuthService.html":{}}}],["keys",{"_index":3414,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["l4va",{"_index":907,"title":{},"body":{"injectables/AppService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["l4va/vault",{"_index":2525,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["l4vaaudiengine",{"_index":1999,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["l4vaaudiengine'})@isnotempty()@expose",{"_index":2241,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["l4vaaudiengine'})@isstring()@expose",{"_index":3446,"title":{},"body":{"classes/NftAsset.html":{}}}],["l4vafee",{"_index":2639,"title":{},"body":{"injectables/DistributionService.html":{}}}],["l4vavault",{"_index":2526,"title":{"interfaces/L4VaVault.html":{}},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["label",{"_index":1261,"title":{},"body":{"injectables/AuthService.html":{}}}],["last",{"_index":3370,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{}}}],["last_update_tx_hash",{"_index":2066,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["last_update_tx_index",{"_index":2070,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["last_valuation",{"_index":912,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["lasterror",{"_index":1797,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["lastupdate",{"_index":1582,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["lastupdated",{"_index":3768,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["lastupdatetx",{"_index":3371,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["lastvaluation",{"_index":970,"title":{},"body":{"entities/Asset.html":{}}}],["lastvaluation'})@column({name",{"_index":936,"title":{},"body":{"entities/Asset.html":{}}}],["launch",{"_index":2895,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleService.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"miscellaneous/enumerations.html":{}}}],["launched",{"_index":3238,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["lbe",{"_index":4252,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["learn",{"_index":4880,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('vault.assets",{"_index":3188,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["leftjoinandselect('vault.owner",{"_index":3110,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["legend",{"_index":193,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["legendary",{"_index":1000,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["len",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":1192,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"injectables/RawBodyMiddleware.html":{}}}],["lib",{"_index":667,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["license",{"_index":4923,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":4909,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":496,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"injectables/LifecycleService.html":{}}}],["lifecycle.service",{"_index":3060,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["lifecyclemodule",{"_index":3051,"title":{"modules/LifecycleModule.html":{}},"body":{"modules/LifecycleModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["lifecycleservice",{"_index":3056,"title":{"injectables/LifecycleService.html":{}},"body":{"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"overview.html":{}}}],["limit",{"_index":1111,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"controllers/VaultsController.html":{}}}],["limited",{"_index":1005,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["limits",{"_index":3799,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["link",{"_index":2737,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/User.html":{}}}],["link.entity",{"_index":4103,"title":{},"body":{"entities/User.html":{}}}],["link.user",{"_index":4091,"title":{},"body":{"entities/User.html":{}}}],["linkdata.name",{"_index":4218,"title":{},"body":{"injectables/UsersService.html":{}}}],["linkdata.url",{"_index":4219,"title":{},"body":{"injectables/UsersService.html":{}}}],["linked",{"_index":1178,"title":{},"body":{"injectables/AssetsService.html":{}}}],["linkedin",{"_index":4903,"title":{},"body":{"index.html":{}}}],["linkentity",{"_index":2698,"title":{"entities/LinkEntity.html":{}},"body":{"injectables/DraftVaultsService.html":{},"entities/LinkEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["linkitem.name",{"_index":2846,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["linkitem.url",{"_index":2847,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["links",{"_index":2421,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/LinkEntity.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["linksrepository",{"_index":2667,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["liquidation_hash",{"_index":566,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["liquidity",{"_index":2575,"title":{},"body":{"injectables/DistributionService.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["liquidity_pool_contribution",{"_index":2467,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["liquiditypool",{"_index":2553,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["liquiditypoolcontribution",{"_index":4393,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["list",{"_index":223,"title":{},"body":{"classes/AcquireReq.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/GovernanceController.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLinkDto.html":{},"injectables/TaptoolsService.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["listofvaults",{"_index":2717,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["listofvaults.map(vault",{"_index":2720,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["literal",{"_index":818,"title":{},"body":{"injectables/AnvilApiService.html":{},"classes/AssetValueDto.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"entities/FileEntity.html":{},"interfaces/L4VaVault.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/typealiases.html":{}}}],["loaded",{"_index":318,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["local",{"_index":2131,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["lockasset",{"_index":1098,"title":{},"body":{"injectables/AssetsService.html":{}}}],["lockasset(userid",{"_index":1115,"title":{},"body":{"injectables/AssetsService.html":{}}}],["locked",{"_index":98,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/GetVaultsDto.html":{},"injectables/GovernanceService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["locked_at",{"_index":500,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"entities/Asset.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["lockedat",{"_index":971,"title":{},"body":{"entities/Asset.html":{},"classes/VaultShortResponse.html":{}}}],["lockedat'})@column({name",{"_index":938,"title":{},"body":{"entities/Asset.html":{}}}],["log",{"_index":1677,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["logger",{"_index":239,"title":{},"body":{"injectables/AcquireService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["logger(acquireservice.name",{"_index":253,"title":{},"body":{"injectables/AcquireService.html":{}}}],["logger(awscontroller.name",{"_index":1375,"title":{},"body":{"controllers/AwsController.html":{}}}],["logger(awsservice.name",{"_index":1460,"title":{},"body":{"injectables/AwsService.html":{}}}],["logger(blockchainscannerservice.name",{"_index":1765,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["logger(blockchainservice.name",{"_index":1839,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["logger(contributionservice.name",{"_index":2287,"title":{},"body":{"injectables/ContributionService.html":{}}}],["logger(lifecycleservice.name",{"_index":3077,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["logger(lptokensservice.name",{"_index":3346,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["logger(rawbodymiddleware.name",{"_index":3519,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["logger(taptoolsservice.name",{"_index":3704,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["logger(usersservice.name",{"_index":4182,"title":{},"body":{"injectables/UsersService.html":{}}}],["logger(vaultinsertingservice.name",{"_index":2029,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["logger(vaultmanagingservice.name",{"_index":4256,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["logger(vaultscontroller.name",{"_index":4474,"title":{},"body":{"controllers/VaultsController.html":{}}}],["logger(webhookverificationservice.name",{"_index":4676,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["logger.error(err",{"_index":1490,"title":{},"body":{"injectables/AwsService.html":{}}}],["logic",{"_index":2567,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LpTokensService.html":{}}}],["login",{"_index":1202,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":1216,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(signaturedata",{"_index":1203,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreq",{"_index":1204,"title":{"classes/LoginReq.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["looking",{"_index":4855,"title":{},"body":{"index.html":{}}}],["loop",{"_index":4900,"title":{},"body":{"index.html":{}}}],["lovelace",{"_index":671,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["lovelace').map(asset",{"_index":676,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["lovelace'})@isstring()@expose",{"_index":1936,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["lower_bound",{"_index":2537,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["lp",{"_index":59,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/enumerations.html":{}}}],["lp_output_index",{"_index":2515,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["lp_percent",{"_index":2595,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpada",{"_index":2600,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpadainitialshare",{"_index":2652,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpadaretained",{"_index":2630,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lps",{"_index":3399,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["lpsunit",{"_index":3388,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["lptokenoperationresult",{"_index":2195,"title":{"classes/LpTokenOperationResult.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["lptokenscontroller",{"_index":3282,"title":{"controllers/LpTokensController.html":{}},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["lptokensmodule",{"_index":857,"title":{"modules/LpTokensModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LpTokensModule.html":{},"modules.html":{},"overview.html":{}}}],["lptokensservice",{"_index":3299,"title":{"injectables/LpTokensService.html":{}},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"overview.html":{}}}],["lpvt",{"_index":2625,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtada",{"_index":2601,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtadavalue",{"_index":2654,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtinitialshare",{"_index":2653,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtretained",{"_index":2628,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lts.1",{"_index":4763,"title":{},"body":{"dependencies.html":{}}}],["lunch",{"_index":2452,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["mainnet",{"_index":2365,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/TokenInfo.html":{}}}],["makepostrequest",{"_index":1731,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makepostrequest(endpoint",{"_index":1754,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makerequest",{"_index":1732,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makerequest(endpoint",{"_index":1756,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makes",{"_index":4860,"title":{},"body":{"index.html":{}}}],["managedupload",{"_index":1466,"title":{},"body":{"injectables/AwsService.html":{}}}],["managedupload.senddata",{"_index":1493,"title":{},"body":{"injectables/AwsService.html":{}}}],["management",{"_index":497,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["management/acquire/acquire.controller.ts",{"_index":111,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.controller.ts:23",{"_index":132,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.controller.ts:32",{"_index":143,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.controller.ts:40",{"_index":122,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.module",{"_index":877,"title":{},"body":{"modules/AppModule.html":{}}}],["management/acquire/acquire.module.ts",{"_index":206,"title":{},"body":{"modules/AcquireModule.html":{}}}],["management/acquire/acquire.service.ts",{"_index":238,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/acquire.service.ts:115",{"_index":250,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/acquire.service.ts:18",{"_index":244,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/acquire.service.ts:30",{"_index":247,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/dto/acquire.req.ts",{"_index":218,"title":{},"body":{"classes/AcquireReq.html":{}}}],["management/acquire/dto/acquire.req.ts:16",{"_index":226,"title":{},"body":{"classes/AcquireReq.html":{}}}],["management/contribution/contribution.controller.ts",{"_index":2251,"title":{},"body":{"controllers/ContributionController.html":{}}}],["management/contribution/contribution.controller.ts:22",{"_index":2254,"title":{},"body":{"controllers/ContributionController.html":{}}}],["management/contribution/contribution.controller.ts:31",{"_index":2256,"title":{},"body":{"controllers/ContributionController.html":{}}}],["management/contribution/contribution.module",{"_index":878,"title":{},"body":{"modules/AppModule.html":{}}}],["management/contribution/contribution.module.ts",{"_index":2270,"title":{},"body":{"modules/ContributionModule.html":{}}}],["management/contribution/contribution.service.ts",{"_index":2272,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:122",{"_index":2279,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:21",{"_index":2276,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:217",{"_index":2286,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:42",{"_index":2281,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/dto/contribute.req.ts",{"_index":2225,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:12",{"_index":3444,"title":{},"body":{"classes/MetadataFile.html":{}}}],["management/contribution/dto/contribute.req.ts:120",{"_index":2245,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:132",{"_index":2226,"title":{},"body":{"classes/ContributeReq.html":{}}}],["management/contribution/dto/contribute.req.ts:16",{"_index":3443,"title":{},"body":{"classes/MetadataFile.html":{}}}],["management/contribution/dto/contribute.req.ts:22",{"_index":3456,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:26",{"_index":3453,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:30",{"_index":3454,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:34",{"_index":3457,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:38",{"_index":3455,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:42",{"_index":3451,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:52",{"_index":2247,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:60",{"_index":2242,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:68",{"_index":2249,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:8",{"_index":3445,"title":{},"body":{"classes/MetadataFile.html":{}}}],["management/contribution/dto/txupdate.req.ts",{"_index":4029,"title":{},"body":{"classes/TxUpdateReq.html":{}}}],["management/contribution/dto/txupdate.req.ts:7",{"_index":4031,"title":{},"body":{"classes/TxUpdateReq.html":{}}}],["management/governance/dto/create",{"_index":2385,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["management/governance/dto/vote.req.ts",{"_index":4516,"title":{},"body":{"classes/VoteReq.html":{}}}],["management/governance/dto/vote.req.ts:11",{"_index":4521,"title":{},"body":{"classes/VoteReq.html":{}}}],["management/governance/dto/vote.req.ts:19",{"_index":4524,"title":{},"body":{"classes/VoteReq.html":{}}}],["management/governance/governance.controller.ts",{"_index":2974,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:19",{"_index":2982,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:28",{"_index":2991,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:36",{"_index":2996,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:45",{"_index":2986,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.module.ts",{"_index":3020,"title":{},"body":{"modules/GovernanceModule.html":{}}}],["management/governance/governance.service.ts",{"_index":3022,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:12",{"_index":3023,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:18",{"_index":3025,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:49",{"_index":3027,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:65",{"_index":3029,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:80",{"_index":3026,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/lifecycle/lifecycle.module",{"_index":4513,"title":{},"body":{"modules/VaultsModule.html":{}}}],["management/lifecycle/lifecycle.module.ts",{"_index":3057,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["management/lifecycle/lifecycle.service.ts",{"_index":3061,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:18",{"_index":3069,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:210",{"_index":3071,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:260",{"_index":3073,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:32",{"_index":3076,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:44",{"_index":3074,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:78",{"_index":3072,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["managing",{"_index":4873,"title":{},"body":{"index.html":{}}}],["managing.service",{"_index":1639,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/LifecycleService.html":{}}}],["managing.service.ts",{"_index":4240,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["managing.service.ts:238",{"_index":4321,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:289",{"_index":4325,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:366",{"_index":4324,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:60",{"_index":4328,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:61",{"_index":4329,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:62",{"_index":4330,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:63",{"_index":4326,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:64",{"_index":4327,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:65",{"_index":4320,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:85",{"_index":4323,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["manual",{"_index":635,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["manualacquirer",{"_index":2868,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["manytomany",{"_index":3635,"title":{},"body":{"entities/TagEntity.html":{}}}],["manytoone",{"_index":422,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/Transaction.html":{}}}],["manytoone(undefined",{"_index":410,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":3904,"title":{},"body":{"entities/Transaction.html":{}}}],["map",{"_index":2143,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["map(([unit",{"_index":3796,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["map(async",{"_index":2298,"title":{},"body":{"injectables/ContributionService.html":{}}}],["mark",{"_index":2187,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["market",{"_index":2392,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["match",{"_index":3841,"title":{},"body":{"injectables/TaptoolsService.html":{},"injectables/WebhookVerificationService.html":{}}}],["matches",{"_index":1059,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["matches(/^[0",{"_index":1060,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["matching",{"_index":84,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(currenttime",{"_index":4723,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["math.ceil(total",{"_index":1158,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{}}}],["math.floor(date.now",{"_index":4721,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["math.random().tostring(16).substr(2",{"_index":3440,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["math.round(amount",{"_index":2610,"title":{},"body":{"injectables/DistributionService.html":{}}}],["math.round(vtreceived",{"_index":2660,"title":{},"body":{"injectables/DistributionService.html":{}}}],["math.round(vtretained",{"_index":2636,"title":{},"body":{"injectables/DistributionService.html":{}}}],["mau",{"_index":4857,"title":{},"body":{"index.html":{}}}],["max",{"_index":1391,"title":{},"body":{"controllers/AwsController.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["max_contribute_assets",{"_index":573,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["maxage",{"_index":4728,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["maxcontributeassets",{"_index":4377,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["maxdelayms",{"_index":1795,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["maxeventage",{"_index":4670,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["maxfilesizevalidator",{"_index":1362,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["maximum",{"_index":382,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["maxretries",{"_index":1793,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["maxsize",{"_index":1379,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["mbmultiplication",{"_index":1371,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":3611,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["mediatype",{"_index":1038,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["meet",{"_index":3240,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["meets",{"_index":3226,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["meetsthreshold",{"_index":3224,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["message",{"_index":348,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/GovernanceService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["messagematches",{"_index":1301,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":338,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["metadata'})@apiresponse({status",{"_index":1630,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["metadata'})@column({name",{"_index":2935,"title":{},"body":{"entities/FileEntity.html":{}}}],["metadata.attributes",{"_index":3823,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.description",{"_index":3819,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.image",{"_index":3820,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.mediatype",{"_index":3821,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.name",{"_index":3814,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata_label",{"_index":4606,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["metadatafile",{"_index":2229,"title":{"classes/MetadataFile.html":{}},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["metadatatext",{"_index":4631,"title":{},"body":{"injectables/VyfiService.html":{}}}],["method",{"_index":746,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TransactionModelFix1743089378621.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["metrics",{"_index":2581,"title":{},"body":{"injectables/DistributionService.html":{}}}],["migration",{"_index":4835,"title":{},"body":{"index.html":{}}}],["migration:create",{"_index":4836,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":4839,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["milliseconds",{"_index":4351,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["min",{"_index":695,"title":{},"body":{"interfaces/Amount.html":{},"classes/PaginationDto.html":{},"miscellaneous/variables.html":{}}}],["min(1",{"_index":3468,"title":{},"body":{"classes/PaginationDto.html":{}}}],["min_pool_ada",{"_index":4598,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["min_return_ada",{"_index":4600,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":376,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributorWhitelist.html":{},"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{}}}],["minpoolada",{"_index":4653,"title":{},"body":{"injectables/VyfiService.html":{}}}],["minreturnada",{"_index":4655,"title":{},"body":{"injectables/VyfiService.html":{}}}],["mint",{"_index":2079,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{}}}],["mintadapair",{"_index":2508,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["minting_key",{"_index":2555,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["mintquantity",{"_index":1036,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["minttx",{"_index":1035,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["minutes",{"_index":4689,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["miscellaneous",{"_index":4775,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":4733,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["missing",{"_index":4695,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["mit",{"_index":4908,"title":{},"body":{"index.html":{}}}],["mock",{"_index":3038,"title":{},"body":{"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{}}}],["mode",{"_index":4831,"title":{},"body":{"index.html":{}}}],["model",{"_index":2736,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["modify",{"_index":2742,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["module",{"_index":189,"title":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["modules",{"_index":191,"title":{"modules.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.guard",{"_index":1073,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/BlockchainController.html":{},"controllers/LpTokensController.html":{}}}],["modules/auth/auth.module",{"_index":868,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/aws_bucket/aws.module",{"_index":869,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/distribution/distribution.module",{"_index":870,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/globals/jwt_global_module/jwt_global.module",{"_index":871,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/taptools/taptools.module",{"_index":3050,"title":{},"body":{"modules/JwtGlobalModule.html":{}}}],["modules/users/users.module",{"_index":872,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaults/lp",{"_index":873,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaults/phase",{"_index":876,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaults/processing",{"_index":879,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaults/types",{"_index":3595,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["modules/vaults/vaults.module",{"_index":882,"title":{},"body":{"modules/AppModule.html":{}}}],["monitored",{"_index":1804,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["monitoring",{"_index":1791,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["more",{"_index":3195,"title":{},"body":{"injectables/LifecycleService.html":{},"index.html":{}}}],["move",{"_index":3244,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["moved",{"_index":3103,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["multer",{"_index":1368,"title":{},"body":{"controllers/AwsController.html":{},"dependencies.html":{}}}],["multi",{"_index":2442,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["multiasset",{"_index":658,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiasset.insert(scripthash.from_bytes(buffer.from(policy",{"_index":689,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiasset.new",{"_index":670,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiassetsvalue",{"_index":690,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiassetsvalue.set_multiasset(multiasset",{"_index":693,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":4919,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["name'})@column",{"_index":4086,"title":{},"body":{"entities/User.html":{}}}],["name'})@column({type",{"_index":3257,"title":{},"body":{"entities/LinkEntity.html":{}}}],["name=migrationname",{"_index":4837,"title":{},"body":{"index.html":{}}}],["naming",{"_index":865,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["namingstrategy",{"_index":903,"title":{},"body":{"modules/AppModule.html":{}}}],["need",{"_index":1401,"title":{},"body":{"controllers/AwsController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["needed",{"_index":305,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{}}}],["needs",{"_index":3242,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["negativeinfinity",{"_index":2539,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["nest",{"_index":4823,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":4922,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":4847,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":1412,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":151,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":750,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/JwtGlobalModule.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":4745,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":1233,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":4747,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1367,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":863,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":155,"title":{},"body":{"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":209,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"modules/VaultsModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":3521,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["netada",{"_index":2603,"title":{},"body":{"injectables/DistributionService.html":{}}}],["network",{"_index":1812,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["networkid",{"_index":2359,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["networkid.tostring",{"_index":4612,"title":{},"body":{"injectables/VyfiService.html":{}}}],["new",{"_index":252,"title":{},"body":{"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newfile",{"_index":1549,"title":{},"body":{"injectables/AwsService.html":{}}}],["next",{"_index":3163,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/RawBodyMiddleware.html":{}}}],["nextfunction",{"_index":3517,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["nft",{"_index":1138,"title":{},"body":{"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{}}}],["nft'})@isnotempty()@isstring()@expose",{"_index":3626,"title":{},"body":{"classes/TagDto.html":{}}}],["nft.adavalue",{"_index":3763,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.balance",{"_index":3761,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.floorprice",{"_index":3762,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.name",{"_index":3760,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.policy",{"_index":3759,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nftasset",{"_index":751,"title":{"classes/NftAsset.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["nfts",{"_index":3757,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["node",{"_index":3707,"title":{},"body":{"injectables/TaptoolsService.html":{},"dependencies.html":{}}}],["node.js",{"_index":4817,"title":{},"body":{"index.html":{}}}],["node:buffer",{"_index":646,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["nodecache",{"_index":3700,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nodejs",{"_index":668,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["non",{"_index":294,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{}}}],["nonadaassets",{"_index":3793,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["none",{"_index":3991,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["not_found",{"_index":1844,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":254,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["notfoundexception('no",{"_index":3373,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["notfoundexception('proposal",{"_index":3044,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["notfoundexception('transaction",{"_index":352,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["notfoundexception('user",{"_index":2312,"title":{},"body":{"injectables/ContributionService.html":{}}}],["notfoundexception('vault",{"_index":275,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{}}}],["notfoundexception(`outchain",{"_index":4021,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["notfoundexception(`vault",{"_index":3369,"title":{},"body":{"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["notfoundexception(error.message",{"_index":2111,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["now",{"_index":548,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["now.gettime",{"_index":4368,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["now.toisostring",{"_index":3099,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["npm",{"_index":4826,"title":{},"body":{"index.html":{}}}],["npmconfigname1750085776373",{"_index":1,"title":{"classes/$npmConfigName1750085776373.html":{}},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["npmconfigname1750413089611",{"_index":85,"title":{"classes/$npmConfigName1750413089611.html":{}},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["null",{"_index":462,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/PublicProfileRes.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":417,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["numacquirers",{"_index":2637,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["number",{"_index":377,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/GetVaultsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number(amount[0].quantity",{"_index":704,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["number(asset.quantity",{"_index":684,"title":{},"body":{"interfaces/Amount.html":{},"injectables/TaptoolsService.html":{},"miscellaneous/variables.html":{}}}],["number(index",{"_index":3397,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["number(response.data.cardano.usd",{"_index":3726,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["number(response.data.data.ada",{"_index":3832,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["number(response.data.data.usd",{"_index":3834,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["number(value",{"_index":4360,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["number(vault.acquire_window_duration",{"_index":3192,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["number(vault.contribution_duration",{"_index":3114,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["number})@apiquery({name",{"_index":4536,"title":{},"body":{"controllers/VyfiController.html":{}}}],["number})@isnumber()@isoptional()@expose",{"_index":2915,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["number})@isoptional()@isnumber()@expose",{"_index":3937,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["numeric",{"_index":481,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["numeric(10,2",{"_index":2426,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["numeric(20,2",{"_index":2424,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["obj",{"_index":4362,"title":{},"body":{"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["obj.map(item",{"_index":4966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.phaseendtime",{"_index":4363,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["object",{"_index":987,"title":{},"body":{"classes/AssetMetadataDto.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":367,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{}}}],["object.entries(acquireradamap",{"_index":3227,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["object.entries(contributorvaluemap",{"_index":3234,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["object.entries(params).foreach(([key",{"_index":786,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["object.keys(acquireradamap).length",{"_index":3230,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["object.keys(obj).reduce((acc",{"_index":4968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":1871,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["object})@apiresponse({status",{"_index":1612,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["object})@useguards(authguard",{"_index":1631,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["off_assets_offered",{"_index":3546,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["offchain",{"_index":1714,"title":{},"body":{"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["offer",{"_index":4905,"title":{},"body":{"index.html":{}}}],["offered",{"_index":4390,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["official",{"_index":4858,"title":{},"body":{"index.html":{}}}],["old",{"_index":4726,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["on('data",{"_index":1513,"title":{},"body":{"injectables/AwsService.html":{}}}],["on('end",{"_index":1529,"title":{},"body":{"injectables/AwsService.html":{}}}],["on('error",{"_index":1535,"title":{},"body":{"injectables/AwsService.html":{}}}],["onchain",{"_index":2144,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchainmetadata",{"_index":1037,"title":{"classes/OnchainMetadata.html":{}},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["onchaintransactionstatus",{"_index":1843,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["onchaintransactionstatus.confirmed",{"_index":2142,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchaintransactionstatus.failed",{"_index":2141,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchaintransactionstatus.not_found",{"_index":2150,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchaintransactionstatus.pending",{"_index":2139,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["ondelete",{"_index":412,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{}}}],["one",{"_index":287,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"injectables/LifecycleService.html":{},"controllers/VaultsController.html":{}}}],["one_day",{"_index":4254,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["onetomany",{"_index":3909,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["onetoone",{"_index":4101,"title":{},"body":{"entities/User.html":{}}}],["open",{"_index":2969,"title":{},"body":{"classes/GetVaultsDto.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["operation",{"_index":1764,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["option",{"_index":4517,"title":{},"body":{"classes/VoteReq.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1762,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"classes/CreateProposalReq.html":{}}}],["opts",{"_index":4811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["order",{"_index":503,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"injectables/TransactionsService.html":{},"injectables/VyfiService.html":{}}}],["ordering",{"_index":4294,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["origin",{"_index":534,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{}}}],["origin_type",{"_index":335,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{}}}],["origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum",{"_index":515,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum_old",{"_index":517,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["original",{"_index":3129,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["origintype",{"_index":973,"title":{},"body":{"entities/Asset.html":{}}}],["origintype'})@column({name",{"_index":943,"title":{},"body":{"entities/Asset.html":{}}}],["out",{"_index":205,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"index.html":{},"overview.html":{}}}],["outchain",{"_index":1989,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["output",{"_index":1905,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["output.address",{"_index":1703,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["output.amount.find((a",{"_index":3394,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["output.amount.find(amount",{"_index":731,"title":{},"body":{"interfaces/Amount.html":{}}}],["output.amount.map(asset",{"_index":1704,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["output_amount",{"_index":1576,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["output_amount[1].unit",{"_index":3381,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["output_amount[output_amount.length",{"_index":2049,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["output_index",{"_index":702,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["outputref",{"_index":2185,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["outputs",{"_index":755,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["over",{"_index":3203,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["overview",{"_index":4927,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":3610,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["owner",{"_index":272,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreatePoolDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["owner_id",{"_index":2479,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["owners",{"_index":295,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["ownership",{"_index":1149,"title":{},"body":{"injectables/AssetsService.html":{}}}],["package",{"_index":4735,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":906,"title":{},"body":{"injectables/AppService.html":{}}}],["page",{"_index":1110,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"controllers/VaultsController.html":{}}}],["pages",{"_index":4451,"title":{},"body":{"controllers/VaultsController.html":{}}}],["paginated",{"_index":1067,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/VaultsController.html":{}}}],["paginatedresponsedto",{"_index":2689,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"injectables/DraftVaultsService.html":{},"classes/PaginatedResponseDto.html":{}}}],["pagination.dto",{"_index":2968,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["paginationdto",{"_index":1066,"title":{"classes/PaginationDto.html":{}},"body":{"controllers/AssetsController.html":{},"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["paginationdto:12",{"_index":2967,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["paginationdto:20",{"_index":2965,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["param",{"_index":146,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"controllers/GovernanceController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{}}}],["param('id",{"_index":4506,"title":{},"body":{"controllers/VaultsController.html":{}}}],["param('proposalid",{"_index":3011,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["param('vaultid",{"_index":176,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{}}}],["parameter_change",{"_index":2408,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["parameterize",{"_index":3385,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["parameterized",{"_index":3386,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["parameterizedscript",{"_index":2054,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parameterizedscript.validator",{"_index":2101,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parameterizedscript.validator.hash",{"_index":2055,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parameterizedscript?.validator?.hash",{"_index":3384,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/ExtractLpTokensParams.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TransactionModelFix1743089378621.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{}}}],["parameters'})@apiresponse({status",{"_index":3292,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["params",{"_index":747,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/DistributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{}}}],["params.changeaddress",{"_index":2089,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets.map(asset",{"_index":2076,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets[0].assetname",{"_index":2072,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets[0].policyid",{"_index":2074,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets[0].quantity",{"_index":2075,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.txid",{"_index":806,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["parcing",{"_index":1353,"title":{},"body":{"controllers/AwsController.html":{}}}],["parse",{"_index":1402,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["parse(buffer.tostring",{"_index":1510,"title":{},"body":{"injectables/AwsService.html":{}}}],["parsed",{"_index":1675,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/WebhookVerificationService.html":{}}}],["parsedutxos",{"_index":699,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["parsedutxos.add",{"_index":705,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["parsefilepipe",{"_index":1363,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["parseint(asset.quantity",{"_index":2173,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parseint(process.env.db_port",{"_index":891,"title":{},"body":{"modules/AppModule.html":{}}}],["parseint(timestamp",{"_index":4724,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["parser.raw",{"_index":1668,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["parsing",{"_index":1537,"title":{},"body":{"injectables/AwsService.html":{}}}],["part",{"_index":4896,"title":{},"body":{"index.html":{}}}],["partial",{"_index":358,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"injectables/BlockchainService.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":895,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":147,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/UsersController.html":{}}}],["patch('profile",{"_index":4144,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('transaction/:txid/hash",{"_index":182,"title":{},"body":{"controllers/AcquireController.html":{}}}],["patch('transaction/:txid/hash')@apioperation({summary",{"_index":137,"title":{},"body":{"controllers/AcquireController.html":{}}}],["patch(endpoint",{"_index":773,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["payload",{"_index":1287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["payload.length",{"_index":4705,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["payloadlength",{"_index":4704,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["payment",{"_index":51,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["payment_credential",{"_index":2528,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["pending",{"_index":627,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AssetsService.html":{},"injectables/BlockchainService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LpTokensService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"miscellaneous/enumerations.html":{}}}],["per",{"_index":4706,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["percentage",{"_index":2545,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["percentoftotalacquireadasent",{"_index":2642,"title":{},"body":{"injectables/DistributionService.html":{}}}],["percentoftotalvtnetoflp",{"_index":2647,"title":{},"body":{"injectables/DistributionService.html":{}}}],["percentvalueretained",{"_index":2657,"title":{},"body":{"injectables/DistributionService.html":{}}}],["period",{"_index":3117,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["pg",{"_index":4765,"title":{},"body":{"dependencies.html":{}}}],["phase",{"_index":280,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["phaseendtime",{"_index":4333,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["pk_487a5346fa3693a430b6d6db60c",{"_index":2490,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_61db8d3694e74fd55f37c54a54c",{"_index":549,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["pk_6c16b9093a142e0e7613b04a3d9",{"_index":2420,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_85cf89e7248c7f3f4013e524c84",{"_index":2492,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_8aff9f27f807add95dd73b72f3e",{"_index":2434,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_a219afd8dd77ed80f5a862f1db9",{"_index":3927,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":2432,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_b43bcaa347028f52de05c137789",{"_index":598,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["pk_da96729a8b113377cfb6a62439c",{"_index":2439,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_e7dc17249a1148a1970748eda99",{"_index":597,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["pk_ecf17f4a741d3c5ba0b4c5ab4b6",{"_index":2423,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["placeholder",{"_index":3428,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["plain",{"_index":4191,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainedusers",{"_index":4199,"title":{},"body":{"injectables/UsersService.html":{}}}],["plaintoinstance",{"_index":2685,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["plaintoinstance(publicprofileres",{"_index":4201,"title":{},"body":{"injectables/UsersService.html":{}}}],["plaintoinstance(vaultshortresponse",{"_index":2721,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["plainuser",{"_index":4192,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainuser.address",{"_index":4194,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainuser.gains",{"_index":4195,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainuser.vaults",{"_index":4196,"title":{},"body":{"injectables/UsersService.html":{}}}],["platform",{"_index":3589,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"index.html":{}}}],["please",{"_index":4882,"title":{},"body":{"index.html":{}}}],["plutus",{"_index":2091,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["plutusdata",{"_index":660,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LpTokensService.html":{}}}],["plutusdata.new_bytes(buffer.from(\"bar\")).to_hex",{"_index":4280,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["plutusdata.new_bytes(buffer.from(\"foo\")).to_hex",{"_index":4279,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["plutusdata.new_bytes(buffer.from(datumtag",{"_index":3404,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["plutusdata.new_constr_plutus_data(constrplutusdata.new(bignum.zero",{"_index":716,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist",{"_index":664,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_bytes(buffer.from(tx_hash",{"_index":721,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_bytes(buffer.from(txhash",{"_index":714,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_integer(bigint.from_str(string(tx_output_idx",{"_index":722,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_integer(bigint.from_str(string(txoutputidx",{"_index":715,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.new",{"_index":713,"title":{},"body":{"interfaces/Amount.html":{}}}],["policies",{"_index":674,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policies.length",{"_index":678,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policy",{"_index":369,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"miscellaneous/variables.html":{}}}],["policy_id",{"_index":328,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/PolicyIdRestore1749727852748.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["policyassets",{"_index":680,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policyassets.foreach(asset",{"_index":683,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policyid",{"_index":375,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"entities/Asset.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/functions.html":{}}}],["policyid'})@column({name",{"_index":946,"title":{},"body":{"entities/Asset.html":{}}}],["policyid'})@column({type",{"_index":1191,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["policyid.ts",{"_index":3471,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid.ts:13",{"_index":3473,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid.ts:4",{"_index":3472,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid.ts:6",{"_index":3474,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid1749726859213",{"_index":3469,"title":{"classes/PolicyId1749726859213.html":{}},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyidrestore.ts",{"_index":3477,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore.ts:14",{"_index":3479,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore.ts:4",{"_index":3478,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore.ts:6",{"_index":3480,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore1749727852748",{"_index":3475,"title":{"classes/PolicyIdRestore1749727852748.html":{}},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyid}.${assetname",{"_index":3835,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["pool",{"_index":2368,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/DistributionService.html":{},"classes/TokenInfo.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["pool')@apioperation({summary",{"_index":4534,"title":{},"body":{"controllers/VyfiController.html":{}}}],["pool'})@apibody({type",{"_index":4541,"title":{},"body":{"controllers/VyfiController.html":{}}}],["pool.dto",{"_index":4549,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["pool.dto.ts",{"_index":2358,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["pool.dto.ts:11",{"_index":3882,"title":{},"body":{"classes/TokenInfo.html":{}}}],["pool.dto.ts:15",{"_index":3880,"title":{},"body":{"classes/TokenInfo.html":{}}}],["pool.dto.ts:21",{"_index":2367,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:25",{"_index":2375,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:29",{"_index":2376,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:34",{"_index":2380,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:38",{"_index":2372,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:42",{"_index":2371,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:7",{"_index":3883,"title":{},"body":{"classes/TokenInfo.html":{}}}],["pool_address",{"_index":4604,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["pooladdress",{"_index":4650,"title":{},"body":{"injectables/VyfiService.html":{}}}],["poolcheck",{"_index":4624,"title":{},"body":{"injectables/VyfiService.html":{}}}],["poolcheck.exists",{"_index":4628,"title":{},"body":{"injectables/VyfiService.html":{}}}],["poolfactoryaddress",{"_index":2360,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["poolid",{"_index":4546,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["poolowner",{"_index":4571,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["poolowneraddress",{"_index":2361,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["port",{"_index":890,"title":{},"body":{"modules/AppModule.html":{}}}],["positiveinfinity",{"_index":2540,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["possible",{"_index":4852,"title":{},"body":{"index.html":{}}}],["post",{"_index":148,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["post('/handle",{"_index":1398,"title":{},"body":{"controllers/AwsController.html":{}}}],["post('/publish",{"_index":4476,"title":{},"body":{"controllers/VaultsController.html":{}}}],["post('/upload",{"_index":1377,"title":{},"body":{"controllers/AwsController.html":{}}}],["post(':vaultid",{"_index":171,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["post(':vaultid')@apioperation({summary",{"_index":128,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["post('burn",{"_index":1600,"title":{},"body":{"controllers/BlockchainController.html":{},"controllers/VaultsController.html":{}}}],["post('create",{"_index":4540,"title":{},"body":{"controllers/VyfiController.html":{}}}],["post('extract",{"_index":3304,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["post('extract')@apioperation({summary",{"_index":3286,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["post('login",{"_index":1215,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('profile/banner",{"_index":4152,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('profile/image",{"_index":4148,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('proposals/:proposalid/vote",{"_index":3009,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post('proposals/:proposalid/vote')@useguards(authguard)@apioperation({summary",{"_index":2994,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post('save",{"_index":4480,"title":{},"body":{"controllers/VaultsController.html":{}}}],["post('scanner",{"_index":1617,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/build",{"_index":1645,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/build')@apioperation({summary",{"_index":1593,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/submit",{"_index":1653,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/submit')@apioperation({summary",{"_index":1622,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('tx",{"_index":1606,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('vault/update",{"_index":1650,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('vault/update')@apioperation({summary",{"_index":1629,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('vaults/:vaultid/proposals",{"_index":3003,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post('vaults/:vaultid/proposals')@useguards(authguard)@apioperation({summary",{"_index":2980,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post(endpoint",{"_index":771,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["postgres",{"_index":887,"title":{},"body":{"modules/AppModule.html":{}}}],["power",{"_index":3034,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["preamble",{"_index":4810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":929,"title":{},"body":{"entities/Asset.html":{},"entities/User.html":{}}}],["prefix",{"_index":112,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["preloadedscripts",{"_index":2084,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["prepare",{"_index":3401,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/WebhookVerificationService.html":{}}}],["preprod",{"_index":2102,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["preprod.blockfrost.io/api/v0",{"_index":3698,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["preprod.blockfrost.io/api/v0/addresses/${address.to_bech32()}/utxos",{"_index":4661,"title":{},"body":{"injectables/VyfiService.html":{}}}],["presignedtx",{"_index":2109,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["presignedurl",{"_index":1497,"title":{},"body":{"injectables/AwsService.html":{}}}],["preview",{"_index":3529,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["price",{"_index":1141,"title":{},"body":{"injectables/AssetsService.html":{},"classes/CreateProposalReq.html":{},"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["price...'})@isnotempty()@isstring",{"_index":2393,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["priceada",{"_index":1015,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["prices",{"_index":4375,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["priceusd",{"_index":1016,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{}}}],["pricing",{"_index":2577,"title":{},"body":{"injectables/DistributionService.html":{}}}],["primary",{"_index":550,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["primarygeneratedcolumn",{"_index":423,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":406,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["privacy",{"_index":2459,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/VaultShortResponse.html":{}}}],["private",{"_index":169,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["private/semi",{"_index":2313,"title":{},"body":{"injectables/ContributionService.html":{}}}],["privatekey",{"_index":2019,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["privatekey.from_bech32(customerskey",{"_index":3416,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["process",{"_index":1463,"title":{},"body":{"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{}}}],["process.env.aws_access_key_id",{"_index":1478,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.aws_bucket_name",{"_index":1458,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.aws_bucket_url",{"_index":1473,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.aws_secret_access_key",{"_index":1480,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.blockfrost_testnet_api_key",{"_index":3776,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["process.env.db_host",{"_index":889,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":898,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":896,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":894,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":1545,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.taptools_api_key",{"_index":3713,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processed",{"_index":1611,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/ContributionService.html":{}}}],["processedassets",{"_index":3744,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedassets.filter(a",{"_index":3771,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedassets.length",{"_index":3770,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedassets.push",{"_index":3751,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedblockchaintxs",{"_index":2293,"title":{},"body":{"injectables/ContributionService.html":{}}}],["processing",{"_index":159,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"injectables/WebhookVerificationService.html":{}}}],["processing_fee",{"_index":4595,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["processingfee",{"_index":4651,"title":{},"body":{"injectables/VyfiService.html":{}}}],["production",{"_index":4833,"title":{},"body":{"index.html":{}}}],["profile",{"_index":3592,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profile.dto",{"_index":4134,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profile.dto.ts",{"_index":3588,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:13",{"_index":3591,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["profile.dto.ts:21",{"_index":3594,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["profile.dto.ts:33",{"_index":4040,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:43",{"_index":4039,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:53",{"_index":4041,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:63",{"_index":4038,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:72",{"_index":4046,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:81",{"_index":4045,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:92",{"_index":4043,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.res",{"_index":4184,"title":{},"body":{"injectables/UsersService.html":{}}}],["profile.res.ts",{"_index":3483,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:14",{"_index":3491,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:21",{"_index":3492,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:28",{"_index":3490,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:35",{"_index":3486,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:42",{"_index":3493,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:49",{"_index":3487,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:56",{"_index":3494,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:63",{"_index":3496,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:70",{"_index":3495,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:77",{"_index":3489,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:84",{"_index":3497,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile_image",{"_index":4074,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["profile_image_id",{"_index":2427,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{}}}],["profileimage",{"_index":1318,"title":{},"body":{"injectables/AuthService.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{}}}],["profileimage'})@onetoone(undefined)@joincolumn({name",{"_index":4088,"title":{},"body":{"entities/User.html":{}}}],["profileimg",{"_index":4207,"title":{},"body":{"injectables/UsersService.html":{}}}],["profileimgkey",{"_index":4205,"title":{},"body":{"injectables/UsersService.html":{}}}],["programmed",{"_index":2458,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"miscellaneous/enumerations.html":{}}}],["progressive",{"_index":4816,"title":{},"body":{"index.html":{}}}],["project",{"_index":2524,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"index.html":{}}}],["project_id",{"_index":3775,"title":{},"body":{"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["projectid",{"_index":2039,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["promise",{"_index":31,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{}}}],["promise((resolve",{"_index":1486,"title":{},"body":{"injectables/AwsService.html":{}}}],["promise.all",{"_index":322,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{}}}],["promise.all(batchpromises",{"_index":3805,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["proper",{"_index":4635,"title":{},"body":{"injectables/VyfiService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"classes/VoteReq.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"properties.html":{}}}],["proposal",{"_index":2389,"title":{},"body":{"classes/CreateProposalReq.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/VoteReq.html":{}}}],["proposal'})@apiresponse({status",{"_index":2981,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["proposal.req",{"_index":2997,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["proposal.req.ts",{"_index":2386,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["proposal.req.ts:18",{"_index":2402,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:26",{"_index":2394,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:34",{"_index":2405,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:42",{"_index":2397,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:50",{"_index":2400,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposalid",{"_index":2987,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["proposals",{"_index":2990,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["proposaltype",{"_index":2403,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["proposaltype.asset_sale",{"_index":2409,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["protocol",{"_index":1544,"title":{},"body":{"injectables/AwsService.html":{}}}],["protocol}${host}/api/v1/csv/${uploadresult.key",{"_index":1554,"title":{},"body":{"injectables/AwsService.html":{}}}],["protocol}${host}/api/v1/image/${uploadresult.key",{"_index":1563,"title":{},"body":{"injectables/AwsService.html":{}}}],["provided",{"_index":2778,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["providers",{"_index":196,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["provides",{"_index":2564,"title":{},"body":{"injectables/DistributionService.html":{}}}],["proxy",{"_index":2310,"title":{},"body":{"injectables/ContributionService.html":{}}}],["pubkeybytes",{"_index":1284,"title":{},"body":{"injectables/AuthService.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/LoginReq.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["public\".\"assets_origin_type_enum",{"_index":510,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{}}}],["public\".\"assets_origin_type_enum_old",{"_index":516,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["public\".\"assets_status_enum",{"_index":2437,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"assets_type_enum",{"_index":2435,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"idx_2b3fd4667b2be7a2d7a329083c",{"_index":606,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["public\".\"idx_9dcbee9dfaf5bc1d498d568216",{"_index":2210,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"idx_adf9f0b047319be1ec67ac1d1e",{"_index":605,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["public\".\"idx_f93b9856ae3dfe138275ad9d68",{"_index":449,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["public\".\"transactions_status_enum",{"_index":624,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"transactions_status_enum_old",{"_index":632,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["public\".\"transactions_type_enum",{"_index":45,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"transactions_type_enum_old",{"_index":69,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["public\".\"vaults_acquire_open_window_type_enum",{"_index":3560,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["public\".\"vaults_contribution_open_window_type_enum",{"_index":2449,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["public\".\"vaults_contribution_open_window_type_enum_old",{"_index":2897,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["public\".\"vaults_investment_open_window_type_enum",{"_index":2453,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["public\".\"vaults_privacy_enum",{"_index":2444,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"vaults_termination_type_enum",{"_index":2456,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"vaults_type_enum",{"_index":2440,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"vaults_type_enum_old",{"_index":3930,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"vaults_valuation_type_enum",{"_index":2447,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["public\".\"vaults_value_method_enum",{"_index":3549,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["public\".\"vaults_vault_status_enum",{"_index":91,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["public\".\"vaults_vault_status_enum_old",{"_index":104,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["publication",{"_index":3378,"title":{},"body":{"injectables/LpTokensService.html":{},"classes/VaultShortResponse.html":{}}}],["publication_hash",{"_index":580,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["publicationhash",{"_index":4371,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["publickey",{"_index":1265,"title":{},"body":{"injectables/AuthService.html":{}}}],["publickey.from_bytes(pubkeybytes",{"_index":1286,"title":{},"body":{"injectables/AuthService.html":{}}}],["publickey.verify(signeddata",{"_index":1300,"title":{},"body":{"injectables/AuthService.html":{}}}],["publicprofileres",{"_index":3481,"title":{"classes/PublicProfileRes.html":{}},"body":{"classes/PublicProfileRes.html":{},"injectables/UsersService.html":{}}}],["publish",{"_index":4458,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publish/:id",{"_index":4430,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishdto",{"_index":4427,"title":{},"body":{"controllers/VaultsController.html":{}}}],["published",{"_index":96,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["publishes",{"_index":4459,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishing",{"_index":4479,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvault",{"_index":4424,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvault(@request",{"_index":4477,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvault(req",{"_index":4457,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvaultdto",{"_index":3501,"title":{"classes/PublishVaultDto.html":{}},"body":{"classes/PublishVaultDto.html":{},"controllers/VaultsController.html":{}}}],["purpose",{"_index":2093,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["quantities",{"_index":3838,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["quantity",{"_index":332,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["query",{"_index":149,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/ContributionController.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["query('networkid",{"_index":4554,"title":{},"body":{"controllers/VyfiController.html":{}}}],["query('tokenaunit",{"_index":4555,"title":{},"body":{"controllers/VyfiController.html":{}}}],["query('tokenbunit",{"_index":4556,"title":{},"body":{"controllers/VyfiController.html":{}}}],["query.filter",{"_index":4486,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query.limit",{"_index":1083,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/VaultsController.html":{}}}],["query.order['created_at",{"_index":2716,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["query.order[sortby",{"_index":2714,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["query.page",{"_index":1082,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/VaultsController.html":{}}}],["query.sortby",{"_index":4487,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query.sortorder",{"_index":4488,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query.status",{"_index":4502,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query.type",{"_index":4503,"title":{},"body":{"controllers/VaultsController.html":{}}}],["queryparams",{"_index":4610,"title":{},"body":{"injectables/VyfiService.html":{}}}],["queryrunner",{"_index":26,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query",{"_index":48,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query(`alter",{"_index":38,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query(`create",{"_index":93,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedTags1741943808652.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["queryrunner.query(`drop",{"_index":68,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query(`update",{"_index":536,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["questions",{"_index":4881,"title":{},"body":{"index.html":{}}}],["r2",{"_index":1474,"title":{},"body":{"injectables/AwsService.html":{}}}],["rarity",{"_index":999,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["rate",{"_index":3798,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["raw",{"_index":1665,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{},"dependencies.html":{}}}],["raw.tostring().trim",{"_index":3525,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawbody",{"_index":1666,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{}}}],["rawbody(req",{"_index":3523,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawbody.length",{"_index":1685,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawbody.substring(0",{"_index":1687,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawbodylength",{"_index":1684,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawbodymiddleware",{"_index":3513,"title":{"injectables/RawBodyMiddleware.html":{}},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawbodypreview",{"_index":1686,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawtext",{"_index":3524,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawtext.length",{"_index":3528,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawtext.substring(0",{"_index":3530,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["re",{"_index":1560,"title":{},"body":{"injectables/AwsService.html":{},"injectables/RawBodyMiddleware.html":{}}}],["read",{"_index":1485,"title":{},"body":{"injectables/AwsService.html":{},"index.html":{}}}],["readonly",{"_index":170,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"injectables/RawBodyMiddleware.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["ready",{"_index":3237,"title":{},"body":{"injectables/LifecycleService.html":{},"index.html":{}}}],["real",{"_index":3246,"title":{},"body":{"injectables/LifecycleService.html":{},"index.html":{}}}],["reason",{"_index":4518,"title":{},"body":{"classes/VoteReq.html":{}}}],["receive",{"_index":2203,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["received",{"_index":1405,"title":{},"body":{"controllers/AwsController.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["received_sum",{"_index":3783,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["receivedsignature",{"_index":4718,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["receiver",{"_index":614,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["recent",{"_index":3990,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["recipient",{"_index":1702,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["record",{"_index":312,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["recorded",{"_index":2995,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["redeemer",{"_index":2094,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/typealiases.html":{}}}],["redeemer1",{"_index":2510,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"miscellaneous/typealiases.html":{}}}],["redeemer2",{"_index":2519,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["redeemer3",{"_index":2521,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":4679,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["reference_script_hash",{"_index":1579,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["referencedcolumnname",{"_index":3638,"title":{},"body":{"entities/TagEntity.html":{}}}],["referenceinputs",{"_index":2085,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["references",{"_index":74,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["reflect",{"_index":4768,"title":{},"body":{"dependencies.html":{}}}],["refund",{"_index":3241,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["refunded",{"_index":3243,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["regardless",{"_index":3245,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["region",{"_index":1471,"title":{},"body":{"injectables/AwsService.html":{}}}],["register",{"_index":1809,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["registered",{"_index":1807,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["registertrackingaddress",{"_index":1733,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["registertrackingaddress(vaultaddress",{"_index":1758,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["reject",{"_index":1487,"title":{},"body":{"injectables/AwsService.html":{}}}],["reject(err.message",{"_index":1491,"title":{},"body":{"injectables/AwsService.html":{}}}],["reject(new",{"_index":1531,"title":{},"body":{"injectables/AwsService.html":{}}}],["rel_3e6ff48532fbe552bbb6c4098b",{"_index":2485,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["rel_657d44500fe38e604f4a630662",{"_index":2431,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_96d6f1aafc327443850f263cd5",{"_index":2430,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_a6a3f7811be6df590c8da538d4",{"_index":2484,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_bfa8eb1a193e5e4a9dc4d2b725",{"_index":2483,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_c15eb8818056ac23754262fdd3",{"_index":2486,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["relation",{"_index":4186,"title":{},"body":{"injectables/UsersService.html":{}}}],["relations",{"_index":270,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{}}}],["relationships",{"_index":2834,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["releaseasset",{"_index":1099,"title":{},"body":{"injectables/AssetsService.html":{}}}],["releaseasset(userid",{"_index":1117,"title":{},"body":{"injectables/AssetsService.html":{}}}],["released",{"_index":1168,"title":{},"body":{"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"miscellaneous/enumerations.html":{}}}],["released_at",{"_index":913,"title":{},"body":{"entities/Asset.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["releasedat",{"_index":972,"title":{},"body":{"entities/Asset.html":{}}}],["releasedat'})@column({name",{"_index":949,"title":{},"body":{"entities/Asset.html":{}}}],["remaining",{"_index":4350,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["remove",{"_index":501,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{},"injectables/WebhookVerificationService.html":{}}}],["rename",{"_index":46,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["renamefieldfixenum.ts",{"_index":3535,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum.ts:30",{"_index":3537,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum.ts:4",{"_index":3536,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum.ts:6",{"_index":3538,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum1742800375799",{"_index":3533,"title":{"classes/RenameFieldFixEnum1742800375799.html":{}},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefields.ts",{"_index":3541,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields.ts:28",{"_index":3543,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields.ts:4",{"_index":3542,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields.ts:6",{"_index":3544,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields1746536544579",{"_index":3539,"title":{"classes/RenameFields1746536544579.html":{}},"body":{"classes/RenameFields1746536544579.html":{}}}],["renameinvestmenttoacquire.ts",{"_index":3554,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire.ts:4",{"_index":3555,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire.ts:59",{"_index":3556,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire.ts:6",{"_index":3557,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire1746531791148",{"_index":3552,"title":{"classes/RenameInvestmentToAcquire1746531791148.html":{}},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renamevaultfield.ts",{"_index":3570,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield.ts:18",{"_index":3572,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield.ts:4",{"_index":3571,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield.ts:6",{"_index":3573,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield1742382533813",{"_index":3568,"title":{"classes/RenameVaultField1742382533813.html":{}},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["replacelockedstatetogovernance.ts",{"_index":3576,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance.ts:26",{"_index":3578,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance.ts:4",{"_index":3577,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance.ts:6",{"_index":3579,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance1743424803837",{"_index":3574,"title":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["repository",{"_index":241,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["represent",{"_index":4295,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["represents.decorator",{"_index":3499,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["represents.decorator.ts",{"_index":2902,"title":{},"body":{"interfaces/DtoRepresentsType.html":{},"miscellaneous/functions.html":{}}}],["req",{"_index":133,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"injectables/RawBodyMiddleware.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["req.body",{"_index":3531,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["req.body.tostring('utf8",{"_index":1670,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["req.get('host",{"_index":4151,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.headers['blockfrost",{"_index":1664,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["req.readable",{"_index":3522,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["req.user.sub",{"_index":179,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["req?.headers",{"_index":1382,"title":{},"body":{"controllers/AwsController.html":{}}}],["req['rawbody",{"_index":3526,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["request",{"_index":349,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AssetsController.html":{},"guards/AuthGuard.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/ContributionService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":1242,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":4978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request['user",{"_index":1238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["require('./blueprint.json",{"_index":4953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require_reserved_cost_ada",{"_index":588,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["require_reserved_cost_usd",{"_index":587,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["required",{"_index":288,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"classes/NftAsset.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{}}}],["required_inputs",{"_index":4268,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["requiredinputs",{"_index":4272,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["requiredsigners",{"_index":2083,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["requiredthresholdada",{"_index":3223,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["requirements",{"_index":1133,"title":{},"body":{"injectables/AssetsService.html":{}}}],["requirereservedcostada",{"_index":4373,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["requirereservedcostusd",{"_index":4378,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["requiring",{"_index":4863,"title":{},"body":{"index.html":{}}}],["res",{"_index":1340,"title":{},"body":{"controllers/AwsController.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{}}}],["res.data",{"_index":3743,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.data.adavalue",{"_index":3746,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.data.positionsft",{"_index":3749,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.data.positionsnft",{"_index":3758,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.setheader('cache",{"_index":1389,"title":{},"body":{"controllers/AwsController.html":{}}}],["res.setheader('content",{"_index":1387,"title":{},"body":{"controllers/AwsController.html":{}}}],["reserve",{"_index":2552,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["reset",{"_index":204,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["resolve",{"_index":1534,"title":{},"body":{"injectables/AwsService.html":{}}}],["resolve(data",{"_index":1492,"title":{},"body":{"injectables/AwsService.html":{}}}],["resources",{"_index":4875,"title":{},"body":{"index.html":{}}}],["response",{"_index":795,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AwsController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["response.data",{"_index":1788,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["response.data.pipe(res",{"_index":1393,"title":{},"body":{"controllers/AwsController.html":{}}}],["response.data.txhash",{"_index":1864,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["response.data?.cardano?.usd",{"_index":3722,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["response.data?.data",{"_index":3830,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["response.dto",{"_index":2691,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["response.dto.ts",{"_index":3459,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:11",{"_index":3462,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:14",{"_index":3461,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:17",{"_index":3464,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:5",{"_index":3460,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:8",{"_index":3463,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.headers['content",{"_index":1388,"title":{},"body":{"controllers/AwsController.html":{}}}],["response.json",{"_index":803,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response.json().catch",{"_index":799,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response.ok",{"_index":797,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response.status",{"_index":801,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response?.transactions",{"_index":1821,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["responsetype",{"_index":1501,"title":{},"body":{"injectables/AwsService.html":{}}}],["result",{"_index":2115,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["result.transactionid",{"_index":3310,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["result.txhash",{"_index":2118,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["results",{"_index":83,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retention",{"_index":2580,"title":{},"body":{"injectables/DistributionService.html":{}}}],["retries",{"_index":1817,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["retrieval",{"_index":3041,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["retrieved",{"_index":3659,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["retry",{"_index":1800,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["return",{"_index":180,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":836,"title":{},"body":{"controllers/AppController.html":{},"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["reverse",{"_index":502,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["review",{"_index":636,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["rewardaddress",{"_index":1266,"title":{},"body":{"injectables/AuthService.html":{}}}],["rewardaddress.from_address(address).to_address().to_bech32",{"_index":1294,"title":{},"body":{"injectables/AuthService.html":{}}}],["round6",{"_index":2587,"title":{},"body":{"injectables/DistributionService.html":{}}}],["round6(amount",{"_index":2608,"title":{},"body":{"injectables/DistributionService.html":{}}}],["run",{"_index":4828,"title":{},"body":{"index.html":{}}}],["runs",{"_index":4850,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1842,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["s3",{"_index":1428,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["s3.getsignedurlpromise('getobject",{"_index":1496,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3.upload(params",{"_index":1488,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3forcepathstyle",{"_index":1481,"title":{},"body":{"injectables/AwsService.html":{}}}],["satisfies",{"_index":3403,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["save",{"_index":321,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"controllers/VaultsController.html":{}}}],["saved",{"_index":4463,"title":{},"body":{"controllers/VaultsController.html":{}}}],["savedasset",{"_index":2331,"title":{},"body":{"injectables/ContributionService.html":{}}}],["savedasset.id",{"_index":2333,"title":{},"body":{"injectables/ContributionService.html":{}}}],["savedraft",{"_index":4425,"title":{},"body":{"controllers/VaultsController.html":{}}}],["savedraft(req",{"_index":4462,"title":{},"body":{"controllers/VaultsController.html":{}}}],["savedraftreq",{"_index":2683,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["savedraftvault",{"_index":2666,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["savedraftvault(userid",{"_index":2682,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["savedtransaction",{"_index":319,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["savedtransaction.id",{"_index":2334,"title":{},"body":{"injectables/ContributionService.html":{}}}],["sc",{"_index":4950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sc_address",{"_index":2056,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["scaddress",{"_index":4257,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["scalable",{"_index":4820,"title":{},"body":{"index.html":{}}}],["scale",{"_index":931,"title":{},"body":{"entities/Asset.html":{},"entities/User.html":{}}}],["scanner",{"_index":1619,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/WebhookVerificationService.html":{}}}],["scanner.service",{"_index":1716,"title":{},"body":{"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["scanner.service.ts",{"_index":1720,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["scanner.service.ts:127",{"_index":1753,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:136",{"_index":1738,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:164",{"_index":1741,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:168",{"_index":1743,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:175",{"_index":1751,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:179",{"_index":1745,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:183",{"_index":1747,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:187",{"_index":1749,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:22",{"_index":1766,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:23",{"_index":1767,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:24",{"_index":1735,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:31",{"_index":1757,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:47",{"_index":1755,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:72",{"_index":1759,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:81",{"_index":1763,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scannerkey",{"_index":1721,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scannerurl",{"_index":1722,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scannerwh",{"_index":1590,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["scannerwh(@body",{"_index":1659,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["scannerwh(event",{"_index":1615,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["schedulemodule",{"_index":862,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{}}}],["schedulemodule.forroot",{"_index":883,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{}}}],["schema",{"_index":4808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scpolicyid",{"_index":3321,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["script",{"_index":2530,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["scripthash",{"_index":659,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["scriptinteractions",{"_index":2080,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["sdk",{"_index":1465,"title":{},"body":{"injectables/AwsService.html":{},"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1467,"title":{},"body":{"injectables/AwsService.html":{}}}],["second",{"_index":1775,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["seconds",{"_index":1779,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{}}}],["secret",{"_index":1240,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["secretaccesskey",{"_index":1479,"title":{},"body":{"injectables/AwsService.html":{}}}],["select",{"_index":2121,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{}}}],["selected",{"_index":4519,"title":{},"body":{"classes/VoteReq.html":{}}}],["selecteduser",{"_index":4220,"title":{},"body":{"injectables/UsersService.html":{}}}],["selecteduser.banner_image",{"_index":4221,"title":{},"body":{"injectables/UsersService.html":{}}}],["selecteduser.profile_image",{"_index":4223,"title":{},"body":{"injectables/UsersService.html":{}}}],["selectedutxo",{"_index":4266,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["selectedutxo.input().index",{"_index":4271,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["selectedutxo.input().transaction_id().to_hex",{"_index":4270,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["selectedutxo.to_hex",{"_index":4269,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["sell",{"_index":2390,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["semi",{"_index":2446,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"miscellaneous/enumerations.html":{}}}],["semi_private",{"_index":4251,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["semiprivate",{"_index":4790,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":1984,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["sender",{"_index":613,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["sensitive",{"_index":4117,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sent",{"_index":3233,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{}}}],["sent_sum",{"_index":3784,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["serialization",{"_index":666,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["server",{"_index":1813,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"index.html":{}}}],["service",{"_index":2563,"title":{},"body":{"injectables/DistributionService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["services",{"_index":1847,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["services/lp",{"_index":3300,"title":{},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["services/transactions/build",{"_index":807,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["services/transactions/submit",{"_index":810,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["set",{"_index":463,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/DraftVaultsService.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["set([...manualacquirer",{"_index":2872,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["setaddedat",{"_index":977,"title":{},"body":{"entities/Asset.html":{}}}],["setdate",{"_index":427,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["settimeout",{"_index":1768,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["setting",{"_index":4346,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["settings",{"_index":304,"title":{},"body":{"injectables/AcquireService.html":{}}}],["setup",{"_index":4296,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{}}}],["shape",{"_index":2082,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["shares",{"_index":2579,"title":{},"body":{"injectables/DistributionService.html":{}}}],["shelley",{"_index":1521,"title":{},"body":{"injectables/AwsService.html":{}}}],["shorta",{"_index":4615,"title":{},"body":{"injectables/VyfiService.html":{}}}],["shorta}/${shortb",{"_index":4623,"title":{},"body":{"injectables/VyfiService.html":{}}}],["shortb",{"_index":4619,"title":{},"body":{"injectables/VyfiService.html":{}}}],["shouldretry",{"_index":1796,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["shows",{"_index":4428,"title":{},"body":{"controllers/VaultsController.html":{}}}],["side",{"_index":4821,"title":{},"body":{"index.html":{}}}],["sig",{"_index":1289,"title":{},"body":{"injectables/AuthService.html":{}}}],["sign",{"_index":2105,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["signature",{"_index":1272,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/LifecycleService.html":{},"classes/LoginReq.html":{},"injectables/LpTokensService.html":{},"classes/SignatureData.html":{},"injectables/WebhookVerificationService.html":{}}}],["signaturearr",{"_index":4961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signaturedata",{"_index":1207,"title":{"classes/SignatureData.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["signatureheader",{"_index":4674,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signatureheader.split",{"_index":4699,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signaturepayload",{"_index":4708,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signatures",{"_index":809,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["signaturevalue",{"_index":4698,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signaturevalue.split('=')[1",{"_index":4701,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signatureversion",{"_index":1475,"title":{},"body":{"injectables/AwsService.html":{}}}],["signed",{"_index":1624,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signeddata",{"_index":1291,"title":{},"body":{"injectables/AuthService.html":{}}}],["signedtx",{"_index":1837,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signedtx.signatures",{"_index":1863,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signedtx.transaction",{"_index":1862,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signedtx.txid",{"_index":2112,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["signedtx.vaultid",{"_index":2120,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["signerstakeaddrbech32",{"_index":1293,"title":{},"body":{"injectables/AuthService.html":{}}}],["signing",{"_index":1263,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["signoptions",{"_index":1422,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["simple",{"_index":4865,"title":{},"body":{"index.html":{}}}],["single",{"_index":4791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["size",{"_index":1922,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/UsersService.html":{}}}],["skey",{"_index":4589,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":1153,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["skip_empty_lines",{"_index":1511,"title":{},"body":{"injectables/AwsService.html":{}}}],["slot",{"_index":1916,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["slot_number",{"_index":2532,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["smallest",{"_index":2193,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["smallint",{"_index":2471,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["snakecase(key",{"_index":4970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakekey",{"_index":4969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakenamingstrategy",{"_index":864,"title":{},"body":{"modules/AppModule.html":{}}}],["social",{"_index":2841,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["social_links",{"_index":2708,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["sociallink",{"_index":365,"title":{"classes/SocialLink.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["sociallinkdto",{"_index":3586,"title":{"classes/SocialLinkDto.html":{}},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["sociallinks",{"_index":3484,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{}}}],["sociallinks'})@onetomany(undefined",{"_index":4090,"title":{},"body":{"entities/User.html":{}}}],["sort",{"_index":2715,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{}}}],["sortby",{"_index":2677,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{}}}],["sorting",{"_index":2712,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["sortorder",{"_index":2679,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.desc",{"_index":2681,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{}}}],["special",{"_index":3855,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["specific",{"_index":308,"title":{},"body":{"injectables/AcquireService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{}}}],["specified",{"_index":2713,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["spend",{"_index":2099,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["split",{"_index":3205,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["sponsors",{"_index":4912,"title":{},"body":{"index.html":{}}}],["src",{"_index":2230,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["src/.../api",{"_index":4797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../apply_params.ts",{"_index":4798,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../asset.types.ts",{"_index":4777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../aws.controller.ts",{"_index":4945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blockchain",{"_index":4940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blockchain.service.ts",{"_index":4779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../create",{"_index":4782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../dto",{"_index":4801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../get",{"_index":4783,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":4942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lib.ts",{"_index":4802,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":4799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../transaction",{"_index":4780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transaction.types.ts",{"_index":4784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type.ts",{"_index":4937,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../typeorm.config.ts",{"_index":4939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../vault",{"_index":4946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../vault.types.ts",{"_index":4778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../vyfi.service.ts",{"_index":4947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":832,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:18",{"_index":838,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":860,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":904,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":905,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/decorators/get",{"_index":4974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":4954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/acquirerwhitelist.entity.ts",{"_index":397,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:13",{"_index":418,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:17",{"_index":414,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:21",{"_index":409,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:25",{"_index":405,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:9",{"_index":407,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/asset.entity.ts",{"_index":908,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:106",{"_index":945,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:110",{"_index":942,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:115",{"_index":954,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:120",{"_index":920,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:128",{"_index":916,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:13",{"_index":935,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:136",{"_index":957,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:17",{"_index":959,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:23",{"_index":947,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:29",{"_index":922,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:35",{"_index":955,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:39",{"_index":924,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:42",{"_index":948,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:52",{"_index":934,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:62",{"_index":932,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:65",{"_index":926,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:73",{"_index":937,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:80",{"_index":951,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:88",{"_index":939,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:96",{"_index":950,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/assetswhitelist.entity.ts",{"_index":1182,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:10",{"_index":1190,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:17",{"_index":1194,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:25",{"_index":1188,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:33",{"_index":1186,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:37",{"_index":1197,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:41",{"_index":1195,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:45",{"_index":1189,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts",{"_index":2337,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:13",{"_index":2343,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:17",{"_index":2342,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:21",{"_index":2340,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:25",{"_index":2338,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:9",{"_index":2339,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/file.entity.ts",{"_index":2923,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:11",{"_index":2927,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:15",{"_index":2933,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:19",{"_index":2931,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:23",{"_index":2929,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:27",{"_index":2936,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:31",{"_index":2937,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:35",{"_index":2925,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:7",{"_index":2934,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/link.entity.ts",{"_index":3253,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:11",{"_index":3256,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:15",{"_index":3261,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:19",{"_index":3258,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:24",{"_index":3268,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:29",{"_index":3265,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:33",{"_index":3259,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:37",{"_index":3254,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/migrations/1741879378411",{"_index":2415,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["src/database/migrations/1741943808652",{"_index":590,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["src/database/migrations/1741943808653",{"_index":491,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["src/database/migrations/1741946649594",{"_index":4033,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["src/database/migrations/1742209228422",{"_index":4048,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["src/database/migrations/1742311345554",{"_index":2217,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["src/database/migrations/1742382533813",{"_index":3569,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["src/database/migrations/1742484041497",{"_index":538,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["src/database/migrations/1742800375799",{"_index":3534,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["src/database/migrations/1742800589634",{"_index":2889,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["src/database/migrations/1742819100112",{"_index":4057,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["src/database/migrations/1743089378621",{"_index":3922,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["src/database/migrations/1743424803837",{"_index":3575,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["src/database/migrations/1743433439139",{"_index":465,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["src/database/migrations/1743588383672",{"_index":608,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["src/database/migrations/1743678745097",{"_index":2205,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["src/database/migrations/1743687086047",{"_index":457,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["src/database/migrations/1744024797075",{"_index":441,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["src/database/migrations/1744032453542",{"_index":451,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["src/database/migrations/1745573712493",{"_index":4411,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["src/database/migrations/1745583708330",{"_index":575,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["src/database/migrations/1745662880319",{"_index":433,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["src/database/migrations/1745921850315",{"_index":520,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["src/database/migrations/1746531791148",{"_index":3553,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["src/database/migrations/1746532933340",{"_index":4063,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["src/database/migrations/1746536544579",{"_index":3540,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["src/database/migrations/1747665618438",{"_index":483,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["src/database/migrations/1747821437539",{"_index":582,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["src/database/migrations/1747838327085",{"_index":553,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["src/database/migrations/1747911428750",{"_index":568,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["src/database/migrations/1748264767365",{"_index":527,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["src/database/migrations/1748361017536",{"_index":505,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["src/database/migrations/1749046550619",{"_index":561,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["src/database/migrations/1749726859213",{"_index":3470,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["src/database/migrations/1749727852748",{"_index":3476,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["src/database/migrations/1750085776373",{"_index":6,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["src/database/migrations/1750413089611",{"_index":86,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["src/database/migrations/1750670509513",{"_index":475,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["src/database/tag.entity.ts",{"_index":3627,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/tag.entity.ts:12",{"_index":3630,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/tag.entity.ts:27",{"_index":3634,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/tag.entity.ts:9",{"_index":3628,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/transaction.entity.ts",{"_index":3884,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:14",{"_index":3892,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:20",{"_index":3899,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:26",{"_index":3901,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:32",{"_index":3903,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:40",{"_index":3897,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:45",{"_index":3886,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:50",{"_index":3890,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:56",{"_index":3896,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:65",{"_index":3894,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:69",{"_index":3889,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:73",{"_index":3905,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:77",{"_index":3907,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/user.entity.ts",{"_index":4073,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:21",{"_index":4085,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:25",{"_index":4100,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:29",{"_index":4087,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:33",{"_index":4076,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:37",{"_index":4094,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:41",{"_index":4082,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:46",{"_index":4089,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:51",{"_index":4078,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:55",{"_index":4092,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:59",{"_index":4098,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:63",{"_index":4096,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:67",{"_index":4084,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:70",{"_index":4080,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:74",{"_index":4079,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:78",{"_index":4099,"title":{},"body":{"entities/User.html":{}}}],["src/decorators/api",{"_index":825,"title":{},"body":{"interfaces/ApiDocParams.html":{},"miscellaneous/functions.html":{}}}],["src/decorators/dto",{"_index":2901,"title":{},"body":{"interfaces/DtoRepresentsType.html":{},"miscellaneous/functions.html":{}}}],["src/helpers/index.ts",{"_index":4955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":4812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":1200,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:20",{"_index":1206,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.guard.ts",{"_index":1220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:13",{"_index":1228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:29",{"_index":1231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:7",{"_index":1225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":1248,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":1252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:15",{"_index":1256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:21",{"_index":1258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/login.req.ts",{"_index":3269,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["src/modules/auth/dto/login.req.ts:13",{"_index":3581,"title":{},"body":{"classes/SignatureData.html":{}}}],["src/modules/auth/dto/login.req.ts:23",{"_index":3582,"title":{},"body":{"classes/SignatureData.html":{}}}],["src/modules/auth/dto/login.req.ts:36",{"_index":3271,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/modules/auth/dto/login.req.ts:45",{"_index":3274,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/modules/auth/dto/login.req.ts:54",{"_index":3276,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/modules/aws_bucket/aws.controller.ts",{"_index":1334,"title":{},"body":{"controllers/AwsController.html":{},"miscellaneous/variables.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:45",{"_index":1359,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:67",{"_index":1350,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:80",{"_index":1347,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:95",{"_index":1356,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.module.ts",{"_index":1410,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/modules/aws_bucket/aws.service.ts",{"_index":1426,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:118",{"_index":1451,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:144",{"_index":1453,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:16",{"_index":1462,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:17",{"_index":1459,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:19",{"_index":1439,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:25",{"_index":1449,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:43",{"_index":1455,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:63",{"_index":1448,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:74",{"_index":1445,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:79",{"_index":1442,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:84",{"_index":1457,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/distribution/distribution.module.ts",{"_index":2560,"title":{},"body":{"modules/DistributionModule.html":{}}}],["src/modules/distribution/distribution.service.ts",{"_index":2562,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:16",{"_index":2589,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:22",{"_index":2609,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:26",{"_index":2607,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:30",{"_index":2602,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:34",{"_index":2596,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:38",{"_index":2593,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:75",{"_index":2591,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/globals/jwt_global_module/jwt_global.module.ts",{"_index":3049,"title":{},"body":{"modules/JwtGlobalModule.html":{}}}],["src/modules/taptools/dto/asset",{"_index":1010,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["src/modules/taptools/dto/wallet",{"_index":4663,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["src/modules/taptools/taptools.controller.ts",{"_index":3640,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["src/modules/taptools/taptools.controller.ts:22",{"_index":3646,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["src/modules/taptools/taptools.module.ts",{"_index":3665,"title":{},"body":{"modules/TaptoolsModule.html":{}}}],["src/modules/taptools/taptools.service.ts",{"_index":3667,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:161",{"_index":3683,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:175",{"_index":3690,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:18",{"_index":3705,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:20",{"_index":3696,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:21",{"_index":3699,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:22",{"_index":3703,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:23",{"_index":3678,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:335",{"_index":3685,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:34",{"_index":3694,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:377",{"_index":3680,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:38",{"_index":3681,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:64",{"_index":3692,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:94",{"_index":3688,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/users/dto/public",{"_index":3482,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["src/modules/users/dto/update",{"_index":3587,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["src/modules/users/dto/upload",{"_index":4069,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["src/modules/users/users.controller.ts",{"_index":4106,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:100",{"_index":4127,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:39",{"_index":4114,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:50",{"_index":4119,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:61",{"_index":4123,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:75",{"_index":4130,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":4158,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":4161,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:156",{"_index":4177,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:167",{"_index":4181,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:17",{"_index":4165,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:197",{"_index":4179,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:28",{"_index":4170,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:37",{"_index":4173,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:66",{"_index":4167,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:71",{"_index":4172,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:87",{"_index":4175,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/vaults/draft",{"_index":2662,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts",{"_index":1047,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts:14",{"_index":1058,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts:24",{"_index":1052,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts:34",{"_index":1050,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/get",{"_index":2939,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/vaults/dto/paginated",{"_index":3458,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/modules/vaults/dto/pagination.dto.ts",{"_index":3465,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/modules/vaults/dto/pagination.dto.ts:12",{"_index":3467,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/modules/vaults/dto/pagination.dto.ts:20",{"_index":3466,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/modules/vaults/dto/publish",{"_index":3502,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["src/modules/vaults/dto/tag.dto.ts",{"_index":3624,"title":{},"body":{"classes/TagDto.html":{}}}],["src/modules/vaults/dto/tag.dto.ts:13",{"_index":3625,"title":{},"body":{"classes/TagDto.html":{}}}],["src/modules/vaults/dto/vault.response.ts",{"_index":4331,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:104",{"_index":4355,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:111",{"_index":4337,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:118",{"_index":4357,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:125",{"_index":4349,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:28",{"_index":4341,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:35",{"_index":4343,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:42",{"_index":4339,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:49",{"_index":4354,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:56",{"_index":4338,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:63",{"_index":4353,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:70",{"_index":4342,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:77",{"_index":4348,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:84",{"_index":4345,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:97",{"_index":4352,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/lp",{"_index":2189,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{}}}],["src/modules/vaults/phase",{"_index":110,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/CreateProposalReq.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/TxUpdateReq.html":{},"classes/VoteReq.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/vaults/processing",{"_index":642,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetMetadataDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/CreateAssetDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"classes/NftAsset.html":{},"injectables/RawBodyMiddleware.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/vaults/types.ts",{"_index":355,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["src/modules/vaults/types.ts:14",{"_index":3583,"title":{},"body":{"classes/SocialLink.html":{}}}],["src/modules/vaults/types.ts:29",{"_index":1045,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["src/modules/vaults/types.ts:39",{"_index":1044,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["src/modules/vaults/types.ts:49",{"_index":1041,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["src/modules/vaults/types.ts:60",{"_index":2335,"title":{},"body":{"classes/ContributorWhitelist.html":{}}}],["src/modules/vaults/types.ts:71",{"_index":359,"title":{},"body":{"classes/AcquirerWhitelist.html":{}}}],["src/modules/vaults/types.ts:82",{"_index":389,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:86",{"_index":390,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:9",{"_index":3584,"title":{},"body":{"classes/SocialLink.html":{}}}],["src/modules/vaults/types.ts:90",{"_index":391,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:94",{"_index":392,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:98",{"_index":393,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/vaults.controller.ts",{"_index":4417,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:108",{"_index":4449,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:128",{"_index":4453,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:141",{"_index":4456,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:155",{"_index":4434,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:167",{"_index":4431,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:33",{"_index":4438,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:49",{"_index":4461,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:66",{"_index":4465,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:84",{"_index":4445,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:96",{"_index":4441,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.module.ts",{"_index":4512,"title":{},"body":{"modules/VaultsModule.html":{}}}],["src/modules/vyfi/dto/create",{"_index":2357,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["src/modules/vyfi/vyfi.controller.ts",{"_index":4526,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.controller.ts:17",{"_index":4538,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.controller.ts:32",{"_index":4542,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.controller.ts:38",{"_index":4545,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.module.ts",{"_index":4567,"title":{},"body":{"modules/VyfiModule.html":{}}}],["src/modules/vyfi/vyfi.service.ts",{"_index":4569,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["src/modules/vyfi/vyfi.service.ts:185",{"_index":4583,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:205",{"_index":4581,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:30",{"_index":4588,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:31",{"_index":4586,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:32",{"_index":4575,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:41",{"_index":4577,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:68",{"_index":4580,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:77",{"_index":4578,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/types/asset.types",{"_index":4007,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/types/asset.types.ts",{"_index":4785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/blockchain.types.ts",{"_index":1565,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["src/types/transaction.types",{"_index":4008,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/types/transaction.types.ts",{"_index":4793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/vault.types.ts",{"_index":4786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stake",{"_index":57,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/LoginReq.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/SignatureData.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4",{"_index":3273,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["stake_address",{"_index":471,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["stake_credential",{"_index":2531,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["stakeaddress",{"_index":1273,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{},"entities/User.html":{}}}],["stakeaddress'})@column({unique",{"_index":4093,"title":{},"body":{"entities/User.html":{}}}],["start",{"_index":2087,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"index.html":{}}}],["start:dev",{"_index":4832,"title":{},"body":{"index.html":{}}}],["start:prodmigration",{"_index":4834,"title":{},"body":{"index.html":{}}}],["start_threshold",{"_index":2475,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["started",{"_index":4815,"title":{"index.html":{}},"body":{}}],["starter",{"_index":4825,"title":{},"body":{"index.html":{}}}],["starting",{"_index":1522,"title":{},"body":{"injectables/AwsService.html":{}}}],["startthreshold",{"_index":4401,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["state",{"_index":1581,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["static",{"_index":1483,"title":{},"body":{"injectables/AwsService.html":{}}}],["status",{"_index":174,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"entities/Asset.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/GetVaultTransactionsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"miscellaneous/functions.html":{}}}],["status\"::\"text\"::\"public\".\"transactions_status_enum",{"_index":631,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["status\"::\"text\"::\"public\".\"transactions_status_enum_old",{"_index":637,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["status'})@column({name",{"_index":3893,"title":{},"body":{"entities/Transaction.html":{}}}],["status.enum",{"_index":1897,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["status.enum.ts",{"_index":4781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statusmap",{"_index":2146,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["statusmap[status",{"_index":2153,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["statusupdated",{"_index":2303,"title":{},"body":{"injectables/ContributionService.html":{}}}],["stay",{"_index":4899,"title":{},"body":{"index.html":{}}}],["stdttl",{"_index":3701,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["steps",{"_index":4849,"title":{},"body":{"index.html":{}}}],["still",{"_index":3127,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["store",{"_index":3148,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["stored",{"_index":2284,"title":{},"body":{"injectables/ContributionService.html":{}}}],["str",{"_index":4814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["straightforward",{"_index":4861,"title":{},"body":{"index.html":{}}}],["strategies",{"_index":866,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["stream",{"_index":1502,"title":{},"body":{"injectables/AwsService.html":{},"injectables/RawBodyMiddleware.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(lovelace.quantity",{"_index":692,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["stringifying",{"_index":1674,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["string})@apiquery({name",{"_index":4537,"title":{},"body":{"controllers/VyfiController.html":{}}}],["stripped",{"_index":759,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["stuck",{"_index":630,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":1315,"title":{},"body":{"injectables/AuthService.html":{}}}],["submit",{"_index":1623,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["submitonchainvaulttx",{"_index":4318,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["submitonchainvaulttx(signedtx",{"_index":4301,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["submitresponse",{"_index":3418,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/VyfiService.html":{}}}],["submitresponse.data",{"_index":4649,"title":{},"body":{"injectables/VyfiService.html":{}}}],["submitresponse.txhash",{"_index":3421,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["submits",{"_index":1836,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["submitted",{"_index":628,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["submitting",{"_index":1867,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransaction",{"_index":812,"title":{},"body":{"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransaction(@body",{"_index":1654,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["submittransaction(params",{"_index":808,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["submittransaction(signedtx",{"_index":1834,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransactiondto",{"_index":1621,"title":{"classes/SubmitTransactionDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransactiondto:115",{"_index":3622,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactiondto:123",{"_index":3621,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactiondto:134",{"_index":3620,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactiondto:146",{"_index":3619,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactionparams",{"_index":2028,"title":{"interfaces/SubmitTransactionParams.html":{}},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["submitvaulttxdto",{"_index":2008,"title":{"classes/SubmitVaultTxDto.html":{}},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["substring(4",{"_index":1281,"title":{},"body":{"injectables/AuthService.html":{}}}],["subtract",{"_index":3787,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["success",{"_index":347,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/GovernanceService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/VaultShortResponse.html":{}}}],["success/failure",{"_index":3249,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["successful",{"_index":131,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AuthController.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ContributionController.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["successfully",{"_index":142,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["successfully'})@apiresponse({status",{"_index":3291,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["sufficient",{"_index":3033,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["sum",{"_index":3845,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["summary",{"_index":172,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/functions.html":{}}}],["summary.dto",{"_index":3650,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["summary.dto.ts",{"_index":4232,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:11",{"_index":4237,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:14",{"_index":4235,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:17",{"_index":4236,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:20",{"_index":4234,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:38",{"_index":4233,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:4",{"_index":4667,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:5",{"_index":4238,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:6",{"_index":4665,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:7",{"_index":4666,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:8",{"_index":4239,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:9",{"_index":4664,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["supply",{"_index":4394,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["support",{"_index":4522,"title":{},"body":{"classes/VoteReq.html":{},"index.html":{},"modules.html":{}}}],["supports",{"_index":3433,"title":{},"body":{"injectables/LpTokensService.html":{},"controllers/VaultsController.html":{}}}],["svg",{"_index":4925,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":56,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["sync",{"_index":2285,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{}}}],["synccontributiontransactions",{"_index":2273,"title":{},"body":{"injectables/ContributionService.html":{}}}],["synccontributiontransactions(vaultid",{"_index":2280,"title":{},"body":{"injectables/ContributionService.html":{}}}],["synchronize",{"_index":899,"title":{},"body":{"modules/AppModule.html":{}}}],["syncs",{"_index":2282,"title":{},"body":{"injectables/ContributionService.html":{}}}],["system",{"_index":2572,"title":{},"body":{"injectables/DistributionService.html":{}}}],["t",{"_index":748,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["table",{"_index":39,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["tag",{"_index":2852,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/TagDto.html":{}}}],["tag_id",{"_index":73,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"entities/TagEntity.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["tagdata",{"_index":2851,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["tagdata.name",{"_index":2854,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["tagdto",{"_index":3623,"title":{"classes/TagDto.html":{}},"body":{"classes/TagDto.html":{}}}],["tagentity",{"_index":2700,"title":{"entities/TagEntity.html":{}},"body":{"injectables/DraftVaultsService.html":{},"entities/TagEntity.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["tags",{"_index":595,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["tags\"(\"id",{"_index":75,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["tagsrepository",{"_index":2672,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["take",{"_index":1154,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/TransactionsService.html":{},"index.html":{}}}],["taptools",{"_index":3641,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["taptools.controller",{"_index":3666,"title":{},"body":{"modules/TaptoolsModule.html":{}}}],["taptools.service",{"_index":3651,"title":{},"body":{"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{}}}],["taptools/taptools.service",{"_index":3083,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["taptoolsapikey",{"_index":3670,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["taptoolscontroller",{"_index":3639,"title":{"controllers/TaptoolsController.html":{}},"body":{"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{}}}],["taptoolsmodule",{"_index":3048,"title":{"modules/TaptoolsModule.html":{}},"body":{"modules/JwtGlobalModule.html":{},"modules/TaptoolsModule.html":{},"modules.html":{},"overview.html":{}}}],["taptoolsservice",{"_index":3067,"title":{"injectables/TaptoolsService.html":{}},"body":{"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"overview.html":{}}}],["targetprice",{"_index":2412,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["termination",{"_index":2550,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["termination_type",{"_index":2472,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["terminationtype",{"_index":4359,"title":{},"body":{"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["test",{"_index":3853,"title":{},"body":{"injectables/TaptoolsService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":4844,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":4842,"title":{},"body":{"index.html":{}}}],["testing",{"_index":3339,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["testnet",{"_index":2382,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{}}}],["testnet)'})@isnumber",{"_index":2366,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["tests",{"_index":4840,"title":{},"body":{"index.html":{}}}],["text/csv",{"_index":1399,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{}}}],["thanks",{"_index":4911,"title":{},"body":{"index.html":{}}}],["there's",{"_index":3837,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.acquirerwhitelistrepository.create",{"_index":2876,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.acquirerwhitelistrepository.remove(existingvault.acquirer_whitelist",{"_index":2748,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.acquirerwhitelistrepository.save(investoritems",{"_index":2877,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.acquireservice.acquire(vaultid",{"_index":181,"title":{},"body":{"controllers/AcquireController.html":{}}}],["this.acquireservice.updatetransactionhash(txid",{"_index":184,"title":{},"body":{"controllers/AcquireController.html":{}}}],["this.adaanvilapiurl}/submit",{"_index":4648,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.added_at",{"_index":978,"title":{},"body":{"entities/Asset.html":{}}}],["this.adminhash",{"_index":2034,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.adminkeyhash",{"_index":3358,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.adminskey",{"_index":2036,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.anvilapi",{"_index":1846,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.anvilapikey",{"_index":1848,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.anvilapiservice.submittransaction(params",{"_index":2155,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.anvilapi}/transactions/submit",{"_index":1861,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.apikey",{"_index":767,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["this.appservice.apiversion",{"_index":845,"title":{},"body":{"controllers/AppController.html":{}}}],["this.assetrepository.create",{"_index":325,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["this.assetrepository.findby",{"_index":4015,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.assetrepository.findone",{"_index":4017,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.assetrepository.save(asset",{"_index":340,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["this.assetsrepository.create",{"_index":1142,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsrepository.find",{"_index":1176,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsrepository.findandcount",{"_index":1151,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsrepository.findone",{"_index":1159,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsrepository.query(query",{"_index":3184,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.assetsrepository.save(asset",{"_index":1146,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsservice.getacquiredassets(userid",{"_index":1086,"title":{},"body":{"controllers/AssetsController.html":{}}}],["this.assetsservice.getvaultassets(userid",{"_index":1081,"title":{},"body":{"controllers/AssetsController.html":{}}}],["this.assetswhitelistrepository.remove(existingvault.assets_whitelist",{"_index":2746,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.assetswhitelistrepository.save",{"_index":2861,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.authservice.verifysignature(signaturedata",{"_index":1217,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.awsservice.getcsv(id",{"_index":1396,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.awsservice.getimage(id",{"_index":1386,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.awsservice.uploadcsv(file",{"_index":1406,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.awsservice.uploadimage(file",{"_index":1383,"title":{},"body":{"controllers/AwsController.html":{},"injectables/UsersService.html":{}}}],["this.baseurl",{"_index":765,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["this.blockchainscanner.checkmonitoringaddress(vault.contract_address",{"_index":2125,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.blockchainscanner.getaddresstransactions(vault.contract_address",{"_index":2292,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.blockchainscanner.gettransactiondetails(vault.publication_hash",{"_index":2045,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.blockchainservice.buildtransaction(input",{"_index":2104,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.blockchainservice.buildtransaction(txinput",{"_index":3411,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.blockchainservice.submittransaction",{"_index":2116,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.blockfrost",{"_index":2038,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.blockfrost.txsutxos(tx_hash",{"_index":3391,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.cache.get(cachekey",{"_index":3718,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.cache.set(cachekey",{"_index":3727,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.callanvilapi",{"_index":770,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["this.checkpool",{"_index":4625,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.configservice.get('admin_key_hash",{"_index":2035,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('admin_s_key",{"_index":2037,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('anvil_api_key",{"_index":768,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.configservice.get('anvil_api_url",{"_index":766,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.configservice.get('blockfrost_api_key",{"_index":4658,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.configservice.get('blockfrost_testnet_api_key",{"_index":2040,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('blockfrost_webhook_auth_token",{"_index":4686,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":1241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.configservice.get('sc_policy_id",{"_index":3363,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('scanner_key",{"_index":1783,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.configservice.get('scanner_url",{"_index":1781,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.configservice.get('vyfi_api_key",{"_index":4642,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.contributionservice.contribute(vaultid",{"_index":2263,"title":{},"body":{"controllers/ContributionController.html":{}}}],["this.contributionservice.synccontributiontransactions(vault.id",{"_index":3160,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.contributorwhitelistrepository.create",{"_index":2882,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.contributorwhitelistrepository.remove(existingvault.contributor_whitelist",{"_index":2750,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.contributorwhitelistrepository.save(contributoritems",{"_index":2884,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.created_at",{"_index":428,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["this.distributionservice.calculateacquirerexample",{"_index":3229,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.distributionservice.calculatecontributorexample",{"_index":3235,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.draftvaultsservice.getdraftvaultbyid(id",{"_index":4494,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.draftvaultsservice.getmydraftvaults(userid",{"_index":4491,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.draftvaultsservice.savedraftvault(userid",{"_index":4482,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.extracttokenfromheader(request",{"_index":1237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.filerepository.create",{"_index":1550,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.filerepository.save(newfile",{"_index":1558,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.filesrepository.create",{"_index":4227,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.filesrepository.findone",{"_index":2754,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["this.filesrepository.save(fileentity",{"_index":4231,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findbyid(id",{"_index":4022,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.formatmetadatatext(tokena",{"_index":4632,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.generatemocktransactionhash",{"_index":3429,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.getadaprice",{"_index":3733,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getassetsgroupedbyuser(vault.id",{"_index":3197,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.getassetvalue(asset.policyid",{"_index":3861,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getdraftvaultbyid(vault.id",{"_index":2885,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.getmainnetwalletsummary(walletaddress",{"_index":3736,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getpresignedurl(this.bucketname",{"_index":1498,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.gets3",{"_index":1482,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.gettestnetwalletsummary(walletaddress",{"_index":3735,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getutxos(address.from_bech32(customer_address",{"_index":4633,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.governanceservice.createproposal(vaultid",{"_index":3005,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.governanceservice.getproposal(proposalid",{"_index":3015,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.governanceservice.getproposals(vaultid",{"_index":3008,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.governanceservice.vote(proposalid",{"_index":3012,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.handlecontributiontoinvestment",{"_index":3088,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.handleinvestmenttogovernance",{"_index":3089,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.handlepublishedtocontribution",{"_index":3087,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.httpservice.get(`https://cardano",{"_index":4660,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.httpservice.get(presignedurl",{"_index":1500,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.httpservice.post",{"_index":1860,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["this.httpservice.post(`${this.adaanvilapiurl}/build",{"_index":4644,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.isretryableerror(err",{"_index":1814,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.istestnetaddress(walletaddress",{"_index":3734,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.isvalidaddress(walletaddress",{"_index":3364,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.jwtservice.signasync(jwtpayload",{"_index":1324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":1239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.linksrepository.create",{"_index":2845,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.linksrepository.remove(existingvault.social_links",{"_index":2744,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.linksrepository.remove(user.social_links",{"_index":4215,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.linksrepository.save",{"_index":4217,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.linksrepository.save(links",{"_index":2848,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.logger.debug",{"_index":3231,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.debug('checking",{"_index":3085,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.debug('computed",{"_index":4717,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.debug('parsed",{"_index":4702,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.debug('raw",{"_index":3527,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["this.logger.debug(`user",{"_index":3215,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.error",{"_index":2128,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.error('blockfrost",{"_index":4693,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('blockfrost_webhook_auth_token",{"_index":4691,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('error",{"_index":1562,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('failed",{"_index":4287,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.logger.error('signature",{"_index":4732,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('webhook",{"_index":4725,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error(`error",{"_index":343,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/LifecycleService.html":{}}}],["this.logger.error(`failed",{"_index":1816,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{}}}],["this.logger.error(`scanner",{"_index":1789,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.logger.log",{"_index":3144,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.log('applying",{"_index":3383,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log('csv",{"_index":1404,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.logger.log('drfat",{"_index":4481,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.logger.log('error",{"_index":3779,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.logger.log('user",{"_index":4185,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.log('webhook",{"_index":4730,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.log(`address",{"_index":1806,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.logger.log(`burning",{"_index":3426,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`created",{"_index":2332,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{}}}],["this.logger.log(`dropping",{"_index":3430,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`extracted",{"_index":3382,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`extracting",{"_index":3368,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`getting",{"_index":3377,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`run",{"_index":2180,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`scanner",{"_index":1784,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.logger.log(`submitting",{"_index":2114,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`successfully",{"_index":1815,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`transaction",{"_index":1866,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.logger.log(`updated",{"_index":2307,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.logger.log(`updating",{"_index":2117,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`vault",{"_index":3101,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.log(json.stringify(output_amount[1].unit",{"_index":3380,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(json.stringify(output_amount[output_amount.length",{"_index":2046,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.warn",{"_index":3239,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.warn(`vault",{"_index":2122,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.lptokensservice.extractlptokens(extractdto",{"_index":3309,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["this.makepostrequest(`/monitoring/addresses",{"_index":1792,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest",{"_index":1819,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/addresses/${address}/balance",{"_index":1818,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/addresses/${address}/utxos",{"_index":1823,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/contracts/${contractaddress}/state",{"_index":1824,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/tokens/${policyid}/${assetname",{"_index":1825,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/transactions/${txhash",{"_index":1822,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/monitoring/addresses/${vaultaddress",{"_index":1805,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.maxeventage",{"_index":4687,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.poolowner",{"_index":4608,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.poolowner.base_address_preprod",{"_index":4630,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.registertrackingaddress(vaultaddress",{"_index":1811,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.round6(adasent",{"_index":2643,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lp_percent",{"_index":2645,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lpada",{"_index":2631,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lpvt",{"_index":2629,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lpvtinitialshare",{"_index":2655,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(netada",{"_index":2612,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(percentoftotalvtnetoflp",{"_index":2649,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatelpada(valuecontributed",{"_index":2624,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatetotalvalueretained(0",{"_index":2635,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatevtprice(totalacquiredvalueada",{"_index":2644,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatevtprice(valuecontributed",{"_index":2623,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(totalvalueinadaretained",{"_index":2658,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(vt_supply",{"_index":2626,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(vtreceived",{"_index":2651,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(vtretained",{"_index":2633,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.s3",{"_index":1470,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.scaddress",{"_index":4261,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.scannerkey",{"_index":1782,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.scannerurl",{"_index":1780,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.scannerurl}${endpoint",{"_index":1785,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.scpolicyid",{"_index":3362,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.tagsrepository.findone",{"_index":2853,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.tagsrepository.save",{"_index":2855,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.taptoolsapikey",{"_index":3712,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.taptoolsservice.calculatevaultassetsvalue(vault.id",{"_index":3143,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.taptoolsservice.calculatevaultassetsvalue(vaultid",{"_index":3661,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["this.taptoolsservice.getassetvalue(asset.policy_id",{"_index":3217,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.taptoolsservice.getwalletsummary(address",{"_index":3656,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["this.transactionrepository.find",{"_index":2308,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["this.transactionrepository.findone",{"_index":2301,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["this.transactionrepository.findoneorfail",{"_index":2329,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.transactionrepository.save",{"_index":4009,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionrepository.save(transaction",{"_index":4020,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionservice.buildtransaction(params",{"_index":1647,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.handleblockchainevent(event",{"_index":1693,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.handleburnvault(userid",{"_index":1649,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.handlescannerevent(event",{"_index":1660,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.submittransaction(params",{"_index":1655,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionsservice.createtransaction",{"_index":313,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{}}}],["this.transactionsservice.findbyid(transaction.id",{"_index":320,"title":{},"body":{"injectables/AcquireService.html":{}}}],["this.transactionsservice.findbyid(transactionid",{"_index":351,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["this.transactionsservice.getacquiretransactions(vaultid",{"_index":188,"title":{},"body":{"controllers/AcquireController.html":{}}}],["this.transactionsservice.getcontributiontransactions(vaultid",{"_index":2265,"title":{},"body":{"controllers/ContributionController.html":{}}}],["this.transactionsservice.getlastvaultupdate(vaultid",{"_index":3372,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.transactionsservice.gettransaction(submitresponse.txhash",{"_index":3423,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.transactionsservice.gettransaction(txhash",{"_index":3963,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.gettransactionsbyreceiver(address",{"_index":3960,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.gettransactionsbysender(address",{"_index":3958,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.getvaulttransactions(id",{"_index":4501,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.transactionsservice.updatetransactionhash(signedtx.txid",{"_index":2119,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.transactionsservice.updatetransactionhash(transaction.id",{"_index":3420,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.transactionsservice.updatetransactionhash(transactionid",{"_index":353,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["this.transactionsservice.updatetransactionstatus(tx.hash",{"_index":2154,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.transactionsservice.updatetransactionstatus(tx.tx_hash",{"_index":2306,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.transactionsservice.validatetransactionexists(params.txid",{"_index":2042,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.updated_at",{"_index":431,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["this.uploads3(file.buffer",{"_index":1542,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.userrepository.findone",{"_index":273,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{}}}],["this.usersrepository.create(userdata",{"_index":4197,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":2311,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":4198,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update",{"_index":4226,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":1307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyaddress(stakeaddress",{"_index":1306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getprofile(userid",{"_index":4140,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getpublicprofile(userid",{"_index":4143,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateprofile(userid",{"_index":4146,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuseraddress(user.id",{"_index":1311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.uploadbannerimage(userid",{"_index":4153,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.uploadprofileimage(userid",{"_index":4150,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validatecsvaddresses(file.buffer",{"_index":1540,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.vaultcontractservice.createburntx",{"_index":3124,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.vaultcontractservice.submitonchainvaulttx",{"_index":3132,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.vaultmanagingservice.updatevaultmetadatatx(params",{"_index":1652,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.vaultrepository",{"_index":3092,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.vaultrepository.findone",{"_index":268,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["this.vaultrepository.save(vault",{"_index":3100,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.vaultsrepository.findandcount(query",{"_index":2718,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsrepository.findone",{"_index":1126,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.vaultsrepository.findonebyorfail",{"_index":2616,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.vaultsrepository.save",{"_index":2839,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsrepository.save(vault",{"_index":2857,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsrepository.save(vaultdata",{"_index":2840,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsservice.burnvaultattempt(id",{"_index":4505,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.burnvaultpublishtx(id",{"_index":4507,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.createvault(userid",{"_index":4475,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.getmyvaults(userid",{"_index":4485,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.getvaultbyid(id",{"_index":4496,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.getvaults(userid",{"_index":4498,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.publishvault(userid",{"_index":4478,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vyfiapiurl}/lp",{"_index":4609,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.vyfiservice.checkpool",{"_index":4557,"title":{},"body":{"controllers/VyfiController.html":{}}}],["this.vyfiservice.createliquiditypool(createpooldto",{"_index":4559,"title":{},"body":{"controllers/VyfiController.html":{}}}],["this.vyfiservice.getpoolinfo(poolid",{"_index":4562,"title":{},"body":{"controllers/VyfiController.html":{}}}],["this.webhookauthtoken",{"_index":4685,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.webhookverificationservice.verifysignature(rawbody",{"_index":1690,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.withretry",{"_index":1810,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["threshold",{"_index":3151,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["throw",{"_index":274,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["ticker",{"_index":1017,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["time",{"_index":546,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/UpdateFieldsType1741946649594.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"index.html":{}}}],["time_elapsed_is_equal_to_time",{"_index":2223,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["timediff",{"_index":4722,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["timeelapsedisequaltotime",{"_index":4385,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["timeout",{"_index":3741,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["timeremaining",{"_index":4334,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["timers/promises",{"_index":1769,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["timestamp",{"_index":545,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/GovernanceService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["timestampheader",{"_index":4697,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["timestampheader.split('=')[1",{"_index":4700,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["timestamptz",{"_index":403,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["timestamp}.${payload",{"_index":4709,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["title",{"_index":2387,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["to'})@isstring()@isnotempty()@expose",{"_index":2919,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["to_address",{"_index":2059,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["to_bech32",{"_index":2060,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["todo",{"_index":1400,"title":{},"body":{"controllers/AwsController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["tohex",{"_index":4249,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["tohex('bar",{"_index":4282,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tohex('foo",{"_index":4281,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tohex('vaultid",{"_index":4283,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tohex(str",{"_index":740,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["tohex(vaultconfig.vaultid",{"_index":4284,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["token",{"_index":1236,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/CreatePoolDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{}}}],["token'})@isnumber",{"_index":3879,"title":{},"body":{"classes/TokenInfo.html":{}}}],["token'})@isstring",{"_index":3881,"title":{},"body":{"classes/TokenInfo.html":{}}}],["token.interface.ts",{"_index":2191,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["token.interface.ts:11",{"_index":3280,"title":{},"body":{"classes/LpTokenOperationResult.html":{}}}],["token.interface.ts:18",{"_index":3281,"title":{},"body":{"classes/LpTokenOperationResult.html":{}}}],["token.interface.ts:25",{"_index":3279,"title":{},"body":{"classes/LpTokenOperationResult.html":{}}}],["token.types",{"_index":3357,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["token.types.ts",{"_index":2922,"title":{},"body":{"interfaces/ExtractLpTokensParams-1.html":{}}}],["token_decimals",{"_index":2547,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["token_id",{"_index":2211,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["token_policy",{"_index":2548,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["token_supply",{"_index":2546,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tokena",{"_index":2362,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["tokena.amount",{"_index":4638,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.assetname",{"_index":4637,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.policyid",{"_index":4616,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.policyid.substring(0",{"_index":4617,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.policyid}${tokena.assetname",{"_index":4626,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenaunit",{"_index":4531,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["tokenb",{"_index":2363,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["tokenb.amount",{"_index":4640,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.assetname",{"_index":4639,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.policyid",{"_index":4620,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.policyid.substring(0",{"_index":4621,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.policyid}${tokenb.assetname",{"_index":4627,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenbunit",{"_index":4532,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["tokenid",{"_index":1008,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/CreateAssetDto.html":{},"injectables/TaptoolsService.html":{}}}],["tokeninfo",{"_index":2373,"title":{"classes/TokenInfo.html":{}},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["tokens",{"_index":2181,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"classes/WalletSummaryDto.html":{}}}],["tokens.controller",{"_index":3316,"title":{},"body":{"modules/LpTokensModule.html":{}}}],["tokens.controller.ts",{"_index":3283,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["tokens.controller.ts:32",{"_index":3294,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["tokens.dto",{"_index":3298,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["tokens.dto.ts",{"_index":2909,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:10",{"_index":2918,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:16",{"_index":2920,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:22",{"_index":2912,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:31",{"_index":2914,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:41",{"_index":2916,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.module",{"_index":875,"title":{},"body":{"modules/AppModule.html":{}}}],["tokens.module.ts",{"_index":3315,"title":{},"body":{"modules/LpTokensModule.html":{}}}],["tokens.service",{"_index":3301,"title":{},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["tokens.service.ts",{"_index":3319,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:299",{"_index":3329,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:31",{"_index":3345,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:32",{"_index":3348,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:33",{"_index":3344,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:34",{"_index":3327,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:341",{"_index":3333,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:372",{"_index":3341,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:388",{"_index":3337,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:56",{"_index":3347,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:75",{"_index":3336,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens/dto/extract",{"_index":2908,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens/interfaces/lp",{"_index":2190,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["tokens/lp",{"_index":874,"title":{},"body":{"modules/AppModule.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["tokens/services/lp",{"_index":3318,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens/types/lp",{"_index":2921,"title":{},"body":{"interfaces/ExtractLpTokensParams-1.html":{}}}],["tokens_for_acquires",{"_index":2465,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["tokensforacquires",{"_index":4391,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["tolerance",{"_index":4719,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["topreloadedscript",{"_index":2024,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/functions.html":{}}}],["topreloadedscript(__namedparameters",{"_index":4809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["topreloadedscript(blueprint",{"_index":2100,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["topromise",{"_index":1503,"title":{},"body":{"injectables/AwsService.html":{}}}],["tostring('hex",{"_index":1280,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1150,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/PaginatedResponseDto.html":{},"classes/SocialLinkDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["total_acquired_value_ada",{"_index":480,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["total_assets",{"_index":3168,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["total_assets_cost_ada",{"_index":489,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["total_assets_cost_usd",{"_index":488,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["total_required_ada",{"_index":4601,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["total_vaults",{"_index":2425,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["totalacquiredada",{"_index":3200,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["totalacquiredvalueada",{"_index":2638,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["totalada",{"_index":3745,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalada.tofixed(4",{"_index":3765,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totaladavalue",{"_index":3857,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalassets",{"_index":3769,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["totalassetvalueada",{"_index":3864,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalassetvalueusd",{"_index":3865,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalcontributedvalueada",{"_index":3201,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["totalpages",{"_index":1157,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"classes/PaginatedResponseDto.html":{}}}],["totalrequiredada",{"_index":4657,"title":{},"body":{"injectables/VyfiService.html":{}}}],["totalretainedvalue",{"_index":2634,"title":{},"body":{"injectables/DistributionService.html":{}}}],["totalsupply",{"_index":1584,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["totaltvl",{"_index":2614,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["totalusd",{"_index":3747,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalusd.tofixed(4",{"_index":3767,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalvalueada",{"_index":3764,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["totalvalueada.tofixed(6",{"_index":3871,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalvalueinadaretained",{"_index":2656,"title":{},"body":{"injectables/DistributionService.html":{}}}],["totalvalueusd",{"_index":3766,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["totalvalueusd.tofixed(2",{"_index":3872,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalvaults",{"_index":1328,"title":{},"body":{"injectables/AuthService.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{}}}],["totalvaults'})@column({type",{"_index":4095,"title":{},"body":{"entities/User.html":{}}}],["touch",{"_index":4916,"title":{},"body":{"index.html":{}}}],["track",{"_index":3128,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["traits",{"_index":1003,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["transaction",{"_index":138,"title":{"entities/Transaction.html":{}},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["transaction'})@apiresponse({status",{"_index":1595,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transaction'})@isstring()@expose",{"_index":1888,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["transaction'})@manytoone(undefined",{"_index":952,"title":{},"body":{"entities/Asset.html":{}}}],["transaction'})@primarygeneratedcolumn('uuid",{"_index":3891,"title":{},"body":{"entities/Transaction.html":{}}}],["transaction.entity",{"_index":960,"title":{},"body":{"entities/Asset.html":{}}}],["transaction.id",{"_index":345,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{}}}],["transaction.id)@joincolumn({name",{"_index":953,"title":{},"body":{"entities/Asset.html":{}}}],["transaction.status",{"_index":4019,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transaction.tx_hash",{"_index":4023,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transaction.vault_id",{"_index":2043,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["transaction_id",{"_index":621,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{}}}],["transaction_index",{"_index":2533,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["transactionbuildresponse",{"_index":756,"title":{"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionbuildresponsedto",{"_index":1633,"title":{"classes/TransactionBuildResponseDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["transactionbuildresponsedto})@useguards(authguard",{"_index":1597,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transactionhash",{"_index":653,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["transactionid",{"_index":251,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["transactioninput",{"_index":651,"title":{},"body":{"interfaces/Amount.html":{}}}],["transactioninput.new(transactionhash.from_hex(tx_hash",{"_index":707,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transactionmodelfix.ts",{"_index":3923,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix.ts:32",{"_index":3925,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix.ts:4",{"_index":3924,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix.ts:6",{"_index":3926,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix1743089378621",{"_index":3921,"title":{"classes/TransactionModelFix1743089378621.html":{}},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionoutput",{"_index":652,"title":{"classes/TransactionOutput.html":{}},"body":{"interfaces/Amount.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["transactionoutput.new(address",{"_index":708,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transactionrepository",{"_index":2277,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{}}}],["transactions",{"_index":64,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"controllers/AcquireController.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["transactions\"(\"id",{"_index":634,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["transactions'})@useguards(authguard)@apiresponse({status",{"_index":119,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["transactions.controller",{"_index":3968,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["transactions.dto",{"_index":4468,"title":{},"body":{"controllers/VaultsController.html":{}}}],["transactions.dto.ts",{"_index":2940,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["transactions.dto.ts:16",{"_index":2943,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["transactions.dto.ts:26",{"_index":2945,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["transactions.length",{"_index":4027,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.service",{"_index":3954,"title":{},"body":{"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{}}}],["transactions[0",{"_index":4028,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions_status_enum",{"_index":638,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["transactions_status_enum_old",{"_index":625,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["transactions_type_enum",{"_index":82,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["transactions_type_enum_old",{"_index":47,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["transactionscontroller",{"_index":3941,"title":{"controllers/TransactionsController.html":{}},"body":{"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{}}}],["transactionservice",{"_index":1644,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transactionsmodule",{"_index":202,"title":{"modules/TransactionsModule.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/LpTokensModule.html":{},"modules/TransactionsModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionsservice",{"_index":158,"title":{"injectables/TransactionsService.html":{}},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"overview.html":{}}}],["transactionstatus",{"_index":2020,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["transactionstatus.confirmed",{"_index":2148,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/GetVaultTransactionsDto.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionstatus.created",{"_index":4011,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactionstatus.failed",{"_index":2149,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionstatus.pending",{"_index":2147,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionstatus.stuck",{"_index":2151,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionsubmitresponse",{"_index":1845,"title":{"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{}},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionsubmitresponsedto",{"_index":1634,"title":{"classes/TransactionSubmitResponseDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["transactionsubmitresponsedto})@useguards(authguard",{"_index":1625,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transactiontype",{"_index":261,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/LpTokensService.html":{},"entities/Transaction.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["transactiontype.acquire",{"_index":314,"title":{},"body":{"injectables/AcquireService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/TransactionsService.html":{}}}],["transactiontype.contribute",{"_index":2309,"title":{},"body":{"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/TransactionsService.html":{}}}],["transactiontype.extractlp",{"_index":3367,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["transactionunspentoutput",{"_index":654,"title":{},"body":{"interfaces/Amount.html":{}}}],["transactionunspentoutput.new",{"_index":706,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transactionunspentoutputs",{"_index":655,"title":{},"body":{"interfaces/Amount.html":{}}}],["transactionunspentoutputs.new",{"_index":700,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transfer",{"_index":2162,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transferdetails",{"_index":2163,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transferdetails.sender",{"_index":2170,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transferdetails.transfers.push",{"_index":2172,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transfers",{"_index":1700,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transform",{"_index":2228,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/functions.html":{}}}],["transform(transform",{"_index":2905,"title":{},"body":{"interfaces/DtoRepresentsType.html":{}}}],["transformeditems",{"_index":2719,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformer",{"_index":229,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["transformimagetourl",{"_index":1267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["transformimagetourl(selecteduser.banner_image",{"_index":4222,"title":{},"body":{"injectables/UsersService.html":{}}}],["transformimagetourl(selecteduser.profile_image",{"_index":4224,"title":{},"body":{"injectables/UsersService.html":{}}}],["transformimagetourl(user.banner_image",{"_index":1321,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformimagetourl(user.profile_image",{"_index":1319,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformimagetourl(vault.banner_image",{"_index":2730,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformimagetourl(vault.ft_token_img",{"_index":2732,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformimagetourl(vault.vault_image",{"_index":2728,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformtosnakecase",{"_index":4948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformtosnakecase(item",{"_index":4967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformtosnakecase(obj[key",{"_index":4972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition",{"_index":3155,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["transitions",{"_index":3086,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["trim",{"_index":1512,"title":{},"body":{"injectables/AwsService.html":{}}}],["true",{"_index":235,"title":{},"body":{"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"entities/AssetsWhitelistEntity.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DraftVaultsService.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["true})@dtorepresent({transform",{"_index":4336,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["true})@expose",{"_index":3505,"title":{},"body":{"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/UpdateProfileDto.html":{}}}],["true})@expose({name",{"_index":941,"title":{},"body":{"entities/Asset.html":{}}}],["true})@index",{"_index":3906,"title":{},"body":{"entities/Transaction.html":{}}}],["true})@isnotempty()@isstring()@expose",{"_index":3618,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["true})@isoptional()@expose",{"_index":1963,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["true})@isoptional()@isboolean",{"_index":2379,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["true})@isstring()@isnotempty()@expose",{"_index":3615,"title":{},"body":{"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["true})@joincolumn({name",{"_index":3264,"title":{},"body":{"entities/LinkEntity.html":{}}}],["true})@type(undefined)@expose",{"_index":225,"title":{},"body":{"classes/AcquireReq.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/TransactionOutput.html":{}}}],["trxnreservefee",{"_index":2641,"title":{},"body":{"injectables/DistributionService.html":{}}}],["try",{"_index":315,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["ts",{"_index":3407,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tuple",{"_index":4285,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tvl",{"_index":1326,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{}}}],["tvl'})@column({type",{"_index":4097,"title":{},"body":{"entities/User.html":{}}}],["twitter",{"_index":3596,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"index.html":{}}}],["twitter'})@isstring()@expose",{"_index":3590,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["tx",{"_index":1930,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["tx.block",{"_index":2137,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.block_height",{"_index":2138,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.block_time",{"_index":2165,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.fees",{"_index":2166,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.hash",{"_index":2164,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.tx_hash",{"_index":2302,"title":{},"body":{"injectables/ContributionService.html":{}}}],["tx.valid_contract",{"_index":2140,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx/assets/assets.controller.ts",{"_index":1062,"title":{},"body":{"controllers/AssetsController.html":{}}}],["tx/assets/assets.controller.ts:22",{"_index":1069,"title":{},"body":{"controllers/AssetsController.html":{}}}],["tx/assets/assets.controller.ts:34",{"_index":1072,"title":{},"body":{"controllers/AssetsController.html":{}}}],["tx/assets/assets.module",{"_index":880,"title":{},"body":{"modules/AppModule.html":{}}}],["tx/assets/assets.module.ts",{"_index":1090,"title":{},"body":{"modules/AssetsModule.html":{}}}],["tx/assets/assets.service.ts",{"_index":1094,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:109",{"_index":1112,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:14",{"_index":1104,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:144",{"_index":1116,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:169",{"_index":1118,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:194",{"_index":1120,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:221",{"_index":1122,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:24",{"_index":1108,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:75",{"_index":1114,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/dto/create",{"_index":981,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["tx/dto/vault",{"_index":3649,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["tx/offchain",{"_index":160,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AppModule.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{}}}],["tx/onchain/anvil",{"_index":743,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["tx/onchain/blockchain",{"_index":1719,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/blockchain.controller.ts",{"_index":1586,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:115",{"_index":1614,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:34",{"_index":1598,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:45",{"_index":1603,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:58",{"_index":1632,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:70",{"_index":1626,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:86",{"_index":1620,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.module",{"_index":881,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/VaultsModule.html":{}}}],["tx/onchain/blockchain.module.ts",{"_index":1713,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["tx/onchain/blockchain.service",{"_index":3350,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/blockchain.service.ts",{"_index":1826,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"miscellaneous/enumerations.html":{}}}],["tx/onchain/blockchain.service.ts:24",{"_index":1840,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:25",{"_index":1838,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:26",{"_index":1829,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:41",{"_index":1831,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:75",{"_index":1835,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/dto/transaction.dto.ts",{"_index":1983,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:105",{"_index":3617,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:115",{"_index":3616,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:12",{"_index":3449,"title":{},"body":{"classes/NftAsset.html":{}}}],["tx/onchain/dto/transaction.dto.ts:123",{"_index":3614,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:134",{"_index":3613,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:155",{"_index":3918,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:162",{"_index":3916,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:169",{"_index":3919,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:176",{"_index":3920,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:185",{"_index":3940,"title":{},"body":{"classes/TransactionSubmitResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:20",{"_index":3447,"title":{},"body":{"classes/NftAsset.html":{}}}],["tx/onchain/dto/transaction.dto.ts:28",{"_index":3450,"title":{},"body":{"classes/NftAsset.html":{}}}],["tx/onchain/dto/transaction.dto.ts:37",{"_index":3934,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["tx/onchain/dto/transaction.dto.ts:48",{"_index":3938,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["tx/onchain/dto/transaction.dto.ts:67",{"_index":3936,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["tx/onchain/dto/transaction.dto.ts:77",{"_index":1987,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:85",{"_index":1995,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:95",{"_index":1988,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts",{"_index":1868,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:102",{"_index":1982,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:110",{"_index":1981,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:120",{"_index":1949,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:128",{"_index":1939,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:136",{"_index":1941,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:14",{"_index":1937,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["tx/onchain/dto/webhook.dto.ts:144",{"_index":1943,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:152",{"_index":1960,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:160",{"_index":1951,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:170",{"_index":1956,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:178",{"_index":1947,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:186",{"_index":1945,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:194",{"_index":1958,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:202",{"_index":1953,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:210",{"_index":1955,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:218",{"_index":1962,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:22",{"_index":1935,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["tx/onchain/dto/webhook.dto.ts:226",{"_index":1964,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:238",{"_index":1968,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["tx/onchain/dto/webhook.dto.ts:248",{"_index":1965,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["tx/onchain/dto/webhook.dto.ts:258",{"_index":1966,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["tx/onchain/dto/webhook.dto.ts:268",{"_index":1884,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:276",{"_index":1895,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:284",{"_index":1877,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:292",{"_index":1873,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:300",{"_index":1889,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:310",{"_index":1887,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:32",{"_index":1970,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:42",{"_index":1971,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:50",{"_index":1977,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:58",{"_index":1975,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:66",{"_index":1973,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:74",{"_index":1974,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:84",{"_index":1979,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:94",{"_index":1980,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/raw",{"_index":3514,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["tx/onchain/types/transaction",{"_index":4792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tx/onchain/types/type",{"_index":3351,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/types/type.ts",{"_index":2505,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["tx/onchain/types/vault",{"_index":4980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tx/onchain/utils/apply_params",{"_index":3352,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/utils/apply_params.ts",{"_index":4804,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/utils/blueprint.json",{"_index":3353,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/utils/lib",{"_index":3355,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/utils/lib.ts",{"_index":643,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/vault",{"_index":2013,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/webhook",{"_index":4668,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["tx/transactions.controller.ts",{"_index":3942,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.controller.ts:17",{"_index":3950,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.controller.ts:24",{"_index":3948,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.controller.ts:31",{"_index":3953,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.module",{"_index":210,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/LpTokensModule.html":{},"modules/VaultsModule.html":{}}}],["tx/transactions.module.ts",{"_index":3967,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["tx/transactions.service",{"_index":161,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{}}}],["tx/transactions.service.ts",{"_index":3969,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:102",{"_index":3994,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:109",{"_index":3984,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:115",{"_index":4002,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:12",{"_index":3980,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:126",{"_index":3992,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:132",{"_index":3987,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:145",{"_index":3986,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:158",{"_index":4000,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:183",{"_index":3989,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:22",{"_index":3982,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:37",{"_index":4004,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:75",{"_index":3996,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:82",{"_index":4006,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:94",{"_index":3998,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx_hash",{"_index":623,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{},"injectables/TransactionsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tx_hash_index_with_lps_to_collect",{"_index":3374,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx_hash_index_with_lps_to_collect.split",{"_index":3389,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx_index",{"_index":1569,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["tx_output_idx",{"_index":720,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["txdata",{"_index":1833,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["txdetail",{"_index":2044,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["txevent",{"_index":2159,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["txevent.outputs.map(output",{"_index":1701,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.block_height",{"_index":1697,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.block_time",{"_index":1698,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.hash",{"_index":1695,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.valid_contract",{"_index":1699,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txhash",{"_index":249,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["txhash'})@column({nullable",{"_index":3895,"title":{},"body":{"entities/Transaction.html":{}}}],["txid",{"_index":144,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["txindex",{"_index":2910,"title":{},"body":{"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LpTokensService.html":{}}}],["txinput",{"_index":3402,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["txoutputidx",{"_index":712,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["txsummary",{"_index":1662,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txtosubmitonchain",{"_index":2106,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["txtosubmitonchain.sign_and_add_vkey_signature",{"_index":3415,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["txtosubmitonchain.sign_and_add_vkey_signature(privatekey.from_bech32(this.adminskey",{"_index":2108,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["txtosubmitonchain.sign_and_add_vkey_signature(privatekey.from_bech32(this.poolowner.skey",{"_index":4647,"title":{},"body":{"injectables/VyfiService.html":{}}}],["txtosubmitonchain.to_hex",{"_index":2110,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["txupdate",{"_index":135,"title":{},"body":{"controllers/AcquireController.html":{}}}],["txupdate.txhash",{"_index":185,"title":{},"body":{"controllers/AcquireController.html":{}}}],["txupdatereq",{"_index":136,"title":{"classes/TxUpdateReq.html":{}},"body":{"controllers/AcquireController.html":{},"classes/TxUpdateReq.html":{}}}],["txutxos",{"_index":3390,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["txutxos.outputs[index",{"_index":3392,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type\"::\"text\"::\"public\".\"transactions_type_enum",{"_index":67,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["type\"::\"text\"::\"public\".\"transactions_type_enum_old",{"_index":81,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["type\"::\"text\"::\"public\".\"vaults_type_enum",{"_index":3929,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["type\"::\"text\"::\"public\".\"vaults_type_enum_old",{"_index":3931,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["type.ts",{"_index":4951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4935,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1515,"title":{},"body":{"injectables/AwsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":35,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":208,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{}}}],["typeormmodule.forfeature",{"_index":4515,"title":{},"body":{"modules/VaultsModule.html":{}}}],["typeormmodule.forfeature([asset",{"_index":1093,"title":{},"body":{"modules/AssetsModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":1417,"title":{},"body":{"modules/AwsModule.html":{}}}],["typeormmodule.forfeature([transaction",{"_index":3317,"title":{},"body":{"modules/LpTokensModule.html":{},"modules/TransactionsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1251,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([vault",{"_index":217,"title":{},"body":{"modules/AcquireModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/LifecycleModule.html":{},"modules/TaptoolsModule.html":{}}}],["typeormmodule.forroot",{"_index":886,"title":{},"body":{"modules/AppModule.html":{}}}],["types/asset.types",{"_index":260,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["types/blockchain.types",{"_index":1771,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/ContributionService.html":{}}}],["types/cbor",{"_index":4753,"title":{},"body":{"dependencies.html":{}}}],["types/lp",{"_index":3356,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["types/transaction",{"_index":1896,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["types/transaction.types",{"_index":262,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["types/type",{"_index":2022,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["types/vault.types",{"_index":264,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["typescript",{"_index":4824,"title":{},"body":{"index.html":{}}}],["u",{"_index":3180,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["u.address",{"_index":3165,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["u.id",{"_index":3164,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["uint8arr",{"_index":4957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uint8arr.length",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uint8array(arraybuffer",{"_index":4958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":3293,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["unauthorizedexception",{"_index":1232,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/BlockchainController.html":{}}}],["unauthorizedexception('invalid",{"_index":1692,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["undefined",{"_index":222,"title":{},"body":{"classes/AcquireReq.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/LpTokensController.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{}}}],["undefined})@expose()@isoptional()@transform",{"_index":2244,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["undefined})@isarray()@isstring({each",{"_index":2399,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["undefined})@isarray()@validatenested({each",{"_index":1886,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{}}}],["undefined})@isenum(proposaltype",{"_index":2404,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["undefined})@isoptional",{"_index":2396,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["undefined})@isoptional()@expose",{"_index":1952,"title":{},"body":{"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":3935,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["undefined})@isoptional()@isenum(transactionstatus)@expose",{"_index":2942,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["undefined})@type(undefined",{"_index":3452,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["understand",{"_index":2068,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["unique",{"_index":473,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedTags1741943808652.html":{},"injectables/AuthService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"dependencies.html":{}}}],["unit",{"_index":644,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["unix",{"_index":1874,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["unknown",{"_index":125,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"controllers/LpTokensController.html":{},"injectables/RawBodyMiddleware.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":4934,"title":{},"body":{"properties.html":{}}}],["unparameterizedscript",{"_index":2061,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["up",{"_index":17,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["up(queryrunner",{"_index":32,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["update",{"_index":61,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"miscellaneous/enumerations.html":{}}}],["update(signaturepayload",{"_index":4714,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["updateassetvaluation",{"_index":1100,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updateassetvaluation(userid",{"_index":1119,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updated",{"_index":141,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updated_at",{"_index":399,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"entities/User.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["updatedat",{"_index":425,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["updatedat'})@column({name",{"_index":956,"title":{},"body":{"entities/Asset.html":{},"entities/FileEntity.html":{}}}],["updatedat'})@column({type",{"_index":408,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["updatedata",{"_index":4121,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedata.bannerimage",{"_index":4209,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.bannerimage.split('image/')[1",{"_index":4210,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.description",{"_index":4203,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.name",{"_index":4202,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.profileimage",{"_index":4204,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.profileimage.split('image/')[1",{"_index":4206,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.sociallinks",{"_index":4212,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.sociallinks.map(linkdata",{"_index":4216,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedate",{"_index":430,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["updateerror",{"_index":2127,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updateerror.message",{"_index":2132,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updateerror.stack",{"_index":2129,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updatefieldstype.ts",{"_index":4034,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype.ts:21",{"_index":4036,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype.ts:4",{"_index":4035,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype.ts:6",{"_index":4037,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype1741946649594",{"_index":4032,"title":{"classes/UpdateFieldsType1741946649594.html":{}},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updateprofile",{"_index":4109,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateprofile(@request",{"_index":4145,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateprofile(req",{"_index":4120,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateprofile(userid",{"_index":4174,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateprofiledto",{"_index":3598,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updaterelationto.ts",{"_index":4049,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto.ts:21",{"_index":4051,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto.ts:4",{"_index":4050,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto.ts:6",{"_index":4052,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto1742209228422",{"_index":4047,"title":{"classes/UpdateRelationto1742209228422.html":{}},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updates",{"_index":4901,"title":{},"body":{"index.html":{}}}],["updatetimestamp",{"_index":979,"title":{},"body":{"entities/Asset.html":{}}}],["updatetransactionassets",{"_index":1101,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updatetransactionassets(transactionid",{"_index":1121,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updatetransactionhash",{"_index":115,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["updatetransactionhash(@param('txid",{"_index":183,"title":{},"body":{"controllers/AcquireController.html":{}}}],["updatetransactionhash(id",{"_index":4001,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetransactionhash(transactionid",{"_index":248,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["updatetransactionhash(txid",{"_index":134,"title":{},"body":{"controllers/AcquireController.html":{}}}],["updatetransactionstatus",{"_index":3978,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetransactionstatus(txhash",{"_index":4003,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetype.ts",{"_index":4058,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype.ts:17",{"_index":4060,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype.ts:4",{"_index":4059,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype.ts:6",{"_index":4061,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype1742819100112",{"_index":4056,"title":{"classes/UpdateType1742819100112.html":{}},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetypes.ts",{"_index":4064,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes.ts:21",{"_index":4066,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes.ts:4",{"_index":4065,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes.ts:6",{"_index":4067,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes1746532933340",{"_index":4062,"title":{"classes/UpdateTypes1746532933340.html":{}},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updateuseraddress",{"_index":4163,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuseraddress(userid",{"_index":4176,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatevault",{"_index":4795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updatevaultmetadata",{"_index":1591,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["updatevaultmetadata(@body",{"_index":1651,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["updatevaultmetadata(params",{"_index":1627,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["updatevaultmetadatatx",{"_index":4319,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["updatevaultmetadatatx(vaultconfig",{"_index":4292,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["updating",{"_index":2123,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["upload",{"_index":1354,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["uploadbannerimage",{"_index":4110,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["uploadbannerimage(req",{"_index":4124,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadbannerimage(userid",{"_index":4178,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadcsv",{"_index":1433,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadcsv(file",{"_index":1450,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadedfile",{"_index":1364,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["uploadfile",{"_index":1338,"title":{},"body":{"controllers/AwsController.html":{}}}],["uploadfile(file",{"_index":1357,"title":{},"body":{"controllers/AwsController.html":{}}}],["uploadimage",{"_index":1434,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadimage(file",{"_index":1452,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadimagedto",{"_index":4068,"title":{"classes/UploadImageDto.html":{}},"body":{"classes/UploadImageDto.html":{}}}],["uploading",{"_index":1539,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadprofileimage",{"_index":4111,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["uploadprofileimage(req",{"_index":4128,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadprofileimage(userid",{"_index":4180,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadresult",{"_index":1541,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["uploadresult.file_key",{"_index":4228,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadresult.file_url",{"_index":4229,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadresult.key",{"_index":1552,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploads3",{"_index":1435,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploads3(file",{"_index":1454,"title":{},"body":{"injectables/AwsService.html":{}}}],["upon",{"_index":2451,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"miscellaneous/enumerations.html":{}}}],["uponassetwindowclosing",{"_index":4788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uponvaultlaunch",{"_index":4787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["upper_bound",{"_index":2542,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["uq_b0ec0293d53a1385955f9834d5c",{"_index":2429,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["uq_c211339d9110a71f1e7b65d87b5",{"_index":3565,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["uq_d3b7b875fa01abc44af7ece2cec",{"_index":472,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["uq_d90243459a697eadb8ad56e9092",{"_index":596,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["url",{"_index":366,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"interfaces/TransactionBuildResponse.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"injectables/VyfiService.html":{}}}],["url'})@column({name",{"_index":2932,"title":{},"body":{"entities/FileEntity.html":{}}}],["url'})@column({type",{"_index":3260,"title":{},"body":{"entities/LinkEntity.html":{}}}],["url(`${this.baseurl}/${endpoint",{"_index":785,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["url.searchparams.append(key",{"_index":787,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["urls",{"_index":2726,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["urlsearchparams",{"_index":4611,"title":{},"body":{"injectables/VyfiService.html":{}}}],["usd",{"_index":3147,"title":{},"body":{"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{}}}],["usd,ada",{"_index":3829,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["use",{"_index":2377,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/LifecycleService.html":{},"injectables/RawBodyMiddleware.html":{},"classes/TokenInfo.html":{}}}],["use(req",{"_index":3516,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["used",{"_index":1669,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/WebhookVerificationService.html":{}}}],["usefactory",{"_index":1419,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["useguards",{"_index":150,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["useguards(authguard",{"_index":173,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["useinterceptors",{"_index":1365,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":1374,"title":{},"body":{"controllers/AwsController.html":{}}}],["useinterceptors(fileinterceptor('csv",{"_index":1397,"title":{},"body":{"controllers/AwsController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":4149,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(fileinterceptor('image",{"_index":1376,"title":{},"body":{"controllers/AwsController.html":{}}}],["user",{"_index":214,"title":{"entities/User.html":{}},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"entities/Asset.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":3204,"title":{},"body":{"injectables/LifecycleService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.address",{"_index":300,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AuthService.html":{},"injectables/ContributionService.html":{}}}],["user.banner_image",{"_index":4211,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.banner_image.file_url",{"_index":4189,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.decorator.ts",{"_index":4944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.description",{"_index":1325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.entity",{"_index":961,"title":{},"body":{"entities/Asset.html":{},"entities/LinkEntity.html":{}}}],["user.gains",{"_index":1331,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":1316,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":1317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.profile_image",{"_index":4208,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.profile_image.file_url",{"_index":4190,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.social_links",{"_index":3263,"title":{},"body":{"entities/LinkEntity.html":{}}}],["user.social_links?.length",{"_index":4214,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.total_vaults",{"_index":1329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.tvl",{"_index":1327,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.vaults?.length",{"_index":4187,"title":{},"body":{"injectables/UsersService.html":{}}}],["user?.address",{"_index":1309,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.address?.includes('stake1",{"_index":1310,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":2422,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{}}}],["user_wallet",{"_index":3166,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["useracquiredada",{"_index":3209,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets",{"_index":3206,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.assets",{"_index":3208,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.total_assets",{"_index":3212,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.user_id",{"_index":3207,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.user_wallet",{"_index":3211,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["usercontributedvalueada",{"_index":3210,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userdata",{"_index":4168,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":178,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{}}}],["userid'})@manytoone(undefined",{"_index":3262,"title":{},"body":{"entities/LinkEntity.html":{}}}],["username",{"_index":893,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["userrepository",{"_index":242,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{}}}],["users",{"_index":470,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedDelete1747838327085.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"controllers/UsersController.html":{}}}],["users\"(\"id",{"_index":2214,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["users.controller",{"_index":4160,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":4135,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":1249,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.service",{"_index":1271,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscontroller",{"_index":4105,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["usersmodule",{"_index":858,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersource",{"_index":4188,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersrepository",{"_index":2275,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":1255,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["uses",{"_index":4447,"title":{},"body":{"controllers/VaultsController.html":{}}}],["using",{"_index":66,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleService.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"index.html":{}}}],["usually",{"_index":2168,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["utf8payload",{"_index":1295,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilize",{"_index":4682,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["utils/apply_params",{"_index":2025,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["utils/blueprint.json",{"_index":2027,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["utils/lib",{"_index":4250,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["utxo",{"_index":703,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["utxo.hash",{"_index":735,"title":{},"body":{"interfaces/Amount.html":{}}}],["utxo.outputs.findindex(output",{"_index":730,"title":{},"body":{"interfaces/Amount.html":{}}}],["utxo_count",{"_index":1566,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["utxo_input",{"_index":616,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["utxo_output",{"_index":617,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["utxo_ref",{"_index":618,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{}}}],["utxoinput",{"_index":3912,"title":{},"body":{"entities/Transaction.html":{}}}],["utxoinput'})@column({nullable",{"_index":3898,"title":{},"body":{"entities/Transaction.html":{}}}],["utxooutput",{"_index":3913,"title":{},"body":{"entities/Transaction.html":{}}}],["utxooutput'})@column({nullable",{"_index":3900,"title":{},"body":{"entities/Transaction.html":{}}}],["utxoref",{"_index":3914,"title":{},"body":{"entities/Transaction.html":{}}}],["utxoref'})@column({nullable",{"_index":3902,"title":{},"body":{"entities/Transaction.html":{}}}],["utxos",{"_index":697,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["utxos.foreach((utxo",{"_index":701,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["utxos.get(0",{"_index":4267,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["utxos.len",{"_index":4265,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["uuid",{"_index":446,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AwsService.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/NftAsset.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"dependencies.html":{}}}],["uuid_generate_v4",{"_index":544,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["v.title",{"_index":2063,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["v2",{"_index":2364,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["v4",{"_index":1468,"title":{},"body":{"injectables/AwsService.html":{}}}],["valid",{"_index":1520,"title":{},"body":{"injectables/AwsService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["valid_contract",{"_index":1574,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["validate",{"_index":281,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["validatecsvaddresses",{"_index":1436,"title":{},"body":{"injectables/AwsService.html":{}}}],["validatecsvaddresses(buffer",{"_index":1456,"title":{},"body":{"injectables/AwsService.html":{}}}],["validatenested",{"_index":231,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AssetMetadataDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SignatureData.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":2348,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["validates",{"_index":3342,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["validatetransactionexists",{"_index":3979,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["validatetransactionexists(id",{"_index":4005,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["validation",{"_index":309,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AwsService.html":{},"injectables/LpTokensService.html":{}}}],["validator",{"_index":232,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VoteReq.html":{},"dependencies.html":{}}}],["validatorhash",{"_index":2098,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["validators",{"_index":1378,"title":{},"body":{"controllers/AwsController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/UsersController.html":{},"injectables/VaultInsertingService.html":{}}}],["validityinterval",{"_index":2086,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["valuation",{"_index":310,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["valuation_amount",{"_index":4054,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["valuation_currency",{"_index":4053,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["valuation_sc_type",{"_index":4949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valuation_type",{"_index":2460,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"classes/RenameFields1746536544579.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["valuationamount",{"_index":4380,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["valuationcurrency",{"_index":4379,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["valuations",{"_index":1171,"title":{},"body":{"injectables/AssetsService.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.dto",{"_index":3709,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["value.dto.ts",{"_index":1011,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:10",{"_index":1026,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:11",{"_index":1030,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:12",{"_index":1031,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:13",{"_index":1023,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:2",{"_index":1029,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:3",{"_index":1024,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:4",{"_index":1020,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:5",{"_index":1028,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:6",{"_index":1027,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:7",{"_index":1022,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:8",{"_index":1021,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:9",{"_index":1025,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.new(bignum.from_str(lovelace",{"_index":691,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["value.new(bignum.from_str(string(number(lovelace.quantity",{"_index":679,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["value.url",{"_index":3500,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["value_method",{"_index":3550,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["valueada",{"_index":1018,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["valuecontributed",{"_index":2613,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["valued",{"_index":3869,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["valueinadaretainednetoffees",{"_index":2659,"title":{},"body":{"injectables/DistributionService.html":{}}}],["valuemethod",{"_index":4246,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":3836,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["valueusd",{"_index":1019,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["varchar",{"_index":416,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{}}}],["variable",{"_index":3361,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["variables",{"_index":4938,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":439,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFields1746536544579.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["varying(56",{"_index":2491,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["vault",{"_index":62,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"miscellaneous/enumerations.html":{}}}],["vault')@apioperation({summary",{"_index":1601,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["vault's",{"_index":2323,"title":{},"body":{"injectables/ContributionService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vault'})@apiresponse({status",{"_index":1602,"title":{},"body":{"controllers/BlockchainController.html":{},"controllers/GovernanceController.html":{}}}],["vault'})@dtorepresent({transform",{"_index":4340,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vault'})@useguards(authguard)@apiresponse({status",{"_index":129,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["vault.acquire_open_window_time",{"_index":3158,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.acquire_open_window_type",{"_index":3139,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.acquire_phase_start",{"_index":2734,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{}}}],["vault.acquire_reserve",{"_index":3153,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.acquirer_whitelist",{"_index":411,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["vault.acquirer_whitelist.some(entry",{"_index":298,"title":{},"body":{"injectables/AcquireService.html":{}}}],["vault.acquirer_whitelist?.length",{"_index":296,"title":{},"body":{"injectables/AcquireService.html":{}}}],["vault.asset_vault_name",{"_index":3131,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.assets",{"_index":963,"title":{},"body":{"entities/Asset.html":{},"injectables/TaptoolsService.html":{}}}],["vault.assets)@joincolumn({name",{"_index":958,"title":{},"body":{"entities/Asset.html":{}}}],["vault.assets_whitelist",{"_index":1196,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["vault.assets_whitelist?.some(whitelistedasset",{"_index":2320,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.banner_image",{"_index":2729,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.contract_address",{"_index":2124,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault.contribution_phase_start",{"_index":2733,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{}}}],["vault.contributor_whitelist",{"_index":2341,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["vault.contributor_whitelist.some(entry",{"_index":2327,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.contributor_whitelist?.length",{"_index":2326,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.deleted",{"_index":3135,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.dto",{"_index":4470,"title":{},"body":{"controllers/VaultsController.html":{}}}],["vault.dto.ts",{"_index":3503,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:13",{"_index":3512,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:21",{"_index":3508,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:31",{"_index":3506,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:41",{"_index":3510,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.entity",{"_index":424,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["vault.ft_token_img",{"_index":2731,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.ft_token_supply",{"_index":2618,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vault.governance_phase_start",{"_index":3251,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.id",{"_index":3102,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.liquidation_hash",{"_index":3136,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.liquidity_pool_contribution",{"_index":2621,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vault.locked_at",{"_index":2735,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.name",{"_index":2126,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault.owner",{"_index":1160,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"entities/User.html":{}}}],["vault.owner.address",{"_index":3126,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.owner.id",{"_index":293,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["vault.privacy",{"_index":2314,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.publication_hash",{"_index":2067,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault.require_reserved_cost_ada",{"_index":3152,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.require_reserved_cost_usd",{"_index":3154,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.social_links",{"_index":3267,"title":{},"body":{"entities/LinkEntity.html":{}}}],["vault.tags",{"_index":2856,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/TagEntity.html":{}}}],["vault.tags)@jointable({name",{"_index":3632,"title":{},"body":{"entities/TagEntity.html":{}}}],["vault.tokens_for_acquires",{"_index":2619,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vault.total_acquired_value_ada",{"_index":3225,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.total_assets_cost_ada",{"_index":3149,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.total_assets_cost_usd",{"_index":3150,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.totalvalueada",{"_index":3161,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.totalvalueusd",{"_index":3162,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.value_method",{"_index":306,"title":{},"body":{"injectables/AcquireService.html":{}}}],["vault.vault_image",{"_index":2727,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.vault_status",{"_index":277,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{}}}],["vault_appreciation",{"_index":4055,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["vault_id",{"_index":78,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/LinkEntity.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_image",{"_index":2709,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault_image_id",{"_index":2480,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["vault_policy_id",{"_index":2050,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault_sc_privacy",{"_index":4952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vault_status",{"_index":102,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum",{"_index":103,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old",{"_index":105,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_strategy",{"_index":2407,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["vault_tags",{"_index":40,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"entities/TagEntity.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_token_index",{"_index":2520,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vault_token_ticker",{"_index":2469,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["vaultaddress",{"_index":1739,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["vaultappreciation",{"_index":4399,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultassetname",{"_index":4286,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultassetssummarydto",{"_index":3647,"title":{"classes/VaultAssetsSummaryDto.html":{}},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["vaultburn",{"_index":2186,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/typealiases.html":{}}}],["vaultconfig",{"_index":1628,"title":{"interfaces/VaultConfig.html":{}},"body":{"controllers/BlockchainController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.acquirewindow",{"_index":4299,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.allowedpolicies",{"_index":4276,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.assetwindow",{"_index":4297,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.contracttype",{"_index":4275,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.customeraddress",{"_index":4273,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.custommetadata",{"_index":4300,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.valuemethod",{"_index":4278,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.vaultname",{"_index":4274,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultcontractservice",{"_index":3068,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vaultcreateconfig",{"_index":4253,"title":{"interfaces/VaultCreateConfig.html":{}},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultdata",{"_index":2774,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_open_window_time",{"_index":2823,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_open_window_type",{"_index":2826,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_reserve",{"_index":2803,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_window_duration",{"_index":2821,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquirer_whitelist_csv",{"_index":2838,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.banner_image",{"_index":2836,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.contribution_duration",{"_index":2819,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.contribution_open_window_time",{"_index":2828,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.contribution_open_window_type",{"_index":2831,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.cosigning_threshold",{"_index":2815,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.creation_threshold",{"_index":2807,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.description",{"_index":2791,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.execution_threshold",{"_index":2813,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.ft_token_decimals",{"_index":2793,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.ft_token_img",{"_index":2837,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.ft_token_supply",{"_index":2795,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.liquidity_pool_contribution",{"_index":2805,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.name",{"_index":2780,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.privacy",{"_index":2783,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.start_threshold",{"_index":2809,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.termination_type",{"_index":2797,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.time_elapsed_is_equal_to_time",{"_index":2833,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.tokens_for_acquires",{"_index":2801,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.type",{"_index":2781,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.valuation_amount",{"_index":2789,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.valuation_currency",{"_index":2787,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.value_method",{"_index":2785,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vault_appreciation",{"_index":2817,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vault_image",{"_index":2835,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vault_token_ticker",{"_index":2799,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vote_threshold",{"_index":2811,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultfilter",{"_index":2950,"title":{},"body":{"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["vaultfullresponse",{"_index":4369,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultid",{"_index":123,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AssetMetadataDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["vaultid'})@manytoone(undefined",{"_index":3266,"title":{},"body":{"entities/LinkEntity.html":{}}}],["vaultimage",{"_index":4335,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultimg",{"_index":2753,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultinsertingservice",{"_index":1637,"title":{"injectables/VaultInsertingService.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"overview.html":{}}}],["vaultmanagingservice",{"_index":1638,"title":{"injectables/VaultManagingService.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"overview.html":{}}}],["vaultname",{"_index":1737,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultpolicyplusname",{"_index":2048,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultpolicyplusname.length",{"_index":2053,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultpolicyplusname.slice(0",{"_index":2051,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultpolicyplusname.slice(56",{"_index":2052,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultprivacy",{"_index":2288,"title":{},"body":{"injectables/ContributionService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["vaultprivacy.private",{"_index":2315,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vaultprivacy.semiprivate",{"_index":2316,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vaultprivacy})@dtorepresent({transform",{"_index":4347,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultrepository",{"_index":245,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["vaults",{"_index":101,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/TagEntity.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{}}}],["vaults\"(\"id",{"_index":79,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaults'})@manytomany(undefined",{"_index":3631,"title":{},"body":{"entities/TagEntity.html":{}}}],["vaults.controller",{"_index":4514,"title":{},"body":{"modules/VaultsModule.html":{}}}],["vaults.dto",{"_index":2688,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["vaults.dto.ts",{"_index":2949,"title":{},"body":{"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["vaults.dto.ts:31",{"_index":2953,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["vaults.dto.ts:41",{"_index":2957,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["vaults.dto.ts:52",{"_index":2961,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["vaults.service",{"_index":4466,"title":{},"body":{"controllers/VaultsController.html":{},"modules/VaultsModule.html":{}}}],["vaults.service.ts",{"_index":2663,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:123",{"_index":2684,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:25",{"_index":2673,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:46",{"_index":2680,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:86",{"_index":2675,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults/processing",{"_index":3648,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["vaults_contribution_open_window_type_enum",{"_index":2899,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["vaults_contribution_open_window_type_enum_old",{"_index":2894,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["vaults_type_enum",{"_index":3932,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["vaults_type_enum_old",{"_index":3928,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["vaults_vault_status_enum",{"_index":106,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaults_vault_status_enum_old",{"_index":92,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultscontroller",{"_index":4416,"title":{"controllers/VaultsController.html":{}},"body":{"controllers/VaultsController.html":{},"modules/VaultsModule.html":{}}}],["vaultshortresponse",{"_index":2693,"title":{"classes/VaultShortResponse.html":{}},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["vaultsmodule",{"_index":859,"title":{"modules/VaultsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["vaultsortfield",{"_index":2678,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["vaultsrepository",{"_index":1103,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultsservice",{"_index":4471,"title":{},"body":{"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"overview.html":{}}}],["vaultstatus",{"_index":263,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["vaultstatus.acquire",{"_index":278,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/LifecycleService.html":{}}}],["vaultstatus.contribution",{"_index":1130,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{}}}],["vaultstatus.draft",{"_index":2707,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultstatus.failed",{"_index":3122,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vaultstatus.governance",{"_index":3252,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vaultstatus.locked",{"_index":3030,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["vaultstatus.published",{"_index":3095,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vaultstatusupdate.ts",{"_index":4412,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate.ts:25",{"_index":4414,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate.ts:4",{"_index":4413,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate.ts:6",{"_index":4415,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate1745573712493",{"_index":4410,"title":{"classes/VaultStatusUpdate1745573712493.html":{}},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatus})@dtorepresent({transform",{"_index":4356,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaulttokenticker",{"_index":4396,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaulttype",{"_index":4358,"title":{},"body":{"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["vaultutxo",{"_index":2183,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["verification",{"_index":1303,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{},"injectables/WebhookVerificationService.html":{}}}],["verification.service",{"_index":1641,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{}}}],["verification.service.ts",{"_index":4669,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:12",{"_index":4677,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:13",{"_index":4678,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:14",{"_index":4672,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:21",{"_index":4675,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verificationkey",{"_index":2529,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["verified",{"_index":4731,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verify",{"_index":1148,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/TaptoolsService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["verifysignature",{"_index":1253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebhookVerificationService.html":{}}}],["verifysignature(payload",{"_index":4673,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verifysignature(signaturedata",{"_index":1257,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":835,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"properties.html":{}}}],["video",{"_index":4889,"title":{},"body":{"index.html":{}}}],["visit",{"_index":4879,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":4892,"title":{},"body":{"index.html":{}}}],["void",{"_index":1761,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["vote",{"_index":2978,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{}}}],["vote(@req",{"_index":3010,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["vote(proposalid",{"_index":3028,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["vote(req",{"_index":2992,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["vote_threshold",{"_index":2476,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["votereq",{"_index":2993,"title":{"classes/VoteReq.html":{}},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/VoteReq.html":{}}}],["voterid",{"_index":3043,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["votethreshold",{"_index":4402,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["voting",{"_index":2398,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/GovernanceService.html":{},"classes/VoteReq.html":{}}}],["vs_currencies",{"_index":3721,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["vt",{"_index":2092,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vt_supply",{"_index":2605,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtada",{"_index":2599,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtadavalue",{"_index":2632,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtavailabletoacquirers",{"_index":2646,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtprice",{"_index":2622,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtreceived",{"_index":2648,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtresult",{"_index":3228,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vtresult.vtreceived",{"_index":3232,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vtresult.vtretained",{"_index":3236,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vtretained",{"_index":2627,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtvalueinada",{"_index":2650,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vyfi",{"_index":2378,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["vyfi.controller",{"_index":4568,"title":{},"body":{"modules/VyfiModule.html":{}}}],["vyfi.service",{"_index":4551,"title":{},"body":{"controllers/VyfiController.html":{},"modules/VyfiModule.html":{}}}],["vyfi_constants",{"_index":4594,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["vyfi_constants.metadata_label",{"_index":4622,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.min_pool_ada",{"_index":4654,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.min_return_ada",{"_index":4656,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.pool_address",{"_index":4636,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.processing_fee",{"_index":4652,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.total_required_ada",{"_index":4641,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfiapiurl",{"_index":4572,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyficontroller",{"_index":4525,"title":{"controllers/VyfiController.html":{}},"body":{"controllers/VyfiController.html":{},"modules/VyfiModule.html":{}}}],["vyfimodule",{"_index":4563,"title":{"modules/VyfiModule.html":{}},"body":{"modules/VyfiModule.html":{},"modules.html":{},"overview.html":{}}}],["vyfiservice",{"_index":4550,"title":{"injectables/VyfiService.html":{}},"body":{"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"overview.html":{}}}],["wallet",{"_index":1305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/SignatureData.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["wallet_address",{"_index":400,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["wallet_summary_${walletaddress",{"_index":3731,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["walletaddress",{"_index":356,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AssetWhitelist.html":{},"injectables/AuthService.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DraftVaultsService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"injectables/TaptoolsService.html":{}}}],["walletaddress'})@column({type",{"_index":415,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{}}}],["walletsummarydto",{"_index":3710,"title":{"classes/WalletSummaryDto.html":{}},"body":{"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["want",{"_index":3248,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["watch",{"_index":4830,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":1608,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/WebhookVerificationService.html":{}}}],["webhook')@httpcode(200)@apioperation({summary",{"_index":1607,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["webhook_id",{"_index":1870,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["webhookauthtoken",{"_index":4671,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["webhookid",{"_index":1682,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["webhooks",{"_index":4683,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["webhookverificationservice",{"_index":1640,"title":{"injectables/WebhookVerificationService.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/WebhookVerificationService.html":{},"overview.html":{}}}],["website",{"_index":4920,"title":{},"body":{"index.html":{}}}],["wh",{"_index":1656,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["wh')@httpcode(200)@apioperation({summary",{"_index":1618,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["where('vault.vault_status",{"_index":3094,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["where.status",{"_index":4025,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["where.type",{"_index":4026,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["where.vault_id",{"_index":4024,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["whether",{"_index":1906,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/CreatePoolDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/TokenInfo.html":{}}}],["whitelist",{"_index":291,"title":{},"body":{"injectables/AcquireService.html":{},"controllers/AwsController.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["whitelistedasset.policy_id",{"_index":2321,"title":{},"body":{"injectables/ContributionService.html":{}}}],["whitelistitem.policyid",{"_index":2862,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["whitelistitem?.countcapmax",{"_index":2864,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["whitelistitem?.countcapmin",{"_index":2863,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["window",{"_index":2454,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["within",{"_index":1918,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/WebhookVerificationService.html":{}}}],["without",{"_index":2295,"title":{},"body":{"injectables/ContributionService.html":{}}}],["withretry",{"_index":1734,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["withretry(operation",{"_index":1760,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["witness",{"_index":2011,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["witnessset",{"_index":760,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["working",{"_index":4878,"title":{},"body":{"index.html":{}}}],["works",{"_index":4264,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["x",{"_index":784,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{},"index.html":{}}}],["xyz",{"_index":2391,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["xyz'})@isnotempty()@isstring",{"_index":2401,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["yes",{"_index":124,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AssetsService.html":{},"controllers/ContributionController.html":{},"classes/CreateProposalReq.html":{},"injectables/DraftVaultsService.html":{},"injectables/TransactionsService.html":{},"classes/VoteReq.html":{}}}],["yes'})@isnotempty()@isstring",{"_index":4520,"title":{},"body":{"classes/VoteReq.html":{}}}],["you'd",{"_index":4915,"title":{},"body":{"index.html":{}}}],["you're",{"_index":4845,"title":{},"body":{"index.html":{}}}],["z0",{"_index":1508,"title":{},"body":{"injectables/AwsService.html":{}}}],["za",{"_index":1507,"title":{},"body":{"injectables/AwsService.html":{}}}],["zero",{"_index":3792,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["zone",{"_index":547,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["zoom",{"_index":203,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/$npmConfigName1750085776373.html":{"url":"classes/$npmConfigName1750085776373.html","title":"class - $npmConfigName1750085776373","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  $npmConfigName1750085776373\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1750085776373-addUpdateTransactionType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ' $npmConfigName1750085776373'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1750085776373-addUpdateTransactionType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750085776373-addUpdateTransactionType.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750085776373-addUpdateTransactionType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class $npmConfigName1750085776373 implements MigrationInterface {\n  name = ' $npmConfigName1750085776373';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum\" RENAME TO \"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'acquire', 'investment', 'burn', 'swap', 'stake', 'extract-lp', 'distribute-lp', 'update-vault')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum_old\" AS ENUM('mint', 'payment', 'contribute', 'acquire', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum_old\" RENAME TO \"transactions_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/$npmConfigName1750413089611.html":{"url":"classes/$npmConfigName1750413089611.html","title":"class - $npmConfigName1750413089611","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  $npmConfigName1750413089611\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1750413089611-AddNewVaultStatus.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ' $npmConfigName1750413089611'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1750413089611-AddNewVaultStatus.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750413089611-AddNewVaultStatus.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750413089611-AddNewVaultStatus.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class  $npmConfigName1750413089611 implements MigrationInterface {\n    name = ' $npmConfigName1750413089611'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n        await queryRunner.query(`CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'created', 'published', 'contribution', 'acquire', 'investment', 'locked', 'governance', 'failed')`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`);\n        await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum_old\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'created', 'published', 'contribution', 'acquire', 'investment', 'locked', 'governance')`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`);\n        await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n        await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AcquireController.html":{"url":"controllers/AcquireController.html","title":"controller - AcquireController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AcquireController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/acquire.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                acquire\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getInvestmentTransactions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                invest\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateTransactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getInvestmentTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInvestmentTransactions(vaultId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('transactions')@ApiOperation({summary: 'Get all acquire transactions'})@UseGuards(AuthGuard)@ApiResponse({status: 200, description: 'Returns all acquire transactions'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        invest\n                        \n                    \n                \n            \n            \n                \n                        \n                    invest(req, vaultId: string, acquireReq: AcquireReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':vaultId')@ApiOperation({summary: 'Acquire in a vault'})@UseGuards(AuthGuard)@ApiResponse({status: 201, description: 'Acquire successful'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                acquireReq\n                                            \n                                                            AcquireReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(txId: string, txUpdate: TxUpdateReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('transaction/:txId/hash')@ApiOperation({summary: 'Update transaction hash'})@UseGuards(AuthGuard)@ApiResponse({status: 200, description: 'Transaction hash updated successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txUpdate\n                                            \n                                                            TxUpdateReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, Query, Req, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\nimport { TxUpdateReq } from '../contribution/dto/txUpdate.req';\n\nimport { AcquireService } from './acquire.service';\nimport { AcquireReq } from './dto/acquire.req';\n\n@ApiTags('Acquire')\n@Controller('acquire')\nexport class AcquireController {\n  constructor(\n    private readonly acquireService: AcquireService,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  @Post(':vaultId')\n  @ApiOperation({ summary: 'Acquire in a vault' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 201, description: 'Acquire successful' })\n  async invest(@Req() req, @Param('vaultId') vaultId: string, @Body() acquireReq: AcquireReq) {\n    const userId = req.user.sub;\n    return this.acquireService.acquire(vaultId, acquireReq, userId);\n  }\n\n  @Patch('transaction/:txId/hash')\n  @ApiOperation({ summary: 'Update transaction hash' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 200, description: 'Transaction hash updated successfully' })\n  async updateTransactionHash(@Param('txId') txId: string, @Body() txUpdate: TxUpdateReq) {\n    return this.acquireService.updateTransactionHash(txId, txUpdate.txHash);\n  }\n\n  @Get('transactions')\n  @ApiOperation({ summary: 'Get all acquire transactions' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 200, description: 'Returns all acquire transactions' })\n  async getInvestmentTransactions(@Query('vaultId') vaultId?: string) {\n    return this.transactionsService.getAcquireTransactions(vaultId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AcquireModule.html":{"url":"modules/AcquireModule.html","title":"module - AcquireModule","body":"\n                   \n\n\n\n\n    Modules\n    AcquireModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AcquireModule\n\n\n\ncluster_AcquireModule_imports\n\n\n\ncluster_AcquireModule_exports\n\n\n\ncluster_AcquireModule_providers\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nAcquireModule\n\nAcquireModule\n\nAcquireModule -->\n\nTransactionsModule->AcquireModule\n\n\n\n\n\nAcquireService \n\nAcquireService \n\nAcquireService  -->\n\nAcquireModule->AcquireService \n\n\n\n\n\nAcquireService\n\nAcquireService\n\nAcquireModule -->\n\nAcquireService->AcquireModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/acquire.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AcquireService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AcquireController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AcquireService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsModule } from '../../processing-tx/offchain-tx/transactions.module';\n\nimport { AcquireController } from './acquire.controller';\nimport { AcquireService } from './acquire.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Vault, User, Asset]), TransactionsModule],\n  controllers: [AcquireController],\n  providers: [AcquireService],\n  exports: [AcquireService],\n})\nexport class AcquireModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcquireReq.html":{"url":"classes/AcquireReq.html","title":"class - AcquireReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcquireReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/dto/acquire.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                assets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContributionAsset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of assets to contribute'})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/acquire/dto/acquire.req.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, ValidateNested } from 'class-validator';\n\nimport { ContributionAsset } from '../../contribution/dto/contribute.req';\n\nexport class AcquireReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AcquireService.html":{"url":"injectables/AcquireService.html","title":"injectable - AcquireService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AcquireService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/acquire.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                acquire\n                            \n                            \n                                    Async\n                                updateTransactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultRepository: Repository, userRepository: Repository, assetRepository: Repository, transactionsService: TransactionsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        acquire\n                        \n                    \n                \n            \n            \n                \n                        \n                    acquire(vaultId: string, acquireReq: AcquireReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                acquireReq\n                                            \n                                                            AcquireReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(transactionId: string, txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AcquireService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\n\nimport { AcquireReq } from './dto/acquire.req';\n\nimport { Asset } from '@/database/asset.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { AssetType, AssetStatus, AssetOriginType } from '@/types/asset.types';\nimport { TransactionType } from '@/types/transaction.types';\nimport { VaultStatus } from '@/types/vault.types';\n\n@Injectable()\nexport class AcquireService {\n  private readonly logger = new Logger(AcquireService.name);\n\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  async acquire(vaultId: string, acquireReq: AcquireReq, userId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n      relations: ['acquirer_whitelist', 'owner'],\n    });\n\n    const user = await this.userRepository.findOne({\n      where: { id: userId },\n    });\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    if (vault.vault_status !== VaultStatus.acquire) {\n      throw new BadRequestException('Vault is not in acquire phase');\n    }\n\n    // Validate assets\n    if (!acquireReq.assets || !Array.isArray(acquireReq.assets) || acquireReq.assets.length === 0) {\n      throw new BadRequestException('At least one asset is required');\n    }\n\n    // Allow vault owner to bypass whitelist check\n    if (vault.owner.id !== userId) {\n      // Check whitelist only for non-owners\n      if (vault.acquirer_whitelist?.length > 0) {\n        const isWhitelisted = vault.acquirer_whitelist.some(entry => entry.wallet_address === user.address);\n        if (!isWhitelisted) {\n          throw new BadRequestException('User is not in investor whitelist');\n        }\n      }\n    }\n\n    // Validate assets against vault settings if needed\n    if (vault.value_method === 'fixed') {\n      // Add any specific validation for fixed valuation type here\n    }\n\n    // Create a transaction record for the acquire\n    const transaction = await this.transactionsService.createTransaction({\n      vault_id: vaultId,\n      type: TransactionType.acquire,\n      assets: [],\n    });\n\n    // Create assets for the transaction\n    if (acquireReq.assets.length > 0) {\n      try {\n        // Ensure the transaction exists and is loaded with relations if needed\n        const savedTransaction = await this.transactionsService.findById(transaction.id);\n\n        // Create and save all assets\n        await Promise.all(\n          acquireReq.assets.map(async assetItem => {\n            const asset = this.assetRepository.create({\n              transaction: savedTransaction,\n              type: AssetType.CNT, // Using CNT type for acquire\n              policy_id: assetItem.policyId || '',\n              asset_id: assetItem.assetName,\n              quantity: assetItem.quantity,\n              status: AssetStatus.PENDING,\n              origin_type: AssetOriginType.ACQUIRED,\n              added_by: user,\n              metadata: assetItem?.metadata || {},\n            });\n\n            await this.assetRepository.save(asset);\n          })\n        );\n      } catch (error) {\n        this.logger.error(`Error creating assets for acquire transaction ${transaction.id}:`, error);\n        throw new BadRequestException('Failed to create assets for the transaction');\n      }\n    }\n\n    return {\n      success: true,\n      message: 'Acquire request accepted, transaction created',\n      vaultId,\n      txId: transaction.id,\n      assets: acquireReq.assets,\n    };\n  }\n\n  async updateTransactionHash(transactionId: string, txHash: string) {\n    const transaction = await this.transactionsService.findById(transactionId);\n    if (!transaction) {\n      throw new NotFoundException('Transaction not found');\n    }\n\n    await this.transactionsService.updateTransactionHash(transactionId, txHash);\n    return {\n      success: true,\n      message: 'Transaction hash updated',\n      txId: transactionId,\n      txHash: txHash,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcquirerWhitelist.html":{"url":"classes/AcquirerWhitelist.html","title":"class - AcquirerWhitelist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcquirerWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                walletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        walletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcquirerWhitelistCsv.html":{"url":"classes/AcquirerWhitelistCsv.html","title":"class - AcquirerWhitelistCsv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcquirerWhitelistCsv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                fileName\n                            \n                            \n                                    \n                                    \n                                    \n                                fileType\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AcquirerWhitelistEntity.html":{"url":"entities/AcquirerWhitelistEntity.html","title":"entity - AcquirerWhitelistEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AcquirerWhitelistEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/acquirerWhitelist.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vault\n                            \n                            \n                                    \n                                    \n                                wallet_address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.acquirer_whitelist, {onDelete: 'CASCADE'})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        wallet_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'walletAddress'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'acquirer_whitelist' })\nexport class AcquirerWhitelistEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'walletAddress' })\n  @Column({ type: 'varchar', nullable: false })\n  wallet_address: string;\n\n  @ManyToOne(() => Vault, (vault: Vault) => vault.acquirer_whitelist, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'vault_id' })\n  public vault: Vault;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddContractAddressToVault1745662880319.html":{"url":"classes/AddContractAddressToVault1745662880319.html","title":"class - AddContractAddressToVault1745662880319","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddContractAddressToVault1745662880319\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745662880319-addContractAddressToVault.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddContractAddressToVault1745662880319'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745662880319-addContractAddressToVault.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745662880319-addContractAddressToVault.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745662880319-addContractAddressToVault.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddContractAddressToVault1745662880319 implements MigrationInterface {\n  name = 'AddContractAddressToVault1745662880319';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contract_address\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contract_address\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddIndexToTransaction1744024797075.html":{"url":"classes/AddIndexToTransaction1744024797075.html","title":"class - AddIndexToTransaction1744024797075","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddIndexToTransaction1744024797075\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1744024797075-addIndexToTransaction.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddIndexToTransaction1744024797075'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1744024797075-addIndexToTransaction.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744024797075-addIndexToTransaction.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744024797075-addIndexToTransaction.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddIndexToTransaction1744024797075 implements MigrationInterface {\n  name = 'AddIndexToTransaction1744024797075';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"vault_id\" uuid`);\n    await queryRunner.query(`CREATE INDEX \"IDX_f93b9856ae3dfe138275ad9d68\" ON \"transactions\" (\"vault_id\") `);\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ADD CONSTRAINT \"FK_f93b9856ae3dfe138275ad9d684\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP CONSTRAINT \"FK_f93b9856ae3dfe138275ad9d684\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_f93b9856ae3dfe138275ad9d68\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"vault_id\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddInvestmentToTxType1744032453542.html":{"url":"classes/AddInvestmentToTxType1744032453542.html","title":"class - AddInvestmentToTxType1744032453542","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddInvestmentToTxType1744032453542\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1744032453542-addInvestmentToTxType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddInvestmentToTxType1744032453542'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1744032453542-addInvestmentToTxType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744032453542-addInvestmentToTxType.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744032453542-addInvestmentToTxType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddInvestmentToTxType1744032453542 implements MigrationInterface {\n  name = 'AddInvestmentToTxType1744032453542';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum\" RENAME TO \"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum_old\" AS ENUM('mint', 'payment', 'contribute', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum_old\" RENAME TO \"transactions_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNullableForMetadata1743687086047.html":{"url":"classes/AddNullableForMetadata1743687086047.html","title":"class - AddNullableForMetadata1743687086047","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNullableForMetadata1743687086047\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743687086047-addNullableForMetadata.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddNullableForMetadata1743687086047'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743687086047-addNullableForMetadata.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743687086047-addNullableForMetadata.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743687086047-addNullableForMetadata.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddNullableForMetadata1743687086047 implements MigrationInterface {\n  name = 'AddNullableForMetadata1743687086047';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"metadata\" DROP NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"metadata\" SET NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddStakeAndWalletAddress1743433439139.html":{"url":"classes/AddStakeAndWalletAddress1743433439139.html","title":"class - AddStakeAndWalletAddress1743433439139","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddStakeAndWalletAddress1743433439139\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743433439139-addStakeAndWalletAddress.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddStakeAndWalletAddress1743433439139'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743433439139-addStakeAndWalletAddress.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743433439139-addStakeAndWalletAddress.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743433439139-addStakeAndWalletAddress.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddStakeAndWalletAddress1743433439139 implements MigrationInterface {\n  name = 'AddStakeAndWalletAddress1743433439139';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" ADD \"stake_address\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD CONSTRAINT \"UQ_d3b7b875fa01abc44af7ece2cec\" UNIQUE (\"stake_address\")`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP CONSTRAINT \"UQ_d3b7b875fa01abc44af7ece2cec\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP COLUMN \"stake_address\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTotalAcquiredValueInAda1750670509513.html":{"url":"classes/AddTotalAcquiredValueInAda1750670509513.html","title":"class - AddTotalAcquiredValueInAda1750670509513","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTotalAcquiredValueInAda1750670509513\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddTotalAcquiredValueInAda1750670509513'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddTotalAcquiredValueInAda1750670509513 implements MigrationInterface {\n  name = 'AddTotalAcquiredValueInAda1750670509513';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"total_acquired_value_ada\" numeric DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"total_acquired_value_ada\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTotalAssetsCost1747665618438.html":{"url":"classes/AddTotalAssetsCost1747665618438.html","title":"class - AddTotalAssetsCost1747665618438","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTotalAssetsCost1747665618438\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747665618438-addTotalAssetsCost.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddTotalAssetsCost1747665618438'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747665618438-addTotalAssetsCost.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747665618438-addTotalAssetsCost.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747665618438-addTotalAssetsCost.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddTotalAssetsCost1747665618438 implements MigrationInterface {\n  name = 'AddTotalAssetsCost1747665618438';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"total_assets_cost_usd\" numeric DEFAULT '0'`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"total_assets_cost_ada\" numeric DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"total_assets_cost_ada\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"total_assets_cost_usd\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddVaultLifecycleFields1741943808653.html":{"url":"classes/AddVaultLifecycleFields1741943808653.html","title":"class - AddVaultLifecycleFields1741943808653","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddVaultLifecycleFields1741943808653\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741943808653-AddVaultLifecycleFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808653-AddVaultLifecycleFields.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808653-AddVaultLifecycleFields.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddVaultLifecycleFields1741943808653 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    // Add new columns for vault lifecycle management\n    await queryRunner.query(`\n      ALTER TABLE vaults\n      ADD COLUMN IF NOT EXISTS contribution_phase_start timestamptz,\n      ADD COLUMN IF NOT EXISTS investment_phase_start timestamptz,\n      ADD COLUMN IF NOT EXISTS locked_at timestamptz;\n    `);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    // Remove the columns in reverse order\n    await queryRunner.query(`\n      ALTER TABLE vaults\n      DROP COLUMN IF EXISTS locked_at,\n      DROP COLUMN IF EXISTS investment_phase_start,\n      DROP COLUMN IF EXISTS contribution_phase_start;\n    `);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedAauired1748361017536.html":{"url":"classes/AddedAauired1748361017536.html","title":"class - AddedAauired1748361017536","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedAauired1748361017536\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1748361017536-addedAauired.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedAauired1748361017536'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1748361017536-addedAauired.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748361017536-addedAauired.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748361017536-addedAauired.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedAauired1748361017536 implements MigrationInterface {\n  name = 'AddedAauired1748361017536';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"assets_origin_type_enum\" RENAME TO \"assets_origin_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"assets_origin_type_enum\" AS ENUM('invested', 'acquired', 'contributed')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ALTER COLUMN \"origin_type\" TYPE \"public\".\"assets_origin_type_enum\" USING \"origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_origin_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_origin_type_enum_old\" AS ENUM('invested', 'contributed')`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ALTER COLUMN \"origin_type\" TYPE \"public\".\"assets_origin_type_enum_old\" USING \"origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_origin_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"assets_origin_type_enum_old\" RENAME TO \"assets_origin_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedAssetVaultName1745921850315.html":{"url":"classes/AddedAssetVaultName1745921850315.html","title":"class - AddedAssetVaultName1745921850315","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedAssetVaultName1745921850315\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745921850315-addedAssetVaultName.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedAssetVaultName1745921850315'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745921850315-addedAssetVaultName.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745921850315-addedAssetVaultName.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745921850315-addedAssetVaultName.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedAssetVaultName1745921850315 implements MigrationInterface {\n  name = 'AddedAssetVaultName1745921850315';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"asset_vault_name\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"asset_vault_name\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedAssetsStatus1748264767365.html":{"url":"classes/AddedAssetsStatus1748264767365.html","title":"class - AddedAssetsStatus1748264767365","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedAssetsStatus1748264767365\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1748264767365-addedAssetsStatus.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedAssetsStatus1748264767365'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1748264767365-addedAssetsStatus.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748264767365-addedAssetsStatus.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748264767365-addedAssetsStatus.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedAssetsStatus1748264767365 implements MigrationInterface {\n  name = 'AddedAssetsStatus1748264767365';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_origin_type_enum\" AS ENUM('invested', 'contributed')`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"origin_type\" \"public\".\"assets_origin_type_enum\"`);\n    await queryRunner.query(\n      `COMMENT ON COLUMN \"assets\".\"origin_type\" IS 'Source or origin type of the asset (INVESTED, CONTRIBUTED)'`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`UPDATE assets SET origin_type = 'contributed';`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `COMMENT ON COLUMN \"assets\".\"origin_type\" IS 'Source or origin type of the asset (INVESTED, CONTRIBUTED)'`\n    );\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"origin_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_origin_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedContributorWhitelist1742484041497.html":{"url":"classes/AddedContributorWhitelist1742484041497.html","title":"class - AddedContributorWhitelist1742484041497","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedContributorWhitelist1742484041497\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742484041497-AddedContributorWhitelist.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedContributorWhitelist1742484041497'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742484041497-AddedContributorWhitelist.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742484041497-AddedContributorWhitelist.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742484041497-AddedContributorWhitelist.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedContributorWhitelist1742484041497 implements MigrationInterface {\n  name = 'AddedContributorWhitelist1742484041497';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `CREATE TABLE \"contributor_whitelist\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"wallet_address\" character varying NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, CONSTRAINT \"PK_61db8d3694e74fd55f37c54a54c\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"contributor_whitelist\" ADD CONSTRAINT \"FK_dad5613b25986784cf01e7fdaae\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"contributor_whitelist\" DROP CONSTRAINT \"FK_dad5613b25986784cf01e7fdaae\"`);\n    await queryRunner.query(`DROP TABLE \"contributor_whitelist\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedDelete1747838327085.html":{"url":"classes/AddedDelete1747838327085.html","title":"class - AddedDelete1747838327085","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedDelete1747838327085\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747838327085-addedDelete.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedDelete1747838327085'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747838327085-addedDelete.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747838327085-addedDelete.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747838327085-addedDelete.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedDelete1747838327085 implements MigrationInterface {\n  name = 'AddedDelete1747838327085';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" ADD \"deleted\" boolean NOT NULL DEFAULT false`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"deleted\" boolean NOT NULL DEFAULT false`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"deleted\" boolean NOT NULL DEFAULT false`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"deleted\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"deleted\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP COLUMN \"deleted\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedLiquidationHash1749046550619.html":{"url":"classes/AddedLiquidationHash1749046550619.html","title":"class - AddedLiquidationHash1749046550619","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedLiquidationHash1749046550619\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1749046550619-addedLiquidationHash.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedLiquidationHash1749046550619'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1749046550619-addedLiquidationHash.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749046550619-addedLiquidationHash.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749046550619-addedLiquidationHash.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedLiquidationHash1749046550619 implements MigrationInterface {\n  name = 'AddedLiquidationHash1749046550619';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"liquidation_hash\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"liquidation_hash\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedMaxAssetsCount1747911428750.html":{"url":"classes/AddedMaxAssetsCount1747911428750.html","title":"class - AddedMaxAssetsCount1747911428750","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedMaxAssetsCount1747911428750\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747911428750-AddedMaxAssetsCount.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedMaxAssetsCount1747911428750'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747911428750-AddedMaxAssetsCount.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747911428750-AddedMaxAssetsCount.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747911428750-AddedMaxAssetsCount.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedMaxAssetsCount1747911428750 implements MigrationInterface {\n  name = 'AddedMaxAssetsCount1747911428750';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"max_contribute_assets\" numeric NOT NULL DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"max_contribute_assets\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedPublicationHash1745583708330.html":{"url":"classes/AddedPublicationHash1745583708330.html","title":"class - AddedPublicationHash1745583708330","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedPublicationHash1745583708330\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745583708330-AddedPublicationHash.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedPublicationHash1745583708330'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745583708330-AddedPublicationHash.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745583708330-AddedPublicationHash.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745583708330-AddedPublicationHash.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedPublicationHash1745583708330 implements MigrationInterface {\n  name = 'AddedPublicationHash1745583708330';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"publication_hash\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"publication_hash\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedReserveVaule1747821437539.html":{"url":"classes/AddedReserveVaule1747821437539.html","title":"class - AddedReserveVaule1747821437539","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedReserveVaule1747821437539\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747821437539-addedReserveVaule.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedReserveVaule1747821437539'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747821437539-addedReserveVaule.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747821437539-addedReserveVaule.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747821437539-addedReserveVaule.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedReserveVaule1747821437539 implements MigrationInterface {\n  name = 'AddedReserveVaule1747821437539';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"require_reserved_cost_usd\" numeric DEFAULT '0'`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"require_reserved_cost_ada\" numeric DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"require_reserved_cost_ada\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"require_reserved_cost_usd\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedTags1741943808652.html":{"url":"classes/AddedTags1741943808652.html","title":"class - AddedTags1741943808652","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedTags1741943808652\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741943808652-AddedTags.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedTags1741943808652'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1741943808652-AddedTags.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808652-AddedTags.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808652-AddedTags.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedTags1741943808652 implements MigrationInterface {\n  name = 'AddedTags1741943808652';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"tags\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" character varying NOT NULL, CONSTRAINT \"UQ_d90243459a697eadb8ad56e9092\" UNIQUE (\"name\"), CONSTRAINT \"PK_e7dc17249a1148a1970748eda99\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"vault_tags\" (\"tag_id\" uuid NOT NULL, \"vault_id\" uuid NOT NULL, CONSTRAINT \"PK_b43bcaa347028f52de05c137789\" PRIMARY KEY (\"tag_id\", \"vault_id\"))`\n    );\n    await queryRunner.query(`CREATE INDEX \"IDX_2b3fd4667b2be7a2d7a329083c\" ON \"vault_tags\" (\"tag_id\") `);\n    await queryRunner.query(`CREATE INDEX \"IDX_adf9f0b047319be1ec67ac1d1e\" ON \"vault_tags\" (\"vault_id\") `);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"asset_window\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_investment_window\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contribution_duration\" interval`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contribution_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_investment_window\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"asset_window\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_adf9f0b047319be1ec67ac1d1e\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_2b3fd4667b2be7a2d7a329083c\"`);\n    await queryRunner.query(`DROP TABLE \"vault_tags\"`);\n    await queryRunner.query(`DROP TABLE \"tags\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedTransactionModelAndRelations1743588383672.html":{"url":"classes/AddedTransactionModelAndRelations1743588383672.html","title":"class - AddedTransactionModelAndRelations1743588383672","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedTransactionModelAndRelations1743588383672\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedTransactionModelAndRelations1743588383672'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedTransactionModelAndRelations1743588383672 implements MigrationInterface {\n  name = 'AddedTransactionModelAndRelations1743588383672';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"sender\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"receiver\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"block\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"metadata\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"utxo_input\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"utxo_output\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"utxo_ref\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"amount\" integer`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"transaction_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"fee\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"tx_hash\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_status_enum\" RENAME TO \"transactions_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_status_enum\" AS ENUM('created', 'pending', 'submitted', 'confirmed', 'failed', 'stuck')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"status\" TYPE \"public\".\"transactions_status_enum\" USING \"status\"::\"text\"::\"public\".\"transactions_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_20094ffc712b516cb4a7444de3b\" FOREIGN KEY (\"transaction_id\") REFERENCES \"transactions\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_20094ffc712b516cb4a7444de3b\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_status_enum_old\" AS ENUM('created', 'pending', 'submitted', 'confirmed', 'failed', 'manual-review')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"status\" TYPE \"public\".\"transactions_status_enum_old\" USING \"status\"::\"text\"::\"public\".\"transactions_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_status_enum_old\" RENAME TO \"transactions_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"tx_hash\" SET NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"fee\" SET NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"transaction_id\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"amount\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"utxo_ref\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"utxo_output\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"utxo_input\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"metadata\" jsonb`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"block\" integer NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"receiver\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"sender\" character varying NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Amount.html":{"url":"interfaces/Amount.html","title":"interface - Amount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Amount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/utils/lib.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            unit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockfrostServerError } from '@blockfrost/blockfrost-js';\nimport {\n  Address,\n  TransactionInput,\n  TransactionOutput,\n  TransactionHash,\n  TransactionUnspentOutput,\n  TransactionUnspentOutputs,\n  AssetName,\n  Assets,\n  BigNum,\n  MultiAsset,\n  ScriptHash,\n  Value,\n  PlutusData,\n  ConstrPlutusData,\n  BigInt,\n  hash_plutus_data,\n  PlutusList,\n} from '@emurgo/cardano-serialization-lib-nodejs';\n\ninterface Amount {\n  unit: string;\n  quantity: string | number;\n}\n\nconst assetsToValue = (assets: Amount[]) => {\n  const multiAsset = MultiAsset.new();\n  const lovelace = assets.find(asset => asset.unit === 'lovelace');\n  const policies = assets.filter(asset => asset.unit !== 'lovelace').map(asset => asset.unit.slice(0, 56));\n\n  if (!policies.length && lovelace) {\n    return Value.new(BigNum.from_str(String(Number(lovelace.quantity)  {\n    const policyAssets = assets.filter(asset => asset.unit.slice(0, 56) === policy);\n    const assetsValue = Assets.new();\n    policyAssets.forEach(asset => {\n      if (Number(asset.quantity) > 0)\n        assetsValue.insert(\n          AssetName.new(Buffer.from(asset.unit.slice(56), 'hex')),\n          BigNum.from_str(String(asset.quantity))\n        );\n    });\n    if (assetsValue.len() > 0) multiAsset.insert(ScriptHash.from_bytes(Buffer.from(policy, 'hex')), assetsValue);\n  });\n\n  const multiAssetsValue = Value.new(BigNum.from_str(lovelace ? String(lovelace.quantity) : '0'));\n  multiAssetsValue.set_multiasset(multiAsset);\n  return multiAssetsValue;\n};\n\nexport const getUtxos = async (address: Address, min = 0, blockfrost) => {\n  const utxos = await blockfrost.addressesUtxosAll(address.to_bech32());\n  const parsedUtxos = TransactionUnspentOutputs.new();\n  utxos.forEach((utxo: any) => {\n    const { tx_hash, output_index, amount } = utxo;\n    if (Number(amount[0].quantity) > min) {\n      parsedUtxos.add(\n        TransactionUnspentOutput.new(\n          TransactionInput.new(TransactionHash.from_hex(tx_hash), output_index),\n          TransactionOutput.new(address, assetsToValue(amount))\n        )\n      );\n    }\n  });\n  return parsedUtxos;\n};\n\nexport function generate_assetname_from_txhash_index(txHash: string, txOutputIdx: number) {\n  const plutusList = PlutusList.new();\n  plutusList.add(PlutusData.new_bytes(Buffer.from(txHash, 'hex')));\n\n  plutusList.add(PlutusData.new_integer(BigInt.from_str(String(txOutputIdx))));\n\n  const plutusData = PlutusData.new_constr_plutus_data(ConstrPlutusData.new(BigNum.zero(), plutusList));\n  const hash = hash_plutus_data(plutusData);\n\n  return hash.to_hex();\n}\n\nexport function generate_tag_from_txhash_index(tx_hash: string, tx_output_idx: number) {\n  const plutusList = PlutusList.new();\n  plutusList.add(PlutusData.new_bytes(Buffer.from(tx_hash, 'hex')));\n\n  plutusList.add(PlutusData.new_integer(BigInt.from_str(String(tx_output_idx))));\n\n  const plutusData = PlutusData.new_constr_plutus_data(ConstrPlutusData.new(BigNum.zero(), plutusList));\n  const hash = hash_plutus_data(plutusData);\n\n  return hash.to_hex();\n}\n\nexport async function getVaultUtxo(policyId: string, assetName: string, blockfrost) {\n  try {\n    const unit = policyId + assetName;\n    const assets = await blockfrost.assetsTransactions(unit, {\n      count: 1,\n      order: 'desc',\n    });\n\n    if (assets.length > 1) {\n      throw new Error('Must be one.');\n    }\n    const utxo = await blockfrost.txsUtxos(assets[0].tx_hash);\n\n    const index = utxo.outputs.findIndex(output => output.amount.find(amount => amount.unit === unit));\n\n    if (index === -1) {\n      throw new Error('Vault not found in transaction, your vault might be burned.');\n    }\n\n    return { txHash: utxo.hash, index: index };\n  } catch (e: unknown) {\n    if ((e as BlockfrostServerError).status_code === 404) {\n      throw new Error('Vault not found on chain.');\n    }\n    throw e;\n  }\n}\n\nexport function toHex(str: string) {\n  return Buffer.from(str).toString('hex');\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnvilApiConfig.html":{"url":"interfaces/AnvilApiConfig.html","title":"interface - AnvilApiConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnvilApiConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            endpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:     \"GET\" | \"POST\" | \"PATCH\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"GET\" | \"POST\" | \"PATCH\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnvilApiService.html":{"url":"injectables/AnvilApiService.html","title":"injectable - AnvilApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnvilApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    Private\n                                    Async\n                                callAnvilApi\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                patch\n                            \n                            \n                                    Async\n                                post\n                            \n                            \n                                    Async\n                                submitTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(params: BuildTransactionParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            BuildTransactionParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        callAnvilApi\n                        \n                    \n                \n            \n            \n                \n                        \n                    callAnvilApi(undefined: AnvilApiConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                                    B\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AnvilApiConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(endpoint: string, undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:40\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(endpoint: string, body: B)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                                    B\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        B\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(endpoint: string, body: B)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                                    B\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        B\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiDocParams.html":{"url":"interfaces/ApiDocParams.html","title":"interface - ApiDocParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiDocParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/api-doc.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators, HttpStatus } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\ninterface ApiDocParams {\n  summary: string;\n  description: string;\n  status: HttpStatus;\n}\n\nexport function ApiDoc({ summary, description = '', status = 200 }: ApiDocParams) {\n  return applyDecorators(ApiOperation({ summary }), ApiResponse({ status, description }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /info\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiVersion\n                        \n                    \n                \n            \n            \n                \n                        \n                    apiVersion()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get version of API', description: 'Version has returned', status: 200})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AppService } from './app.service';\nimport { ApiDoc } from './decorators/api-doc.decorator';\n\n@ApiTags('info')\n@Controller('/info')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @ApiDoc({\n    summary: 'Get version of API',\n    description: 'Version has returned',\n    status: 200,\n  })\n  @Get()\n  apiVersion(): string {\n    return this.appService.apiVersion();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAcquireModule\n\nAcquireModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAcquireModule->AppModule\n\n\n\n\n\nAssetsModule\n\nAssetsModule\n\nAppModule -->\n\nAssetsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAwsModule\n\nAwsModule\n\nAppModule -->\n\nAwsModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nAppModule -->\n\nBlockchainModule->AppModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nDistributionModule\n\nDistributionModule\n\nAppModule -->\n\nDistributionModule->AppModule\n\n\n\n\n\nJwtGlobalModule\n\nJwtGlobalModule\n\nAppModule -->\n\nJwtGlobalModule->AppModule\n\n\n\n\n\nLpTokensModule\n\nLpTokensModule\n\nAppModule -->\n\nLpTokensModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVaultsModule\n\nVaultsModule\n\nAppModule -->\n\nVaultsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AcquireModule\n                        \n                        \n                            AssetsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AwsModule\n                        \n                        \n                            BlockchainModule\n                        \n                        \n                            ContributionModule\n                        \n                        \n                            DistributionModule\n                        \n                        \n                            JwtGlobalModule\n                        \n                        \n                            LpTokensModule\n                        \n                        \n                            TransactionsModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VaultsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SnakeNamingStrategy } from 'typeorm-naming-strategies';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { AwsModule } from './modules/aws_bucket/aws.module';\nimport { DistributionModule } from './modules/distribution/distribution.module';\nimport { JwtGlobalModule } from './modules/globals/jwt_global_module/jwt_global.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { LpTokensModule } from './modules/vaults/lp-tokens/lp-tokens.module';\nimport { AcquireModule } from './modules/vaults/phase-management/acquire/acquire.module';\nimport { ContributionModule } from './modules/vaults/phase-management/contribution/contribution.module';\nimport { AssetsModule } from './modules/vaults/processing-tx/assets/assets.module';\nimport { TransactionsModule } from './modules/vaults/processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from './modules/vaults/processing-tx/onchain/blockchain.module';\nimport { VaultsModule } from './modules/vaults/vaults.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT, 5432),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      synchronize: false,\n      entities: [__dirname + '/database/core/**/*.entity{.ts,.js}'],\n      autoLoadEntities: true,\n      namingStrategy: new SnakeNamingStrategy(),\n    }),\n    JwtGlobalModule,\n    AuthModule,\n    AssetsModule,\n    BlockchainModule,\n    VaultsModule,\n    UsersModule,\n    AwsModule,\n    ContributionModule,\n    AcquireModule,\n    TransactionsModule,\n    LpTokensModule,\n    DistributionModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apiVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n            \n                \napiVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { version } from '../package.json';\n\n@Injectable()\nexport class AppService {\n  apiVersion(): string {\n    return `L4va API version: ${version}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Asset.html":{"url":"entities/Asset.html","title":"entity - Asset","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Asset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/asset.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                added_at\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                added_by\n                            \n                            \n                                    \n                                    \n                                asset_id\n                            \n                            \n                                    \n                                    \n                                contract_address\n                            \n                            \n                                    \n                                deleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dex_price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                floor_price\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                last_valuation\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                locked_at\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                origin_type\n                            \n                            \n                                    \n                                    \n                                policy_id\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                released_at\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                transaction\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                vault\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        added_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'addedAt'})@Column({name: 'added_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'addedBy'})@ManyToOne(undefined, addedBy => addedBy.id)@JoinColumn({name: 'added_by'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        asset_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'assetId'})@Column({name: 'asset_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contract_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'contractAddress'})@Column({name: 'contract_address', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'deleted', type: 'boolean', nullable: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dex_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'dexPrice'})@Column({name: 'dex_price', type: 'decimal', precision: 20, scale: 2, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        floor_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'floorPrice'})@Column({name: 'floor_price', type: 'decimal', precision: 20, scale: 2, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        last_valuation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'lastValuation'})@Column({name: 'last_valuation', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        locked_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'lockedAt'})@Column({name: 'locked_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: true})@Expose({name: 'metadata'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        origin_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetOriginType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'originType'})@Column({name: 'origin_type', type: 'enum', enum: AssetOriginType, nullable: true, comment: 'Source or origin type of the asset (INVESTED, CONTRIBUTED)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        policy_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'policyId'})@Column({name: 'policy_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 20, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        released_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'releasedAt'})@Column({name: 'released_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AssetStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'transaction'})@ManyToOne(undefined, transaction => transaction.id)@JoinColumn({name: 'transaction_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AssetType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({name: 'updated_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.assets)@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn, BeforeInsert, BeforeUpdate } from 'typeorm';\n\nimport { AssetType, AssetStatus, AssetOriginType } from '../types/asset.types';\n\nimport { Transaction } from './transaction.entity';\nimport { User } from './user.entity';\nimport { Vault } from './vault.entity';\n\n@Entity('assets')\nexport class Asset {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => Vault, vault => vault.assets)\n  @JoinColumn({ name: 'vault_id' })\n  vault: Vault; // nullable empty if joined to transaction\n\n  @Expose({ name: 'policyId' })\n  @Column({\n    name: 'policy_id',\n  })\n  policy_id: string;\n\n  @Expose({ name: 'assetId' })\n  @Column({\n    name: 'asset_id',\n  })\n  asset_id: string;\n\n  @Column({\n    type: 'enum',\n    enum: AssetType,\n  })\n  type: AssetType;\n\n  @Expose({ name: 'contractAddress' })\n  @Column({ name: 'contract_address', nullable: true })\n  contract_address: string;\n\n  @Column({ type: 'decimal', precision: 20, scale: 2, default: 0 })\n  quantity: number;\n\n  @Expose({ name: 'floorPrice' })\n  @Column({\n    name: 'floor_price',\n    type: 'decimal',\n    precision: 20,\n    scale: 2,\n    nullable: true,\n  })\n  floor_price?: number;\n\n  @Expose({ name: 'dexPrice' })\n  @Column({\n    name: 'dex_price',\n    type: 'decimal',\n    precision: 20,\n    scale: 2,\n    nullable: true,\n  })\n  dex_price?: number;\n\n  @Column({ name: 'deleted', type: 'boolean', nullable: false, default: false })\n  deleted: boolean;\n\n  @Expose({ name: 'lastValuation' })\n  @Column({\n    name: 'last_valuation',\n    type: 'timestamptz',\n    nullable: true,\n  })\n  last_valuation?: Date;\n\n  @Column({\n    type: 'enum',\n    enum: AssetStatus,\n    default: AssetStatus.PENDING,\n  })\n  status: AssetStatus;\n\n  @Expose({ name: 'lockedAt' })\n  @Column({\n    name: 'locked_at',\n    type: 'timestamptz',\n    nullable: true,\n  })\n  locked_at?: Date;\n\n  @Expose({ name: 'releasedAt' })\n  @Column({\n    name: 'released_at',\n    type: 'timestamptz',\n    nullable: true,\n  })\n  released_at?: Date;\n\n  @Expose({ name: 'originType' })\n  @Column({\n    name: 'origin_type',\n    type: 'enum',\n    enum: AssetOriginType,\n    nullable: true,\n    comment: 'Source or origin type of the asset (INVESTED, CONTRIBUTED)',\n  })\n  origin_type?: AssetOriginType;\n\n  @Column({ type: 'jsonb', nullable: true })\n  @Expose({ name: 'metadata' })\n  metadata: any;\n\n  @Expose({ name: 'transaction' })\n  @ManyToOne(() => Transaction, (transaction: Transaction) => transaction.id)\n  @JoinColumn({ name: 'transaction_id' })\n  public transaction: Transaction;\n\n  @Expose({ name: 'addedBy' })\n  @ManyToOne(() => User, (addedBy: User) => addedBy.id)\n  @JoinColumn({ name: 'added_by' })\n  public added_by: User; // added user owner\n\n  @Expose({ name: 'addedAt' })\n  @Column({\n    name: 'added_at',\n    type: 'timestamptz',\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  added_at: Date;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({\n    name: 'updated_at',\n    type: 'timestamptz',\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  updated_at: Date;\n\n  @BeforeInsert()\n  setAddedAt() {\n    this.added_at = new Date();\n    this.updated_at = new Date();\n  }\n\n  @BeforeUpdate()\n  updateTimestamp() {\n    this.updated_at = new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetMetadataDto.html":{"url":"classes/AssetMetadataDto.html","title":"class - AssetMetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetMetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty({type: 'object', description: 'Custom attributes for the asset', additionalProperties: true, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEnum, IsNumber, IsOptional, IsObject, ValidateNested } from 'class-validator';\nimport { AssetType } from '@/types/asset.types';\n\nexport class AssetMetadataDto {\n  @IsString()\n  @ApiProperty()\n  name: string;\n\n  @IsString()\n  @ApiProperty()\n  description: string;\n\n  @IsString()\n  @ApiProperty()\n  imageUrl: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  category?: string;\n\n  @IsObject()\n  @ApiProperty({\n    type: 'object',\n    description: 'Custom attributes for the asset',\n    additionalProperties: true,\n    example: {\n      rarity: 'legendary',\n      edition: '1/100',\n      traits: ['gold', 'limited'],\n    },\n  })\n  attributes: Record;\n}\n\nexport class CreateAssetDto {\n  @IsString()\n  @ApiProperty()\n  vaultId: string;\n\n  @IsEnum(AssetType)\n  @ApiProperty({ enum: AssetType })\n  type: AssetType;\n\n  @IsString()\n  @ApiProperty()\n  contractAddress: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  tokenId?: string;\n\n  @IsNumber()\n  @ApiProperty()\n  quantity: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  floorPrice?: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  dexPrice?: number;\n\n  @ValidateNested()\n  @Type(() => AssetMetadataDto)\n  @ApiProperty({ type: AssetMetadataDto })\n  metadata: AssetMetadataDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetValueDto.html":{"url":"classes/AssetValueDto.html","title":"class - AssetValueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetValueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/dto/asset-value.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                displayName\n                            \n                            \n                                isFungibleToken\n                            \n                            \n                                isNft\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                name\n                            \n                            \n                                priceAda\n                            \n                            \n                                priceUsd\n                            \n                            \n                                quantity\n                            \n                            \n                                    Optional\n                                ticker\n                            \n                            \n                                tokenId\n                            \n                            \n                                valueAda\n                            \n                            \n                                valueUsd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFungibleToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ticker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AssetValueDto {\n  tokenId: string;\n  name: string;\n  displayName?: string;\n  ticker?: string;\n  quantity: number;\n  isNft: boolean;\n  isFungibleToken: boolean;\n  priceAda: number;\n  priceUsd: number;\n  valueAda: number;\n  valueUsd: number;\n  metadata?: {\n    policyId: string;\n    fingerprint: string;\n    decimals: number;\n    description?: string;\n    image?: string;\n    assetName?: string;\n    mintTx?: string;\n    mintQuantity?: string;\n    onchainMetadata?: Record;\n    mediaType?: string;\n    files?: Array;\n    attributes?: Record;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetWhitelist.html":{"url":"classes/AssetWhitelist.html","title":"class - AssetWhitelist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMax\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMin\n                            \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:49\n                        \n                    \n\n            \n                \n                    Maximum number of assets allowed\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:39\n                        \n                    \n\n            \n                \n                    Minimum number of assets allowed\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:29\n                        \n                    \n\n            \n                \n                    Policy ID of the asset (56-character hex string)\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetWhitelistDto.html":{"url":"classes/AssetWhitelistDto.html","title":"class - AssetWhitelistDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetWhitelistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/assetWhitelist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMax\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMin\n                            \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Maximum number of assets allowed', required: false, example: 10})@IsOptional()@IsNumber()@Expose({name: 'countCapMax'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/assetWhitelist.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Minimum number of assets allowed', required: false, example: 1})@IsOptional()@IsNumber()@Expose({name: 'countCapMin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/assetWhitelist.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the asset (56-character hex string)', example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@IsString()@Matches(/^[0-9a-fA-F]{56}$/, {message: 'Policy ID must be a 56-character hexadecimal string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/assetWhitelist.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, Matches } from 'class-validator';\n\nexport class AssetWhitelistDto {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsString()\n  @Matches(/^[0-9a-fA-F]{56}$/, {\n    message: 'Policy ID must be a 56-character hexadecimal string',\n  })\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Minimum number of assets allowed',\n    required: false,\n    example: 1,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose({ name: 'countCapMin' })\n  countCapMin?: number;\n\n  @ApiProperty({\n    description: 'Maximum number of assets allowed',\n    required: false,\n    example: 10,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose({ name: 'countCapMax' })\n  countCapMax?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AssetsController.html":{"url":"controllers/AssetsController.html","title":"controller - AssetsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AssetsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/assets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                assets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getContributedAssets\n                            \n                            \n                                    \n                                    \n                                    \n                                getInvestedAssets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getContributedAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContributedAssets(req, vaultId: string, query: PaginationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get vault assets', description: 'Get paginated list of assets for a specific vault', status: 200})@UseGuards(AuthGuard)@Get('contributed/:vaultId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getInvestedAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInvestedAssets(req, vaultId: string, query: PaginationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get vault assets', description: 'Get paginated list of assets for a specific vault', status: 200})@UseGuards(AuthGuard)@Get('acquired/:vaultId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Param, Request, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApiDoc } from '@/decorators/api-doc.decorator';\nimport { AuthGuard } from '@/modules/auth/auth.guard';\n\nimport { PaginationDto } from '../../dto/pagination.dto';\n\nimport { AssetsService } from './assets.service';\n\n@ApiTags('assets')\n@Controller('assets')\nexport class AssetsController {\n  constructor(private readonly assetsService: AssetsService) {}\n\n  @ApiDoc({\n    summary: 'Get vault assets',\n    description: 'Get paginated list of assets for a specific vault',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('contributed/:vaultId')\n  getContributedAssets(@Request() req, @Param('vaultId') vaultId: string, @Query() query: PaginationDto) {\n    const userId = req.user.sub;\n    return this.assetsService.getVaultAssets(userId, vaultId, query.page, query.limit);\n  }\n\n  @ApiDoc({\n    summary: 'Get vault assets',\n    description: 'Get paginated list of assets for a specific vault',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('acquired/:vaultId')\n  getInvestedAssets(@Request() req, @Param('vaultId') vaultId: string, @Query() query: PaginationDto) {\n    const userId = req.user.sub;\n    return this.assetsService.getAcquiredAssets(userId, vaultId, query.page, query.limit);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AssetsModule.html":{"url":"modules/AssetsModule.html","title":"module - AssetsModule","body":"\n                   \n\n\n\n\n    Modules\n    AssetsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AssetsModule\n\n\n\ncluster_AssetsModule_providers\n\n\n\ncluster_AssetsModule_exports\n\n\n\n\nAssetsService \n\nAssetsService \n\n\n\nAssetsModule\n\nAssetsModule\n\nAssetsService  -->\n\nAssetsModule->AssetsService \n\n\n\n\n\nAssetsService\n\nAssetsService\n\nAssetsModule -->\n\nAssetsService->AssetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/assets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AssetsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AssetsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssetsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\nimport { AssetsController } from './assets.controller';\nimport { AssetsService } from './assets.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Asset, Vault, Transaction, User])],\n  controllers: [AssetsController],\n  providers: [AssetsService],\n  exports: [AssetsService],\n})\nexport class AssetsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssetsService.html":{"url":"injectables/AssetsService.html","title":"injectable - AssetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/assets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAssetToVault\n                            \n                            \n                                    Async\n                                getAcquiredAssets\n                            \n                            \n                                    Async\n                                getVaultAssets\n                            \n                            \n                                    Async\n                                lockAsset\n                            \n                            \n                                    Async\n                                releaseAsset\n                            \n                            \n                                    Async\n                                updateAssetValuation\n                            \n                            \n                                    Async\n                                updateTransactionAssets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(assetsRepository: Repository, vaultsRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        assetsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAssetToVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAssetToVault(userId: string, data: CreateAssetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateAssetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAcquiredAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAcquiredAssets(userId: string, vaultId: string, page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getVaultAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultAssets(userId: string, vaultId: string, page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        lockAsset\n                        \n                    \n                \n            \n            \n                \n                        \n                    lockAsset(userId: string, assetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseAsset\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseAsset(userId: string, assetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAssetValuation\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAssetValuation(userId: string, assetId: string, floorPrice?: number, dexPrice?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                floorPrice\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                dexPrice\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionAssets(transactionId: string, vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { classToPlain } from 'class-transformer';\nimport { Asset } from '@/database/asset.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { AssetOriginType, AssetStatus, AssetType } from '@/types/asset.types';\nimport { VaultStatus } from '@/types/vault.types';\nimport { Repository } from 'typeorm';\n\nimport { CreateAssetDto } from './dto/create-asset.dto';\n\n@Injectable()\nexport class AssetsService {\n  constructor(\n    @InjectRepository(Asset)\n    private readonly assetsRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    @InjectRepository(User)\n    private readonly userRepository: Repository\n  ) {}\n\n  async addAssetToVault(userId: string, data: CreateAssetDto): Promise {\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id: data.vaultId,\n        owner: { id: userId },\n      },\n    });\n\n    const user = await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Vault not found or access denied');\n    }\n\n    if (!user) {\n      throw new BadRequestException('User not found or access denied');\n    }\n\n    if (vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Assets can only be added during the contribution phase');\n    }\n\n    // Validate asset type-specific requirements\n    if (data.type === AssetType.NFT && !data.tokenId) {\n      throw new BadRequestException('Token ID is required for NFT assets');\n    }\n\n    if (data.type === AssetType.CNT && !data.dexPrice) {\n      throw new BadRequestException('DEX price is required for CNT assets');\n    }\n\n    // Create and save the asset\n    const asset = this.assetsRepository.create({\n      type: data.type,\n      quantity: data.quantity,\n      floor_price: data.floorPrice,\n      dex_price: data.dexPrice,\n      last_valuation: new Date(),\n      status: AssetStatus.PENDING,\n      metadata: data.metadata,\n      added_by: user,\n    });\n\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async getVaultAssets(userId: string, vaultId: string, page: number = 1, limit: number = 10): Promise {\n    // Verify vault ownership\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id: vaultId,\n      },\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Vault not found or access denied');\n    }\n\n    const [assets, total] = await this.assetsRepository.findAndCount({\n      where: {\n        vault: {\n          id: vaultId,\n        },\n        origin_type: AssetOriginType.CONTRIBUTED,\n      },\n      skip: (page - 1) * limit,\n      take: limit,\n      order: {\n        added_at: 'DESC',\n      },\n    });\n\n    return {\n      items: assets.map(asset => classToPlain(asset)),\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n  async getAcquiredAssets(userId: string, vaultId: string, page: number = 1, limit: number = 10): Promise {\n    // Verify vault ownership\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id: vaultId,\n      },\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Vault not found or access denied');\n    }\n\n    const [assets, total] = await this.assetsRepository.findAndCount({\n      where: {\n        vault: {\n          id: vaultId,\n        },\n        origin_type: AssetOriginType.ACQUIRED,\n      },\n      skip: (page - 1) * limit,\n      take: limit,\n      order: {\n        added_at: 'DESC',\n      },\n    });\n\n    return {\n      items: assets.map(asset => classToPlain(asset)),\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n\n  async lockAsset(userId: string, assetId: string): Promise {\n    const asset = await this.assetsRepository.findOne({\n      where: { id: assetId },\n      relations: ['vault', 'vault.owner'],\n    });\n\n    if (!asset || asset.vault.owner.id !== userId) {\n      throw new BadRequestException('Asset not found or access denied');\n    }\n\n    if (asset.vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Assets can only be locked during the contribution phase');\n    }\n\n    if (asset.status !== AssetStatus.PENDING) {\n      throw new BadRequestException('Only pending assets can be locked');\n    }\n\n    asset.status = AssetStatus.LOCKED;\n    asset.locked_at = new Date();\n\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async releaseAsset(userId: string, assetId: string): Promise {\n    const asset = await this.assetsRepository.findOne({\n      where: { id: assetId },\n      relations: ['vault', 'vault.owner'],\n    });\n\n    if (!asset || asset.vault.owner.id !== userId) {\n      throw new BadRequestException('Asset not found or access denied');\n    }\n\n    if (asset.vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Assets can only be released during the contribution phase');\n    }\n\n    if (asset.status !== AssetStatus.LOCKED) {\n      throw new BadRequestException('Only locked assets can be released');\n    }\n\n    asset.status = AssetStatus.RELEASED;\n    asset.released_at = new Date();\n\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async updateAssetValuation(userId: string, assetId: string, floorPrice?: number, dexPrice?: number): Promise {\n    const asset = await this.assetsRepository.findOne({\n      where: { id: assetId },\n      relations: ['vault', 'vault.owner'],\n    });\n\n    if (!asset || asset.vault.owner.id !== userId) {\n      throw new BadRequestException('Asset not found or access denied');\n    }\n\n    if (asset.vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Asset valuations can only be updated during the contribution phase');\n    }\n\n    if (asset.type === AssetType.NFT && floorPrice !== undefined) {\n      asset.floor_price = floorPrice;\n    }\n\n    if (asset.type === AssetType.CNT && dexPrice !== undefined) {\n      asset.dex_price = dexPrice;\n    }\n\n    asset.last_valuation = new Date();\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async updateTransactionAssets(transactionId: string, vaultId: string): Promise {\n    const assets = await this.assetsRepository.find({\n      where: {\n        transaction: { id: transactionId },\n      },\n    });\n\n    if (!assets.length) {\n      return;\n    }\n\n    const vault = await this.vaultsRepository.findOne({\n      where: { id: vaultId },\n    });\n\n    if (!vault) {\n      throw new BadRequestException(`Vault with id ${vaultId} not found`);\n    }\n\n    // Update all assets to be linked to the vault\n    await Promise.all(\n      assets.map(async asset => {\n        asset.vault = vault;\n        asset.status = AssetStatus.LOCKED;\n        asset.locked_at = new Date();\n        return this.assetsRepository.save(asset);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AssetsWhitelistEntity.html":{"url":"entities/AssetsWhitelistEntity.html","title":"entity - AssetsWhitelistEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AssetsWhitelistEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/assetsWhitelist.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                asset_count_cap_max\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                asset_count_cap_min\n                            \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                policy_id\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vault\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        asset_count_cap_max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'countCapMax'})@Column({name: 'asset_count_cap_max', type: 'integer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        asset_count_cap_min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'countCapMin'})@Column({name: 'asset_count_cap_min', type: 'integer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policy_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'policyId'})@Column({type: 'varchar', length: 56, nullable: false})@Matches(/^[0-9a-fA-F]{56}$/, {message: 'Policy ID must be a 56-character hexadecimal string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.assets_whitelist, {onDelete: 'CASCADE'})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Matches } from 'class-validator';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'assets_whitelist' })\nexport class AssetsWhitelistEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'policyId' })\n  @Column({ type: 'varchar', length: 56, nullable: false })\n  @Matches(/^[0-9a-fA-F]{56}$/, {\n    message: 'Policy ID must be a 56-character hexadecimal string',\n  })\n  policy_id: string;\n\n  @Expose({ name: 'countCapMin' })\n  @Column({\n    name: 'asset_count_cap_min',\n    type: 'integer',\n    nullable: true,\n  })\n  asset_count_cap_min?: number;\n\n  @Expose({ name: 'countCapMax' })\n  @Column({\n    name: 'asset_count_cap_max',\n    type: 'integer',\n    nullable: true,\n  })\n  asset_count_cap_max?: number;\n\n  @ManyToOne(() => Vault, (vault: Vault) => vault.assets_whitelist, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'vault_id' })\n  public vault: Vault;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(signatureData: LoginReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Login user', description: 'User login successful', status: 200})@HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signatureData\n                                            \n                                                            LoginReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApiDoc } from '@/decorators/api-doc.decorator';\n\nimport { AuthService } from './auth.service';\nimport { LoginReq } from './dto/login.req';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @ApiDoc({\n    summary: 'Login user',\n    description: 'User login successful',\n    status: 200,\n  })\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  async login(@Body() signatureData: LoginReq) {\n    return this.authService.verifySignature(signatureData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      request['user'] = await this.jwtService.verifyAsync(token, {\n        secret: this.configService.get('JWT_SECRET'),\n      });\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { User } from '@/database/user.entity';\nimport { UsersModule } from '../users/users.module';\n\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [UsersModule, TypeOrmModule.forFeature([User])],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                verifySignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifySignature\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifySignature(signatureData: LoginReq)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signatureData\n                                            \n                                                            LoginReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'buffer';\n\nimport { COSESign1, COSEKey, Label, Int, BigNum } from '@emurgo/cardano-message-signing-nodejs';\nimport { Ed25519Signature, PublicKey, Address, RewardAddress } from '@emurgo/cardano-serialization-lib-nodejs';\nimport { transformImageToUrl } from '@/helpers';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { generateUsername } from 'unique-username-generator';\n\nimport { UsersService } from '../users/users.service';\n\nimport { LoginReq } from './dto/login.req';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService\n  ) {}\n\n  async verifySignature(signatureData: LoginReq) {\n    try {\n      const { signature, stakeAddress, walletAddress } = signatureData;\n\n      // Verify the signature\n      const decoded = COSESign1.from_bytes(Buffer.from(signature.signature, 'hex'));\n      const headermap = decoded.headers().protected().deserialized_headers();\n      const addressHex = Buffer.from(headermap.header(Label.new_text('address')).to_bytes())\n        .toString('hex')\n        .substring(4);\n      const address = Address.from_bytes(Buffer.from(addressHex, 'hex'));\n\n      const key = COSEKey.from_bytes(Buffer.from(signature.key, 'hex'));\n      const pubKeyBytes = key.header(Label.new_int(Int.new_negative(BigNum.from_str('2')))).as_bytes();\n      const publicKey = PublicKey.from_bytes(pubKeyBytes);\n\n      const payload = decoded.payload();\n      const sig = Ed25519Signature.from_bytes(decoded.signature());\n      const signedData = decoded.signed_data().to_bytes();\n\n      const signerStakeAddrBech32 = RewardAddress.from_address(address).to_address().to_bech32();\n\n      const utf8Payload = Buffer.from(payload).toString('utf8');\n      const expectedMessage = `account: ${signerStakeAddrBech32}`;\n\n      const isVerified = publicKey.verify(signedData, sig);\n      const messageMatches = utf8Payload === expectedMessage;\n      const addressMatches = signerStakeAddrBech32 === stakeAddress;\n\n      if (!isVerified || !messageMatches || !addressMatches) {\n        return {\n          success: false,\n          message: 'Signature verification failed',\n        };\n      }\n\n      // Find user in database by wallet address\n      let user = await this.usersService.findByAddress(stakeAddress);\n\n      if (!user) {\n        try {\n          user = await this.usersService.create({\n            address: walletAddress,\n            stake_address: stakeAddress,\n            name: generateUsername(),\n          });\n        } catch (error) {\n          console.error('Error creating new user:', error);\n          return {\n            success: false,\n            message: 'Failed to create new user',\n          };\n        }\n      }\n      if (!user?.address || user?.address?.includes('stake1')) {\n        await this.usersService.updateUserAddress(user.id, walletAddress);\n      }\n      // Generate JWT token\n      const jwtPayload = {\n        sub: user.id,\n        address: user.address,\n        name: user.name,\n      };\n\n      const profileImage = transformImageToUrl(user.profile_image);\n      const bannerImage = transformImageToUrl(user.banner_image);\n\n      return {\n        success: true,\n        message: '✅ Authentication success!',\n        accessToken: await this.jwtService.signAsync(jwtPayload),\n        user: {\n          id: user.id,\n          name: user.name,\n          address: user.address,\n          description: user.description,\n          tvl: user.tvl,\n          totalVaults: user.total_vaults,\n          gains: user.gains,\n          profileImage: profileImage,\n          bannerImage: bannerImage,\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || 'Authentication failed',\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AwsController.html":{"url":"controllers/AwsController.html","title":"controller - AwsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AwsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/aws_bucket/aws.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getCsvFile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getImageFile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleCsvFiles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getCsvFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCsvFile(id, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get csv from bucket', description: 'Forward csv directly to frontend', status: 200})@Get('/csv/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getImageFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImageFile(id, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get image from bucket', description: 'Forward image directly to frontend', status: 200})@Get('/image/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleCsvFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCsvFiles(file: Express.Multer.File, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Validate and parcing CSV', description: 'Image upload successfully', status: 200})@UseInterceptors(undefined)@UseGuards(AuthGuard)@Post('/handle-csv')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Upload image files', description: 'Image upload successfully', status: 200})@UseInterceptors(undefined)@Post('/upload')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  ClassSerializerInterceptor,\n  Controller,\n  FileTypeValidator,\n  Get,\n  Logger,\n  MaxFileSizeValidator,\n  Param,\n  ParseFilePipe,\n  Post,\n  Req,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Express, Response, Request } from 'express';\nimport { Multer } from 'multer';\n\nimport { ApiDoc } from '@/decorators/api-doc.decorator';\n\nimport { AuthGuard } from '../auth/auth.guard';\n\nimport { AwsService } from './aws.service';\n\nexport const mbMultiplication = 1024 * 1024;\n\n@ApiTags('files')\n@Controller('')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AwsController {\n  private readonly logger = new Logger(AwsController.name);\n  constructor(private readonly awsService: AwsService) {}\n\n  @ApiDoc({\n    summary: 'Upload image files',\n    description: 'Image upload successfully',\n    status: 200,\n  })\n  @UseInterceptors(FileInterceptor('image'))\n  @Post('/upload')\n  @UseGuards(AuthGuard)\n  async uploadFile(\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }), // 5mb\n          new FileTypeValidator({ fileType: 'image/*' }),\n        ],\n      })\n    )\n    file: Express.Multer.File,\n    @Req() req: Request\n  ) {\n    const { host } = req?.headers;\n    return await this.awsService.uploadImage(file, host);\n  }\n\n  @ApiDoc({\n    summary: 'Get image from bucket',\n    description: 'Forward image directly to frontend',\n    status: 200,\n  })\n  @Get('/image/:id')\n  async getImageFile(@Param('id') id, @Res() res: Response) {\n    const response = await this.awsService.getImage(id);\n    res.setHeader('Content-Type', response.headers['content-type']);\n    res.setHeader('Cache-Control', 'public, max-age=3600');\n    response.data.pipe(res);\n  }\n\n  @ApiDoc({\n    summary: 'Get csv from bucket',\n    description: 'Forward csv directly to frontend',\n    status: 200,\n  })\n  @Get('/csv/:id')\n  async getCsvFile(@Param('id') id, @Res() res: Response) {\n    const response = await this.awsService.getCsv(id);\n    res.setHeader('Content-Type', response.headers['content-type']);\n    res.setHeader('Cache-Control', 'public, max-age=3600');\n    response.data.pipe(res);\n  }\n\n  @ApiDoc({\n    summary: 'Validate and parcing CSV',\n    description: 'Image upload successfully',\n    status: 200,\n  })\n  @UseInterceptors(FileInterceptor('csv'))\n  @UseGuards(AuthGuard)\n  @Post('/handle-csv')\n  async handleCsvFiles(\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }),\n          new FileTypeValidator({ fileType: 'text/csv' }),\n        ],\n      })\n    )\n    file: Express.Multer.File,\n    @Req() req: Request\n  ) {\n    // todo need to validate and parse csv and then return list of asset whitelist id's\n    this.logger.log('csv file received', file);\n    const { host } = req?.headers;\n\n    return await this.awsService.uploadCSV(file, host);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AwsModule.html":{"url":"modules/AwsModule.html","title":"module - AwsModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_providers\n\n\n\ncluster_AwsModule_exports\n\n\n\n\nAwsService \n\nAwsService \n\n\n\nAwsModule\n\nAwsModule\n\nAwsService  -->\n\nAwsModule->AwsService \n\n\n\n\n\nAwsService\n\nAwsService\n\nAwsModule -->\n\nAwsService->AwsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/aws_bucket/aws.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AwsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AwsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AwsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { FileEntity } from '@/database/file.entity';\n\nimport { AwsController } from './aws.controller';\nimport { AwsService } from './aws.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([FileEntity]),\n    HttpModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        global: true,\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: '1d' },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AwsController],\n  providers: [AwsService],\n  exports: [AwsService],\n})\nexport class AwsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsService.html":{"url":"injectables/AwsService.html","title":"injectable - AwsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/aws_bucket/aws.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bucketName\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCsv\n                            \n                            \n                                    Async\n                                getImage\n                            \n                            \n                                    Async\n                                getPreSignedURL\n                            \n                            \n                                getS3\n                            \n                            \n                                    Async\n                                uploadCSV\n                            \n                            \n                                    Async\n                                uploadImage\n                            \n                            \n                                    Async\n                                uploadS3\n                            \n                            \n                                    Private\n                                    Async\n                                validateCsvAddresses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/aws_bucket/aws.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCsv\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCsv(bucketKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(bucketKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPreSignedURL\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPreSignedURL(bucketName: string, key: string, contentType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contentType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getS3\n                        \n                    \n                \n            \n            \n                \ngetS3()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadCSV(file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadImage(file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadS3\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadS3(file, name, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateCsvAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCsvAddresses(buffer: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bucketName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.AWS_BUCKET_NAME\n                    \n                \n                    \n                        \n                                Defined in src/modules/aws_bucket/aws.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AwsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/aws_bucket/aws.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AWS.S3\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/aws_bucket/aws.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as process from 'process';\n\nimport { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport AWS, { S3 } from 'aws-sdk';\nimport { ManagedUpload } from 'aws-sdk/clients/s3';\nimport * as csv from 'csv-parse';\nimport { Repository } from 'typeorm';\nimport { v4 as uuid } from 'uuid';\n\nimport { FileEntity } from '@/database/file.entity';\n\n@Injectable()\nexport class AwsService {\n  private s3: AWS.S3;\n  private bucketName = process.env.AWS_BUCKET_NAME;\n\n  private readonly logger = new Logger(AwsService.name);\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n    private readonly httpService: HttpService\n  ) {}\n  getS3() {\n    if (this.s3) {\n      return this.s3;\n    }\n    const s3 = new S3({\n      region: 'auto',\n      endpoint: process.env.AWS_BUCKET_URL, // URL for R2\n      signatureVersion: 'v4',\n      credentials: {\n        accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n        secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n      },\n      s3ForcePathStyle: true,\n    });\n    this.s3 = s3;\n    return s3;\n  }\n\n  async uploadS3(file, name, type): Promise {\n    const s3 = this.getS3();\n    const params = {\n      Bucket: 'static',\n      Key: name,\n      Body: file,\n      ContentType: type,\n      ACL: 'public-read',\n    };\n    return new Promise((resolve, reject) => {\n      s3.upload(params, (err, data) => {\n        if (err) {\n          Logger.error(err);\n          reject(err.message);\n        }\n        resolve(data as ManagedUpload.SendData);\n      });\n    });\n  }\n\n  async getPreSignedURL(bucketName: string, key: string, contentType: string) {\n    const s3 = this.getS3();\n    const params = {\n      Bucket: bucketName,\n      Key: key,\n      Expires: 3600,\n    };\n\n    return s3.getSignedUrlPromise('getObject', params);\n  }\n\n  async getImage(bucketKey: string) {\n    const preSignedUrl = await this.getPreSignedURL(this.bucketName, bucketKey, 'image/jpeg');\n    return this.httpService.get(preSignedUrl, { responseType: 'stream' }).toPromise();\n  }\n\n  async getCsv(bucketKey: string) {\n    const preSignedUrl = await this.getPreSignedURL(this.bucketName, bucketKey, 'text/csv');\n    return this.httpService.get(preSignedUrl, { responseType: 'stream' }).toPromise();\n  }\n\n  private async validateCsvAddresses(buffer: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      const addresses: string[] = [];\n      const cardanoAddressRegex = /^addr1[a-zA-Z0-9]{98}$/;\n\n      csv\n        .parse(buffer.toString(), {\n          columns: false,\n          skip_empty_lines: true,\n          trim: true,\n        })\n        .on('data', data => {\n          const address = data[0];\n          if (!address || typeof address !== 'string' || !cardanoAddressRegex.test(address)) {\n            reject(\n              new BadRequestException(\n                `Invalid Cardano address format found in CSV: ${address}. Address must be a valid Cardano Shelley address starting with 'addr1' and containing 98 alphanumeric characters`\n              )\n            );\n          }\n          addresses.push(address);\n        })\n        .on('end', () => {\n          if (addresses.length === 0) {\n            reject(new BadRequestException('CSV file is empty or contains no valid addresses'));\n          }\n          resolve();\n        })\n        .on('error', error => {\n          reject(new BadRequestException(`Error parsing CSV: ${error.message}`));\n        });\n    });\n  }\n\n  async uploadCSV(file: Express.Multer.File, host: string) {\n    try {\n      // Validate CSV content before uploading\n      await this.validateCsvAddresses(file.buffer);\n\n      const uploadResult = await this.uploadS3(file.buffer, `${uuid()}`, file.mimetype);\n      const protocol = process.env.NODE_ENV === 'dev' ? 'http://' : 'https://';\n      if (uploadResult) {\n        const newFile = this.fileRepository.create({\n          file_key: uploadResult.Key,\n          file_url: `${protocol}${host}/api/v1/csv/${uploadResult.Key}`,\n          file_name: file.originalname,\n          file_type: file.mimetype,\n        });\n        await this.fileRepository.save(newFile);\n        if (newFile) return newFile;\n      }\n    } catch (error) {\n      if (error instanceof BadRequestException) {\n        throw error; // Re-throw validation errors\n      }\n      this.logger.error('Error uploading CSV file:', error);\n      throw new BadRequestException('Failed to upload CSV file');\n    }\n  }\n\n  async uploadImage(file: Express.Multer.File, host: string) {\n    try {\n      const uploadResult = await this.uploadS3(file.buffer, `${uuid()}`, file.mimetype);\n      const protocol = process.env.NODE_ENV === 'dev' ? 'http://' : 'https://';\n      if (uploadResult) {\n        const newFile = this.fileRepository.create({\n          file_key: uploadResult.Key,\n          file_url: `${protocol}${host}/api/v1/image/${uploadResult.Key}`,\n          file_name: file.originalname,\n          file_type: file.mimetype,\n        });\n        await this.fileRepository.save(newFile);\n        if (newFile) return newFile;\n      }\n    } catch (error) {\n      this.logger.error('Error uploading image file:', error);\n      throw new BadRequestException('Failed to upload image file');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainAddressResponse.html":{"url":"interfaces/BlockchainAddressResponse.html","title":"interface - BlockchainAddressResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainAddressResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            utxo_count\n                                        \n                                \n                                \n                                        \n                                            utxos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        utxo_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        utxo_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        utxos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        utxos:         BlockchainUtxo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockchainUtxo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainContractResponse.html":{"url":"interfaces/BlockchainContractResponse.html","title":"interface - BlockchainContractResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainContractResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            lastUpdate\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BlockchainController.html":{"url":"controllers/BlockchainController.html","title":"controller - BlockchainController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BlockchainController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                blockchain\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                burnVault\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleWebhook\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                scannerWh\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                submitTransaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateVaultMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(params: BuildTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('transaction/build')@ApiOperation({summary: 'Build a Cardano transaction'})@ApiResponse({status: 200, description: 'Transaction built successfully', type: TransactionBuildResponseDto})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            BuildTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        burnVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnVault(req, data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('burn-vault')@ApiOperation({summary: 'Build a Cardano transaction for burn vault'})@ApiResponse({status: 200, description: 'Transaction built successfully', type: TransactionBuildResponseDto})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        handleWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleWebhook(event: BlockchainWebhookDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('tx-webhook')@HttpCode(200)@ApiOperation({summary: 'Webhook endpoint for blockchain events'})@ApiResponse({status: 200, description: 'Blockchain event processed successfully', type: Object})@ApiResponse({status: 401, description: 'Invalid webhook signature'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            BlockchainWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        scannerWh\n                        \n                    \n                \n            \n            \n                \n                        \n                    scannerWh(event: any, _req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('scanner-wh')@HttpCode(200)@ApiOperation({summary: 'Webhook endpoint for scanner events'})@ApiResponse({status: 200, description: 'Blockchain event processed successfully', type: Object})@ApiResponse({status: 401, description: 'Invalid webhook signature'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(params: SubmitTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('transaction/submit')@ApiOperation({summary: 'Submit a signed Cardano transaction'})@ApiResponse({status: 200, description: 'Transaction submitted successfully', type: TransactionSubmitResponseDto})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            SubmitTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updateVaultMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateVaultMetadata(params: VaultConfig)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('vault/update')@ApiOperation({summary: 'Update vault metadata'})@ApiResponse({status: 200, description: 'Vault updated successfully', type: Object})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            VaultConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards, HttpCode, Request, UnauthorizedException } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport {\n  BuildTransactionDto,\n  SubmitTransactionDto,\n  TransactionBuildResponseDto,\n  TransactionSubmitResponseDto,\n} from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { VaultInsertingService } from './vault-inserting.service';\nimport { VaultConfig, VaultManagingService } from './vault-managing.service';\nimport { WebhookVerificationService } from './webhook-verification.service';\n\nimport { AuthGuard } from '@/modules/auth/auth.guard';\n\n@ApiTags('blockchain')\n@Controller('blockchain')\nexport class BlockchainController {\n  constructor(\n    private readonly transactionService: VaultInsertingService,\n    private readonly webhookVerificationService: WebhookVerificationService,\n    private readonly vaultManagingService: VaultManagingService\n  ) {}\n\n  @Post('transaction/build')\n  @ApiOperation({ summary: 'Build a Cardano transaction' })\n  @ApiResponse({\n    status: 200,\n    description: 'Transaction built successfully',\n    type: TransactionBuildResponseDto,\n  })\n  @UseGuards(AuthGuard)\n  async buildTransaction(@Body() params: BuildTransactionDto): Promise {\n    return this.transactionService.buildTransaction(params);\n  }\n  @Post('burn-vault')\n  @ApiOperation({ summary: 'Build a Cardano transaction for burn vault' })\n  @ApiResponse({\n    status: 200,\n    description: 'Transaction built successfully',\n    type: TransactionBuildResponseDto,\n  })\n  @UseGuards(AuthGuard)\n  async burnVault(@Request() req, @Body() data: any): Promise {\n    const userId = req.user.sub;\n    return this.transactionService.handleBurnVault(userId, data.vaultId);\n  }\n\n  @Post('vault/update')\n  @ApiOperation({ summary: 'Update vault metadata' })\n  @ApiResponse({\n    status: 200,\n    description: 'Vault updated successfully',\n    type: Object,\n  })\n  @UseGuards(AuthGuard)\n  async updateVaultMetadata(@Body() params: VaultConfig) {\n    return this.vaultManagingService.updateVaultMetadataTx(params);\n  }\n\n  @Post('transaction/submit')\n  @ApiOperation({ summary: 'Submit a signed Cardano transaction' })\n  @ApiResponse({\n    status: 200,\n    description: 'Transaction submitted successfully',\n    type: TransactionSubmitResponseDto,\n  })\n  @UseGuards(AuthGuard)\n  async submitTransaction(@Body() params: SubmitTransactionDto): Promise {\n    return this.transactionService.submitTransaction(params);\n  }\n\n  @Post('scanner-wh')\n  @HttpCode(200)\n  @ApiOperation({ summary: 'Webhook endpoint for scanner events' })\n  @ApiResponse({\n    status: 200,\n    description: 'Blockchain event processed successfully',\n    type: Object,\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Invalid webhook signature',\n  })\n  async scannerWh(@Body() event: any, @Request() _req) {\n    try {\n      await this.transactionService.handleScannerEvent(event);\n\n      return {\n        status: 'success',\n        details: 'txSummary',\n      };\n    } catch (error) {\n      console.error('Error processing webhook:', error);\n      return {\n        status: 'error',\n        details: error.message,\n      };\n    }\n  }\n\n  @Post('tx-webhook')\n  @HttpCode(200)\n  @ApiOperation({ summary: 'Webhook endpoint for blockchain events' })\n  @ApiResponse({\n    status: 200,\n    description: 'Blockchain event processed successfully',\n    type: Object,\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Invalid webhook signature',\n  })\n  async handleWebhook(@Body() event: BlockchainWebhookDto, @Request() req): Promise {\n    const signature = req.headers['blockfrost-signature'];\n\n    // Get raw body from the request\n    let rawBody: string;\n    if (Buffer.isBuffer(req.body)) {\n      // If body-parser.raw() was used\n      rawBody = req.body.toString('utf8');\n      // Parse the raw body into our DTO\n      event = JSON.parse(rawBody);\n    } else {\n      // Fallback to stringifying the parsed body\n      rawBody = JSON.stringify(req.body);\n    }\n\n    // Log headers and event info for debugging\n    console.log('Received webhook event:', {\n      signature,\n      timestamp: req.headers['blockfrost-timestamp'],\n      eventId: event.id,\n      webhookId: event.webhook_id,\n      rawBodyLength: rawBody.length,\n      rawBodyPreview: rawBody.substring(0, 100) + '...',\n    });\n\n    // Verify webhook signature using the raw body\n    const isValid = this.webhookVerificationService.verifySignature(rawBody, signature);\n    if (!isValid) {\n      console.error('Webhook signature verification failed:', {\n        signature,\n        eventId: event.id,\n        webhookId: event.webhook_id,\n        rawBodyPreview: rawBody.substring(0, 100) + '...',\n      });\n      throw new UnauthorizedException('Invalid webhook signature');\n    }\n\n    // Process the event\n    try {\n      await this.transactionService.handleBlockchainEvent(event);\n\n      // Return transaction summary\n      const txSummary = event.payload.map(txEvent => ({\n        txHash: txEvent.tx.hash,\n        blockHeight: txEvent.tx.block_height,\n        timestamp: txEvent.tx.block_time,\n        status: txEvent.tx.valid_contract ? 'confirmed' : 'failed',\n        transfers: txEvent.outputs.map(output => ({\n          recipient: output.address,\n          assets: output.amount.map(asset => ({\n            unit: asset.unit,\n            quantity: asset.quantity,\n            type: asset.unit === 'lovelace' ? 'ADA' : asset.quantity === '1' ? 'NFT' : 'TOKEN',\n          })),\n        })),\n      }));\n\n      return {\n        status: 'success',\n        details: txSummary,\n      };\n    } catch (error) {\n      console.error('Error processing webhook:', error);\n      return {\n        status: 'error',\n        details: error.message,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_BlockchainModule_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTransactionsModule->BlockchainModule\n\n\n\n\n\nBlockchainScannerService \n\nBlockchainScannerService \n\nBlockchainScannerService  -->\n\nBlockchainModule->BlockchainScannerService \n\n\n\n\n\nBlockchainService \n\nBlockchainService \n\nBlockchainService  -->\n\nBlockchainModule->BlockchainService \n\n\n\n\n\nVaultInsertingService \n\nVaultInsertingService \n\nVaultInsertingService  -->\n\nBlockchainModule->VaultInsertingService \n\n\n\n\n\nVaultManagingService \n\nVaultManagingService \n\nVaultManagingService  -->\n\nBlockchainModule->VaultManagingService \n\n\n\n\n\nWebhookVerificationService \n\nWebhookVerificationService \n\nWebhookVerificationService  -->\n\nBlockchainModule->WebhookVerificationService \n\n\n\n\n\nAnvilApiService\n\nAnvilApiService\n\nBlockchainModule -->\n\nAnvilApiService->BlockchainModule\n\n\n\n\n\nBlockchainScannerService\n\nBlockchainScannerService\n\nBlockchainModule -->\n\nBlockchainScannerService->BlockchainModule\n\n\n\n\n\nBlockchainService\n\nBlockchainService\n\nBlockchainModule -->\n\nBlockchainService->BlockchainModule\n\n\n\n\n\nVaultInsertingService\n\nVaultInsertingService\n\nBlockchainModule -->\n\nVaultInsertingService->BlockchainModule\n\n\n\n\n\nVaultManagingService\n\nVaultManagingService\n\nBlockchainModule -->\n\nVaultManagingService->BlockchainModule\n\n\n\n\n\nWebhookVerificationService\n\nWebhookVerificationService\n\nBlockchainModule -->\n\nWebhookVerificationService->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnvilApiService\n                        \n                        \n                            BlockchainScannerService\n                        \n                        \n                            BlockchainService\n                        \n                        \n                            VaultInsertingService\n                        \n                        \n                            VaultManagingService\n                        \n                        \n                            WebhookVerificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BlockchainController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockchainScannerService\n                        \n                        \n                            BlockchainService\n                        \n                        \n                            VaultInsertingService\n                        \n                        \n                            VaultManagingService\n                        \n                        \n                            WebhookVerificationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsModule } from '../offchain-tx/transactions.module';\n\nimport { AnvilApiService } from './anvil-api.service';\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainController } from './blockchain.controller';\nimport { BlockchainService } from './blockchain.service';\nimport { VaultInsertingService } from './vault-inserting.service';\nimport { VaultManagingService } from './vault-managing.service';\nimport { WebhookVerificationService } from './webhook-verification.service';\n\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    HttpModule,\n    TransactionsModule,\n    TypeOrmModule.forFeature([Vault]),\n  ],\n  controllers: [BlockchainController],\n  providers: [\n    AnvilApiService,\n    BlockchainService,\n    VaultInsertingService,\n    BlockchainScannerService,\n    WebhookVerificationService,\n    VaultManagingService,\n  ],\n  exports: [\n    BlockchainService,\n    VaultInsertingService,\n    BlockchainScannerService,\n    WebhookVerificationService,\n    VaultManagingService,\n  ],\n})\nexport class BlockchainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainScannerService.html":{"url":"injectables/BlockchainScannerService.html","title":"injectable - BlockchainScannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainScannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                scannerKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                scannerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkMonitoringAddress\n                            \n                            \n                                    Async\n                                getAddressBalance\n                            \n                            \n                                    Async\n                                getAddressTransactions\n                            \n                            \n                                    Async\n                                getAddressUtxos\n                            \n                            \n                                    Async\n                                getContractState\n                            \n                            \n                                    Async\n                                getTokenInfo\n                            \n                            \n                                    Async\n                                getTransactionDetails\n                            \n                            \n                                    Private\n                                isRetryableError\n                            \n                            \n                                    Private\n                                    Async\n                                makePostRequest\n                            \n                            \n                                    Private\n                                    Async\n                                makeRequest\n                            \n                            \n                                    Async\n                                registerTrackingAddress\n                            \n                            \n                                    Private\n                                    Async\n                                withRetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkMonitoringAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkMonitoringAddress(vaultAddress: string, vaultName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                vaultAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                vaultName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddressBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressBalance(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddressTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressTransactions(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddressUtxos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressUtxos(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getContractState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContractState(contractAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contractAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTokenInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokenInfo(policyId: string, assetName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                policyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionDetails(txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isRetryableError\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRetryableError(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makePostRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    makePostRequest(endpoint: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeRequest(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerTrackingAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTrackingAddress(vaultAddress: string, vaultName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                vaultAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                vaultName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        withRetry\n                        \n                    \n                \n            \n            \n                \n                        \n                    withRetry(operation: () => void, options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:81\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BlockchainScannerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scannerKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scannerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { setTimeout } from 'timers/promises';\n\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport axios from 'axios';\n\nimport {\n  BlockchainTransactionResponse,\n  BlockchainAddressResponse,\n  BlockchainContractResponse,\n  BlockchainTokenResponse,\n  BlockchainTransactionListResponse,\n  BlockchainTransactionListItem,\n} from '../../../../types/blockchain.types';\n\nconst DEFAULT_MAX_RETRIES = 5;\nconst DEFAULT_INITIAL_DELAY_MS = 1000; // 1 second\nconst DEFAULT_MAX_DELAY_MS = 30000; // 30 seconds\n\n@Injectable()\nexport class BlockchainScannerService {\n  private readonly logger = new Logger(BlockchainScannerService.name);\n  private readonly scannerUrl: string;\n  private readonly scannerKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.scannerUrl = this.configService.get('SCANNER_URL');\n    this.scannerKey = this.configService.get('SCANNER_KEY');\n  }\n\n  private async makeRequest(endpoint: string): Promise {\n    this.logger.log(`Scanner URL ${this.scannerUrl}${endpoint}`);\n    this.logger.log(`Scanner KEY ${this.scannerKey}`);\n    try {\n      const response = await axios.get(`${this.scannerUrl}${endpoint}`, {\n        headers: {\n          Authorization: `Bearer ${this.scannerKey}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      this.logger.error(`Scanner request failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  private async makePostRequest(\n    endpoint: string,\n    payload: {\n      address: string;\n    }\n  ): Promise {\n    try {\n      const response = await axios.post(\n        `${this.scannerUrl}${endpoint}`,\n        {\n          ...payload,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.scannerKey}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      this.logger.error(`Scanner request failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  async registerTrackingAddress(vaultAddress: string = '', vaultName: string) {\n    const payload = {\n      address: vaultAddress,\n      name: vaultName,\n      description: 'Monitoring vault address',\n    };\n    return this.makePostRequest(`/monitoring/addresses`, payload);\n  }\n\n  private async withRetry(\n    operation: () => Promise,\n    options: {\n      maxRetries?: number;\n      initialDelayMs?: number;\n      maxDelayMs?: number;\n      shouldRetry?: (error: Error) => boolean;\n    } = {}\n  ): Promise {\n    const {\n      maxRetries = DEFAULT_MAX_RETRIES,\n      initialDelayMs = DEFAULT_INITIAL_DELAY_MS,\n      maxDelayMs = DEFAULT_MAX_DELAY_MS,\n      shouldRetry = () => true,\n    } = options;\n\n    let lastError: Error | null = null;\n\n    for (let attempt = 0; attempt = 500;\n    }\n    return true; // Retry on other errors by default\n  }\n\n  async checkMonitoringAddress(vaultAddress: string = '', vaultName: string = ''): Promise {\n    try {\n      // First, check if the address is already being monitored\n      await this.makeRequest(`/monitoring/addresses/${vaultAddress}`);\n      return true;\n    } catch (error) {\n      if (!vaultName) {\n        return false;\n      }\n\n      this.logger.log(`Address ${vaultAddress} is not registered, attempting to register...`);\n\n      try {\n        await this.withRetry(() => this.registerTrackingAddress(vaultAddress, vaultName), {\n          shouldRetry: err => {\n            // Only retry on network or server errors\n            return this.isRetryableError(err);\n          },\n        });\n        this.logger.log(`Successfully registered address ${vaultAddress} for monitoring`);\n        return true;\n      } catch (error) {\n        this.logger.error(`Failed to register address ${vaultAddress} for monitoring after retries`, error);\n        return false;\n      }\n    }\n  }\n\n  async getAddressBalance(address: string): Promise {\n    return this.makeRequest(`/blockchain/addresses/${address}/balance`);\n  }\n\n  async getAddressTransactions(address: string): Promise {\n    const response = await this.makeRequest(\n      `/blockchain/addresses/${address}/transactions`\n    );\n    return response?.transactions || [];\n  }\n\n  async getTransactionDetails(txHash: string): Promise {\n    return this.makeRequest(`/blockchain/transactions/${txHash}`);\n  }\n\n  async getAddressUtxos(address: string): Promise {\n    return this.makeRequest(`/blockchain/addresses/${address}/utxos`);\n  }\n\n  async getContractState(contractAddress: string): Promise {\n    return this.makeRequest(`/blockchain/contracts/${contractAddress}/state`);\n  }\n\n  async getTokenInfo(policyId: string, assetName: string): Promise {\n    return this.makeRequest(`/blockchain/tokens/${policyId}/${assetName}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                anvilApi\n                            \n                            \n                                    Private\n                                    Readonly\n                                anvilApiKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    Async\n                                submitTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(txData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Builds a transaction using Anvil API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                txData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Transaction data to be built\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Object containing complete and partial transaction CBOR\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(signedTx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Submits a signed transaction to the blockchain\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signedTx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Signed transaction data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Transaction hash\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        anvilApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        anvilApiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BlockchainService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nexport enum OnchainTransactionStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  FAILED = 'failed',\n  NOT_FOUND = 'not_found',\n}\n\nexport interface TransactionBuildResponse {\n  complete: string;\n  partial: string;\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class BlockchainService {\n  private readonly logger = new Logger(BlockchainService.name);\n  private readonly anvilApi: string;\n  private readonly anvilApiKey: string;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService\n  ) {\n    this.anvilApi = this.configService.get('ANVIL_API_URL') + '/services';\n    this.anvilApiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  /**\n   * Builds a transaction using Anvil API\n   * @param txData Transaction data to be built\n   * @returns Object containing complete and partial transaction CBOR\n   */\n  async buildTransaction(txData: any): Promise {\n    try {\n      const headers = {\n        'x-api-key': this.anvilApiKey,\n        'Content-Type': 'application/json',\n      };\n\n      // Build the transaction\n      const contractDeployed = await fetch(`${this.anvilApi}/transactions/build`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(txData),\n      });\n\n      const buildResponse = await contractDeployed.json();\n\n      console.log('error', buildResponse);\n\n      if (!buildResponse.complete) {\n        throw new Error('Failed to build complete transaction' + JSON.stringify(buildResponse));\n      }\n\n      return buildResponse;\n    } catch (error) {\n      this.logger.error('Error building transaction', error);\n      throw new Error(`Failed to build transaction: ${error.message}`);\n    }\n  }\n\n  /**\n   * Submits a signed transaction to the blockchain\n   * @param signedTx Signed transaction data\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: {\n    transaction: string;\n    signatures?: string[];\n  }): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.httpService.post(\n          `${this.anvilApi}/transactions/submit`,\n          {\n            transaction: signedTx.transaction,\n            signatures: signedTx.signatures || [],\n          },\n          {\n            headers: {\n              'x-api-key': this.anvilApiKey,\n              'Content-Type': 'application/json',\n            },\n          }\n        )\n      );\n\n      if (!response.data.txHash) {\n        throw new Error('No transaction hash returned from blockchain');\n      }\n\n      this.logger.log(`Transaction submitted successfully: ${response.data.txHash}`);\n      return { txHash: response.data.txHash };\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTokenResponse.html":{"url":"interfaces/BlockchainTokenResponse.html","title":"interface - BlockchainTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assetName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            policyId\n                                        \n                                \n                                \n                                        \n                                            totalSupply\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSupply\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSupply:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTransactionListItem.html":{"url":"interfaces/BlockchainTransactionListItem.html","title":"interface - BlockchainTransactionListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTransactionListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            block_time\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTransactionListResponse.html":{"url":"interfaces/BlockchainTransactionListResponse.html","title":"interface - BlockchainTransactionListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTransactionListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            transactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactions:         BlockchainTransactionListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockchainTransactionListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTransactionResponse.html":{"url":"interfaces/BlockchainTransactionResponse.html","title":"interface - BlockchainTransactionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTransactionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            block\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            inputs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output_amount\n                                        \n                                \n                                \n                                        \n                                            outputs\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            valid_contract\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputs:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output_amount:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputs:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valid_contract\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valid_contract:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainUtxo.html":{"url":"interfaces/BlockchainUtxo.html","title":"interface - BlockchainUtxo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainUtxo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            data_hash\n                                        \n                                \n                                \n                                        \n                                            inline_datum\n                                        \n                                \n                                \n                                        \n                                            output_index\n                                        \n                                \n                                \n                                        \n                                            reference_script_hash\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         Asset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Asset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data_hash:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inline_datum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inline_datum:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_script_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_script_hash:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockchainWebhookDto.html":{"url":"classes/BlockchainWebhookDto.html","title":"class - BlockchainWebhookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockchainWebhookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                api_version\n                            \n                            \n                                    \n                                    \n                                    \n                                created\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                payload\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                webhook_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        api_version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Version of Event objects', example: 1})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:292\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unix timestamp when the event was detected', example: 1647611209})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:284\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier of the webhook request', example: 'cd153e0a-2561-4761-9fa1-98b62937438e'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:268\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTransactionEvent[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of transaction events', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:310\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of the event', example: 'transaction'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:300\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        webhook_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Identifier of the Webhook', example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:276\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostAmount.html":{"url":"classes/BlockfrostAmount.html","title":"class - BlockfrostAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The quantity of the unit', example: '1664454750'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unit of the value', example: 'lovelace'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTransaction.html":{"url":"classes/BlockfrostTransaction.html","title":"class - BlockfrostTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                block\n                            \n                            \n                                    \n                                    \n                                    \n                                block_height\n                            \n                            \n                                    \n                                    \n                                    \n                                block_time\n                            \n                            \n                                    \n                                    \n                                    \n                                deposit\n                            \n                            \n                                    \n                                    \n                                    \n                                fees\n                            \n                            \n                                    \n                                    \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                    \n                                index\n                            \n                            \n                                    \n                                    \n                                    \n                                invalid_before\n                            \n                            \n                                    \n                                    \n                                    \n                                invalid_hereafter\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                output_amount\n                            \n                            \n                                    \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                slot\n                            \n                            \n                                    \n                                    \n                                    \n                                utxo_count\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                valid_contract\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        block\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Block hash', example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        block_height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Block number', example: 7012249})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        block_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Block creation time', example: 1647611205})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deposit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Deposit', example: '0'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Fees for the transaction', example: '174345'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:178\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash', example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction index within the block', example: 0})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        invalid_before\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Invalid before slot', example: undefined})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        invalid_hereafter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Invalid after slot', example: 56051594})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        output_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostAmount[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Output amounts', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Size in bytes', example: 426})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        slot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Slot number', example: 56044914})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        utxo_count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Count of UTXOs', example: 4})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:218\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        valid_contract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether the contract is valid', example: true})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:226\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTransactionEvent.html":{"url":"classes/BlockfrostTransactionEvent.html","title":"class - BlockfrostTransactionEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTransactionEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                inputs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                outputs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                tx\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        inputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTxInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction inputs', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:248\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTxOutput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction outputs', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:258\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        tx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTransaction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction details', type: BlockfrostTransaction})@IsObject()@ValidateNested()@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:238\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTxInput.html":{"url":"classes/BlockfrostTxInput.html","title":"class - BlockfrostTxInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTxInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                collateral\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                data_hash\n                            \n                            \n                                    \n                                    \n                                    \n                                output_index\n                            \n                            \n                                    \n                                    \n                                    \n                                tx_hash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Input address', example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostAmount[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Input amounts', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        collateral\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether this is a collateral input', example: false})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        data_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The hash of the transaction data', example: undefined})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        output_index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Index of the output', example: 0})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tx_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Hash of the transaction', example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTxOutput.html":{"url":"classes/BlockfrostTxOutput.html","title":"class - BlockfrostTxOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTxOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                data_hash\n                            \n                            \n                                    \n                                    \n                                    \n                                output_index\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Output address', example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostAmount[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Output amounts', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        data_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The hash of the transaction data', example: undefined})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        output_index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Index of the output', example: 0})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuildTransactionDto.html":{"url":"classes/BuildTransactionDto.html","title":"class - BuildTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuildTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                changeAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                outputs\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                txId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        changeAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Address to send change to', example: 'addr1qy2k4r9...'})@IsString()@Expose({name: 'changeAddress'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionOutput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction outputs', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID (UUID)', example: '123e4567-e89b-12d3-a456-426614174000'})@IsUUID()@Expose({name: 'txId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildTransactionOutput.html":{"url":"interfaces/BuildTransactionOutput.html","title":"interface - BuildTransactionOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildTransactionOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assets\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lovelace\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assets:         NftAsset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NftAsset[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lovelace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lovelace:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      console.log('INPUT ', input);\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildTransactionParams.html":{"url":"interfaces/BuildTransactionParams.html","title":"interface - BuildTransactionParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildTransactionParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            changeAddress\n                                        \n                                \n                                \n                                        \n                                            outputs\n                                        \n                                \n                                \n                                        \n                                            txId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        changeAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        changeAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputs:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildTransactionParams-1.html":{"url":"interfaces/BuildTransactionParams-1.html","title":"interface - BuildTransactionParams-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildTransactionParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            changeAddress\n                                        \n                                \n                                \n                                        \n                                            outputs\n                                        \n                                \n                                \n                                        \n                                            txId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        changeAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        changeAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputs:         BuildTransactionOutput[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BuildTransactionOutput[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      console.log('INPUT ', input);\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BurnLpTokensParams.html":{"url":"interfaces/BurnLpTokensParams.html","title":"interface - BurnLpTokensParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BurnLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for burning LP tokens\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Amount of LP tokens to burn (in smallest unit as string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wallet address that holds the LP tokens\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeAssetsOwnerType1743678745097.html":{"url":"classes/ChangeAssetsOwnerType1743678745097.html","title":"class - ChangeAssetsOwnerType1743678745097","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeAssetsOwnerType1743678745097\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ChangeAssetsOwnerType1743678745097'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ChangeAssetsOwnerType1743678745097 implements MigrationInterface {\n  name = 'ChangeAssetsOwnerType1743678745097';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_9dcbee9dfaf5bc1d498d568216\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"token_id\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"policy_id\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"asset_id\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"contract_address\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"vault_id\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"added_by\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"added_by\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_969c7c69dd286d6e17dedd27923\" FOREIGN KEY (\"added_by\") REFERENCES \"users\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_969c7c69dd286d6e17dedd27923\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"added_by\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"added_by\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"vault_id\" SET NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"contract_address\" SET NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"asset_id\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"policy_id\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"token_id\" character varying`);\n    await queryRunner.query(`CREATE INDEX \"IDX_9dcbee9dfaf5bc1d498d568216\" ON \"assets\" (\"vault_id\") `);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeIntervalToBigint1742311345554.html":{"url":"classes/ChangeIntervalToBigint1742311345554.html","title":"class - ChangeIntervalToBigint1742311345554","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeIntervalToBigint1742311345554\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742311345554-changeIntervalToBigint.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ChangeIntervalToBigint1742311345554'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742311345554-changeIntervalToBigint.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742311345554-changeIntervalToBigint.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742311345554-changeIntervalToBigint.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ChangeIntervalToBigint1742311345554 implements MigrationInterface {\n  name = 'ChangeIntervalToBigint1742311345554';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contribution_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contribution_duration\" bigint`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" bigint`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" bigint`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" interval`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" interval`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contribution_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contribution_duration\" interval`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributeReq.html":{"url":"classes/ContributeReq.html","title":"class - ContributeReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributeReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                assets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContributionAsset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of assets to contribute'})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:132\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributionAsset.html":{"url":"classes/ContributionAsset.html","title":"class - ContributionAsset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributionAsset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                assetName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        assetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Asset name within the policy', example: 'l4vaaudiEngine'})@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Asset metadata including on-chain details', type: 'object', additionalProperties: true, example: undefined})@Expose()@IsOptional()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the asset (56-character hex string)', example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Quantity of assets to contribute', example: 1})@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContributionController.html":{"url":"controllers/ContributionController.html","title":"controller - ContributionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContributionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/contribution.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contribute\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                contribute\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getContributionTransactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        contribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    contribute(req, vaultId: string, contributeReq: ContributeReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':vaultId')@ApiOperation({summary: 'Contribute to a vault'})@UseGuards(AuthGuard)@ApiResponse({status: 201, description: 'Contribution successful'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contributeReq\n                                            \n                                                            ContributeReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getContributionTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContributionTransactions(vaultId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('transactions')@ApiOperation({summary: 'Get all contribution transactions'})@UseGuards(AuthGuard)@ApiResponse({status: 200, description: 'Returns all contribution transactions'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Query, Req, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\n\nimport { ContributionService } from './contribution.service';\nimport { ContributeReq } from './dto/contribute.req';\n\n@ApiTags('Contributions')\n@Controller('contribute')\nexport class ContributionController {\n  constructor(\n    private readonly contributionService: ContributionService,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  @Post(':vaultId')\n  @ApiOperation({ summary: 'Contribute to a vault' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 201, description: 'Contribution successful' })\n  async contribute(@Req() req, @Param('vaultId') vaultId: string, @Body() contributeReq: ContributeReq) {\n    const userId = req.user.sub;\n    return this.contributionService.contribute(vaultId, contributeReq, userId);\n  }\n\n  @Get('transactions')\n  @ApiOperation({ summary: 'Get all contribution transactions' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 200, description: 'Returns all contribution transactions' })\n  async getContributionTransactions(@Query('vaultId') vaultId?: string) {\n    return this.transactionsService.getContributionTransactions(vaultId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContributionModule.html":{"url":"modules/ContributionModule.html","title":"module - ContributionModule","body":"\n                   \n\n\n\n\n    Modules\n    ContributionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_imports\n\n\n\ncluster_ContributionModule_exports\n\n\n\ncluster_ContributionModule_providers\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nContributionModule\n\nContributionModule\n\nContributionModule -->\n\nBlockchainModule->ContributionModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nContributionModule -->\n\nTransactionsModule->ContributionModule\n\n\n\n\n\nContributionService \n\nContributionService \n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/contribution.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContributionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContributionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContributionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\nimport { TransactionsModule } from '../../processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from '../../processing-tx/onchain/blockchain.module';\n\nimport { ContributionController } from './contribution.controller';\nimport { ContributionService } from './contribution.service';\n\n@Module({\n  imports: [BlockchainModule, TypeOrmModule.forFeature([Vault, User, Asset, Transaction]), TransactionsModule],\n  controllers: [ContributionController],\n  providers: [ContributionService],\n  exports: [ContributionService],\n})\nexport class ContributionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContributionService.html":{"url":"injectables/ContributionService.html","title":"injectable - ContributionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContributionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/contribution.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                contribute\n                            \n                            \n                                    Async\n                                syncContributionTransactions\n                            \n                            \n                                    Async\n                                updateTransactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionRepository: Repository, vaultRepository: Repository, usersRepository: Repository, assetRepository: Repository, transactionsService: TransactionsService, blockchainScanner: BlockchainScannerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainScanner\n                                                  \n                                                        \n                                                                        BlockchainScannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        contribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    contribute(vaultId: string, contributeReq: ContributeReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contributeReq\n                                            \n                                                            ContributeReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncContributionTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncContributionTransactions(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Syncs contribution transactions for a vault by comparing on-chain transactions\nwith the transactions stored in the database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the vault to sync transactions for\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing processed blockchain transactions and database transactions\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(transactionId: string, txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ContributionService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { AssetStatus, AssetType, AssetOriginType } from '../../../../types/asset.types';\nimport { BlockchainTransactionListItem } from '../../../../types/blockchain.types';\nimport { TransactionStatus, TransactionType } from '../../../../types/transaction.types';\nimport { VaultPrivacy, VaultStatus } from '../../../../types/vault.types';\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\nimport { BlockchainScannerService } from '../../processing-tx/onchain/blockchain-scanner.service';\n\nimport { ContributeReq } from './dto/contribute.req';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class ContributionService {\n  private readonly logger = new Logger(ContributionService.name);\n\n  constructor(\n    @InjectRepository(Transaction)\n    private readonly transactionRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService\n  ) {}\n\n  /**\n   * Syncs contribution transactions for a vault by comparing on-chain transactions\n   * with the transactions stored in the database\n   * @param vaultId - The ID of the vault to sync transactions for\n   * @returns An object containing processed blockchain transactions and database transactions\n   */\n  async syncContributionTransactions(vaultId: string): Promise;\n    databaseTxs: Transaction[];\n  }> {\n    try {\n      // Get the vault with contract address\n      const vault = await this.vaultRepository.findOne({\n        where: { id: vaultId },\n        select: ['id', 'contract_address'],\n      });\n\n      if (!vault) {\n        throw new NotFoundException('Vault not found');\n      }\n\n      if (!vault.contract_address) {\n        throw new BadRequestException('Vault does not have a contract address');\n      }\n\n      // Get transactions from blockchain and process them\n      const blockchainTxs = await this.blockchainScanner.getAddressTransactions(vault.contract_address);\n\n      // Process blockchain transactions\n      const processedBlockchainTxs = await Promise.all(\n        blockchainTxs\n          // Filter out transactions without block height\n          .filter(tx => tx.block_height != null)\n          // Process each transaction\n          .map(async tx => {\n            // Find corresponding transaction in database\n            const dbTx = await this.transactionRepository.findOne({\n              where: { tx_hash: tx.tx_hash },\n            });\n\n            let statusUpdated = false;\n\n            // If transaction exists in DB and status is not confirmed, update it\n            if (dbTx && dbTx.status !== 'confirmed') {\n              try {\n                await this.transactionsService.updateTransactionStatus(tx.tx_hash, 'confirmed' as TransactionStatus);\n                statusUpdated = true;\n                this.logger.log(`Updated transaction ${tx.tx_hash} status to confirmed`);\n              } catch (updateError) {\n                this.logger.error(`Failed to update transaction ${tx.tx_hash} status`, updateError);\n              }\n            }\n\n            return {\n              tx,\n              dbTx: dbTx || null,\n              statusUpdated,\n            };\n          })\n      );\n\n      // Get all transactions from database for this vault\n      const databaseTxs = await this.transactionRepository.find({\n        where: {\n          vault_id: vaultId,\n          type: TransactionType.contribute,\n        },\n        order: {\n          id: 'DESC' as const, // Using id as a proxy for creation order\n        },\n      });\n\n      return {\n        processedBlockchainTxs,\n        databaseTxs,\n      };\n    } catch (error) {\n      this.logger.error(`Failed to sync contribution transactions for vault ${vaultId}`, error);\n      throw error;\n    }\n  }\n\n  async contribute(vaultId: string, contributeReq: ContributeReq, userId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n      relations: ['contributor_whitelist', 'owner', 'assets_whitelist'],\n    });\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    if (vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Vault is not in contribution phase');\n    }\n\n    // For private/semi-private vaults, validate assets against whitelist\n    if (\n      (vault.privacy === VaultPrivacy.private || vault.privacy === VaultPrivacy.semiPrivate) &&\n      contributeReq.assets.length > 0\n    ) {\n      const invalidAssets = contributeReq.assets.filter(asset => {\n        return !vault.assets_whitelist?.some(whitelistedAsset => whitelistedAsset.policy_id === asset.policyId);\n      });\n\n      if (invalidAssets.length > 0) {\n        throw new BadRequestException(\n          `Some assets are not in the vault's whitelist: ${invalidAssets.map(a => a.policyId).join(', ')}`\n        );\n      }\n    }\n\n    // Allow vault owner to bypass whitelist check\n    if (vault.owner.id !== userId) {\n      // Check whitelist only for non-owners\n      if (vault.contributor_whitelist?.length > 0) {\n        const isWhitelisted = vault.contributor_whitelist.some(entry => entry.wallet_address === user.address);\n        if (!isWhitelisted) {\n          throw new BadRequestException('User is not in contributor whitelist');\n        }\n      }\n    }\n    const transaction = await this.transactionsService.createTransaction({\n      vault_id: vaultId,\n      type: TransactionType.contribute,\n      assets: [],\n    });\n    if (contributeReq.assets.length > 0) {\n      try {\n        // First, ensure the transaction exists and is loaded with relations if needed\n        const savedTransaction = await this.transactionRepository.findOneOrFail({\n          where: { id: transaction.id },\n          relations: ['assets'],\n        });\n\n        // Create and save all assets\n        const assets = await Promise.all(\n          contributeReq.assets.map(async assetItem => {\n            const asset = this.assetRepository.create({\n              transaction: savedTransaction,\n              type: AssetType.NFT,\n              policy_id: assetItem.policyId || '',\n              asset_id: assetItem.assetName,\n              quantity: assetItem.quantity,\n              status: AssetStatus.PENDING,\n              origin_type: AssetOriginType.CONTRIBUTED,\n              added_by: user,\n              metadata: assetItem?.metadata || {},\n            });\n\n            const savedAsset = await this.assetRepository.save(asset);\n            this.logger.log(`Created asset ${savedAsset.id} for transaction ${savedTransaction.id}`);\n            return savedAsset;\n          })\n        );\n\n        this.logger.log(`Successfully created ${assets.length} assets for transaction ${savedTransaction.id}`);\n      } catch (error) {\n        this.logger.error(`Failed to save assets for transaction ${transaction.id}`, error);\n        throw new Error(`Failed to save contribution assets: ${error.message}`);\n      }\n    }\n    return {\n      success: true,\n      message: 'Contribution request accepted, transaction created',\n      vaultId,\n      txId: transaction.id,\n    };\n  }\n\n  async updateTransactionHash(transactionId: string, txHash: string) {\n    const transaction = await this.transactionsService.findById(transactionId);\n    if (!transaction) {\n      throw new NotFoundException('Transaction not found');\n    }\n\n    await this.transactionsService.updateTransactionHash(transactionId, txHash);\n    return {\n      success: true,\n      message: 'Transaction hash updated',\n      txId: transactionId,\n      txHash: txHash,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributorWhitelist.html":{"url":"classes/ContributorWhitelist.html","title":"class - ContributorWhitelist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributorWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ContributorWhitelistEntity.html":{"url":"entities/ContributorWhitelistEntity.html","title":"entity - ContributorWhitelistEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ContributorWhitelistEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/contributorWhitelist.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vault\n                            \n                            \n                                    \n                                    \n                                wallet_address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.contributor_whitelist, {onDelete: 'CASCADE'})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        wallet_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'walletAddress'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'contributor_whitelist' })\nexport class ContributorWhitelistEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'walletAddress' })\n  @Column({ type: 'varchar', nullable: false })\n  wallet_address: string;\n\n  @ManyToOne(() => Vault, (vault: Vault) => vault.contributor_whitelist, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'vault_id' })\n  public vault: Vault;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAssetDto.html":{"url":"classes/CreateAssetDto.html","title":"class - CreateAssetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAssetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                contractAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                dexPrice\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                floorPrice\n                            \n                            \n                                    \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tokenId\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                vaultId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contractAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        dexPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        floorPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetMetadataDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: AssetMetadataDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tokenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(AssetType)@ApiProperty({enum: AssetType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEnum, IsNumber, IsOptional, IsObject, ValidateNested } from 'class-validator';\nimport { AssetType } from '@/types/asset.types';\n\nexport class AssetMetadataDto {\n  @IsString()\n  @ApiProperty()\n  name: string;\n\n  @IsString()\n  @ApiProperty()\n  description: string;\n\n  @IsString()\n  @ApiProperty()\n  imageUrl: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  category?: string;\n\n  @IsObject()\n  @ApiProperty({\n    type: 'object',\n    description: 'Custom attributes for the asset',\n    additionalProperties: true,\n    example: {\n      rarity: 'legendary',\n      edition: '1/100',\n      traits: ['gold', 'limited'],\n    },\n  })\n  attributes: Record;\n}\n\nexport class CreateAssetDto {\n  @IsString()\n  @ApiProperty()\n  vaultId: string;\n\n  @IsEnum(AssetType)\n  @ApiProperty({ enum: AssetType })\n  type: AssetType;\n\n  @IsString()\n  @ApiProperty()\n  contractAddress: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  tokenId?: string;\n\n  @IsNumber()\n  @ApiProperty()\n  quantity: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  floorPrice?: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  dexPrice?: number;\n\n  @ValidateNested()\n  @Type(() => AssetMetadataDto)\n  @ApiProperty({ type: AssetMetadataDto })\n  metadata: AssetMetadataDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePoolDto.html":{"url":"classes/CreatePoolDto.html","title":"class - CreatePoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/dto/create-pool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                networkId\n                            \n                            \n                                    \n                                    \n                                poolFactoryAddress\n                            \n                            \n                                    \n                                    \n                                poolOwnerAddress\n                            \n                            \n                                    \n                                    \n                                tokenA\n                            \n                            \n                                    \n                                    \n                                tokenB\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                v2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        networkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Network ID (1 for mainnet, 0 for testnet)'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        poolFactoryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pool factory address'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        poolOwnerAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pool owner address'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tokenA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token A information'})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tokenB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token B information'})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        v2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether to use VyFi v2', required: false, default: true})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsOptional, IsBoolean, IsObject } from 'class-validator';\n\nexport class TokenInfo {\n  @ApiProperty({ description: 'Policy ID of the token' })\n  @IsString()\n  policyId: string;\n\n  @ApiProperty({ description: 'Asset name of the token' })\n  @IsString()\n  assetName: string;\n\n  @ApiProperty({ description: 'Amount of the token' })\n  @IsNumber()\n  amount: number;\n}\n\nexport class CreatePoolDto {\n  @ApiProperty({ description: 'Network ID (1 for mainnet, 0 for testnet)' })\n  @IsNumber()\n  networkId: number;\n\n  @ApiProperty({ description: 'Token A information' })\n  @IsObject()\n  tokenA: TokenInfo;\n\n  @ApiProperty({ description: 'Token B information' })\n  @IsObject()\n  tokenB: TokenInfo;\n\n  @ApiProperty({ description: 'Whether to use VyFi v2', required: false, default: true })\n  @IsOptional()\n  @IsBoolean()\n  v2?: boolean;\n\n  @ApiProperty({ description: 'Pool owner address' })\n  @IsString()\n  poolOwnerAddress: string;\n\n  @ApiProperty({ description: 'Pool factory address' })\n  @IsString()\n  poolFactoryAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProposalReq.html":{"url":"classes/CreateProposalReq.html","title":"class - CreateProposalReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProposalReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    \n                                    \n                                options\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Detailed description of the proposal', example: 'Proposal to sell Asset XYZ at current market price...'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Additional metadata for the proposal', required: false, example: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Voting options', example: undefined})@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the proposal', example: 'Sell Asset XYZ'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProposalType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of proposal', enum: ProposalType, example: undefined})@IsEnum(ProposalType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsEnum, IsOptional, IsArray } from 'class-validator';\n\nexport enum ProposalType {\n  ASSET_SALE = 'asset_sale',\n  VAULT_STRATEGY = 'vault_strategy',\n  PARAMETER_CHANGE = 'parameter_change',\n  OTHER = 'other',\n}\n\nexport class CreateProposalReq {\n  @ApiProperty({\n    description: 'Title of the proposal',\n    example: 'Sell Asset XYZ',\n  })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: 'Detailed description of the proposal',\n    example: 'Proposal to sell Asset XYZ at current market price...',\n  })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: 'Type of proposal',\n    enum: ProposalType,\n    example: ProposalType.ASSET_SALE,\n  })\n  @IsEnum(ProposalType)\n  type: ProposalType;\n\n  @ApiProperty({\n    description: 'Additional metadata for the proposal',\n    required: false,\n    example: { assetId: 'xyz-123', targetPrice: '1000' },\n  })\n  @IsOptional()\n  metadata?: Record;\n\n  @ApiProperty({\n    description: 'Voting options',\n    example: ['Yes', 'No', 'Abstain'],\n  })\n  @IsArray()\n  @IsString({ each: true })\n  options: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseStruct1741879378411.html":{"url":"classes/DatabaseStruct1741879378411.html","title":"class - DatabaseStruct1741879378411","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseStruct1741879378411\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741879378411-databaseStruct.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DatabaseStruct1741879378411'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1741879378411-databaseStruct.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741879378411-databaseStruct.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741879378411-databaseStruct.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class DatabaseStruct1741879378411 implements MigrationInterface {\n  name = 'DatabaseStruct1741879378411';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"files\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"file_key\" character varying NOT NULL, \"file_url\" character varying NOT NULL, \"file_type\" character varying NOT NULL, \"file_name\" character varying NOT NULL, \"metadata\" jsonb, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT \"PK_6c16b9093a142e0e7613b04a3d9\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"links\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"url\" character varying NOT NULL, \"name\" character varying NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, \"user_id\" uuid, CONSTRAINT \"PK_ecf17f4a741d3c5ba0b4c5ab4b6\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" character varying NOT NULL, \"address\" character varying NOT NULL, \"description\" character varying, \"tvl\" numeric(20,2) NOT NULL DEFAULT '0', \"total_vaults\" integer NOT NULL DEFAULT '0', \"gains\" numeric(10,2) NOT NULL DEFAULT '0', \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"profile_image_id\" uuid, \"banner_image_id\" uuid, CONSTRAINT \"UQ_b0ec0293d53a1385955f9834d5c\" UNIQUE (\"address\"), CONSTRAINT \"REL_96d6f1aafc327443850f263cd5\" UNIQUE (\"profile_image_id\"), CONSTRAINT \"REL_657d44500fe38e604f4a630662\" UNIQUE (\"banner_image_id\"), CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"investors_whitelist\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"wallet_address\" character varying NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, CONSTRAINT \"PK_8aff9f27f807add95dd73b72f3e\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_type_enum\" AS ENUM('nft', 'cnt')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_status_enum\" AS ENUM('pending', 'locked', 'released')`);\n    await queryRunner.query(\n      `CREATE TABLE \"assets\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"vault_id\" uuid NOT NULL, \"type\" \"public\".\"assets_type_enum\" NOT NULL, \"contract_address\" character varying NOT NULL, \"token_id\" character varying, \"quantity\" numeric(20,2) NOT NULL DEFAULT '0', \"floor_price\" numeric(20,2), \"dex_price\" numeric(20,2), \"last_valuation\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"assets_status_enum\" NOT NULL DEFAULT 'pending', \"locked_at\" TIMESTAMP WITH TIME ZONE, \"released_at\" TIMESTAMP WITH TIME ZONE, \"metadata\" jsonb NOT NULL, \"added_by\" character varying NOT NULL, \"added_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT \"PK_da96729a8b113377cfb6a62439c\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(`CREATE INDEX \"IDX_9dcbee9dfaf5bc1d498d568216\" ON \"assets\" (\"vault_id\") `);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_type_enum\" AS ENUM('single', 'multi', 'ctn')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_privacy_enum\" AS ENUM('private', 'public', 'semi-private')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_valuation_type_enum\" AS ENUM('lbe', 'fixed')`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum\" AS ENUM('custom', 'upon-vault-lunch')`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_investment_open_window_type_enum\" AS ENUM('custom', 'upon-asset-window-closing')`\n    );\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_termination_type_enum\" AS ENUM('dao', 'programmed')`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked')`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"vaults\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" character varying NOT NULL, \"type\" \"public\".\"vaults_type_enum\", \"privacy\" \"public\".\"vaults_privacy_enum\", \"description\" character varying, \"valuation_type\" \"public\".\"vaults_valuation_type_enum\", \"contribution_open_window_type\" \"public\".\"vaults_contribution_open_window_type_enum\", \"contribution_open_window_time\" TIMESTAMP WITH TIME ZONE, \"asset_window\" TIMESTAMP WITH TIME ZONE, \"investment_window_duration\" TIMESTAMP WITH TIME ZONE, \"investment_open_window_type\" \"public\".\"vaults_investment_open_window_type_enum\", \"investment_open_window_time\" TIMESTAMP WITH TIME ZONE, \"tokens_for_acquires\" numeric, \"ft_investment_window\" TIMESTAMP WITH TIME ZONE, \"ft_investment_reverse\" numeric, \"liquidity_pool_contribution\" numeric, \"ft_token_supply\" numeric, \"vault_token_ticker\" character varying, \"ft_token_decimals\" smallint DEFAULT '1', \"termination_type\" \"public\".\"vaults_termination_type_enum\", \"time_elapsed_is_equal_to_time\" TIMESTAMP WITH TIME ZONE, \"asset_appreciation\" numeric, \"creation_threshold\" numeric, \"start_threshold\" numeric, \"vote_threshold\" numeric, \"execution_threshold\" numeric, \"cosigning_threshold\" numeric, \"vault_status\" \"public\".\"vaults_vault_status_enum\", \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"owner_id\" uuid, \"vault_image_id\" uuid, \"banner_image_id\" uuid, \"investors_whitelist_csv_id\" uuid, \"ft_token_img_id\" uuid, CONSTRAINT \"REL_bfa8eb1a193e5e4a9dc4d2b725\" UNIQUE (\"vault_image_id\"), CONSTRAINT \"REL_a6a3f7811be6df590c8da538d4\" UNIQUE (\"banner_image_id\"), CONSTRAINT \"REL_3e6ff48532fbe552bbb6c4098b\" UNIQUE (\"investors_whitelist_csv_id\"), CONSTRAINT \"REL_c15eb8818056ac23754262fdd3\" UNIQUE (\"ft_token_img_id\"), CONSTRAINT \"CHK_9d2496e0bc2b30a41372df4bd4\" CHECK (\"ft_token_decimals\" BETWEEN 1 AND 9), CONSTRAINT \"PK_487a5346fa3693a430b6d6db60c\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"assets_whitelist\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"policy_id\" character varying(56) NOT NULL, \"asset_count_cap_min\" integer, \"asset_count_cap_max\" integer, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, CONSTRAINT \"PK_85cf89e7248c7f3f4013e524c84\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"links\" ADD CONSTRAINT \"FK_1e942f889da974dfccec3b4ecbf\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"links\" ADD CONSTRAINT \"FK_9f8dea86e48a7216c4f5369c1e4\" FOREIGN KEY (\"user_id\") REFERENCES \"users\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD CONSTRAINT \"FK_96d6f1aafc327443850f263cd50\" FOREIGN KEY (\"profile_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD CONSTRAINT \"FK_657d44500fe38e604f4a6306620\" FOREIGN KEY (\"banner_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"investors_whitelist\" ADD CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_6f6b9ff91b18b69d88c11e4f5d8\" FOREIGN KEY (\"owner_id\") REFERENCES \"users\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_bfa8eb1a193e5e4a9dc4d2b7257\" FOREIGN KEY (\"vault_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_a6a3f7811be6df590c8da538d40\" FOREIGN KEY (\"banner_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_3e6ff48532fbe552bbb6c4098bd\" FOREIGN KEY (\"investors_whitelist_csv_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_c15eb8818056ac23754262fdd3a\" FOREIGN KEY (\"ft_token_img_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets_whitelist\" ADD CONSTRAINT \"FK_67ab781bada0c0fd71e38f5d3a4\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"assets_whitelist\" DROP CONSTRAINT \"FK_67ab781bada0c0fd71e38f5d3a4\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_c15eb8818056ac23754262fdd3a\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_3e6ff48532fbe552bbb6c4098bd\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_a6a3f7811be6df590c8da538d40\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_bfa8eb1a193e5e4a9dc4d2b7257\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_6f6b9ff91b18b69d88c11e4f5d8\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\"`);\n    await queryRunner.query(`ALTER TABLE \"investors_whitelist\" DROP CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP CONSTRAINT \"FK_657d44500fe38e604f4a6306620\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP CONSTRAINT \"FK_96d6f1aafc327443850f263cd50\"`);\n    await queryRunner.query(`ALTER TABLE \"links\" DROP CONSTRAINT \"FK_9f8dea86e48a7216c4f5369c1e4\"`);\n    await queryRunner.query(`ALTER TABLE \"links\" DROP CONSTRAINT \"FK_1e942f889da974dfccec3b4ecbf\"`);\n    await queryRunner.query(`DROP TABLE \"assets_whitelist\"`);\n    await queryRunner.query(`DROP TABLE \"vaults\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_termination_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_investment_open_window_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_valuation_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_privacy_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_type_enum\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_9dcbee9dfaf5bc1d498d568216\"`);\n    await queryRunner.query(`DROP TABLE \"assets\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_type_enum\"`);\n    await queryRunner.query(`DROP TABLE \"investors_whitelist\"`);\n    await queryRunner.query(`DROP TABLE \"users\"`);\n    await queryRunner.query(`DROP TABLE \"links\"`);\n    await queryRunner.query(`DROP TABLE \"files\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Datum.html":{"url":"interfaces/Datum.html","title":"interface - Datum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Datum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/types/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            asset_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contributed_assets\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            datum_tag\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            policy_id\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asset_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contributed_assets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributed_assets:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datum_tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datum_tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policy_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Redeemer =\n  | {\n      quantity: number;\n      output_index: number;\n      contribution: 'Lovelace' | 'Asset';\n    }\n  | 'MintAdaPair'\n  | 'BurnLp';\nexport type Redeemer1 =\n  | {\n      __variant: 'ExtractAda' | 'ExtractAsset';\n      __data: {\n        lp_output_index?: number;\n      };\n    }\n  | {\n      lp_output_index: number;\n      change_output_index: number;\n    }\n  | 'CancelAsset'\n  | 'CancelAda';\nexport type Redeemer2 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\nexport type Redeemer3 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\n\n/**\n * Aiken contracts for project 'l4va/vault'\n */\nexport interface L4VaVault {\n  contribute: {\n    mint: {\n      redeemer: Redeemer;\n    };\n    spend: {\n      redeemer: Redeemer1;\n      datum: Datum;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n  vault: {\n    mint: {\n      redeemer: Redeemer2;\n    };\n    spend: {\n      redeemer: Redeemer3;\n      datum: Datum1;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n}\nexport interface Datum {\n  policy_id: string;\n  asset_name: string;\n  quantity: number;\n  owner:\n    | string\n    | {\n        payment_credential: {\n          __variant: 'VerificationKey' | 'Script';\n          __data: string;\n        };\n        stake_credential?:\n          | {\n              __variant: 'VerificationKey' | 'Script';\n              __data: string;\n            }\n          | {\n              slot_number: number;\n              transaction_index: number;\n              certificate_index: number;\n            };\n      };\n  datum_tag?: string;\n  contributed_assets?: Array;\n}\nexport interface Datum1 {\n  contract_type: number;\n  asset_whitelist: string[];\n  contributor_whitelist?: string[];\n  asset_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  investment_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  valuation_type: number;\n  fractionalization?: {\n    percentage: number;\n    token_supply: number;\n    token_decimals: number;\n    token_policy: string;\n  };\n  custom_metadata: [string, string, ...string[]][];\n  termination?: {\n    termination_type: number;\n    fdp: number;\n  };\n  investment?: {\n    reserve: number;\n    liquidityPool: number;\n  };\n  admin: string;\n  minting_key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Datum1.html":{"url":"interfaces/Datum1.html","title":"interface - Datum1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Datum1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/types/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            asset_whitelist\n                                        \n                                \n                                \n                                        \n                                            asset_window\n                                        \n                                \n                                \n                                        \n                                            contract_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contributor_whitelist\n                                        \n                                \n                                \n                                        \n                                            custom_metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fractionalization\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            investment\n                                        \n                                \n                                \n                                        \n                                            investment_window\n                                        \n                                \n                                \n                                        \n                                            minting_key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            termination\n                                        \n                                \n                                \n                                        \n                                            valuation_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        asset_whitelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asset_whitelist:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        asset_window\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asset_window:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contract_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contract_type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contributor_whitelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributor_whitelist:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        custom_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        custom_metadata:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fractionalization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fractionalization:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        investment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        investment:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        investment_window\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        investment_window:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minting_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minting_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        termination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        termination:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valuation_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valuation_type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Redeemer =\n  | {\n      quantity: number;\n      output_index: number;\n      contribution: 'Lovelace' | 'Asset';\n    }\n  | 'MintAdaPair'\n  | 'BurnLp';\nexport type Redeemer1 =\n  | {\n      __variant: 'ExtractAda' | 'ExtractAsset';\n      __data: {\n        lp_output_index?: number;\n      };\n    }\n  | {\n      lp_output_index: number;\n      change_output_index: number;\n    }\n  | 'CancelAsset'\n  | 'CancelAda';\nexport type Redeemer2 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\nexport type Redeemer3 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\n\n/**\n * Aiken contracts for project 'l4va/vault'\n */\nexport interface L4VaVault {\n  contribute: {\n    mint: {\n      redeemer: Redeemer;\n    };\n    spend: {\n      redeemer: Redeemer1;\n      datum: Datum;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n  vault: {\n    mint: {\n      redeemer: Redeemer2;\n    };\n    spend: {\n      redeemer: Redeemer3;\n      datum: Datum1;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n}\nexport interface Datum {\n  policy_id: string;\n  asset_name: string;\n  quantity: number;\n  owner:\n    | string\n    | {\n        payment_credential: {\n          __variant: 'VerificationKey' | 'Script';\n          __data: string;\n        };\n        stake_credential?:\n          | {\n              __variant: 'VerificationKey' | 'Script';\n              __data: string;\n            }\n          | {\n              slot_number: number;\n              transaction_index: number;\n              certificate_index: number;\n            };\n      };\n  datum_tag?: string;\n  contributed_assets?: Array;\n}\nexport interface Datum1 {\n  contract_type: number;\n  asset_whitelist: string[];\n  contributor_whitelist?: string[];\n  asset_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  investment_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  valuation_type: number;\n  fractionalization?: {\n    percentage: number;\n    token_supply: number;\n    token_decimals: number;\n    token_policy: string;\n  };\n  custom_metadata: [string, string, ...string[]][];\n  termination?: {\n    termination_type: number;\n    fdp: number;\n  };\n  investment?: {\n    reserve: number;\n    liquidityPool: number;\n  };\n  admin: string;\n  minting_key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistributeLpTokensParams.html":{"url":"interfaces/DistributeLpTokensParams.html","title":"interface - DistributeLpTokensParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DistributeLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for dropping LP tokens\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Amount of LP tokens to drop (in smallest unit as string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wallet address to receive the LP tokens\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DistributionModule.html":{"url":"modules/DistributionModule.html","title":"module - DistributionModule","body":"\n                   \n\n\n\n\n    Modules\n    DistributionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DistributionModule\n\n\n\ncluster_DistributionModule_exports\n\n\n\ncluster_DistributionModule_providers\n\n\n\n\nDistributionService \n\nDistributionService \n\n\n\nDistributionModule\n\nDistributionModule\n\nDistributionService  -->\n\nDistributionModule->DistributionService \n\n\n\n\n\nDistributionService\n\nDistributionService\n\nDistributionModule -->\n\nDistributionService->DistributionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/distribution/distribution.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DistributionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DistributionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { DistributionService } from './distribution.service';\n\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  providers: [DistributionService],\n  imports: [TypeOrmModule.forFeature([Vault])],\n  exports: [DistributionService],\n})\nexport class DistributionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DistributionService.html":{"url":"injectables/DistributionService.html","title":"injectable - DistributionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DistributionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/distribution/distribution.service.ts\n        \n\n\n            \n                Description\n            \n            \n                DistributionService\nThis service provides core business logic for calculating token and ADA distributions\nfor contributors and acquirers in the vault system. It includes formulas for\nliquidity pool allocation, VT token pricing, contributor/acquirer shares, and\nvalue retention metrics.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateAcquirerExample\n                            \n                            \n                                    Async\n                                calculateContributorExample\n                            \n                            \n                                    Private\n                                calculateLpAda\n                            \n                            \n                                    Private\n                                calculateTotalValueRetained\n                            \n                            \n                                    Private\n                                calculateVtPrice\n                            \n                            \n                                    Private\n                                round6\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/distribution/distribution.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateAcquirerExample\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateAcquirerExample(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateContributorExample\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateContributorExample(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateLpAda\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateLpAda(adaSent: number, LP_PERCENT: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                adaSent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                LP_PERCENT\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateTotalValueRetained\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateTotalValueRetained(netAda: number, vtAda: number, lpAda: number, lpVtAda: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                netAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vtAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lpAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lpVtAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateVtPrice\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateVtPrice(adaSent: number, VT_SUPPLY: number, ASSETS_OFFERED_PERCENT: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                adaSent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                VT_SUPPLY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ASSETS_OFFERED_PERCENT\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        round6\n                        \n                    \n                \n            \n            \n                \n                        \n                    round6(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Vault } from '@/database/vault.entity';\n\n/**\n * DistributionService\n *\n * This service provides core business logic for calculating token and ADA distributions\n * for contributors and acquirers in the vault system. It includes formulas for\n * liquidity pool allocation, VT token pricing, contributor/acquirer shares, and\n * value retention metrics.\n */\n@Injectable()\nexport class DistributionService {\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository\n  ) {}\n\n  private round6(amount: number): number {\n    return Math.round(amount * 1e6) / 1e6;\n  }\n\n  private calculateVtPrice(adaSent: number, VT_SUPPLY: number, ASSETS_OFFERED_PERCENT: number): number {\n    return adaSent / ASSETS_OFFERED_PERCENT / VT_SUPPLY;\n  }\n\n  private calculateTotalValueRetained(netAda: number, vtAda: number, lpAda: number, lpVtAda: number): number {\n    return this.round6(netAda + vtAda + lpAda + lpVtAda);\n  }\n\n  private calculateLpAda(adaSent: number, LP_PERCENT: number): number {\n    return adaSent * LP_PERCENT;\n  }\n\n  async calculateContributorExample(params: { vaultId: string; valueContributed: number; totalTvl: number }): Promise {\n    const { vaultId, valueContributed, totalTvl } = params;\n\n    // Fetch vault from DB\n    const vault = await this.vaultsRepository.findOneByOrFail({ id: vaultId });\n\n    const contributorShare = valueContributed / totalTvl;\n\n    const VT_SUPPLY = vault.ft_token_supply;\n    const ASSETS_OFFERED_PERCENT = vault.tokens_for_acquires * 0.01;\n    const LP_PERCENT = vault.liquidity_pool_contribution * 0.01;\n\n    const vtPrice = this.round6(this.calculateVtPrice(valueContributed, VT_SUPPLY, ASSETS_OFFERED_PERCENT));\n\n    const lpAda = this.round6(this.calculateLpAda(valueContributed, LP_PERCENT));\n    const lpVt = this.round6(VT_SUPPLY * ASSETS_OFFERED_PERCENT * LP_PERCENT);\n\n    const vtRetained = this.round6(VT_SUPPLY * (1 - ASSETS_OFFERED_PERCENT) * contributorShare);\n    const lpVtRetained = this.round6(lpVt * LP_PERCENT);\n    const lpAdaRetained = this.round6(lpAda * LP_PERCENT);\n\n    const vtAdaValue = this.round6(vtRetained * vtPrice);\n    const totalRetainedValue = this.round6(this.calculateTotalValueRetained(0, vtAdaValue, lpAdaRetained, 0));\n\n    return {\n      vtRetained: Math.round(vtRetained),\n      lpVtRetained,\n      lpAdaRetained,\n      totalRetainedValue,\n    };\n  }\n\n  async calculateAcquirerExample(params: {\n    vaultId: string;\n    adaSent: number;\n    numAcquirers: number;\n    totalAcquiredValueAda: number;\n  }): Promise {\n    const { vaultId, adaSent, totalAcquiredValueAda } = params;\n\n    // Fetch vault from DB\n    const vault = await this.vaultsRepository.findOneByOrFail({ id: vaultId });\n\n    const VT_SUPPLY = vault.ft_token_supply;\n    const ASSETS_OFFERED_PERCENT = vault.tokens_for_acquires * 0.01; // Convert percentage to decimal\n    const LP_PERCENT = vault.liquidity_pool_contribution * 0.01; // Convert percentage to decimal\n\n    // const l4vaFee = 5.0;\n    // const trxnReserveFee = 5.0;\n\n    const percentOfTotalAcquireAdaSent = this.round6(adaSent / totalAcquiredValueAda);\n\n    const vtPrice = this.round6(this.calculateVtPrice(totalAcquiredValueAda, VT_SUPPLY, ASSETS_OFFERED_PERCENT));\n\n    const lpAda = this.round6(LP_PERCENT * totalAcquiredValueAda);\n    const lpVt = this.round6(VT_SUPPLY * ASSETS_OFFERED_PERCENT * LP_PERCENT);\n\n    const vtAvailableToAcquirers = this.round6(VT_SUPPLY * ASSETS_OFFERED_PERCENT - lpVt);\n\n    const percentOfTotalVtNetOfLp = percentOfTotalAcquireAdaSent;\n\n    const vtReceived = this.round6(percentOfTotalVtNetOfLp * vtAvailableToAcquirers);\n\n    const vtValueInAda = this.round6(vtReceived * vtPrice);\n\n    const lpAdaInitialShare = this.round6(percentOfTotalVtNetOfLp * lpAda);\n\n    const lpVtInitialShare = this.round6(percentOfTotalVtNetOfLp * lpVt);\n\n    const lpVtAdaValue = this.round6(lpVtInitialShare * vtPrice);\n\n    const totalValueInAdaRetained = this.round6(adaSent + vtValueInAda + lpAdaInitialShare + lpVtAdaValue);\n\n    const percentValueRetained = this.round6(totalValueInAdaRetained / adaSent);\n\n    // const valueInAdaRetainedNetOfFees = this.round6(totalValueInAdaRetained - l4vaFee - trxnReserveFee);\n\n    return {\n      adaSent: this.round6(adaSent),\n      percentOfTotalAcquireAdaSent,\n      percentOfTotalVtNetOfLp,\n      vtReceived: Math.round(vtReceived),\n      vtValueInAda,\n      lpAdaInitialShare,\n      lpVtInitialShare,\n      lpVtAdaValue,\n      totalValueInAdaRetained,\n      percentValueRetained,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DraftVaultsService.html":{"url":"injectables/DraftVaultsService.html","title":"injectable - DraftVaultsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DraftVaultsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/draft-vaults.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDraftVaultById\n                            \n                            \n                                    Async\n                                getMyDraftVaults\n                            \n                            \n                                    Async\n                                saveDraftVault\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultsRepository: Repository, usersRepository: Repository, linksRepository: Repository, filesRepository: Repository, assetsWhitelistRepository: Repository, acquirerWhitelistRepository: Repository, contributorWhitelistRepository: Repository, tagsRepository: Repository, awsService: AwsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/draft-vaults.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetsWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        acquirerWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contributorWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsService\n                                                  \n                                                        \n                                                                        AwsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDraftVaultById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDraftVaultById(id: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/draft-vaults.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMyDraftVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyDraftVaults(userId: string, page: number, limit: number, sortBy?: VaultSortField, sortOrder: SortOrder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/draft-vaults.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                sortBy\n                                            \n                                                            VaultSortField\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                sortOrder\n                                            \n                                                            SortOrder\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    SortOrder.DESC\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveDraftVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDraftVault(userId: string, data: SaveDraftReq)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/draft-vaults.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            SaveDraftReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { classToPlain, plainToInstance } from 'class-transformer';\nimport { Repository } from 'typeorm';\n\nimport { transformImageToUrl } from '../../helpers';\nimport { VaultStatus } from '../../types/vault.types';\nimport { AwsService } from '../aws_bucket/aws.service';\n\nimport { VaultSortField, SortOrder } from './dto/get-vaults.dto';\nimport { PaginatedResponseDto } from './dto/paginated-response.dto';\nimport { SaveDraftReq } from './dto/saveDraft.req';\nimport { VaultShortResponse } from './dto/vault.response';\n\nimport { AcquirerWhitelistEntity } from '@/database/acquirerWhitelist.entity';\nimport { AssetsWhitelistEntity } from '@/database/assetsWhitelist.entity';\nimport { ContributorWhitelistEntity } from '@/database/contributorWhitelist.entity';\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { TagEntity } from '@/database/tag.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class DraftVaultsService {\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n    @InjectRepository(LinkEntity)\n    private readonly linksRepository: Repository,\n    @InjectRepository(FileEntity)\n    private readonly filesRepository: Repository,\n    @InjectRepository(AssetsWhitelistEntity)\n    private readonly assetsWhitelistRepository: Repository,\n    @InjectRepository(AcquirerWhitelistEntity)\n    private readonly acquirerWhitelistRepository: Repository,\n    @InjectRepository(ContributorWhitelistEntity)\n    private readonly contributorWhitelistRepository: Repository,\n    @InjectRepository(TagEntity)\n    private readonly tagsRepository: Repository,\n    private readonly awsService: AwsService\n  ) {}\n\n  async getMyDraftVaults(\n    userId: string,\n    page: number = 1,\n    limit: number = 10,\n    sortBy?: VaultSortField,\n    sortOrder: SortOrder = SortOrder.DESC\n  ): Promise> {\n    const query = {\n      where: {\n        owner: { id: userId },\n        vault_status: VaultStatus.draft,\n      },\n      relations: ['social_links', 'vault_image', 'banner_image', 'ft_token_img'],\n      skip: (page - 1) * limit,\n      take: limit,\n      order: {},\n    };\n\n    // Add sorting if specified\n    if (sortBy) {\n      query.order[sortBy] = sortOrder;\n    } else {\n      // Default sort by created_at DESC if no sort specified\n      query.order['created_at'] = SortOrder.DESC;\n    }\n\n    const [listOfVaults, total] = await this.vaultsRepository.findAndCount(query);\n    const transformedItems = listOfVaults.map(vault =>\n      plainToInstance(VaultShortResponse, classToPlain(vault), { excludeExtraneousValues: true })\n    );\n\n    return {\n      items: transformedItems,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n\n  async getDraftVaultById(id: string, userId: string): Promise {\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id,\n        vault_status: VaultStatus.draft,\n        owner: { id: userId },\n      },\n      relations: [\n        'owner',\n        'social_links',\n        'assets_whitelist',\n        'acquirer_whitelist',\n        'contributor_whitelist',\n        'vault_image',\n        'banner_image',\n        'ft_token_img',\n        'acquirer_whitelist_csv',\n      ],\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Draft vault not found');\n    }\n\n    // Transform image entities to URLs\n    vault.vault_image = transformImageToUrl(vault.vault_image as FileEntity) as any;\n    vault.banner_image = transformImageToUrl(vault.banner_image as FileEntity) as any;\n    vault.ft_token_img = transformImageToUrl(vault.ft_token_img as FileEntity) as any;\n    delete vault.owner;\n    delete vault.contribution_phase_start;\n    delete vault.acquire_phase_start;\n    delete vault.locked_at;\n\n    // todo need to create additional model for remove owner, and transform image to link\n    return classToPlain(vault);\n  }\n\n  async saveDraftVault(userId: string, data: SaveDraftReq): Promise {\n    let existingVault: Vault | null = null;\n\n    if (data.id) {\n      existingVault = await this.vaultsRepository.findOne({\n        where: {\n          id: data.id,\n          vault_status: VaultStatus.draft,\n          owner: { id: userId },\n        },\n        relations: [\n          'owner',\n          'social_links',\n          'assets_whitelist',\n          'acquirer_whitelist',\n          'acquirer_whitelist_csv',\n          'vault_image',\n          'banner_image',\n          'ft_token_img',\n        ],\n      });\n\n      if (existingVault && existingVault.vault_status !== VaultStatus.draft) {\n        throw new BadRequestException('Cannot modify a published vault');\n      }\n\n      if (existingVault) {\n        if (existingVault.social_links?.length > 0) {\n          await this.linksRepository.remove(existingVault.social_links);\n        }\n        if (existingVault.assets_whitelist?.length > 0) {\n          await this.assetsWhitelistRepository.remove(existingVault.assets_whitelist);\n        }\n        if (existingVault.acquirer_whitelist?.length > 0) {\n          await this.acquirerWhitelistRepository.remove(existingVault.acquirer_whitelist);\n        }\n        if (existingVault.contributor_whitelist?.length > 0) {\n          await this.contributorWhitelistRepository.remove(existingVault.contributor_whitelist);\n        }\n      }\n    }\n\n    try {\n      const owner = await this.usersRepository.findOne({\n        where: { id: userId },\n      });\n\n      // Process image files\n      const imgKey = data.vaultImage?.split('image/')[1];\n      const vaultImg = imgKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: imgKey },\n          })\n        : null;\n\n      const bannerImgKey = data.bannerImage?.split('image/')[1];\n      const bannerImg = bannerImgKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: bannerImgKey },\n          })\n        : null;\n\n      const ftTokenImgKey = data.ftTokenImg?.split('image/')[1];\n      const ftTokenImg = ftTokenImgKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: ftTokenImgKey },\n          })\n        : null;\n\n      const acquirerWhitelistCsvKey = data.acquirerWhitelistCsv?.key;\n      const acquirerWhitelistFile = acquirerWhitelistCsvKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: acquirerWhitelistCsvKey },\n          })\n        : null;\n\n      // Check if the vault already has these files to avoid duplicate relations\n      const hasVaultImage = existingVault?.vault_image?.file_key === imgKey;\n      const hasBannerImage = existingVault?.banner_image?.file_key === bannerImgKey;\n      const hasFtTokenImage = existingVault?.ft_token_img?.file_key === ftTokenImgKey;\n      const hasAcquirerWhitelistCsv = existingVault?.acquirer_whitelist_csv?.file_key === acquirerWhitelistCsvKey;\n\n      const vaultData: any = {\n        owner: owner,\n        vault_status: VaultStatus.draft,\n      };\n\n      // Only include fields that are actually provided\n      if (data.name !== undefined) vaultData.name = data.name;\n      if (data.type !== undefined) vaultData.type = data.type;\n      if (data.privacy !== undefined) vaultData.privacy = data.privacy;\n      if (data.valueMethod !== undefined) vaultData.value_method = data.valueMethod;\n      if (data.valuationCurrency !== undefined) vaultData.valuation_currency = data.valuationCurrency;\n      if (data.valuationAmount !== undefined) vaultData.valuation_amount = data.valuationAmount;\n      if (data.description !== undefined) vaultData.description = data.description;\n      if (data.ftTokenDecimals) vaultData.ft_token_decimals = data.ftTokenDecimals;\n      if (data.ftTokenSupply) vaultData.ft_token_supply = data.ftTokenSupply;\n      if (data.terminationType) vaultData.termination_type = data.terminationType;\n      if (data.vaultTokenTicker) vaultData.vault_token_ticker = data.vaultTokenTicker;\n      if (data.tokensForAcquires) vaultData.tokens_for_acquires = data.tokensForAcquires;\n      if (data.acquireReserve) vaultData.acquire_reserve = data.acquireReserve;\n      if (data.liquidityPoolContribution) vaultData.liquidity_pool_contribution = data.liquidityPoolContribution;\n      if (data.creationThreshold) vaultData.creation_threshold = data.creationThreshold;\n      if (data.startThreshold) vaultData.start_threshold = data.startThreshold;\n      if (data.voteThreshold) vaultData.vote_threshold = data.voteThreshold;\n      if (data.executionThreshold) vaultData.execution_threshold = data.executionThreshold;\n      if (data.cosigningThreshold) vaultData.cosigning_threshold = data.cosigningThreshold;\n      if (data.vaultAppreciation) vaultData.vault_appreciation = data.vaultAppreciation;\n\n      if (data.contributionDuration !== undefined) {\n        vaultData.contribution_duration = data.contributionDuration;\n      }\n      if (data.acquireWindowDuration !== undefined) {\n        vaultData.acquire_window_duration = data.acquireWindowDuration;\n      }\n      if (data.acquireOpenWindowTime !== undefined && data.acquireOpenWindowTime !== null) {\n        vaultData.acquire_open_window_time = new Date(data.acquireOpenWindowTime).toISOString();\n      }\n      if (data.acquireOpenWindowType !== undefined && data.acquireOpenWindowType !== null) {\n        vaultData.acquire_open_window_type = data.acquireOpenWindowType;\n      }\n      if (data.contributionOpenWindowTime !== undefined && data.contributionOpenWindowTime !== null) {\n        vaultData.contribution_open_window_time = new Date(data.contributionOpenWindowTime).toISOString();\n      }\n      if (data.contributionOpenWindowType !== undefined && data.contributionOpenWindowType !== null) {\n        vaultData.contribution_open_window_type = data.contributionOpenWindowType;\n      }\n      if (data.timeElapsedIsEqualToTime !== undefined && data.timeElapsedIsEqualToTime !== null) {\n        vaultData.time_elapsed_is_equal_to_time = data.timeElapsedIsEqualToTime;\n      }\n\n      // Handle file relationships only if provided and not already set\n      if (vaultImg && !hasVaultImage) vaultData.vault_image = vaultImg;\n      if (bannerImg && !hasBannerImage) vaultData.banner_image = bannerImg;\n      if (ftTokenImg && !hasFtTokenImage) vaultData.ft_token_img = ftTokenImg;\n      if (acquirerWhitelistFile && !hasAcquirerWhitelistCsv) vaultData.acquirer_whitelist_csv = acquirerWhitelistFile;\n\n      let vault: Vault;\n      if (existingVault) {\n        vault = (await this.vaultsRepository.save({\n          ...existingVault,\n          ...vaultData,\n        })) as Vault;\n      } else {\n        vault = await this.vaultsRepository.save(vaultData as Vault);\n      }\n\n      // Handle social links only if provided\n      if (data.socialLinks !== undefined && data.socialLinks.length > 0) {\n        const links = data.socialLinks.map(linkItem => {\n          return this.linksRepository.create({\n            vault: vault,\n            name: linkItem.name,\n            url: linkItem.url,\n          });\n        });\n        await this.linksRepository.save(links);\n      }\n\n      // Handle tags if provided\n      if (data.tags?.length > 0) {\n        const tags = await Promise.all(\n          data.tags.map(async tagData => {\n            let tag = await this.tagsRepository.findOne({\n              where: { name: tagData.name },\n            });\n            if (!tag) {\n              tag = await this.tagsRepository.save({\n                name: tagData.name,\n              });\n            }\n            return tag;\n          })\n        );\n        vault.tags = tags;\n        await this.vaultsRepository.save(vault);\n      }\n\n      // Handle assets whitelist only if provided\n      if (data.assetsWhitelist !== undefined && data.assetsWhitelist.length > 0) {\n        await Promise.all(\n          data.assetsWhitelist.map(whitelistItem => {\n            return this.assetsWhitelistRepository.save({\n              vault: vault,\n              policy_id: whitelistItem.policyId,\n              asset_count_cap_min: whitelistItem?.countCapMin,\n              asset_count_cap_max: whitelistItem?.countCapMax,\n            });\n          })\n        );\n      }\n\n      // Handle acquirer whitelist only if provided\n      if (data.acquirerWhitelist !== undefined && data.acquirerWhitelist.length > 0) {\n        const manualAcquirer = data.acquirerWhitelist?.map(item => item.walletAddress) || [];\n        const allAcquirer = new Set([...manualAcquirer]);\n\n        if (allAcquirer.size > 0) {\n          const investorItems = Array.from(allAcquirer).map(walletAddress => {\n            return this.acquirerWhitelistRepository.create({\n              vault: vault,\n              wallet_address: walletAddress,\n            });\n          });\n          await this.acquirerWhitelistRepository.save(investorItems);\n        }\n      }\n\n      // Handle contributor whitelist only if provided and vault is private\n      if (data.whitelistContributors !== undefined && data.whitelistContributors.length > 0) {\n        const contributorItems = data.whitelistContributors.map(item => {\n          return this.contributorWhitelistRepository.create({\n            vault: vault,\n            wallet_address: item.policyId,\n          });\n        });\n        await this.contributorWhitelistRepository.save(contributorItems);\n      }\n\n      return await this.getDraftVaultById(vault.id, userId);\n    } catch (error) {\n      console.error(error);\n      throw new BadRequestException('Failed to save draft vault');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropOldVauleFormEnum1742800589634.html":{"url":"classes/DropOldVauleFormEnum1742800589634.html","title":"class - DropOldVauleFormEnum1742800589634","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropOldVauleFormEnum1742800589634\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742800589634-dropOldVauleFormEnum.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DropOldVauleFormEnum1742800589634'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742800589634-dropOldVauleFormEnum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800589634-dropOldVauleFormEnum.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800589634-dropOldVauleFormEnum.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class DropOldVauleFormEnum1742800589634 implements MigrationInterface {\n  name = 'DropOldVauleFormEnum1742800589634';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum\" RENAME TO \"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum\" AS ENUM('custom', 'upon-vault-launch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" AS ENUM('custom', 'upon-vault-lunch', 'upon-vault-launch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" RENAME TO \"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DtoRepresentsType.html":{"url":"interfaces/DtoRepresentsType.html","title":"interface - DtoRepresentsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DtoRepresentsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/dto-represents.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expose\n                                        \n                                \n                                \n                                        \n                                            transform\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expose:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transform:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport { Expose, Transform } from 'class-transformer';\n\ninterface DtoRepresentsType {\n  transform: any;\n  expose: any;\n}\n\nexport function DtoRepresent({ transform, expose }: DtoRepresentsType) {\n  return applyDecorators(transform ? Transform(transform) : () => {}, expose ? Expose(expose) : () => {});\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExtractLpTokensDto.html":{"url":"classes/ExtractLpTokensDto.html","title":"class - ExtractLpTokensDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExtractLpTokensDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                txHash\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                txIndex\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                walletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The amount of LP tokens to extract'})@IsNumber()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash (optional)', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        txIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction index (optional)', required: false, type: Number})@IsNumber()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the vault to extract tokens from'})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        walletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The wallet address to send the LP tokens to'})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsNotEmpty, IsString, IsNumber, IsOptional } from 'class-validator';\n\nexport class ExtractLpTokensDto {\n  @ApiProperty({ description: 'The ID of the vault to extract tokens from' })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({ description: 'The wallet address to send the LP tokens to' })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  walletAddress: string;\n\n  @ApiProperty({ description: 'The amount of LP tokens to extract' })\n  @IsNumber()\n  @IsNotEmpty()\n  @Expose()\n  amount: number;\n\n  @ApiProperty({\n    description: 'Transaction hash (optional)',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  txHash?: string;\n\n  @ApiProperty({\n    description: 'Transaction index (optional)',\n    required: false,\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  @Expose()\n  txIndex?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractLpTokensParams.html":{"url":"interfaces/ExtractLpTokensParams.html","title":"interface - ExtractLpTokensParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for extracting LP tokens\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Amount of LP tokens to extract (in smallest unit as string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the vault to extract tokens from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wallet address to send the tokens to\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractLpTokensParams-1.html":{"url":"interfaces/ExtractLpTokensParams-1.html","title":"interface - ExtractLpTokensParams-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/types/lp-token.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txHash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txIndex\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Transaction } from '@/database/transaction.entity';\n\nexport interface LpTokenOperationResult {\n  success: boolean;\n  transactionId?: string;\n  transaction?: Transaction;\n  message?: string;\n  error?: any;\n}\n\nexport interface ExtractLpTokensParams {\n  vaultId: string;\n  walletAddress: string;\n  amount: number;\n  txHash?: string;\n  txIndex?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                    \n                                file_key\n                            \n                            \n                                    \n                                    \n                                file_name\n                            \n                            \n                                    \n                                    \n                                file_type\n                            \n                            \n                                    \n                                    \n                                file_url\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({name: 'created_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'key'})@Column({name: 'file_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'fileName'})@Column({name: 'file_name', type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'fileType'})@Column({name: 'file_type', type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'url'})@Column({name: 'file_url', type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'metadata'})@Column({name: 'metadata', type: 'jsonb', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({name: 'updated_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({ name: 'files' })\nexport class FileEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'key' })\n  @Column({ name: 'file_key', type: 'varchar', nullable: false })\n  file_key: string;\n\n  @Expose({ name: 'url' })\n  @Column({ name: 'file_url', type: 'varchar', nullable: false })\n  file_url: string;\n\n  @Expose({ name: 'fileType' })\n  @Column({ name: 'file_type', type: 'varchar' })\n  file_type: string;\n\n  @Expose({ name: 'fileName' })\n  @Column({ name: 'file_name', type: 'varchar' })\n  file_name: string;\n\n  @Expose({ name: 'metadata' })\n  @Column({ name: 'metadata', type: 'jsonb', nullable: true })\n  metadata: {};\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ name: 'updated_at', type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ name: 'created_at', type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetVaultTransactionsDto.html":{"url":"classes/GetVaultTransactionsDto.html","title":"class - GetVaultTransactionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetVaultTransactionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/get-vault-transactions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Default value : TransactionStatus.confirmed\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TransactionStatus, description: 'Filter transactions by status', required: false, default: undefined})@IsOptional()@IsEnum(TransactionStatus)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vault-transactions.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined, description: 'Filter transactions by type (contribute or acquire)', required: false})@IsOptional()@IsEnum(TransactionType)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vault-transactions.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsEnum, IsOptional } from 'class-validator';\nimport { TransactionStatus, TransactionType } from '@/types/transaction.types';\n\nexport class GetVaultTransactionsDto {\n  @ApiProperty({\n    enum: TransactionStatus,\n    description: 'Filter transactions by status',\n    required: false,\n    default: TransactionStatus.confirmed,\n  })\n  @IsOptional()\n  @IsEnum(TransactionStatus)\n  @Expose()\n  status?: TransactionStatus = TransactionStatus.confirmed;\n\n  @ApiProperty({\n    enum: [TransactionType.contribute, TransactionType.acquire],\n    description: 'Filter transactions by type (contribute or acquire)',\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(TransactionType)\n  @Expose()\n  type?: TransactionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetVaultsDto.html":{"url":"classes/GetVaultsDto.html","title":"class - GetVaultsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetVaultsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/get-vaults.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sortBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sortOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultFilter\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(VaultFilter)@IsOptional()@ApiProperty({enum: VaultFilter, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vaults.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultSortField\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(VaultSortField)@IsOptional()@ApiProperty({enum: VaultSortField, required: false, description: 'Field to sort by'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vaults.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Default value : SortOrder.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(SortOrder)@IsOptional()@ApiProperty({enum: SortOrder, required: false, default: undefined, description: 'Sort order (ASC or DESC)'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vaults.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 10})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 1})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nimport { PaginationDto } from './pagination.dto';\n\nexport enum VaultFilter {\n  open = 'open',\n  locked = 'locked',\n  contribution = 'contribution',\n  acquire = 'acquire',\n  governance = 'governance',\n}\n\nexport enum VaultSortField {\n  name = 'name',\n  createdAt = 'created_at',\n  updatedAt = 'updated_at',\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport class GetVaultsDto extends PaginationDto {\n  @IsEnum(VaultFilter)\n  @IsOptional()\n  @ApiProperty({ enum: VaultFilter, required: false })\n  @Expose()\n  filter?: VaultFilter;\n\n  @IsEnum(VaultSortField)\n  @IsOptional()\n  @ApiProperty({\n    enum: VaultSortField,\n    required: false,\n    description: 'Field to sort by',\n  })\n  @Expose()\n  sortBy?: VaultSortField;\n\n  @IsEnum(SortOrder)\n  @IsOptional()\n  @ApiProperty({\n    enum: SortOrder,\n    required: false,\n    default: SortOrder.DESC,\n    description: 'Sort order (ASC or DESC)',\n  })\n  @Expose()\n  sortOrder?: SortOrder = SortOrder.DESC;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GovernanceController.html":{"url":"controllers/GovernanceController.html","title":"controller - GovernanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GovernanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/governance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                governance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createProposal\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProposal\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProposals\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                vote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        createProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProposal(req, vaultId: string, createProposalReq: CreateProposalReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('vaults/:vaultId/proposals')@UseGuards(AuthGuard)@ApiOperation({summary: 'Create a new proposal'})@ApiResponse({status: 201, description: 'Proposal created successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createProposalReq\n                                            \n                                                            CreateProposalReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposal(proposalId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('proposals/:proposalId')@UseGuards(AuthGuard)@ApiOperation({summary: 'Get proposal details'})@ApiResponse({status: 200, description: 'Proposal details'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getProposals\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposals(vaultId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('vaults/:vaultId/proposals')@UseGuards(AuthGuard)@ApiOperation({summary: 'Get all proposals for a vault'})@ApiResponse({status: 200, description: 'List of proposals'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        vote\n                        \n                    \n                \n            \n            \n                \n                        \n                    vote(req, proposalId: string, voteReq: VoteReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('proposals/:proposalId/vote')@UseGuards(AuthGuard)@ApiOperation({summary: 'Vote on a proposal'})@ApiResponse({status: 201, description: 'Vote recorded successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                voteReq\n                                            \n                                                            VoteReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Req, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\n\nimport { CreateProposalReq } from './dto/create-proposal.req';\nimport { VoteReq } from './dto/vote.req';\nimport { GovernanceService } from './governance.service';\n\n@ApiTags('Governance')\n@Controller('governance')\nexport class GovernanceController {\n  constructor(private readonly governanceService: GovernanceService) {}\n\n  @Post('vaults/:vaultId/proposals')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Create a new proposal' })\n  @ApiResponse({ status: 201, description: 'Proposal created successfully' })\n  async createProposal(@Req() req, @Param('vaultId') vaultId: string, @Body() createProposalReq: CreateProposalReq) {\n    const userId = req.user.sub;\n    return this.governanceService.createProposal(vaultId, createProposalReq, userId);\n  }\n\n  @Get('vaults/:vaultId/proposals')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Get all proposals for a vault' })\n  @ApiResponse({ status: 200, description: 'List of proposals' })\n  async getProposals(@Param('vaultId') vaultId: string) {\n    return this.governanceService.getProposals(vaultId);\n  }\n\n  @Post('proposals/:proposalId/vote')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Vote on a proposal' })\n  @ApiResponse({ status: 201, description: 'Vote recorded successfully' })\n  async vote(@Req() req, @Param('proposalId') proposalId: string, @Body() voteReq: VoteReq) {\n    const userId = req.user.sub;\n    return this.governanceService.vote(proposalId, voteReq, userId);\n  }\n\n  @Get('proposals/:proposalId')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Get proposal details' })\n  @ApiResponse({ status: 200, description: 'Proposal details' })\n  async getProposal(@Param('proposalId') proposalId: string) {\n    return this.governanceService.getProposal(proposalId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GovernanceModule.html":{"url":"modules/GovernanceModule.html","title":"module - GovernanceModule","body":"\n                   \n\n\n\n\n    Modules\n    GovernanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GovernanceModule\n\n\n\ncluster_GovernanceModule_providers\n\n\n\ncluster_GovernanceModule_exports\n\n\n\n\nGovernanceService \n\nGovernanceService \n\n\n\nGovernanceModule\n\nGovernanceModule\n\nGovernanceService  -->\n\nGovernanceModule->GovernanceService \n\n\n\n\n\nGovernanceService\n\nGovernanceService\n\nGovernanceModule -->\n\nGovernanceService->GovernanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/governance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GovernanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GovernanceController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GovernanceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Vault } from '@/database/vault.entity';\n\nimport { GovernanceController } from './governance.controller';\nimport { GovernanceService } from './governance.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Vault])],\n  controllers: [GovernanceController],\n  providers: [GovernanceService],\n  exports: [GovernanceService],\n})\nexport class GovernanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GovernanceService.html":{"url":"injectables/GovernanceService.html","title":"injectable - GovernanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GovernanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/governance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProposal\n                            \n                            \n                                    Async\n                                getProposal\n                            \n                            \n                                    Async\n                                getProposals\n                            \n                            \n                                    Async\n                                vote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/governance/governance.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProposal(vaultId: string, createProposalReq: CreateProposalReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createProposalReq\n                                            \n                                                            CreateProposalReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposal(proposalId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProposals\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposals(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        vote\n                        \n                    \n                \n            \n            \n                \n                        \n                    vote(proposalId: string, voteReq: VoteReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                voteReq\n                                            \n                                                            VoteReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Vault } from '@/database/vault.entity';\nimport { VaultStatus } from '../../../../types/vault.types';\n\nimport { CreateProposalReq } from './dto/create-proposal.req';\nimport { VoteReq } from './dto/vote.req';\n\n@Injectable()\nexport class GovernanceService {\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository\n  ) {}\n\n  async createProposal(vaultId: string, createProposalReq: CreateProposalReq, userId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n    });\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    if (vault.vault_status !== VaultStatus.locked) {\n      throw new BadRequestException('Governance is only available for locked vaults');\n    }\n\n    // TODO: Check if user has sufficient voting power (based on contribution/acquire)\n\n    // TODO: Implement blockchain integration for proposal creation\n    // For now, return mock response\n    return {\n      success: true,\n      message: 'Proposal created successfully',\n      proposal: {\n        id: 'mock-proposal-id',\n        vaultId,\n        creatorId: userId,\n        ...createProposalReq,\n        status: 'active',\n        createdAt: new Date().toISOString(),\n      },\n    };\n  }\n\n  async getProposals(vaultId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n    });\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    // TODO: Implement proposal retrieval from blockchain/database\n    // For now, return mock data\n    return {\n      proposals: [],\n    };\n  }\n\n  async vote(proposalId: string, voteReq: VoteReq, userId: string) {\n    // TODO: Implement blockchain integration for voting\n    // For now, return mock response\n    return {\n      success: true,\n      message: 'Vote recorded successfully',\n      vote: {\n        proposalId,\n        voterId: userId,\n        ...voteReq,\n        timestamp: new Date().toISOString(),\n      },\n    };\n  }\n\n  async getProposal(proposalId: string) {\n    // TODO: Implement proposal retrieval from blockchain/database\n    // For now, throw not found\n    throw new NotFoundException('Proposal not found');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtGlobalModule.html":{"url":"modules/JwtGlobalModule.html","title":"module - JwtGlobalModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtGlobalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JwtGlobalModule\n\n\n\ncluster_JwtGlobalModule_imports\n\n\n\ncluster_JwtGlobalModule_exports\n\n\n\n\nTaptoolsModule\n\nTaptoolsModule\n\n\n\nJwtGlobalModule\n\nJwtGlobalModule\n\nJwtGlobalModule -->\n\nTaptoolsModule->JwtGlobalModule\n\n\n\n\n\nTaptoolsModule \n\nTaptoolsModule \n\nTaptoolsModule  -->\n\nJwtGlobalModule->TaptoolsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/globals/jwt_global_module/jwt_global.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TaptoolsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TaptoolsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TaptoolsModule } from '@/modules/taptools/taptools.module';\n\n@Global()\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: '1d' },\n      }),\n      inject: [ConfigService],\n    }),\n    TaptoolsModule,\n  ],\n  exports: [JwtModule, TaptoolsModule], // Експортуємо JwtModule, щоб він був доступний у всіх модулях\n})\nexport class JwtGlobalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/L4VaVault.html":{"url":"interfaces/L4VaVault.html","title":"interface - L4VaVault","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  L4VaVault\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/types/type.ts\n        \n\n\n            \n                Description\n            \n            \n                Aiken contracts for project 'l4va/vault'\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contribute\n                                        \n                                \n                                \n                                        \n                                            vault\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contribute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contribute:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Redeemer =\n  | {\n      quantity: number;\n      output_index: number;\n      contribution: 'Lovelace' | 'Asset';\n    }\n  | 'MintAdaPair'\n  | 'BurnLp';\nexport type Redeemer1 =\n  | {\n      __variant: 'ExtractAda' | 'ExtractAsset';\n      __data: {\n        lp_output_index?: number;\n      };\n    }\n  | {\n      lp_output_index: number;\n      change_output_index: number;\n    }\n  | 'CancelAsset'\n  | 'CancelAda';\nexport type Redeemer2 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\nexport type Redeemer3 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\n\n/**\n * Aiken contracts for project 'l4va/vault'\n */\nexport interface L4VaVault {\n  contribute: {\n    mint: {\n      redeemer: Redeemer;\n    };\n    spend: {\n      redeemer: Redeemer1;\n      datum: Datum;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n  vault: {\n    mint: {\n      redeemer: Redeemer2;\n    };\n    spend: {\n      redeemer: Redeemer3;\n      datum: Datum1;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n}\nexport interface Datum {\n  policy_id: string;\n  asset_name: string;\n  quantity: number;\n  owner:\n    | string\n    | {\n        payment_credential: {\n          __variant: 'VerificationKey' | 'Script';\n          __data: string;\n        };\n        stake_credential?:\n          | {\n              __variant: 'VerificationKey' | 'Script';\n              __data: string;\n            }\n          | {\n              slot_number: number;\n              transaction_index: number;\n              certificate_index: number;\n            };\n      };\n  datum_tag?: string;\n  contributed_assets?: Array;\n}\nexport interface Datum1 {\n  contract_type: number;\n  asset_whitelist: string[];\n  contributor_whitelist?: string[];\n  asset_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  investment_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  valuation_type: number;\n  fractionalization?: {\n    percentage: number;\n    token_supply: number;\n    token_decimals: number;\n    token_policy: string;\n  };\n  custom_metadata: [string, string, ...string[]][];\n  termination?: {\n    termination_type: number;\n    fdp: number;\n  };\n  investment?: {\n    reserve: number;\n    liquidityPool: number;\n  };\n  admin: string;\n  minting_key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LifecycleModule.html":{"url":"modules/LifecycleModule.html","title":"module - LifecycleModule","body":"\n                   \n\n\n\n\n    Modules\n    LifecycleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LifecycleModule\n\n\n\ncluster_LifecycleModule_providers\n\n\n\ncluster_LifecycleModule_imports\n\n\n\ncluster_LifecycleModule_exports\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nLifecycleModule -->\n\nBlockchainModule->LifecycleModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nLifecycleModule -->\n\nContributionModule->LifecycleModule\n\n\n\n\n\nDistributionModule\n\nDistributionModule\n\nLifecycleModule -->\n\nDistributionModule->LifecycleModule\n\n\n\n\n\nLifecycleService \n\nLifecycleService \n\nLifecycleService  -->\n\nLifecycleModule->LifecycleService \n\n\n\n\n\nLifecycleService\n\nLifecycleService\n\nLifecycleModule -->\n\nLifecycleService->LifecycleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/lifecycle/lifecycle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LifecycleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            ContributionModule\n                        \n                        \n                            DistributionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LifecycleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { DistributionModule } from '../../../distribution/distribution.module';\nimport { BlockchainModule } from '../../processing-tx/onchain/blockchain.module';\nimport { ContributionModule } from '../contribution/contribution.module';\n\nimport { LifecycleService } from './lifecycle.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [\n    ContributionModule,\n    DistributionModule,\n    TypeOrmModule.forFeature([Vault, Asset]),\n    ScheduleModule.forRoot(),\n    BlockchainModule,\n  ],\n  providers: [LifecycleService],\n  exports: [LifecycleService],\n})\nexport class LifecycleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LifecycleService.html":{"url":"injectables/LifecycleService.html","title":"injectable - LifecycleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LifecycleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAssetsGroupedByUser\n                            \n                            \n                                    Private\n                                    Async\n                                handleContributionToInvestment\n                            \n                            \n                                    Private\n                                    Async\n                                handleInvestmentToGovernance\n                            \n                            \n                                    Private\n                                    Async\n                                handlePublishedToContribution\n                            \n                            \n                                    \n                                    Async\n                                handleVaultLifecycleTransitions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(assetsRepository: Repository, vaultRepository: Repository, contributionService: ContributionService, distributionService: DistributionService, taptoolsService: TaptoolsService, vaultContractService: VaultManagingService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        assetsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contributionService\n                                                  \n                                                        \n                                                                        ContributionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        distributionService\n                                                  \n                                                        \n                                                                        DistributionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taptoolsService\n                                                  \n                                                        \n                                                                        TaptoolsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultContractService\n                                                  \n                                                        \n                                                                        VaultManagingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAssetsGroupedByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssetsGroupedByUser(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:210\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleContributionToInvestment\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleContributionToInvestment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleInvestmentToGovernance\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleInvestmentToGovernance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:260\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handlePublishedToContribution\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePublishedToContribution()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleVaultLifecycleTransitions\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleVaultLifecycleTransitions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LifecycleService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { AssetOriginType } from '../../../../types/asset.types';\nimport { VaultStatus, ContributionWindowType, InvestmentWindowType } from '../../../../types/vault.types';\nimport { DistributionService } from '../../../distribution/distribution.service';\nimport { TaptoolsService } from '../../../taptools/taptools.service';\nimport { VaultManagingService } from '../../processing-tx/onchain/vault-managing.service';\nimport { ContributionService } from '../contribution/contribution.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class LifecycleService {\n  private readonly logger = new Logger(LifecycleService.name);\n\n  constructor(\n    @InjectRepository(Asset)\n    private readonly assetsRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    private readonly contributionService: ContributionService,\n    private readonly distributionService: DistributionService,\n    private readonly taptoolsService: TaptoolsService,\n    private readonly vaultContractService: VaultManagingService\n  ) {}\n\n  @Cron(CronExpression.EVERY_MINUTE)\n  async handleVaultLifecycleTransitions(): Promise {\n    // this.logger.debug('Checking vault lifecycle transitions...');\n\n    await this.handlePublishedToContribution();\n\n    // Handle contribution -> acquire transitions\n    await this.handleContributionToInvestment();\n\n    // Handle acquire -> governance transitions\n    await this.handleInvestmentToGovernance();\n  }\n\n  private async handlePublishedToContribution(): Promise {\n    const now = new Date();\n\n    // Handle immediate start vaults\n    const immediateStartVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.published })\n      .andWhere('vault.contribution_open_window_type = :type', { type: ContributionWindowType.uponVaultLaunch })\n      .getMany();\n\n    for (const vault of immediateStartVaults) {\n      vault.contribution_phase_start = now.toISOString();\n      vault.vault_status = VaultStatus.contribution;\n      await this.vaultRepository.save(vault);\n      this.logger.log(`Vault ${vault.id} moved to contribution phase (immediate start)`);\n    }\n\n    // Handle custom start time vaults\n    const customStartVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.published })\n      .andWhere('vault.contribution_open_window_type = :type', { type: ContributionWindowType.custom })\n      .andWhere('vault.contribution_open_window_time IS NOT NULL')\n      .andWhere('vault.contribution_open_window_time  {\n    const now = new Date();\n    const contributionVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.contribution })\n      .andWhere('vault.contribution_phase_start IS NOT NULL')\n      .andWhere('vault.contribution_duration IS NOT NULL')\n      .leftJoinAndSelect('vault.owner', 'owner')\n      .getMany();\n\n    for (const vault of contributionVaults) {\n      const contributionStart = new Date(vault.contribution_phase_start);\n      const contributionDurationMs = Number(vault.contribution_duration);\n      const contributionEnd = new Date(contributionStart.getTime() + contributionDurationMs);\n\n      // Skip if contribution period hasn't ended yet\n      if (now  !asset.deleted) || false;\n\n      // If no assets, burn the vault using admin wallet\n      if (!hasAssets) {\n        try {\n          this.logger.log(`Vault ${vault.id} has no assets and contribution period has ended. Burning vault...`);\n          // Update vault status to failed\n          vault.vault_status = VaultStatus.failed;\n          await this.vaultRepository.save(vault);\n\n          // // Use admin wallet to burn the vault\n          // const burnTx = await this.vaultContractService.createBurnTx({\n          //   customerAddress: vault.owner.address, // Still track the original owner\n          //   assetVaultName: vault.asset_vault_name,\n          // });\n\n          // // Submit the transaction using admin wallet\n          // const { txHash } = await this.vaultContractService.submitOnChainVaultTx({\n          //   transaction: burnTx.presignedTx,\n          //   signatures: [], // Admin signature is already included in presignedTx\n          // });\n\n          // // Update vault status\n          // vault.deleted = true;\n          // vault.liquidation_hash = txHash;\n          // await this.vaultRepository.save(vault);\n\n          // this.logger.log(`Successfully burned empty vault ${vault.id} in transaction ${txHash}`);\n\n          continue;\n        } catch (error) {\n          this.logger.error(`Failed to burn empty vault ${vault.id}:`, error.message);\n          // Continue with other vaults even if one fails\n        }\n        continue;\n      }\n\n      // If we get here, the vault has assets and the contribution period has ended\n      try {\n        const contributionDurationMs = Number(vault.contribution_duration);\n        const contributionEnd = new Date(contributionStart.getTime() + contributionDurationMs);\n\n        if (now >= contributionEnd) {\n          // For immediate acquire start\n          if (vault.acquire_open_window_type === InvestmentWindowType.uponAssetWindowClosing) {\n            vault.acquire_phase_start = now.toISOString();\n            vault.vault_status = VaultStatus.acquire;\n            // Sync transactions before checking contribution end time\n\n            // TODO: need save this data to vault;\n            // Calculate total value of assets in the vault\n            try {\n              const assetsValue = await this.taptoolsService.calculateVaultAssetsValue(vault.id);\n              this.logger.log(\n                `Vault ${vault.id} total assets value: ${assetsValue.totalValueAda} ADA (${assetsValue.totalValueUsd} USD)`\n              );\n              // You can store this information in the vault if needed\n              vault.total_assets_cost_ada = assetsValue.totalValueAda;\n              vault.total_assets_cost_usd = assetsValue.totalValueUsd;\n\n              //  todo calculate threshold Price\n              vault.require_reserved_cost_ada = assetsValue.totalValueAda * (vault.acquire_reserve * 0.01);\n              vault.require_reserved_cost_usd = assetsValue.totalValueUsd * (vault.acquire_reserve * 0.01);\n            } catch (error) {\n              this.logger.error(`Failed to calculate assets value for vault ${vault.id}:`, error);\n              // Continue with the transition even if we couldn't calculate the value\n            }\n            await this.vaultRepository.save(vault);\n            this.logger.log(`Vault ${vault.id} moved to acquire phase (immediate start)`);\n          }\n          // For custom acquire start time\n          else if (\n            vault.acquire_open_window_type === InvestmentWindowType.custom &&\n            vault.acquire_open_window_time &&\n            now >= new Date(vault.acquire_open_window_time)\n          ) {\n            vault.acquire_phase_start = now.toISOString();\n            vault.vault_status = VaultStatus.acquire;\n            // Sync transactions before checking contribution end time\n            await this.contributionService.syncContributionTransactions(vault.id);\n\n            // TODO: need save this data to vault;\n            // Calculate total value of assets in the vault\n            try {\n              const assetsValue = await this.taptoolsService.calculateVaultAssetsValue(vault.id);\n              this.logger.log(\n                `Vault ${vault.id} total assets value: ${assetsValue.totalValueAda} ADA (${assetsValue.totalValueUsd} USD)`\n              );\n              // You can store this information in the vault if needed\n              // vault.totalValueAda = assetsValue.totalValueAda;\n              // vault.totalValueUsd = assetsValue.totalValueUsd;\n            } catch (error) {\n              this.logger.error(`Failed to calculate assets value for vault ${vault.id}:`, error);\n              // Continue with the transition even if we couldn't calculate the value\n            }\n\n            await this.vaultRepository.save(vault);\n            this.logger.log(`Vault ${vault.id} moved to acquire phase (custom start time)`);\n          }\n        }\n      } catch (error) {\n        this.logger.error(`Error processing vault ${vault.id} in handleContributionToInvestment`, error);\n        // Continue with the next vault even if one fails\n        continue;\n      }\n    }\n  }\n\n  async getAssetsGroupedByUser(vaultId: string): Promise {\n    const query = `\n      SELECT\n        u.id as user_id,\n        u.address as user_wallet,\n        COUNT(a.id) as total_assets,\n        json_agg(\n          json_build_object(\n            'id', a.id,\n            'type', a.type,\n            'contract_address', a.contract_address,\n            'added_at', a.added_at,\n            'quantity', a.quantity,\n            'origin_type', a.origin_type,\n            'policy_id', a.policy_id,\n            'asset_name', a.asset_id\n          )\n        ) as assets\n      FROM\n        assets a\n      JOIN\n        users u ON u.id = a.added_by\n      WHERE\n        a.vault_id = $1\n      GROUP BY\n        u.id, u.address\n      ORDER BY\n        u.address ASC\n    `;\n\n    const result = await this.assetsRepository.query(query, [vaultId]);\n    return result;\n  }\n\n  private async handleInvestmentToGovernance(): Promise {\n    const acquireVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.acquire })\n      .andWhere('vault.acquire_phase_start IS NOT NULL')\n      .andWhere('vault.acquire_window_duration IS NOT NULL')\n      .leftJoinAndSelect('vault.assets', 'assets')\n      .getMany();\n\n    const now = new Date();\n\n    for (const vault of acquireVaults) {\n      const acquireStart = new Date(vault.acquire_phase_start);\n      const acquireDurationMs = Number(vault.acquire_window_duration);\n      const acquireEnd = new Date(acquireStart.getTime() + acquireDurationMs);\n\n      if (now >= acquireEnd) {\n        // Sync transactions one more time\n        await this.contributionService.syncContributionTransactions(vault.id);\n\n        // 1. Group assets by user\n        const assetsByUsers = await this.getAssetsGroupedByUser(vault.id);\n        const acquirerAdaMap: Record = {};\n        const contributorValueMap: Record = {};\n        let totalAcquiredAda = 0;\n        let totalContributedValueAda = 0;\n\n        // 2. Iterate over each user's assets and split by phase\n        for (const userAssets of assetsByUsers) {\n          const userId = userAssets.user_id;\n          const assets = userAssets.assets;\n          let userAcquiredAda = 0;\n          let userContributedValueAda = 0;\n\n          this.logger.log(\n            `User ${userId} (${userAssets.user_wallet}) has ${userAssets.total_assets} assets in vault ${vault.id}: ${JSON.stringify(assets)}`\n          );\n\n          for (const asset of assets) {\n            // Only ADA in acquired assets\n            if (asset.origin_type === AssetOriginType.ACQUIRED) {\n              userAcquiredAda += asset.quantity || 1;\n              this.logger.debug(`User ${userId} asset ${asset.id}: ${asset.quantity} ADA`);\n            }\n            if (asset.origin_type === AssetOriginType.CONTRIBUTED) {\n              try {\n                const { priceAda } = await this.taptoolsService.getAssetValue(asset.policy_id, asset.asset_name);\n                const quantity = asset.quantity || 1;\n                userContributedValueAda += priceAda * quantity;\n              } catch (error) {\n                this.logger.error(\n                  `Error getting price for asset ${asset.policy_id}.${asset.asset_name} for user ${userId} in vault ${vault.id}:`,\n                  error.message\n                );\n              }\n            }\n\n            if (userAcquiredAda > 0) {\n              acquirerAdaMap[userId] = userAcquiredAda;\n              totalAcquiredAda += userAcquiredAda;\n            }\n            if (userContributedValueAda > 0) {\n              contributorValueMap[userId] = userContributedValueAda;\n              totalContributedValueAda += userContributedValueAda;\n            }\n          }\n        }\n        this.logger.log(\n          `Total acquired ADA across all users in vault ${vault.id}: ${totalAcquiredAda}, ` +\n            `Total contributed value ADA: ${totalContributedValueAda}`\n        );\n\n        const requiredThresholdAda = vault.require_reserved_cost_ada || 0;\n        const meetsThreshold = totalAcquiredAda >= requiredThresholdAda;\n\n        vault.total_acquired_value_ada = totalAcquiredAda;\n        await this.vaultRepository.save(vault);\n\n        this.logger.log(\n          `Vault ${vault.id} meets the threshold: ` +\n            `Total contributed: ${totalAcquiredAda} ADA, ` +\n            `Required: ${requiredThresholdAda} ADA`\n        );\n\n        if (meetsThreshold) {\n          // TODO: Mint tokens and launch the vault\n          // For each user, calculate VT received\n\n          // 3. Calculate VT for acquirers\n          for (const [userId, adaSent] of Object.entries(acquirerAdaMap)) {\n            const vtResult = await this.distributionService.calculateAcquirerExample({\n              vaultId: vault.id,\n              adaSent,\n              numAcquirers: Object.keys(acquirerAdaMap).length,\n              totalAcquiredValueAda: totalAcquiredAda,\n            });\n            this.logger.debug(\n              `--- Acquirer ${userId} will receive VT: ${vtResult.vtReceived} (for ADA sent: ${adaSent})`\n            );\n          }\n\n          // 4. Calculate VT for contributors\n          for (const [userId, valueAda] of Object.entries(contributorValueMap)) {\n            const vtResult = await this.distributionService.calculateContributorExample({\n              vaultId: vault.id,\n              valueContributed: valueAda,\n              totalTvl: totalContributedValueAda,\n            });\n            this.logger.debug(\n              `--- Contributor ${userId} will receive VT: ${vtResult.vtRetained} (for value contributed: ${valueAda})`\n            );\n          }\n\n          this.logger.log(`Vault ${vault.id} is ready to be launched`);\n        } else {\n          this.logger.warn(\n            `Vault ${vault.id} does not meet the threshold: ` +\n              `Total contributed: ${totalAcquiredAda} ADA, ` +\n              `Required: ${requiredThresholdAda} ADA`\n          );\n\n          // TODO: Burn the vault and refund assets\n          this.logger.warn(`Vault ${vault.id} needs to be burned and assets refunded`);\n        }\n\n        // Move to governance phase regardless of threshold for now\n        // In a real implementation, you might want to handle success/failure differently\n        vault.governance_phase_start = now.toISOString();\n        vault.vault_status = VaultStatus.governance;\n\n        await this.vaultRepository.save(vault);\n        this.logger.log(`Vault ${vault.id} has moved to governance phase`);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LinkEntity.html":{"url":"entities/LinkEntity.html","title":"entity - LinkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LinkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/link.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                            \n                                    \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                vault\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'id'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'name'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'url'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'userId'})@ManyToOne(undefined, user => user.social_links, {onDelete: 'CASCADE', nullable: true})@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'vaultId'})@ManyToOne(undefined, vault => vault.social_links, {onDelete: 'CASCADE', nullable: true})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { User } from './user.entity';\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'links' })\nexport class LinkEntity {\n  @Expose({ name: 'id' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'url' })\n  @Column({ type: 'varchar', nullable: false })\n  url: string;\n\n  @Expose({ name: 'name' })\n  @Column({ type: 'varchar', nullable: false })\n  name: string;\n\n  @Expose({ name: 'vaultId' })\n  @ManyToOne(() => Vault, (vault: Vault) => vault.social_links, { onDelete: 'CASCADE', nullable: true })\n  @JoinColumn({ name: 'vault_id' })\n  vault: Vault;\n\n  @Expose({ name: 'userId' })\n  @ManyToOne(() => User, (user: User) => user.social_links, { onDelete: 'CASCADE', nullable: true })\n  @JoinColumn({ name: 'user_id' })\n  user: User;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReq.html":{"url":"classes/LoginReq.html","title":"class - LoginReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                signature\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stakeAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                walletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SignatureData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsObject()@ValidateNested()@Type(undefined)@ApiProperty({description: 'Signature data for authentication', type: SignatureData})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stakeAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Stake address for the wallet', example: 'stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        walletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Wallet address for the wallet', example: 'addr1q934ccfkwy292....'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, IsString, IsObject, ValidateNested } from 'class-validator';\n\nexport class SignatureData {\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Public key for signature verification',\n    example: 'a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883',\n  })\n  key: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Signature data',\n    example:\n      '84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e',\n  })\n  signature: string;\n}\n\nexport class LoginReq {\n  @Expose()\n  @IsNotEmpty()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => SignatureData)\n  @ApiProperty({\n    description: 'Signature data for authentication',\n    type: SignatureData,\n  })\n  signature: SignatureData;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Stake address for the wallet',\n    example: 'stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4',\n  })\n  stakeAddress: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Wallet address for the wallet',\n    example: 'addr1q934ccfkwy292....',\n  })\n  walletAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LpTokenOperationResult.html":{"url":"classes/LpTokenOperationResult.html","title":"class - LpTokenOperationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LpTokenOperationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Result of an LP token operation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                error\n                            \n                            \n                                    \n                                success\n                            \n                            \n                                    \n                                    Optional\n                                transactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Error message if the operation failed', example: 'Insufficient balance', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether the operation was successful', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        transactionHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash if the operation was successful', example: '0x123...abc', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LpTokensController.html":{"url":"controllers/LpTokensController.html","title":"controller - LpTokensController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LpTokensController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/lp-tokens.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lp-tokens\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                extractLpTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        extractLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractLpTokens(extractDto: ExtractLpTokensDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('extract')@ApiOperation({summary: 'Extract LP tokens from a vault', description: 'Extracts LP tokens from a specified vault to a wallet address.'})@ApiResponse({status: undefined, description: 'LP tokens extraction initiated successfully'})@ApiResponse({status: undefined, description: 'Invalid input parameters'})@ApiResponse({status: undefined, description: 'Unauthorized'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/lp-tokens.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extractDto\n                                            \n                                                            ExtractLpTokensDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, BadRequestException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@/modules/auth/auth.guard';\n\nimport { ExtractLpTokensDto } from './dto/extract-lp-tokens.dto';\nimport { LpTokensService } from './services/lp-tokens.service';\n\n@ApiTags('LP Tokens')\n@Controller('lp-tokens')\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class LpTokensController {\n  constructor(private readonly lpTokensService: LpTokensService) {}\n\n  @Post('extract')\n  @ApiOperation({\n    summary: 'Extract LP tokens from a vault',\n    description: 'Extracts LP tokens from a specified vault to a wallet address.',\n  })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'LP tokens extraction initiated successfully',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Invalid input parameters',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Unauthorized',\n  })\n  async extractLpTokens(@Body() extractDto: ExtractLpTokensDto) {\n    try {\n      const result = await this.lpTokensService.extractLpTokens(extractDto);\n      return {\n        success: true,\n        transactionId: result.transactionId,\n        message: 'LP tokens extraction initiated successfully',\n      };\n    } catch (error) {\n      throw new BadRequestException({\n        success: false,\n        message: error.message || 'Failed to extract LP tokens',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LpTokensModule.html":{"url":"modules/LpTokensModule.html","title":"module - LpTokensModule","body":"\n                   \n\n\n\n\n    Modules\n    LpTokensModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LpTokensModule\n\n\n\ncluster_LpTokensModule_exports\n\n\n\ncluster_LpTokensModule_imports\n\n\n\ncluster_LpTokensModule_providers\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nLpTokensModule\n\nLpTokensModule\n\nLpTokensModule -->\n\nBlockchainModule->LpTokensModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nLpTokensModule -->\n\nTransactionsModule->LpTokensModule\n\n\n\n\n\nLpTokensService \n\nLpTokensService \n\nLpTokensService  -->\n\nLpTokensModule->LpTokensService \n\n\n\n\n\nLpTokensService\n\nLpTokensService\n\nLpTokensModule -->\n\nLpTokensService->LpTokensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/lp-tokens.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LpTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LpTokensController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LpTokensService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsModule } from '../processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from '../processing-tx/onchain/blockchain.module';\n\nimport { LpTokensController } from './lp-tokens.controller';\nimport { LpTokensService } from './services/lp-tokens.service';\n\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Transaction, Vault]), TransactionsModule, BlockchainModule, ConfigModule],\n  controllers: [LpTokensController],\n  providers: [LpTokensService],\n  exports: [LpTokensService],\n})\nexport class LpTokensModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LpTokensService.html":{"url":"injectables/LpTokensService.html","title":"injectable - LpTokensService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LpTokensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/services/lp-tokens.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminKeyHash\n                            \n                            \n                                    Private\n                                    Readonly\n                                adminSKey\n                            \n                            \n                                    Private\n                                blockfrost\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                scPolicyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                burnLpTokens\n                            \n                            \n                                    Async\n                                distributeLpTokens\n                            \n                            \n                                    Async\n                                extractLpTokens\n                            \n                            \n                                    Private\n                                generateMockTransactionHash\n                            \n                            \n                                    Private\n                                isValidAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionsService: TransactionsService, transactionRepository: Repository, vaultRepository: Repository, blockchainService: BlockchainService, configService: ConfigService, blockchainScanner: BlockchainScannerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainScanner\n                                                  \n                                                        \n                                                                        BlockchainScannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        burnLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnLpTokens(burnDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:299\n                        \n                    \n\n\n            \n                \n                        Burns LP tokens from a specified wallet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                burnDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Operation result with success status and transaction hash if successful\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        distributeLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    distributeLpTokens(dropDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:341\n                        \n                    \n\n\n            \n                \n                        Drops LP tokens to a specified wallet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dropDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Operation result with success status and transaction hash if successful\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        extractLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractLpTokens(extractDto: ExtractLpTokensParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Extracts LP tokens from a vault to a specified wallet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extractDto\n                                            \n                                                            ExtractLpTokensParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Operation result with success status and transaction hash if successful\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateMockTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateMockTransactionHash()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:388\n                        \n                    \n\n\n            \n                \n                        Generates a mock transaction hash for testing\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A mock transaction hash string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValidAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:372\n                        \n                    \n\n\n            \n                \n                        Validates a Cardano wallet address\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe wallet address to validate\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicating if the address is valid\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminKeyHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminSKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        blockfrost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LpTokensService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scPolicyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport { FixedTransaction, PlutusData, PrivateKey } from '@emurgo/cardano-serialization-lib-nodejs';\nimport {\n  Injectable,\n  Logger,\n  BadRequestException,\n  NotFoundException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\nimport { BlockchainScannerService } from '../../processing-tx/onchain/blockchain-scanner.service';\nimport { BlockchainService } from '../../processing-tx/onchain/blockchain.service';\nimport { Datum, Redeemer1 } from '../../processing-tx/onchain/types/type';\nimport { applyContributeParams, toPreloadedScript } from '../../processing-tx/onchain/utils/apply_params';\nimport blueprint from '../../processing-tx/onchain/utils/blueprint.json';\nimport { generate_tag_from_txhash_index } from '../../processing-tx/onchain/utils/lib';\nimport { LpTokenOperationResult, ExtractLpTokensParams } from '../types/lp-token.types';\n\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { TransactionType } from '@/types/transaction.types';\n\n@Injectable()\nexport class LpTokensService {\n  private readonly adminSKey: string;\n  private readonly scPolicyId: string;\n  private readonly adminKeyHash: string;\n  private blockfrost: any;\n\n  constructor(\n    private readonly transactionsService: TransactionsService,\n    @InjectRepository(Transaction)\n    private readonly transactionRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    private readonly blockchainService: BlockchainService,\n    private readonly configService: ConfigService,\n    private readonly blockchainScanner: BlockchainScannerService\n  ) {\n    this.adminKeyHash = this.configService.get('ADMIN_KEY_HASH');\n    if (!this.adminKeyHash) {\n      throw new Error('ADMIN_KEY_HASH environment variable is not set');\n    }\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n  private readonly logger = new Logger(LpTokensService.name);\n\n  /**\n   * Extracts LP tokens from a vault to a specified wallet\n   * @param vaultId The ID of the vault to extract tokens from\n   * @param walletAddress The wallet address to send the tokens to\n   * @param amount The amount of LP tokens to extract\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Extracts LP tokens from a vault to a specified wallet\n   * @param params Parameters for the extraction operation\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Extracts LP tokens from a vault to a specified wallet\n   * @param extractDto - DTO containing extraction parameters\n   * @returns Operation result with transaction details\n   */\n  async extractLpTokens(extractDto: ExtractLpTokensParams): Promise {\n    const { vaultId, walletAddress, amount, txHash, txIndex } = extractDto;\n\n    if (!this.isValidAddress(walletAddress)) {\n      throw new BadRequestException('Invalid wallet address');\n    }\n\n    // Create internal transaction with type extractLp, status pending and vault id\n    const transaction = await this.transactionsService.createTransaction({\n      vault_id: vaultId,\n      type: TransactionType.extractLp,\n      assets: [], // No assets for LP extraction, just the transaction\n      amount: amount,\n    });\n\n    this.logger.log(`Created extract LP transaction ${transaction.id} for vault ${vaultId}`);\n\n    try {\n      this.logger.log(`Extracting ${amount} LP tokens from vault ${vaultId} to ${walletAddress}`);\n\n      // 1. Get vault details\n      const vault = await this.vaultRepository.findOne({ where: { id: vaultId } });\n      if (!vault) {\n        throw new NotFoundException(`Vault with ID ${vaultId} not found`);\n      }\n\n      // 2. Get the last update transaction details\n      const lastUpdateTx = await this.transactionsService.getLastVaultUpdate(vaultId);\n      if (!lastUpdateTx) {\n        throw new NotFoundException('No update transaction found for this vault');\n      }\n      const LAST_UPDATE_TX_INDEX = 0; // The index off the output in the transaction\n\n      const TX_HASH_INDEX_WITH_LPS_TO_COLLECT = '904bebf8c7f5d9ee343147cf8bbee24ec1beafe1e73c7d0a1c74b83c4f7a0b35#2';\n      const LAST_UPDATE_TX_HASH = 'b255d78aaf821388e00cbc03e09add05810e346b2b1f2a5db236752aec116a50';\n\n      // Get transaction details and extract policy information\n      this.logger.log(`Getting transaction details for publication hash: ${vault.publication_hash}`);\n\n      // Validate output amoun\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[1].unit));\n\n      const vaultPolicyPlusName = output_amount[1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      this.logger.log(`Extracted - Policy ID: ${VAULT_POLICY_ID}, Vault ID: ${VAULT_ID}`);\n\n      let parameterizedScript;\n      try {\n        this.logger.log('Applying parameters to contribute script...');\n        parameterizedScript = applyContributeParams({\n          vault_policy_id: VAULT_POLICY_ID,\n          vault_id: VAULT_ID,\n        });\n\n        if (!parameterizedScript?.validator?.hash) {\n          throw new Error('Failed to parameterize script: Invalid response from applyContributeParams');\n        }\n\n        this.logger.log(`Successfully parameterized script. Hash: ${parameterizedScript.validator.hash}`);\n      } catch (error) {\n        this.logger.error('Error in applyContributeParams:', error);\n        throw new Error(`Failed to apply parameters to script: ${error.message}`);\n      }\n\n      const lpsUnit = parameterizedScript.validator.hash + VAULT_ID;\n\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const [tx_hash, index] = TX_HASH_INDEX_WITH_LPS_TO_COLLECT.split('#');\n      const txUtxos = await this.blockfrost.txsUtxos(tx_hash);\n      const output = txUtxos.outputs[index];\n      if (!output) {\n        throw new Error('No output found');\n      }\n      const amountOfLpsToClaim = output.amount.find((a: { unit: string; quantity: string }) => a.unit === lpsUnit);\n      const datumTag = generate_tag_from_txhash_index(tx_hash, Number(index));\n      if (!amountOfLpsToClaim) {\n        console.log(JSON.stringify(output));\n        throw new Error('No lps to claim.');\n      }\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      // 3. Prepare transaction input for LP token extraction\n      const txInput: {\n        changeAddress: string;\n        message: string;\n        mint?: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets?: object[];\n          lovelace?: number;\n          datum?: { type: 'inline'; value: string | Datum; shape?: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: walletAddress,\n        message: 'Admin extract asset',\n        scriptInteractions: [\n          {\n            purpose: 'spend',\n            hash: POLICY_ID,\n            outputRef: {\n              txHash: tx_hash,\n              index: index,\n            },\n            redeemer: {\n              type: 'json',\n              value: {\n                __variant: 'ExtractAsset',\n                __data: {\n                  lp_output_index: 0,\n                },\n              } satisfies Redeemer1,\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: walletAddress,\n            assets: [\n              {\n                assetName: { name: VAULT_ID, format: 'hex' },\n                policyId: parameterizedScript.validator.hash,\n                quantity: 1000,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: PlutusData.new_bytes(Buffer.from(datumTag, 'hex')).to_hex(),\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminKeyHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      const inputWithNoPreloaded = { ...txInput };\n      //@ts-ignore\n      delete inputWithNoPreloaded.preloadedScripts;\n      console.log(JSON.stringify(inputWithNoPreloaded));\n\n      // 4. Build the transaction\n      const buildResponse = await this.blockchainService.buildTransaction(txInput);\n\n      // 5. Sign the transaction with admin key\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n\n      // Sign with both admin and customer keys if needed\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n      // If customer signature is needed:\n      // txToSubmitOnChain.sign_and_add_vkey_signature(\n      //   PrivateKey.from_bech32(customerSKey),\n      // );\n\n      // 6. Submit the signed transaction\n      const submitResponse = await this.blockchainService.submitTransaction({\n        transaction: txToSubmitOnChain.to_hex(),\n        signatures: [], // Signatures are already added to the transaction\n      });\n\n      // 7. Update the transaction with the hash\n      await this.transactionsService.updateTransactionHash(transaction.id, submitResponse.txHash);\n\n      const result: LpTokenOperationResult = {\n        success: true,\n        transactionId: submitResponse.txHash,\n        message: 'LP tokens extracted successfully',\n        transaction: await this.transactionsService.getTransaction(submitResponse.txHash),\n      };\n      return result;\n    } catch (error) {\n      this.logger.error(`Failed to extract LP tokens: ${error.message}`, error.stack);\n      throw new InternalServerErrorException('Failed to process LP token extraction');\n    }\n  }\n\n  /**\n   * Burns LP tokens from a specified wallet\n   * @param walletAddress The wallet address that holds the LP tokens\n   * @param amount The amount of LP tokens to burn\n   * @returns Operation result with success status and transaction hash if successful\n   * @param params Parameters for the burning operation\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Burns LP tokens from a specified wallet\n   * @param burnDto - DTO containing burn parameters\n   * @returns Operation result with transaction details\n   */\n  async burnLpTokens(burnDto: any): Promise {\n    const { walletAddress, amount } = burnDto;\n\n    if (!this.isValidAddress(walletAddress)) {\n      throw new BadRequestException('Invalid wallet address');\n    }\n\n    try {\n      this.logger.log(`Burning ${amount} LP tokens from wallet ${walletAddress}`);\n\n      // TODO: Implement actual LP token burning logic\n      // This is a placeholder implementation\n      const transactionHash = this.generateMockTransactionHash();\n\n      const result: LpTokenOperationResult = {\n        success: true,\n        transactionId: transactionHash,\n        message: 'LP tokens burned successfully',\n      };\n      return result;\n    } catch (error) {\n      this.logger.error(`Failed to burn LP tokens: ${error.message}`, error.stack);\n      throw new InternalServerErrorException('Failed to process LP token burn');\n    }\n  }\n\n  /**\n   * Drops LP tokens to a specified wallet\n   * @param walletAddress The wallet address to receive the LP tokens\n   * @param amount The amount of LP tokens to drop\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Drops LP tokens to a specified wallet\n   * @param params Parameters for the drop operation\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Drops LP tokens to a specified wallet\n   * @param dropDto - DTO containing drop parameters\n   * @returns Operation result with transaction details\n   */\n  async distributeLpTokens(dropDto: any): Promise {\n    const { walletAddress, amount } = dropDto;\n\n    if (!this.isValidAddress(walletAddress)) {\n      throw new BadRequestException('Invalid wallet address');\n    }\n\n    try {\n      this.logger.log(`Dropping ${amount} LP tokens to wallet ${walletAddress}`);\n\n      // TODO: Implement actual LP token dropping logic\n      // This is a placeholder implementation\n      const transactionHash = this.generateMockTransactionHash();\n\n      const result: LpTokenOperationResult = {\n        success: true,\n        transactionId: transactionHash,\n        message: 'LP tokens distributed successfully',\n      };\n      return result;\n    } catch (error) {\n      this.logger.error(`Failed to drop LP tokens: ${error.message}`, error.stack);\n      throw new InternalServerErrorException('Failed to process LP token drop');\n    }\n  }\n\n  /**\n   * Validates a Cardano wallet address\n   * @param address - The wallet address to validate\n   * @returns boolean indicating if the address is valid\n   */\n  private isValidAddress(address: string): boolean {\n    // Basic validation for Cardano addresses\n    // Supports both mainnet (addr1) and testnet (addr_test1) addresses\n    return (\n      typeof address === 'string' &&\n      (address.startsWith('addr1') ||\n        address.startsWith('addr_test1') ||\n        address.startsWith('stake1') ||\n        address.startsWith('stake_test1'))\n    );\n  }\n\n  /**\n   * Generates a mock transaction hash for testing\n   * @returns A mock transaction hash string\n   */\n  private generateMockTransactionHash(): string {\n    return '0x' + Math.random().toString(16).substr(2, 64);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataFile.html":{"url":"classes/MetadataFile.html","title":"class - MetadataFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                mediaType\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mediaType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NftAsset.html":{"url":"classes/NftAsset.html","title":"class - NftAsset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NftAsset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                assetName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                policyId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        assetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Asset name', example: 'l4vaaudiEngine'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the NFT', example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Quantity of the asset', example: 1})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OnchainMetadata.html":{"url":"classes/OnchainMetadata.html","title":"class - OnchainMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OnchainMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                mediaType\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mediaType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                limit\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                total\n                            \n                            \n                                    \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginatedResponseDto {\n  @ApiProperty()\n  items: T[];\n\n  @ApiProperty()\n  total: number;\n\n  @ApiProperty()\n  page: number;\n\n  @ApiProperty()\n  limit: number;\n\n  @ApiProperty()\n  totalPages: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 10})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/pagination.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 1})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/pagination.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsNumber, IsOptional, Min } from 'class-validator';\n\nexport class PaginationDto {\n  @IsNumber()\n  @IsOptional()\n  @Min(1)\n  @Type(() => Number)\n  @ApiProperty({ required: false, minimum: 1, default: 1 })\n  @Expose()\n  page?: number = 1;\n\n  @IsNumber()\n  @IsOptional()\n  @Min(1)\n  @Type(() => Number)\n  @ApiProperty({ required: false, minimum: 1, default: 10 })\n  @Expose()\n  limit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PolicyId1749726859213.html":{"url":"classes/PolicyId1749726859213.html","title":"class - PolicyId1749726859213","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PolicyId1749726859213\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1749726859213-PolicyId.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PolicyId1749726859213'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1749726859213-PolicyId.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749726859213-PolicyId.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749726859213-PolicyId.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class PolicyId1749726859213 implements MigrationInterface {\n    name = 'PolicyId1749726859213'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PolicyIdRestore1749727852748.html":{"url":"classes/PolicyIdRestore1749727852748.html","title":"class - PolicyIdRestore1749727852748","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PolicyIdRestore1749727852748\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1749727852748-policyIdRestore.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PolicyIdRestore1749727852748'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1749727852748-policyIdRestore.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749727852748-policyIdRestore.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749727852748-policyIdRestore.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class PolicyIdRestore1749727852748 implements MigrationInterface {\n    name = 'PolicyIdRestore1749727852748'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"policy_id\" character varying`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"policy_id\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicProfileRes.html":{"url":"classes/PublicProfileRes.html","title":"class - PublicProfileRes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicProfileRes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/public-profile.res.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                bannerImage\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                profileImage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socialLinks\n                            \n                            \n                                    \n                                    \n                                totalVaults\n                            \n                            \n                                    \n                                    \n                                tvl\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bannerImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform:  => , expose: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socialLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinkEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalVaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { DtoRepresent } from '../../../decorators/dto-represents.decorator';\n\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\n\nexport class PublicProfileRes {\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  id: string;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  name: string;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  description?: string;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  address: string;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: { name: 'profileImage' },\n  })\n  profileImage?: FileEntity;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  bannerImage?: FileEntity;\n\n  @ApiProperty({ type: [LinkEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  socialLinks?: LinkEntity[];\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  tvl: number;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  totalVaults: number;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  createdAt: string;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublishVaultDto.html":{"url":"classes/PublishVaultDto.html","title":"class - PublishVaultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublishVaultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/publish-vault.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                signatures\n                            \n                            \n                                    \n                                    \n                                    \n                                transaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                txId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        signatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of CBOR  encoded signatures', example: undefined, required: false})@IsOptional()@IsString({each: true})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded transaction', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID (optional) ', example: '123e4567-e89b-12d3-a456-426614174000', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Vault ID', example: '83a400...'})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNotEmpty, IsOptional } from 'class-validator';\n\nexport class PublishVaultDto {\n  @ApiProperty({\n    description: 'Vault ID',\n    example: '83a400...',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR  encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ each: true })\n  @Expose()\n  signatures?: string[];\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (optional) ',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  txId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RawBodyMiddleware.html":{"url":"injectables/RawBodyMiddleware.html","title":"injectable - RawBodyMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RawBodyMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/raw-body.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/raw-body.middleware.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RawBodyMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/raw-body.middleware.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, Logger } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport * as rawBody from 'raw-body';\n\n@Injectable()\nexport class RawBodyMiddleware implements NestMiddleware {\n  private readonly logger = new Logger(RawBodyMiddleware.name);\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (!req.readable) {\n      return next();\n    }\n\n    try {\n      const raw = await rawBody(req);\n      const rawText = raw.toString().trim();\n      req['rawBody'] = rawText;\n\n      // Log the raw body for debugging\n      this.logger.debug('Raw webhook body:', {\n        length: rawText.length,\n        preview: rawText.substring(0, 100) + '...',\n      });\n\n      // Re-create the body stream\n      req.body = JSON.parse(rawText);\n    } catch (error) {\n      this.logger.error('Error processing raw body:', error);\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameFieldFixEnum1742800375799.html":{"url":"classes/RenameFieldFixEnum1742800375799.html","title":"class - RenameFieldFixEnum1742800375799","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameFieldFixEnum1742800375799\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742800375799-renameFieldFixEnum.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameFieldFixEnum1742800375799'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742800375799-renameFieldFixEnum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800375799-renameFieldFixEnum.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800375799-renameFieldFixEnum.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameFieldFixEnum1742800375799 implements MigrationInterface {\n  name = 'RenameFieldFixEnum1742800375799';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum\" RENAME TO \"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum\" AS ENUM('custom', 'upon-vault-lunch', 'upon-vault-launch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `UPDATE vaults SET contribution_open_window_type = 'upon-vault-launch' WHERE contribution_open_window_type = 'upon-vault-lunch';`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" AS ENUM('custom', 'upon-vault-lunch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" RENAME TO \"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `UPDATE vaults SET contribution_open_window_type = 'upon-vault-lunch' WHERE contribution_open_window_type = 'upon-vault-launch';`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameFields1746536544579.html":{"url":"classes/RenameFields1746536544579.html","title":"class - RenameFields1746536544579","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameFields1746536544579\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1746536544579-renameFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameFields1746536544579'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1746536544579-renameFields.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746536544579-renameFields.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746536544579-renameFields.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameFields1746536544579 implements MigrationInterface {\n  name = 'RenameFields1746536544579';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"acquirer_whitelist\" DROP CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"valuation_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_valuation_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXIST \"off_assets_offered\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_token_ticker\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_acquire_reserve\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_value_method_enum\" AS ENUM('lbe', 'fixed')`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"value_method\" \"public\".\"vaults_value_method_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"tokens_for_acquires\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"vault_token_ticker\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"vault_token_ticker\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_reserve\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"tokens_for_acquires\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"value_method\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_value_method_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_acquire_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_token_ticker\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"off_assets_offered\" numeric`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_valuation_type_enum\" AS ENUM('lbe', 'fixed')`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"valuation_type\" \"public\".\"vaults_valuation_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"acquirer_whitelist\" ADD CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameInvestmentToAcquire1746531791148.html":{"url":"classes/RenameInvestmentToAcquire1746531791148.html","title":"class - RenameInvestmentToAcquire1746531791148","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameInvestmentToAcquire1746531791148\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1746531791148-renameInvestmentToAcquire.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameInvestmentToAcquire1746531791148'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1746531791148-renameInvestmentToAcquire.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746531791148-renameInvestmentToAcquire.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746531791148-renameInvestmentToAcquire.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameInvestmentToAcquire1746531791148 implements MigrationInterface {\n  name = 'RenameInvestmentToAcquire1746531791148';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT IF EXISTS \"FK_3e6ff48532fbe552bbb6c4098bd\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT IF EXISTS \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT IF EXISTS \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_open_window_type\"`);\n    await queryRunner.query(`DROP TYPE IF EXISTS \"public\".\"vaults_investment_open_window_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_open_window_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"ft_investment_reserve\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT IF EXISTS \"REL_3e6ff48532fbe552bbb6c4098b\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investors_whitelist_csv_id\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_phase_start\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_window_duration\" bigint`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_acquire_open_window_type_enum\" AS ENUM('custom', 'upon-asset-window-closing')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD \"acquire_open_window_type\" \"public\".\"vaults_acquire_open_window_type_enum\"`\n    );\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_open_window_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_acquire_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_phase_start\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquirer_whitelist_csv_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"UQ_c211339d9110a71f1e7b65d87b5\" UNIQUE (\"acquirer_whitelist_csv_id\")`\n    );\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum\" RENAME TO \"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'acquire', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE IF EXISTS \"public\".\"transactions_type_enum_old\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'created', 'published', 'contribution', 'acquire', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE IF EXISTS \"public\".\"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_c211339d9110a71f1e7b65d87b5\" FOREIGN KEY (\"acquirer_whitelist_csv_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_c211339d9110a71f1e7b65d87b5\"`);\n    await queryRunner.query(`ALTER TABLE \"acquirer_whitelist\" DROP CONSTRAINT \"FK_cba6b5306e74553edd3b94a000a\"`);\n\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'created', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum_old\" AS ENUM('mint', 'payment', 'contribute', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum_old\" RENAME TO \"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"UQ_c211339d9110a71f1e7b65d87b5\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquirer_whitelist_csv_id\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_phase_start\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_acquire_reserve\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_open_window_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_open_window_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_acquire_open_window_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" bigint`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_phase_start\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investors_whitelist_csv_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"REL_3e6ff48532fbe552bbb6c4098b\" UNIQUE (\"investors_whitelist_csv_id\")`\n    );\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_investment_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_open_window_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_investment_open_window_type_enum\" AS ENUM('custom', 'upon-asset-window-closing')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD \"investment_open_window_type\" \"public\".\"vaults_investment_open_window_type_enum\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_3e6ff48532fbe552bbb6c4098bd\" FOREIGN KEY (\"investors_whitelist_csv_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameVaultField1742382533813.html":{"url":"classes/RenameVaultField1742382533813.html","title":"class - RenameVaultField1742382533813","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameVaultField1742382533813\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742382533813-RenameVaultField.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameVaultField1742382533813'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742382533813-RenameVaultField.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742382533813-RenameVaultField.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742382533813-RenameVaultField.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameVaultField1742382533813 implements MigrationInterface {\n  name = 'RenameVaultField1742382533813';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" RENAME COLUMN \"ft_investment_reverse\" TO \"ft_investment_reserve\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" RENAME COLUMN \"ft_investment_reserve\" TO \"ft_investment_reverse\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReplaceLockedStateToGovernance1743424803837.html":{"url":"classes/ReplaceLockedStateToGovernance1743424803837.html","title":"class - ReplaceLockedStateToGovernance1743424803837","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReplaceLockedStateToGovernance1743424803837\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ReplaceLockedStateToGovernance1743424803837'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ReplaceLockedStateToGovernance1743424803837 implements MigrationInterface {\n  name = 'ReplaceLockedStateToGovernance1743424803837';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"governance_phase_start\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"governance_phase_start\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignatureData.html":{"url":"classes/SignatureData.html","title":"class - SignatureData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignatureData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Public key for signature verification', example: 'a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Signature data', example: '84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, IsString, IsObject, ValidateNested } from 'class-validator';\n\nexport class SignatureData {\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Public key for signature verification',\n    example: 'a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883',\n  })\n  key: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Signature data',\n    example:\n      '84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e',\n  })\n  signature: string;\n}\n\nexport class LoginReq {\n  @Expose()\n  @IsNotEmpty()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => SignatureData)\n  @ApiProperty({\n    description: 'Signature data for authentication',\n    type: SignatureData,\n  })\n  signature: SignatureData;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Stake address for the wallet',\n    example: 'stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4',\n  })\n  stakeAddress: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Wallet address for the wallet',\n    example: 'addr1q934ccfkwy292....',\n  })\n  walletAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialLink.html":{"url":"classes/SocialLink.html","title":"class - SocialLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUrl()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialLinkDto.html":{"url":"classes/SocialLinkDto.html","title":"class - SocialLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the social platform', example: 'twitter'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL to the social profile', example: 'https://twitter.com/username'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsOptional, IsArray, IsNumber, IsObject } from 'class-validator';\nimport { SocialLink } from '@/modules/vaults/types';\n\nexport class SocialLinkDto {\n  @ApiProperty({\n    description: 'Name of the social platform',\n    example: 'twitter',\n  })\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: 'URL to the social profile',\n    example: 'https://twitter.com/username',\n  })\n  @IsString()\n  @Expose()\n  url: string;\n}\n\nexport class UpdateProfileDto {\n  @ApiProperty({\n    description: 'User display name',\n    example: 'John Doe',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  name?: string;\n\n  @ApiProperty({\n    description: 'User profile description/bio',\n    example: 'Experienced crypto investor and NFT collector',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  description?: string;\n\n  @ApiProperty({\n    description: 'Profile image file URL (format: image/)',\n    example: 'image/profile-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  profileImage?: string;\n\n  @ApiProperty({\n    description: 'Banner image file URL (format: image/)',\n    example: 'image/banner-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImage?: string;\n\n  @ApiProperty({\n    description: 'Total Value Locked in user vaults',\n    example: 1000000,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  tvl?: number;\n\n  @ApiProperty({\n    description: 'Total number of vaults owned by user',\n    example: 5,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  totalVaults?: number;\n\n  @ApiProperty({\n    description: 'List of social media links',\n    type: [SocialLinkDto],\n    required: false,\n  })\n  @IsArray()\n  @IsOptional()\n  @IsObject({ each: true })\n  @Expose()\n  socialLinks: SocialLink[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitTransactionDto.html":{"url":"classes/SubmitTransactionDto.html","title":"class - SubmitTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                signatures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                transaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                txId\n                            \n                            \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        signatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of CBOR encoded signatures', example: undefined, required: false})@IsOptional()@IsArray()@IsString({each: true})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded transaction', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID', example: '83a400...', required: true})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'vault id ', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:105\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubmitTransactionParams.html":{"url":"interfaces/SubmitTransactionParams.html","title":"interface - SubmitTransactionParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubmitTransactionParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            signatures\n                                        \n                                \n                                \n                                        \n                                            transaction\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        signatures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signatures:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      console.log('INPUT ', input);\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitVaultTxDto.html":{"url":"classes/SubmitVaultTxDto.html","title":"class - SubmitVaultTxDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitVaultTxDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SubmitTransactionDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                signatures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                transaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                txId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Vault id', example: undefined, required: true})@IsNotEmpty()@IsString()@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:146\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        signatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of CBOR encoded signatures', example: undefined, required: false})@IsOptional()@IsArray()@IsString({each: true})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:134\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded transaction', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:123\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID', example: '83a400...', required: true})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:115\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagDto.html":{"url":"classes/TagDto.html","title":"class - TagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/tag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/dto/tag.dto.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the tag', example: 'NFT'})@IsNotEmpty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/tag.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class TagDto {\n  @ApiProperty({\n    description: 'Name of the tag',\n    example: 'NFT',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TagEntity.html":{"url":"entities/TagEntity.html","title":"entity - TagEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TagEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/tag.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                vaults\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/tag.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/tag.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        vaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'vaults'})@ManyToMany(undefined, vault => vault.tags)@JoinTable({name: 'vault_tags', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/tag.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToMany, JoinTable } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity('tags')\nexport class TagEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  name: string;\n\n  @Expose({ name: 'vaults' })\n  @ManyToMany(() => Vault, (vault: Vault) => vault.tags)\n  @JoinTable({\n    name: 'vault_tags',\n    joinColumn: {\n      name: 'tag_id',\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'vault_id',\n      referencedColumnName: 'id',\n    },\n  })\n  vaults: Vault[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaptoolsController.html":{"url":"controllers/TaptoolsController.html","title":"controller - TaptoolsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaptoolsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/taptools.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                taptools\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getWalletSummary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletSummary(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('summary')@ApiDoc({summary: 'Get info about price of wallet assets', description: 'Price select successfully', status: 200})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards, NotFoundException, Query } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\nimport { ApiDoc } from '../../decorators/api-doc.decorator';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { VaultAssetsSummaryDto } from '../vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto';\n\nimport { TaptoolsService } from './taptools.service';\n\n@Controller('taptools')\n@ApiTags('TapTools')\nexport class TaptoolsController {\n  constructor(private readonly taptoolsService: TaptoolsService) {}\n\n  @Get('summary')\n  @ApiDoc({\n    summary: 'Get info about price of wallet assets',\n    description: 'Price select successfully',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  async getWalletSummary(@Query('address') address: string) {\n    return this.taptoolsService.getWalletSummary(address);\n  }\n\n  // @Get('vault/:vaultId/assets/value')\n  // @ApiOperation({\n  //   summary: 'Get the total value of assets in a vault',\n  //   description: 'Calculates the total value of all assets in the specified vault in both ADA and USD.'\n  // })\n  // @ApiResponse({\n  //   status: 200,\n  //   description: 'Successfully retrieved vault assets value',\n  //   type: VaultAssetsSummaryDto\n  // })\n  // @ApiResponse({\n  //   status: 404,\n  //   description: 'Vault not found'\n  // })\n  // @UseGuards(AuthGuard)\n  // async getVaultAssetsValue(@Param('vaultId') vaultId: string): Promise {\n  //   try {\n  //     return await this.taptoolsService.calculateVaultAssetsValue(vaultId);\n  //   } catch (error) {\n  //     if (error instanceof NotFoundException) {\n  //       throw new NotFoundException(`Vault with ID ${vaultId} not found`);\n  //     }\n  //     throw error;\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaptoolsModule.html":{"url":"modules/TaptoolsModule.html","title":"module - TaptoolsModule","body":"\n                   \n\n\n\n\n    Modules\n    TaptoolsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaptoolsModule\n\n\n\ncluster_TaptoolsModule_exports\n\n\n\ncluster_TaptoolsModule_providers\n\n\n\n\nTaptoolsService \n\nTaptoolsService \n\n\n\nTaptoolsModule\n\nTaptoolsModule\n\nTaptoolsService  -->\n\nTaptoolsModule->TaptoolsService \n\n\n\n\n\nTaptoolsService\n\nTaptoolsService\n\nTaptoolsModule -->\n\nTaptoolsService->TaptoolsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/taptools/taptools.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaptoolsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaptoolsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TaptoolsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\n\nimport { TaptoolsController } from './taptools.controller';\nimport { TaptoolsService } from './taptools.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Vault, Asset])],\n  providers: [TaptoolsService],\n  exports: [TaptoolsService],\n  controllers: [TaptoolsController],\n})\nexport class TaptoolsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaptoolsService.html":{"url":"injectables/TaptoolsService.html","title":"injectable - TaptoolsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaptoolsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/taptools.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                blockfrostTestnetUrl\n                            \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                taptoolsApiKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateVaultAssetsValue\n                            \n                            \n                                    Private\n                                    Async\n                                getAdaPrice\n                            \n                            \n                                    Private\n                                    Async\n                                getAssetDetails\n                            \n                            \n                                    Async\n                                getAssetValue\n                            \n                            \n                                    Private\n                                    Async\n                                getMainnetWalletSummary\n                            \n                            \n                                    Private\n                                    Async\n                                getTestnetWalletSummary\n                            \n                            \n                                    Async\n                                getWalletSummary\n                            \n                            \n                                    Private\n                                isTestnetAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultRepository: Repository, assetRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/taptools/taptools.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateVaultAssetsValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateVaultAssetsValue(vaultId: string, phase: \"contribute\" | \"acquire\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:377\n                        \n                    \n\n\n            \n                \n                        Calculate the total value of all assets in a vault\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The ID of the vault\n\n                                            \n                                        \n                                        \n                                                phase\n                                            \n                                                        \"contribute\" | \"acquire\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'contribute'\n                                            \n\n                                            \n                                                    The phase to filter assets by - 'contribute' for contributed assets, 'acquire' for invested assets\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise with the vault assets summary\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getAdaPrice\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAdaPrice()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getAssetDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssetDetails(assetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAssetValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssetValue(policyId: string, assetName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:335\n                        \n                    \n\n\n            \n                \n                        Get the value of an asset in ADA and USD\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                policyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The policy ID of the asset\n\n                                            \n                                        \n                                        \n                                                assetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The asset name (hex encoded)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise with the asset value in ADA and USD\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getMainnetWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMainnetWalletSummary(walletAddress: string, adaPriceUsd: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                adaPriceUsd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getTestnetWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTestnetWalletSummary(walletAddress: string, adaPriceUsd: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                adaPriceUsd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletSummary(walletAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTestnetAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTestnetAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://openapi.taptools.io/api/v1'\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        blockfrostTestnetUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://cardano-preprod.blockfrost.io/api/v0/'\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NodeCache({ stdTTL: 60 })\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TaptoolsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        taptoolsApiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport axios from 'axios';\nimport * as NodeCache from 'node-cache';\nimport { Repository } from 'typeorm';\n\nimport { VaultAssetsSummaryDto } from '../vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto';\n\nimport { AssetValueDto } from './dto/asset-value.dto';\nimport { WalletSummaryDto } from './dto/wallet-summary.dto';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { AssetOriginType, AssetStatus, AssetType } from '@/types/asset.types';\n\n@Injectable()\nexport class TaptoolsService {\n  private readonly logger = new Logger(TaptoolsService.name);\n\n  private readonly baseUrl = 'https://openapi.taptools.io/api/v1';\n  private readonly blockfrostTestnetUrl = 'https://cardano-preprod.blockfrost.io/api/v0/';\n  private cache = new NodeCache({ stdTTL: 60 }); // cache for 60 seconds\n  private readonly taptoolsApiKey: string;\n\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository\n  ) {\n    this.taptoolsApiKey = process.env.TAPTOOLS_API_KEY || '';\n  }\n\n  private isTestnetAddress(address: string): boolean {\n    return address.startsWith('addr_test');\n  }\n\n  private async getAdaPrice(): Promise {\n    const cacheKey = 'ada_price_usd';\n    const cachedPrice = this.cache.get(cacheKey);\n    if (cachedPrice !== undefined) return cachedPrice;\n\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price', {\n        params: {\n          ids: 'cardano',\n          vs_currencies: 'usd',\n        },\n      });\n\n      if (!response.data?.cardano?.usd) {\n        throw new HttpException('Invalid price data from API', 400);\n      }\n\n      const adaPrice = Number(response.data.cardano.usd);\n      this.cache.set(cacheKey, adaPrice);\n      return adaPrice;\n    } catch (err) {\n      console.error('Error fetching ADA price:', err.message);\n      throw new HttpException('Failed to fetch ADA price', 500);\n    }\n  }\n\n  async getWalletSummary(walletAddress: string): Promise {\n    const cacheKey = `wallet_summary_${walletAddress}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached) return cached;\n\n    try {\n      const adaPriceUsd = await this.getAdaPrice();\n\n      let summary: WalletSummaryDto;\n\n      if (this.isTestnetAddress(walletAddress)) {\n        summary = await this.getTestnetWalletSummary(walletAddress, adaPriceUsd);\n      } else {\n        summary = await this.getMainnetWalletSummary(walletAddress, adaPriceUsd);\n      }\n\n      this.cache.set(cacheKey, summary);\n      return summary;\n    } catch (err) {\n      console.error('Error fetching wallet summary:', err.message);\n      if (axios.isAxiosError(err)) {\n        throw new HttpException(\n          err.response?.data?.message || 'Failed to fetch wallet assets',\n          err.response?.status || 500\n        );\n      }\n      throw new HttpException('Failed to fetch or process wallet assets', 500);\n    }\n  }\n\n  private async getMainnetWalletSummary(walletAddress: string, adaPriceUsd: number): Promise {\n    const res = await axios.get(`${this.baseUrl}/wallet/portfolio/positions?address=${walletAddress}`, {\n      headers: {\n        'x-api-key': process.env.TAPTOOLS_API_KEY,\n      },\n      timeout: 15000,\n    });\n\n    if (!res.data) {\n      throw new HttpException('Invalid response format from API', 400);\n    }\n\n    const processedAssets: AssetValueDto[] = [];\n    const totalAda = res.data.adaValue || 0;\n    const totalUsd = totalAda * adaPriceUsd;\n\n    // Process fungible tokens\n    if (res.data.positionsFt) {\n      for (const ft of res.data.positionsFt) {\n        processedAssets.push({\n          tokenId: ft.unit,\n          name: ft.ticker,\n          displayName: ft.ticker,\n          quantity: ft.balance,\n          isNft: false,\n          isFungibleToken: true,\n          priceAda: ft.price,\n          priceUsd: ft.price * adaPriceUsd,\n          valueAda: ft.adaValue,\n          valueUsd: ft.adaValue * adaPriceUsd,\n        });\n      }\n    }\n\n    // Process NFTs\n    if (res.data.positionsNft) {\n      for (const nft of res.data.positionsNft) {\n        processedAssets.push({\n          tokenId: nft.policy,\n          name: nft.name,\n          displayName: nft.name,\n          quantity: nft.balance,\n          isNft: true,\n          isFungibleToken: false,\n          priceAda: nft.floorPrice,\n          priceUsd: nft.floorPrice * adaPriceUsd,\n          valueAda: nft.adaValue,\n          valueUsd: nft.adaValue * adaPriceUsd,\n        });\n      }\n    }\n\n    return {\n      wallet: walletAddress,\n      assets: processedAssets,\n      totalValueAda: +totalAda.toFixed(4),\n      totalValueUsd: +totalUsd.toFixed(4),\n      lastUpdated: new Date().toISOString(),\n      summary: {\n        totalAssets: processedAssets.length,\n        nfts: processedAssets.filter(a => a.isNft).length,\n        tokens: processedAssets.filter(a => a.isFungibleToken).length,\n        ada: totalAda,\n      },\n    };\n  }\n\n  private async getAssetDetails(assetId: string): Promise {\n    try {\n      const response = await axios.get(`${this.blockfrostTestnetUrl}/assets/${assetId}`, {\n        headers: {\n          project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n        },\n      });\n      return response.data;\n    } catch (err) {\n      console.error(`Error fetching asset details for ${assetId}:`, err.message);\n      return null;\n    }\n  }\n\n  private async getTestnetWalletSummary(walletAddress: string, adaPriceUsd: number): Promise {\n    try {\n      await axios.get(`${this.blockfrostTestnetUrl}addresses/${walletAddress}`, {\n        headers: {\n          project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n        },\n      });\n    } catch (err) {\n      this.logger.log('Error ', err);\n      return {\n        wallet: '',\n        assets: [],\n        totalValueAda: 0,\n        totalValueUsd: 0,\n        lastUpdated: '',\n        summary: {\n          totalAssets: 0,\n          nfts: 0,\n          tokens: 0,\n          ada: 0,\n        },\n      };\n    }\n    try {\n      // Get all assets in the wallet\n      const assetsResponse = await axios.get(`${this.blockfrostTestnetUrl}addresses/${walletAddress}/total`, {\n        headers: {\n          project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n        },\n      });\n\n      const processedAssets: AssetValueDto[] = [];\n\n      // Calculate actual balances from received_sum and sent_sum\n      const balances = new Map();\n\n      // Process received amounts\n      assetsResponse.data.received_sum.forEach(asset => {\n        balances.set(asset.unit, Number(asset.quantity));\n      });\n\n      // Subtract sent amounts\n      assetsResponse.data.sent_sum.forEach(asset => {\n        const currentBalance = balances.get(asset.unit) || 0;\n        balances.set(asset.unit, currentBalance - Number(asset.quantity));\n      });\n\n      // Process ADA amount\n      const totalAda = (balances.get('lovelace') || 0) / 1000000; // Convert lovelace to ADA\n      const totalUsd = totalAda * adaPriceUsd;\n\n      // Get detailed asset list for non-zero balances\n      const nonAdaAssets = Array.from(balances.entries())\n        .filter(([unit, balance]) => unit !== 'lovelace' && balance > 0)\n        .map(([unit, balance]) => ({ unit, quantity: balance }));\n\n      // Get asset details in batches to avoid rate limits\n      const batchSize = 10;\n      for (let i = 0; i  {\n          try {\n            // Get asset details\n            const assetDetails = await axios.get(`${this.blockfrostTestnetUrl}assets/${asset.unit}`, {\n              headers: {\n                project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n              },\n            });\n\n            return {\n              asset,\n              details: assetDetails.data,\n            };\n          } catch (error) {\n            console.error(`Error fetching details for asset ${asset.unit}:`, error.message);\n            return null;\n          }\n        });\n\n        const batchResults = await Promise.all(batchPromises);\n\n        // Process batch results\n        for (const result of batchResults) {\n          if (!result) continue;\n          const { asset, details } = result;\n          const isNft = Number(asset.quantity) === 1;\n          const metadata = details.onchain_metadata || details.metadata || {};\n\n          let assetName = asset.unit;\n          try {\n            if (details.asset_name) {\n              assetName = Buffer.from(details.asset_name, 'hex').toString('utf8');\n            }\n          } catch (error) {\n            console.warn(`Could not decode asset name for ${asset.unit}`);\n          }\n\n          processedAssets.push({\n            tokenId: asset.unit,\n            name: assetName,\n            displayName: metadata.name || undefined,\n            ticker: details.ticker || undefined,\n            quantity: Number(asset.quantity),\n            isNft,\n            isFungibleToken: !isNft,\n            priceAda: 0,\n            priceUsd: 0,\n            valueAda: 0,\n            valueUsd: 0,\n            metadata: {\n              policyId: details.policy_id,\n              fingerprint: details.fingerprint,\n              decimals: details.decimals || 0,\n              description: metadata.description,\n              image: metadata.image,\n              mediaType: metadata.mediaType,\n              files: details.onchain_metadata?.files || [],\n              attributes: metadata.attributes || {},\n              assetName: details.asset_name,\n              mintTx: details.initial_mint_tx_hash,\n              mintQuantity: details.quantity,\n              onchainMetadata: details.onchain_metadata || {},\n            },\n          });\n        }\n      }\n\n      const summary: WalletSummaryDto = {\n        wallet: walletAddress,\n        assets: processedAssets,\n        totalValueAda: +totalAda.toFixed(4),\n        totalValueUsd: +totalUsd.toFixed(4),\n        lastUpdated: new Date().toISOString(),\n        summary: {\n          totalAssets: processedAssets.length,\n          nfts: processedAssets.filter(a => a.isNft).length,\n          tokens: processedAssets.filter(a => a.isFungibleToken).length,\n          ada: totalAda,\n        },\n      };\n\n      return summary;\n    } catch (err) {\n      console.error('Error fetching testnet wallet summary:', err.message);\n      if (axios.isAxiosError(err)) {\n        throw new HttpException(\n          err.response?.data?.message || 'Failed to fetch testnet wallet assets',\n          err.response?.status || 500\n        );\n      }\n      throw new HttpException('Failed to fetch or process testnet wallet assets', 500);\n    }\n  }\n\n  /**\n   * Get the value of an asset in ADA and USD\n   * @param policyId The policy ID of the asset\n   * @param assetName The asset name (hex encoded)\n   * @returns Promise with the asset value in ADA and USD\n   */\n  async getAssetValue(policyId: string, assetName: string): Promise {\n    const cacheKey = `asset_value_${policyId}_${assetName}`;\n    const cached = this.cache.get(cacheKey);\n\n    if (cached) return cached;\n\n    try {\n      const response = await axios.get(`${this.baseUrl}/token/price`, {\n        headers: {\n          'x-api-key': this.taptoolsApiKey,\n        },\n        params: {\n          policy: policyId,\n          name: assetName,\n          currency: 'usd,ada',\n        },\n      });\n\n      if (!response.data?.data) {\n        throw new Error('Invalid response from TapTools API');\n      }\n\n      const result = {\n        priceAda: Number(response.data.data.ada) || 91,\n        priceUsd: Number(response.data.data.usd) || 123,\n      };\n\n      this.cache.set(cacheKey, result);\n      return result;\n    } catch (error) {\n      console.error(`Error fetching asset value for ${policyId}.${assetName}:`, error.message);\n      // Return zero values if the asset is not found or there's an error\n      return { priceAda: 91, priceUsd: 123 };\n    }\n  }\n\n  /**\n   * Calculate the total value of all assets in a vault\n   * @param vaultId The ID of the vault\n   * @param phase The phase to filter assets by - 'contribute' for contributed assets, 'acquire' for invested assets\n   * @returns Promise with the vault assets summary\n   */\n  async calculateVaultAssetsValue(\n    vaultId: string,\n    phase: 'contribute' | 'acquire' = 'contribute'\n  ): Promise {\n    // Get the vault to verify it exists\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n      relations: ['assets'],\n    });\n\n    if (!vault) {\n      throw new NotFoundException(`Vault with ID ${vaultId} not found`);\n    }\n\n    // Group assets by policyId and assetId to handle quantities\n    const assetMap = new Map;\n      }\n    >();\n\n    // Process each asset in the vault\n    for (const asset of vault.assets) {\n      // Skip assets that are not in a valid status for valuation or don't match the phase\n      if (asset.status !== AssetStatus.PENDING && asset.status !== AssetStatus.LOCKED) {\n        continue;\n      }\n\n      // Filter assets based on phase\n      if (\n        (phase === 'contribute' && asset.origin_type !== AssetOriginType.CONTRIBUTED) ||\n        (phase === 'acquire' && asset.origin_type !== AssetOriginType.ACQUIRED)\n      ) {\n        continue;\n      }\n\n      const key = `${asset.policy_id}_${asset.asset_id}`;\n      const existingAsset = assetMap.get(key);\n\n      if (existingAsset) {\n        // Sum quantities for fungible tokens\n        existingAsset.quantity += 1;\n      } else {\n        assetMap.set(key, {\n          policyId: asset.policy_id,\n          assetId: asset.asset_id,\n          quantity: 1,\n          isNft: asset.type === AssetType.NFT,\n          metadata: asset.metadata || {},\n        });\n      }\n    }\n\n    // Convert map to array for processing\n    const assets = Array.from(assetMap.values());\n\n    // Get asset values from TapTools\n    const assetsWithValues = [];\n    let totalValueAda = 0;\n    let totalValueUsd = 0;\n\n    for (const asset of assets) {\n      try {\n        // TODO: Test this\n        if (asset.assetId === 'lovelace') {\n          // Special case for ADA\n\n          const adaPrice = await this.getAdaPrice();\n          const totalAdaValue = asset.quantity * 1e-6; // Convert lovelace to ADA\n\n          assetsWithValues.push({\n            ...asset,\n            assetName: 'ADA',\n            valueAda: totalAdaValue,\n            valueUsd: totalAdaValue * adaPrice,\n          });\n          totalValueAda += totalAdaValue;\n          totalValueUsd += totalAdaValue * adaPrice;\n          continue;\n        }\n        // Get asset value in ADA\n        const assetValue = await this.getAssetValue(asset.policyId, asset.assetId);\n\n        const valueAda = assetValue?.priceAda || 0;\n        const valueUsd = assetValue?.priceUsd || 0;\n\n        // Calculate total value for this asset\n        const totalAssetValueAda = valueAda * asset.quantity;\n        const totalAssetValueUsd = valueUsd * asset.quantity;\n\n        assetsWithValues.push({\n          ...asset,\n          assetName: asset.assetId, // Using assetId as assetName for backward compatibility\n          valueAda: totalAssetValueAda,\n          valueUsd: totalAssetValueUsd,\n        });\n\n        totalValueAda += totalAssetValueAda;\n        totalValueUsd += totalAssetValueUsd;\n      } catch (error) {\n        // Skip assets that can't be valued\n        console.warn(`Could not value asset ${asset.policyId}.${asset.assetId}:`, error.message);\n      }\n    }\n\n    // Create and return the summary\n    const summary: VaultAssetsSummaryDto = {\n      totalValueAda: +totalValueAda.toFixed(6),\n      totalValueUsd: +totalValueUsd.toFixed(2),\n      totalAssets: assetsWithValues.length,\n      nfts: assetsWithValues.filter(a => a.isNft).length,\n      tokens: assetsWithValues.filter(a => !a.isNft).length,\n      lastUpdated: new Date().toISOString(),\n      assets: assetsWithValues.map(asset => ({\n        policyId: asset.policyId,\n        assetName: asset.assetId, // Using assetId as assetName for backward compatibility\n        quantity: asset.quantity,\n        valueAda: asset.valueAda,\n        valueUsd: asset.valueUsd,\n        isNft: asset.isNft,\n        metadata: asset.metadata,\n      })),\n    };\n\n    return summary;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenInfo.html":{"url":"classes/TokenInfo.html","title":"class - TokenInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/dto/create-pool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                assetName\n                            \n                            \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Amount of the token'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        assetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Asset name of the token'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the token'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsOptional, IsBoolean, IsObject } from 'class-validator';\n\nexport class TokenInfo {\n  @ApiProperty({ description: 'Policy ID of the token' })\n  @IsString()\n  policyId: string;\n\n  @ApiProperty({ description: 'Asset name of the token' })\n  @IsString()\n  assetName: string;\n\n  @ApiProperty({ description: 'Amount of the token' })\n  @IsNumber()\n  amount: number;\n}\n\nexport class CreatePoolDto {\n  @ApiProperty({ description: 'Network ID (1 for mainnet, 0 for testnet)' })\n  @IsNumber()\n  networkId: number;\n\n  @ApiProperty({ description: 'Token A information' })\n  @IsObject()\n  tokenA: TokenInfo;\n\n  @ApiProperty({ description: 'Token B information' })\n  @IsObject()\n  tokenB: TokenInfo;\n\n  @ApiProperty({ description: 'Whether to use VyFi v2', required: false, default: true })\n  @IsOptional()\n  @IsBoolean()\n  v2?: boolean;\n\n  @ApiProperty({ description: 'Pool owner address' })\n  @IsString()\n  poolOwnerAddress: string;\n\n  @ApiProperty({ description: 'Pool factory address' })\n  @IsString()\n  poolFactoryAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Transaction.html":{"url":"entities/Transaction.html","title":"entity - Transaction","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/transaction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    Public\n                                assets\n                            \n                            \n                                    \n                                fee\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                tx_hash\n                            \n                            \n                                    \n                                    Optional\n                                type\n                            \n                            \n                                    \n                                    \n                                utxo_input\n                            \n                            \n                                    \n                                    \n                                utxo_output\n                            \n                            \n                                    \n                                    \n                                utxo_ref\n                            \n                            \n                                    \n                                    \n                                vault\n                            \n                            \n                                    \n                                    \n                                vault_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Asset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@OneToMany(undefined, asset => asset.transaction)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier of the transaction'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'status'})@Column({name: 'status', type: 'enum', enum: TransactionStatus, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tx_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'txHash'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'type', type: 'enum', enum: TransactionType, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utxo_input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'utxoInput'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utxo_output\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'utxoOutput'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utxo_ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'utxoRef'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vault_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'vault_id', nullable: true})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:77\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { Column, Entity, JoinColumn, ManyToOne, OneToMany, PrimaryGeneratedColumn, Index } from 'typeorm';\n\nimport { TransactionStatus, TransactionType } from '../types/transaction.types';\n\nimport { Asset } from './asset.entity';\nimport { Vault } from './vault.entity';\n\n@Entity('transactions')\nexport class Transaction {\n  @ApiProperty({ description: 'Unique identifier of the transaction' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'utxoInput' })\n  @Column({\n    nullable: true,\n  })\n  utxo_input: string; // sender\n\n  @Expose({ name: 'utxoOutput' })\n  @Column({\n    nullable: true,\n  })\n  utxo_output: string; // receiver\n\n  @Expose({ name: 'utxoRef' })\n  @Column({\n    nullable: true,\n  })\n  utxo_ref: string;\n\n  @Column({\n    name: 'type',\n    type: 'enum',\n    enum: TransactionType,\n    nullable: true,\n  })\n  type?: TransactionType;\n\n  @Column({\n    nullable: true,\n  })\n  amount: number;\n\n  @Column({\n    nullable: true,\n  })\n  fee: number;\n\n  @Expose({ name: 'txHash' })\n  @Column({\n    nullable: true,\n  })\n  tx_hash: string; // 1\n\n  @Expose({ name: 'status' })\n  @Column({\n    name: 'status',\n    type: 'enum',\n    enum: TransactionStatus,\n    nullable: true,\n  })\n  status?: TransactionStatus; //\n\n  @Exclude()\n  @OneToMany(() => Asset, (asset: Asset) => asset.transaction)\n  public assets: Asset[];\n\n  @ManyToOne(() => Vault)\n  @JoinColumn({ name: 'vault_id' })\n  vault: Vault;\n\n  @Column({ name: 'vault_id', nullable: true })\n  @Index()\n  vault_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionBuildResponse.html":{"url":"interfaces/TransactionBuildResponse.html","title":"interface - TransactionBuildResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionBuildResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complete\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            stripped\n                                        \n                                \n                                \n                                        \n                                            witnessSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripped\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stripped:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        witnessSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        witnessSet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionBuildResponse-1.html":{"url":"interfaces/TransactionBuildResponse-1.html","title":"interface - TransactionBuildResponse-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionBuildResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complete\n                                        \n                                \n                                \n                                        \n                                            partial\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partial:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nexport enum OnchainTransactionStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  FAILED = 'failed',\n  NOT_FOUND = 'not_found',\n}\n\nexport interface TransactionBuildResponse {\n  complete: string;\n  partial: string;\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class BlockchainService {\n  private readonly logger = new Logger(BlockchainService.name);\n  private readonly anvilApi: string;\n  private readonly anvilApiKey: string;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService\n  ) {\n    this.anvilApi = this.configService.get('ANVIL_API_URL') + '/services';\n    this.anvilApiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  /**\n   * Builds a transaction using Anvil API\n   * @param txData Transaction data to be built\n   * @returns Object containing complete and partial transaction CBOR\n   */\n  async buildTransaction(txData: any): Promise {\n    try {\n      const headers = {\n        'x-api-key': this.anvilApiKey,\n        'Content-Type': 'application/json',\n      };\n\n      // Build the transaction\n      const contractDeployed = await fetch(`${this.anvilApi}/transactions/build`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(txData),\n      });\n\n      const buildResponse = await contractDeployed.json();\n\n      console.log('error', buildResponse);\n\n      if (!buildResponse.complete) {\n        throw new Error('Failed to build complete transaction' + JSON.stringify(buildResponse));\n      }\n\n      return buildResponse;\n    } catch (error) {\n      this.logger.error('Error building transaction', error);\n      throw new Error(`Failed to build transaction: ${error.message}`);\n    }\n  }\n\n  /**\n   * Submits a signed transaction to the blockchain\n   * @param signedTx Signed transaction data\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: {\n    transaction: string;\n    signatures?: string[];\n  }): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.httpService.post(\n          `${this.anvilApi}/transactions/submit`,\n          {\n            transaction: signedTx.transaction,\n            signatures: signedTx.signatures || [],\n          },\n          {\n            headers: {\n              'x-api-key': this.anvilApiKey,\n              'Content-Type': 'application/json',\n            },\n          }\n        )\n      );\n\n      if (!response.data.txHash) {\n        throw new Error('No transaction hash returned from blockchain');\n      }\n\n      this.logger.log(`Transaction submitted successfully: ${response.data.txHash}`);\n      return { txHash: response.data.txHash };\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionBuildResponse-2.html":{"url":"interfaces/TransactionBuildResponse-2.html","title":"interface - TransactionBuildResponse-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionBuildResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complete\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            stripped\n                                        \n                                \n                                \n                                        \n                                            witnessSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripped\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stripped:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        witnessSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        witnessSet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      console.log('INPUT ', input);\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionBuildResponseDto.html":{"url":"classes/TransactionBuildResponseDto.html","title":"class - TransactionBuildResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionBuildResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                complete\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                hash\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                stripped\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                witnessSet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        complete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded complete transaction', example: '83a400...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash', example: '1234abcd...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        stripped\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded stripped transaction', example: '83a400...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        witnessSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded witness set', example: '83a400...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:176\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionModelFix1743089378621.html":{"url":"classes/TransactionModelFix1743089378621.html","title":"class - TransactionModelFix1743089378621","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionModelFix1743089378621\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743089378621-transactionModelFix.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TransactionModelFix1743089378621'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743089378621-transactionModelFix.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743089378621-transactionModelFix.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743089378621-transactionModelFix.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class TransactionModelFix1743089378621 implements MigrationInterface {\n  name = 'TransactionModelFix1743089378621';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_status_enum\" AS ENUM('created', 'pending', 'submitted', 'confirmed', 'failed', 'manual-review')`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"transactions\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"sender\" character varying NOT NULL, \"receiver\" character varying NOT NULL, \"type\" \"public\".\"transactions_type_enum\", \"fee\" integer NOT NULL, \"tx_hash\" character varying NOT NULL, \"block\" integer NOT NULL, \"status\" \"public\".\"transactions_status_enum\", \"metadata\" jsonb, CONSTRAINT \"PK_a219afd8dd77ed80f5a862f1db9\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_type_enum\" RENAME TO \"vaults_type_enum_old\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_type_enum\" AS ENUM('single', 'multi', 'ctn', 'cnt')`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"type\" TYPE \"public\".\"vaults_type_enum\" USING \"type\"::\"text\"::\"public\".\"vaults_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_type_enum_old\" AS ENUM('single', 'multi', 'ctn')`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"type\" TYPE \"public\".\"vaults_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"vaults_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_type_enum_old\" RENAME TO \"vaults_type_enum\"`);\n    await queryRunner.query(`DROP TABLE \"transactions\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionOutput.html":{"url":"classes/TransactionOutput.html","title":"class - TransactionOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                assets\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                lovelace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Destination address', example: 'addr1qy2k4r9...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NftAsset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'NFT assets to send (can be combined with lovelace)', type: undefined, required: false, example: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        lovelace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Amount in lovelace (can be combined with NFT assets)', example: 1000000, required: false, type: Number})@IsOptional()@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionSubmitResponse.html":{"url":"interfaces/TransactionSubmitResponse.html","title":"interface - TransactionSubmitResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionSubmitResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            txHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nexport enum OnchainTransactionStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  FAILED = 'failed',\n  NOT_FOUND = 'not_found',\n}\n\nexport interface TransactionBuildResponse {\n  complete: string;\n  partial: string;\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class BlockchainService {\n  private readonly logger = new Logger(BlockchainService.name);\n  private readonly anvilApi: string;\n  private readonly anvilApiKey: string;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService\n  ) {\n    this.anvilApi = this.configService.get('ANVIL_API_URL') + '/services';\n    this.anvilApiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  /**\n   * Builds a transaction using Anvil API\n   * @param txData Transaction data to be built\n   * @returns Object containing complete and partial transaction CBOR\n   */\n  async buildTransaction(txData: any): Promise {\n    try {\n      const headers = {\n        'x-api-key': this.anvilApiKey,\n        'Content-Type': 'application/json',\n      };\n\n      // Build the transaction\n      const contractDeployed = await fetch(`${this.anvilApi}/transactions/build`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(txData),\n      });\n\n      const buildResponse = await contractDeployed.json();\n\n      console.log('error', buildResponse);\n\n      if (!buildResponse.complete) {\n        throw new Error('Failed to build complete transaction' + JSON.stringify(buildResponse));\n      }\n\n      return buildResponse;\n    } catch (error) {\n      this.logger.error('Error building transaction', error);\n      throw new Error(`Failed to build transaction: ${error.message}`);\n    }\n  }\n\n  /**\n   * Submits a signed transaction to the blockchain\n   * @param signedTx Signed transaction data\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: {\n    transaction: string;\n    signatures?: string[];\n  }): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.httpService.post(\n          `${this.anvilApi}/transactions/submit`,\n          {\n            transaction: signedTx.transaction,\n            signatures: signedTx.signatures || [],\n          },\n          {\n            headers: {\n              'x-api-key': this.anvilApiKey,\n              'Content-Type': 'application/json',\n            },\n          }\n        )\n      );\n\n      if (!response.data.txHash) {\n        throw new Error('No transaction hash returned from blockchain');\n      }\n\n      this.logger.log(`Transaction submitted successfully: ${response.data.txHash}`);\n      return { txHash: response.data.txHash };\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionSubmitResponse-1.html":{"url":"interfaces/TransactionSubmitResponse-1.html","title":"interface - TransactionSubmitResponse-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionSubmitResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            txHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      console.log('INPUT ', input);\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionSubmitResponseDto.html":{"url":"classes/TransactionSubmitResponseDto.html","title":"class - TransactionSubmitResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionSubmitResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                txHash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash', example: '1234abcd...'})@Expose({name: 'txHash'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:185\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionsController.html":{"url":"controllers/TransactionsController.html","title":"controller - TransactionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transactions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getReceivedTransactions\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getSentTransactions\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getReceivedTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReceivedTransactions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('received')@ApiOperation({summary: 'Get transactions received by the authenticated user'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getSentTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSentTransactions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sent')@ApiOperation({summary: 'Get transactions sent by the authenticated user'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransaction(txHash: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':txHash')@ApiOperation({summary: 'Get transaction details by transaction hash'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\n\nimport { TransactionsService } from './transactions.service';\n\n@ApiTags('Transactions')\n@Controller('transactions')\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class TransactionsController {\n  constructor(private readonly transactionsService: TransactionsService) {}\n\n  @Get('sent')\n  @ApiOperation({ summary: 'Get transactions sent by the authenticated user' })\n  async getSentTransactions() {\n    // return this.transactionsService.getTransactionsBySender(address);\n    return null;\n  }\n\n  @Get('received')\n  @ApiOperation({ summary: 'Get transactions received by the authenticated user' })\n  async getReceivedTransactions() {\n    // return this.transactionsService.getTransactionsByReceiver(address);\n    return null;\n  }\n\n  @Get(':txHash')\n  @ApiOperation({ summary: 'Get transaction details by transaction hash' })\n  async getTransaction(@Param('txHash') txHash: string) {\n    //return this.transactionsService.getTransaction(txHash);\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionsModule.html":{"url":"modules/TransactionsModule.html","title":"module - TransactionsModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_TransactionsModule_exports\n\n\n\n\nTransactionsService \n\nTransactionsService \n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/transactions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsController } from './transactions.controller';\nimport { TransactionsService } from './transactions.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Transaction, Asset, Vault])],\n  providers: [TransactionsService],\n  controllers: [TransactionsController],\n  exports: [TransactionsService],\n})\nexport class TransactionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionsService.html":{"url":"injectables/TransactionsService.html","title":"injectable - TransactionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransaction\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getAcquireTransactions\n                            \n                            \n                                    Async\n                                getContributionTransactions\n                            \n                            \n                                    Async\n                                getLastVaultUpdate\n                            \n                            \n                                    Async\n                                getTransaction\n                            \n                            \n                                    Async\n                                getTransactionsByReceiver\n                            \n                            \n                                    Async\n                                getTransactionsBySender\n                            \n                            \n                                    Async\n                                getTransactionsByStatus\n                            \n                            \n                                    Async\n                                getVaultTransactions\n                            \n                            \n                                    Async\n                                updateTransactionHash\n                            \n                            \n                                    Async\n                                updateTransactionStatus\n                            \n                            \n                                    Async\n                                validateTransactionExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionRepository: Repository, vaultRepository: Repository, assetRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTransaction(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAcquireTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAcquireTransactions(vaultId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getContributionTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContributionTransactions(vaultId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLastVaultUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastVaultUpdate(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:183\n                        \n                    \n\n\n            \n                \n                        Get the last update transaction for a vault\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the vault\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The most recent update transaction or null if none found\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransaction(txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionsByReceiver\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionsByReceiver(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionsBySender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionsBySender(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionsByStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionsByStatus(status: TransactionStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            TransactionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getVaultTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultTransactions(vaultId: string, status?: TransactionStatus, type?: TransactionType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            TransactionStatus\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            TransactionType\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(id: string, txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionStatus(txHash: string, status: TransactionStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            TransactionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateTransactionExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateTransactionExists(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AssetStatus } from 'src/types/asset.types';\nimport { TransactionStatus, TransactionType } from 'src/types/transaction.types';\nimport { Repository } from 'typeorm';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class TransactionsService {\n  constructor(\n    @InjectRepository(Transaction)\n    private readonly transactionRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository\n  ) {}\n\n  async createTransaction(data: {\n    vault_id: string;\n    type: TransactionType;\n    assets: Asset[];\n    amount?: number;\n  }): Promise {\n    return this.transactionRepository.save({\n      vault_id: data.vault_id,\n      type: data.type,\n      status: TransactionStatus.created,\n      assets: data.assets,\n      amount: data.amount,\n    });\n  }\n\n  async updateTransactionStatus(txHash: string, status: TransactionStatus): Promise {\n    const transaction = await this.transactionRepository.findOne({\n      where: { tx_hash: txHash },\n    });\n    console.log('tx', transaction);\n\n    if (!transaction) {\n      throw new Error(`Transaction with hash ${txHash} not found`);\n    }\n\n    const vault = await this.vaultRepository.findOne({\n      where: {\n        id: transaction.vault_id,\n      },\n    });\n\n    const assets = await this.assetRepository.findBy({\n      transaction: {\n        id: transaction.id,\n      },\n    });\n\n    assets.map(async item => {\n      const asset = await this.assetRepository.findOne({\n        where: {\n          id: item.id,\n        },\n      });\n      asset.vault = vault;\n      asset.status = AssetStatus.LOCKED;\n      await this.assetRepository.save(asset);\n    });\n\n    transaction.status = status;\n\n    return this.transactionRepository.save(transaction);\n  }\n\n  async getTransactionsBySender(address: string): Promise {\n    return this.transactionRepository.find({\n      where: { utxo_input: address },\n      order: { id: 'DESC' },\n    });\n  }\n\n  async validateTransactionExists(id: string): Promise {\n    const transaction = await this.transactionRepository.findOne({\n      where: { id },\n    });\n\n    if (!transaction) {\n      throw new NotFoundException(`Outchain transaction with ID ${id} not found`);\n    }\n\n    return transaction;\n  }\n\n  async getTransactionsByStatus(status: TransactionStatus): Promise {\n    return this.transactionRepository.find({\n      where: { status },\n      order: { id: 'DESC' },\n      relations: ['vault'],\n    });\n  }\n\n  async getTransactionsByReceiver(address: string): Promise {\n    return this.transactionRepository.find({\n      where: { utxo_output: address },\n      order: { id: 'DESC' },\n    });\n  }\n\n  async findById(id: string): Promise {\n    return this.transactionRepository.findOne({\n      where: { id },\n    });\n  }\n\n  async updateTransactionHash(id: string, txHash: string): Promise {\n    const transaction = await this.findById(id);\n    if (!transaction) {\n      throw new Error(`Transaction with id ${id} not found`);\n    }\n\n    transaction.tx_hash = txHash;\n    transaction.status = TransactionStatus.pending;\n    return await this.transactionRepository.save(transaction);\n  }\n\n  async getTransaction(txHash: string): Promise {\n    return this.transactionRepository.findOne({\n      where: { tx_hash: txHash },\n    });\n  }\n\n  async getContributionTransactions(vaultId?: string): Promise {\n    const where: any = { type: TransactionType.contribute };\n    if (vaultId) {\n      where.vault_id = vaultId;\n    }\n\n    return this.transactionRepository.find({\n      where,\n      order: { id: 'DESC' },\n      relations: ['assets'],\n    });\n  }\n\n  async getAcquireTransactions(vaultId?: string): Promise {\n    const where: any = { type: TransactionType.acquire };\n    if (vaultId) {\n      where.vault_id = vaultId;\n    }\n\n    return this.transactionRepository.find({\n      where,\n      order: { id: 'DESC' },\n      relations: ['vault'],\n    });\n  }\n\n  async getVaultTransactions(\n    vaultId: string,\n    status?: TransactionStatus,\n    type?: TransactionType\n  ): Promise {\n    const where: any = { vault_id: vaultId };\n    if (status) {\n      where.status = status;\n    }\n    if (type) {\n      where.type = type;\n    }\n\n    return this.transactionRepository.find({\n      where,\n      order: { id: 'DESC' },\n      relations: ['vault', 'assets'],\n    });\n  }\n\n  /**\n   * Get the last update transaction for a vault\n   * @param vaultId The ID of the vault\n   * @returns The most recent update transaction or null if none found\n   */\n  async getLastVaultUpdate(vaultId: string): Promise {\n    const transactions = await this.transactionRepository.find({\n      where: {\n        vault_id: vaultId,\n      },\n      order: { id: 'DESC' },\n      take: 1,\n    });\n\n    return transactions.length > 0 ? transactions[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TxUpdateReq.html":{"url":"classes/TxUpdateReq.html","title":"class - TxUpdateReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TxUpdateReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/txUpdate.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                txHash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/txUpdate.req.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class TxUpdateReq {\n  @IsNotEmpty()\n  @Expose()\n  txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFieldsType1741946649594.html":{"url":"classes/UpdateFieldsType1741946649594.html","title":"class - UpdateFieldsType1741946649594","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFieldsType1741946649594\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741946649594-updateFieldsType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateFieldsType1741946649594'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1741946649594-updateFieldsType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741946649594-updateFieldsType.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741946649594-updateFieldsType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateFieldsType1741946649594 implements MigrationInterface {\n  name = 'UpdateFieldsType1741946649594';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" interval`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" interval`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profileImage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                socialLinks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                totalVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tvl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image file URL (format: image/)', example: 'image/banner-123.jpg', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User profile description/bio', example: 'Experienced crypto investor and NFT collector', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User display name', example: 'John Doe', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Profile image file URL (format: image/)', example: 'image/profile-123.jpg', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        socialLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialLink[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of social media links', type: undefined, required: false})@IsArray()@IsOptional()@IsObject({each: true})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        totalVaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total number of vaults owned by user', example: 5, required: false})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total Value Locked in user vaults', example: 1000000, required: false})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsOptional, IsArray, IsNumber, IsObject } from 'class-validator';\nimport { SocialLink } from '@/modules/vaults/types';\n\nexport class SocialLinkDto {\n  @ApiProperty({\n    description: 'Name of the social platform',\n    example: 'twitter',\n  })\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: 'URL to the social profile',\n    example: 'https://twitter.com/username',\n  })\n  @IsString()\n  @Expose()\n  url: string;\n}\n\nexport class UpdateProfileDto {\n  @ApiProperty({\n    description: 'User display name',\n    example: 'John Doe',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  name?: string;\n\n  @ApiProperty({\n    description: 'User profile description/bio',\n    example: 'Experienced crypto investor and NFT collector',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  description?: string;\n\n  @ApiProperty({\n    description: 'Profile image file URL (format: image/)',\n    example: 'image/profile-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  profileImage?: string;\n\n  @ApiProperty({\n    description: 'Banner image file URL (format: image/)',\n    example: 'image/banner-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImage?: string;\n\n  @ApiProperty({\n    description: 'Total Value Locked in user vaults',\n    example: 1000000,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  tvl?: number;\n\n  @ApiProperty({\n    description: 'Total number of vaults owned by user',\n    example: 5,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  totalVaults?: number;\n\n  @ApiProperty({\n    description: 'List of social media links',\n    type: [SocialLinkDto],\n    required: false,\n  })\n  @IsArray()\n  @IsOptional()\n  @IsObject({ each: true })\n  @Expose()\n  socialLinks: SocialLink[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRelationto1742209228422.html":{"url":"classes/UpdateRelationto1742209228422.html","title":"class - UpdateRelationto1742209228422","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRelationto1742209228422\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742209228422-updateRelationto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateRelationto1742209228422'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742209228422-updateRelationto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742209228422-updateRelationto.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742209228422-updateRelationto.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateRelationto1742209228422 implements MigrationInterface {\n  name = 'UpdateRelationto1742209228422';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"asset_appreciation\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"valuation_currency\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"valuation_amount\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"vault_appreciation\" numeric`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"vault_appreciation\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"valuation_amount\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"valuation_currency\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"asset_appreciation\" numeric`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateType1742819100112.html":{"url":"classes/UpdateType1742819100112.html","title":"class - UpdateType1742819100112","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateType1742819100112\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742819100112-UpdateType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateType1742819100112'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742819100112-UpdateType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742819100112-UpdateType.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742819100112-UpdateType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateType1742819100112 implements MigrationInterface {\n  name = 'UpdateType1742819100112';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTypes1746532933340.html":{"url":"classes/UpdateTypes1746532933340.html","title":"class - UpdateTypes1746532933340","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTypes1746532933340\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1746532933340-updateTypes.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateTypes1746532933340'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1746532933340-updateTypes.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746532933340-updateTypes.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746532933340-updateTypes.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateTypes1746532933340 implements MigrationInterface {\n  name = 'UpdateTypes1746532933340';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`ALTER TABLE investors_whitelist RENAME TO acquirer_whitelist;`);\n    await queryRunner.query(\n      `ALTER TABLE \"acquirer_whitelist\" ADD CONSTRAINT \"FK_cba6b5306e74553edd3b94a000a\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`ALTER TABLE acquirer_whitelist RENAME TO investors_whitelist;`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadImageDto.html":{"url":"classes/UploadImageDto.html","title":"class - UploadImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/upload-image.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Express.Multer.File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', description: 'Image file to upload'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/upload-image.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UploadImageDto {\n  @ApiProperty({\n    type: 'string',\n    format: 'binary',\n    description: 'Image file to upload',\n  })\n  file: Express.Multer.File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                banner_image\n                            \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                deleted\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                gains\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                profile_image\n                            \n                            \n                                    \n                                    \n                                social_links\n                            \n                            \n                                    \n                                    \n                                stake_address\n                            \n                            \n                                    \n                                    \n                                total_vaults\n                            \n                            \n                                    \n                                    \n                                tvl\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vaults\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'address'})@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        banner_image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'bannerImage'})@OneToOne(undefined)@JoinColumn({name: 'banner_image_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'deleted', type: 'boolean', nullable: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'description'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gains\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'gains'})@Column({type: 'decimal', precision: 10, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'id'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'name'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        profile_image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'profileImage'})@OneToOne(undefined)@JoinColumn({name: 'profile_image_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        social_links\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinkEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'socialLinks'})@OneToMany(undefined, link => link.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stake_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'stakeAddress'})@Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_vaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'totalVaults'})@Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'tvl'})@Column({type: 'decimal', precision: 20, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@OneToMany(undefined, vault => vault.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n  OneToOne,\n  BeforeInsert,\n  BeforeUpdate,\n  JoinColumn,\n} from 'typeorm';\n\nimport { FileEntity } from './file.entity';\nimport { LinkEntity } from './link.entity';\nimport { Vault } from './vault.entity';\n\n@Entity('users')\nexport class User {\n  @Expose({ name: 'id' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Exclude()\n  @OneToMany(() => Vault, (vault: Vault) => vault.owner)\n  public vaults: Vault[];\n\n  @Expose({ name: 'name' })\n  @Column()\n  name: string;\n\n  @Expose({ name: 'address' })\n  @Column({ unique: true })\n  address: string;\n\n  @Expose({ name: 'stakeAddress' })\n  @Column({ unique: true, nullable: true })\n  stake_address: string;\n\n  @Expose({ name: 'description' })\n  @Column({ nullable: true })\n  description: string;\n\n  @Expose({ name: 'profileImage' })\n  @OneToOne(() => FileEntity)\n  @JoinColumn({ name: 'profile_image_id' })\n  profile_image: FileEntity;\n\n  @Expose({ name: 'bannerImage' })\n  @OneToOne(() => FileEntity)\n  @JoinColumn({ name: 'banner_image_id' })\n  banner_image: FileEntity;\n\n  @Expose({ name: 'socialLinks' })\n  @OneToMany(() => LinkEntity, (link: LinkEntity) => link.user)\n  social_links: LinkEntity[];\n\n  @Expose({ name: 'tvl' })\n  @Column({ type: 'decimal', precision: 20, scale: 2, default: 0 })\n  tvl: number;\n\n  @Expose({ name: 'totalVaults' })\n  @Column({ type: 'integer', default: 0 })\n  total_vaults: number;\n\n  @Expose({ name: 'gains' })\n  @Column({ type: 'decimal', precision: 10, scale: 2, default: 0 })\n  gains: number;\n\n  @Column({ name: 'deleted', type: 'boolean', nullable: false, default: false })\n  deleted: boolean;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getPublicProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadBannerImage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadProfileImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get user profile', description: 'Returns the authenticated user's profile information', status: 200})@UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getPublicProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicProfile(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get public user profile', description: 'Returns a user's public profile information by ID (excludes sensitive data)', status: 200})@Get('/profile/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(req, updateData: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Update user profile', description: 'Update the authenticated user's profile information', status: 200})@UseGuards(AuthGuard)@Patch('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadBannerImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadBannerImage(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Upload banner image', description: 'Upload and update user's banner image', status: 200})@ApiConsumes('multipart/form-data')@UseGuards(AuthGuard)@Post('profile/banner')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadProfileImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProfileImage(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Upload profile image', description: 'Upload and update user's profile image', status: 200})@ApiConsumes('multipart/form-data')@UseGuards(AuthGuard)@Post('profile/image')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Patch,\n  Body,\n  Request,\n  UseGuards,\n  Post,\n  UseInterceptors,\n  UploadedFile,\n  Param,\n  ParseFilePipe,\n  MaxFileSizeValidator,\n  FileTypeValidator,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiTags, ApiConsumes } from '@nestjs/swagger';\nimport { Express } from 'express';\n\nimport { ApiDoc } from '../../decorators/api-doc.decorator';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { mbMultiplication } from '../aws_bucket/aws.controller';\n\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { UsersService } from './users.service';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @ApiDoc({\n    summary: 'Get user profile',\n    description: \"Returns the authenticated user's profile information\",\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async getProfile(@Request() req) {\n    const userId = req.user.sub;\n    return this.usersService.getProfile(userId);\n  }\n\n  @ApiDoc({\n    summary: 'Get public user profile',\n    description: \"Returns a user's public profile information by ID (excludes sensitive data)\",\n    status: 200,\n  })\n  @Get('/profile/:id')\n  async getPublicProfile(@Param('id') userId: string) {\n    return this.usersService.getPublicProfile(userId);\n  }\n\n  @ApiDoc({\n    summary: 'Update user profile',\n    description: \"Update the authenticated user's profile information\",\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Patch('profile')\n  async updateProfile(@Request() req, @Body() updateData: UpdateProfileDto) {\n    const userId = req.user.sub;\n    return this.usersService.updateProfile(userId, updateData);\n  }\n\n  @ApiDoc({\n    summary: 'Upload profile image',\n    description: \"Upload and update user's profile image\",\n    status: 200,\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseGuards(AuthGuard)\n  @Post('profile/image')\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadProfileImage(\n    @Request() req,\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }), // 5mb\n          new FileTypeValidator({ fileType: 'image/*' }),\n        ],\n      })\n    )\n    file: Express.Multer.File\n  ) {\n    const userId = req.user.sub;\n    return this.usersService.uploadProfileImage(userId, file, req.get('host'));\n  }\n\n  @ApiDoc({\n    summary: 'Upload banner image',\n    description: \"Upload and update user's banner image\",\n    status: 200,\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseGuards(AuthGuard)\n  @Post('profile/banner')\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadBannerImage(\n    @Request() req,\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }), // 5mb\n          new FileTypeValidator({ fileType: 'image/*' }),\n        ],\n      })\n    )\n    file: Express.Multer.File\n  ) {\n    const userId = req.user.sub;\n    return this.usersService.uploadBannerImage(userId, file, req.get('host'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAwsModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { User } from '@/database/user.entity';\nimport { AwsModule } from '../aws_bucket/aws.module';\n\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, FileEntity, LinkEntity]), AwsModule],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByAddress\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                getPublicProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                updateUserAddress\n                            \n                            \n                                    Async\n                                uploadBannerImage\n                            \n                            \n                                    Async\n                                uploadProfileImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, filesRepository: Repository, linksRepository: Repository, awsService: AwsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsService\n                                                  \n                                                        \n                                                                        AwsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPublicProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicProfile(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(userId: string, updateData: UpdateProfileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserAddress(userId: string, address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadBannerImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadBannerImage(userId: string, file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadProfileImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProfileImage(userId: string, file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { classToPlain, plainToInstance } from 'class-transformer';\nimport { Repository } from 'typeorm';\n\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { User } from '@/database/user.entity';\nimport { transformImageToUrl } from '../../helpers';\nimport { AwsService } from '../aws_bucket/aws.service';\n\nimport { PublicProfileRes } from './dto/public-profile.res';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\n\n@Injectable()\nexport class UsersService {\n  private readonly logger = new Logger(UsersService.name);\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n    @InjectRepository(FileEntity)\n    private filesRepository: Repository,\n    @InjectRepository(LinkEntity)\n    private linksRepository: Repository,\n    private readonly awsService: AwsService\n  ) {}\n\n  async findByAddress(address: string): Promise {\n    return this.usersRepository.findOne({\n      where: {\n        stake_address: address,\n      },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n  }\n\n  async getPublicProfile(userId: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n    this.logger.log('USER', user);\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Calculate total_vaults from the vaults relation\n    user.total_vaults = user.vaults?.length || 0;\n\n    const userSource = {\n      ...user,\n      banner_image: user.banner_image.file_url,\n      profile_image: user.profile_image.file_url,\n    };\n\n    // Transform to plain object and remove sensitive data\n    const plainUser = classToPlain(userSource);\n    delete plainUser.address;\n    delete plainUser.gains;\n    delete plainUser.vaults;\n\n    return plainUser;\n  }\n\n  async create(userData: Partial): Promise {\n    const user = this.usersRepository.create(userData);\n    return this.usersRepository.save(user);\n  }\n\n  async getProfile(userId: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Calculate total_vaults from the vaults relation\n    user.total_vaults = user.vaults?.length || 0;\n    const plainedUsers = classToPlain(user);\n    return plainToInstance(PublicProfileRes, plainedUsers, { excludeExtraneousValues: true });\n  }\n\n  async updateProfile(userId: string, updateData: UpdateProfileDto): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Update basic profile fields\n    if (updateData.name !== undefined) {\n      user.name = updateData.name;\n    }\n\n    if (updateData.description !== undefined) {\n      user.description = updateData.description;\n    }\n\n    // Process profile image file\n    if (updateData.profileImage) {\n      const profileImgKey = updateData.profileImage.split('image/')[1];\n      if (profileImgKey) {\n        const profileImg = await this.filesRepository.findOne({\n          where: { file_key: profileImgKey },\n        });\n        if (profileImg) {\n          user.profile_image = profileImg;\n        }\n      }\n    }\n\n    // Process banner image file\n    if (updateData.bannerImage) {\n      const bannerImgKey = updateData.bannerImage.split('image/')[1];\n      if (bannerImgKey) {\n        const bannerImg = await this.filesRepository.findOne({\n          where: { file_key: bannerImgKey },\n        });\n        if (bannerImg) {\n          user.banner_image = bannerImg;\n        }\n      }\n    }\n\n    // Handle social links update\n    if (updateData.socialLinks) {\n      // Remove existing social links\n      if (user.social_links?.length > 0) {\n        await this.linksRepository.remove(user.social_links);\n      }\n\n      // Create new social links\n      updateData.socialLinks.map(linkData => {\n        return this.linksRepository.save({\n          user: user,\n          name: linkData.name,\n          url: linkData.url,\n        });\n      });\n    }\n    const selectedUser = await this.usersRepository.save(user);\n\n    selectedUser.banner_image = transformImageToUrl(selectedUser.banner_image as FileEntity) as any;\n    selectedUser.profile_image = transformImageToUrl(selectedUser.profile_image as FileEntity) as any;\n\n    return classToPlain(selectedUser, { excludeExtraneousValues: true }) as User;\n  }\n\n  async updateUserAddress(userId: string, address: string) {\n    await this.usersRepository.update(\n      {\n        id: userId,\n      },\n      {\n        address: address,\n      }\n    );\n  }\n\n  async uploadProfileImage(userId: string, file: Express.Multer.File, host: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Upload image to S3\n    const uploadResult = await this.awsService.uploadImage(file, host);\n\n    // Create or update file entity\n    const fileEntity = this.filesRepository.create({\n      file_key: uploadResult.file_key,\n      file_url: uploadResult.file_url,\n      file_type: file.mimetype,\n      file_name: file.originalname,\n      metadata: {\n        size: file.size,\n      },\n    });\n    await this.filesRepository.save(fileEntity);\n\n    // Update user's profile image\n    user.profile_image = fileEntity;\n    return this.usersRepository.save(user);\n  }\n\n  async uploadBannerImage(userId: string, file: Express.Multer.File, host: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['banner_image'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Upload image to S3\n    const uploadResult = await this.awsService.uploadImage(file, host);\n\n    // Create or update file entity\n    const fileEntity = this.filesRepository.create({\n      file_key: uploadResult.file_key,\n      file_url: uploadResult.file_url,\n      file_type: file.mimetype,\n      file_name: file.originalname,\n      metadata: {\n        size: file.size,\n      },\n    });\n    await this.filesRepository.save(fileEntity);\n\n    // Update user's banner image\n    user.banner_image = fileEntity;\n    return this.usersRepository.save(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VaultAssetsSummaryDto.html":{"url":"classes/VaultAssetsSummaryDto.html","title":"class - VaultAssetsSummaryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VaultAssetsSummaryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                assets\n                            \n                            \n                                    \n                                lastUpdated\n                            \n                            \n                                    \n                                nfts\n                            \n                            \n                                    \n                                tokens\n                            \n                            \n                                    \n                                totalAssets\n                            \n                            \n                                    \n                                totalValueAda\n                            \n                            \n                                    \n                                totalValueUsd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of assets with their values', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp of the last update'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nfts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of NFTs in the vault'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of fungible tokens in the vault'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalAssets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of unique assets in the vault'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalValueAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total value of all assets in ADA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalValueUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total value of all assets in USD'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class VaultAssetsSummaryDto {\n  @ApiProperty({ description: 'Total value of all assets in ADA' })\n  totalValueAda: number;\n\n  @ApiProperty({ description: 'Total value of all assets in USD' })\n  totalValueUsd: number;\n\n  @ApiProperty({ description: 'Number of unique assets in the vault' })\n  totalAssets: number;\n\n  @ApiProperty({ description: 'Number of NFTs in the vault' })\n  nfts: number;\n\n  @ApiProperty({ description: 'Number of fungible tokens in the vault' })\n  tokens: number;\n\n  @ApiProperty({ description: 'Timestamp of the last update' })\n  lastUpdated: string;\n\n  @ApiProperty({\n    description: 'List of assets with their values',\n    type: 'array',\n    items: {\n      type: 'object',\n      properties: {\n        policyId: { type: 'string' },\n        assetName: { type: 'string' },\n        quantity: { type: 'number' },\n        valueAda: { type: 'number' },\n        valueUsd: { type: 'number' },\n        isNft: { type: 'boolean' },\n        metadata: { type: 'object' },\n      },\n    },\n  })\n  assets: Array;\n  }>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VaultConfig.html":{"url":"interfaces/VaultConfig.html","title":"interface - VaultConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VaultConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            acquireWindow\n                                        \n                                \n                                \n                                        \n                                            adminKeyHash\n                                        \n                                \n                                \n                                        \n                                            allowedPolicies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assetWindow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contractType\n                                        \n                                \n                                \n                                        \n                                            customerAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customMetadata\n                                        \n                                \n                                \n                                        \n                                            policyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            valueMethod\n                                        \n                                \n                                \n                                        \n                                            vaultName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acquireWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acquireWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminKeyHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminKeyHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowedPolicies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedPolicies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assetWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assetWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contractType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customMetadata:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueMethod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  Address,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { BlockchainService } from './blockchain.service';\nimport { Datum1 } from './types/type';\nimport { generate_assetname_from_txhash_index, getUtxos, getVaultUtxo, toHex } from './utils/lib';\n\nexport interface VaultConfig {\n  vaultName: string;\n  customerAddress: string;\n  adminKeyHash: string;\n  policyId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nexport interface VaultCreateConfig {\n  vaultName: string;\n  customerAddress: string;\n  vaultId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nconst one_day = 24 * 60 * 60 * 1000;\n\n@Injectable()\nexport class VaultManagingService {\n  private readonly logger = new Logger(VaultManagingService.name);\n  private scAddress: string;\n  private readonly scPolicyId: string;\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private readonly blockfrost: any;\n\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  /**\n   * Create a new vault with the specified configuration\n   * @param config Vault configuration parameters\n   * @returns Transaction hash and vault ID\n   */\n  async createOnChainVaultTx(vaultConfig: VaultCreateConfig): Promise {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const utxos = await getUtxos(Address.from_bech32(vaultConfig.customerAddress), 0, this.blockfrost); // Any UTXO works.\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found.');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n    const assetName = generate_assetname_from_txhash_index(\n      selectedUtxo.input().transaction_id().to_hex(),\n      selectedUtxo.input().index()\n    );\n\n    try {\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          datum: { type: 'inline'; value: Datum1; shape: object };\n        }[];\n        requiredInputs: string[];\n      } = {\n        changeAddress: vaultConfig.customerAddress,\n        message: vaultConfig.vaultName,\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: assetName, format: 'hex' },\n            policyId: this.scPolicyId,\n            type: 'plutus',\n            quantity: 1,\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: this.scPolicyId,\n            redeemer: {\n              type: 'json',\n              value: {\n                vault_token_index: 0,\n                asset_name: assetName,\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: this.scAddress,\n            assets: [\n              {\n                assetName: { name: assetName, format: 'hex' },\n                policyId: this.scPolicyId,\n                quantity: 1,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: {\n                contract_type: vaultConfig.contractType,\n                asset_whitelist: vaultConfig.allowedPolicies,\n                // contributor_whitelist: [],\n                asset_window: {\n                  // Time allowed to upload NFT\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                investment_window: {\n                  // Time allowed to upload ADA\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n                // fractionalization: {\n                //   percentage: 1,\n                //   token_supply: 1,\n                //   token_decimals: 1,\n                //   token_policy: \"\",\n                // },\n                custom_metadata: [\n                  // \n                  // [\n                  //   PlutusData.new_bytes(Buffer.from(\"foo\")).to_hex(),\n                  //   PlutusData.new_bytes(Buffer.from(\"bar\")).to_hex(),\n                  // ],\n                  [toHex('foo'), toHex('bar')],\n                  [toHex('bar'), toHex('foo')],\n                  [toHex('vaultId'), toHex(vaultConfig.vaultId)],\n                ], // like a tuple\n\n                // termination: {\n                //   termination_type: 1,\n                //   fdp: 1,\n                // },\n                // investment: {\n                //   reserve: 1,\n                //   liquidityPool: 1,\n                // },\n                admin: this.adminHash,\n                minting_key: this.adminHash,\n              },\n              shape: {\n                validatorHash: this.scPolicyId,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        requiredInputs: REQUIRED_INPUTS,\n      };\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n        vaultAssetName: assetName,\n      };\n    } catch (error) {\n      this.logger.error('Failed to create vault:', error);\n      throw error;\n    }\n  }\n\n  async createBurnTx(burnConfig: { customerAddress: string; assetVaultName: string }): Promise {\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, burnConfig.assetVaultName, this.blockfrost);\n    const input = {\n      changeAddress: burnConfig.customerAddress,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: burnConfig.assetVaultName, format: 'hex' },\n          policyId: this.scPolicyId,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [this.adminHash],\n    };\n    const buildResponse = await this.blockchainService.buildTransaction(input);\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n    return {\n      presignedTx: txToSubmitOnChain.to_hex(),\n      contractAddress: this.scAddress,\n    };\n  }\n\n  // Create a transaction to update the vault's metadata\n  async updateVaultMetadataTx(vaultConfig: VaultConfig) {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, vaultConfig.vaultName, this.blockfrost);\n    const input = {\n      changeAddress: vaultConfig.customerAddress,\n      message: 'Vault Update',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: {\n              vault_token_index: 0, // must fit the ordering defined in the outputs array\n              asset_name: vaultConfig.vaultName,\n            },\n          },\n        },\n      ],\n      outputs: [\n        {\n          address: this.scAddress,\n          assets: [\n            {\n              assetName: vaultConfig.vaultName,\n              policyId: this.scPolicyId,\n              quantity: 1,\n            },\n          ],\n          datum: {\n            type: 'inline',\n            value: {\n              contract_type: vaultConfig.contractType, // Represent an enum setup by L4VA (0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE)\n              asset_whitelist: vaultConfig.allowedPolicies,\n              // contributor_whitelist: [],\n              asset_window: vaultConfig.assetWindow,\n              acquire_window: vaultConfig.acquireWindow,\n              valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n              custom_metadata: vaultConfig.customMetadata || [],\n              admin: this.adminHash,\n              minting_key: this.adminHash,\n            },\n            shape: {\n              validatorHash: this.scPolicyId,\n              purpose: 'spend',\n            },\n          },\n        },\n      ],\n    };\n\n    try {\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n      };\n    } catch (error) {\n      this.logger.error('Failed to build vault update tx:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed vault transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitOnChainVaultTx(signedTx: { transaction: string; signatures: string | string[] }): Promise {\n    try {\n      // Ensure signatures is always an array\n      const signatures = Array.isArray(signedTx.signatures) ? signedTx.signatures : [signedTx.signatures];\n\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures,\n      });\n\n      return { txHash: result.txHash };\n    } catch (error) {\n      this.logger.error('Failed to submit vault transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VaultCreateConfig.html":{"url":"interfaces/VaultCreateConfig.html","title":"interface - VaultCreateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VaultCreateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            acquireWindow\n                                        \n                                \n                                \n                                        \n                                            allowedPolicies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assetWindow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contractType\n                                        \n                                \n                                \n                                        \n                                            customerAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customMetadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            valueMethod\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                                \n                                        \n                                            vaultName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acquireWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acquireWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowedPolicies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedPolicies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assetWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assetWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contractType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customMetadata:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueMethod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  Address,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { BlockchainService } from './blockchain.service';\nimport { Datum1 } from './types/type';\nimport { generate_assetname_from_txhash_index, getUtxos, getVaultUtxo, toHex } from './utils/lib';\n\nexport interface VaultConfig {\n  vaultName: string;\n  customerAddress: string;\n  adminKeyHash: string;\n  policyId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nexport interface VaultCreateConfig {\n  vaultName: string;\n  customerAddress: string;\n  vaultId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nconst one_day = 24 * 60 * 60 * 1000;\n\n@Injectable()\nexport class VaultManagingService {\n  private readonly logger = new Logger(VaultManagingService.name);\n  private scAddress: string;\n  private readonly scPolicyId: string;\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private readonly blockfrost: any;\n\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  /**\n   * Create a new vault with the specified configuration\n   * @param config Vault configuration parameters\n   * @returns Transaction hash and vault ID\n   */\n  async createOnChainVaultTx(vaultConfig: VaultCreateConfig): Promise {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const utxos = await getUtxos(Address.from_bech32(vaultConfig.customerAddress), 0, this.blockfrost); // Any UTXO works.\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found.');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n    const assetName = generate_assetname_from_txhash_index(\n      selectedUtxo.input().transaction_id().to_hex(),\n      selectedUtxo.input().index()\n    );\n\n    try {\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          datum: { type: 'inline'; value: Datum1; shape: object };\n        }[];\n        requiredInputs: string[];\n      } = {\n        changeAddress: vaultConfig.customerAddress,\n        message: vaultConfig.vaultName,\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: assetName, format: 'hex' },\n            policyId: this.scPolicyId,\n            type: 'plutus',\n            quantity: 1,\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: this.scPolicyId,\n            redeemer: {\n              type: 'json',\n              value: {\n                vault_token_index: 0,\n                asset_name: assetName,\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: this.scAddress,\n            assets: [\n              {\n                assetName: { name: assetName, format: 'hex' },\n                policyId: this.scPolicyId,\n                quantity: 1,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: {\n                contract_type: vaultConfig.contractType,\n                asset_whitelist: vaultConfig.allowedPolicies,\n                // contributor_whitelist: [],\n                asset_window: {\n                  // Time allowed to upload NFT\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                investment_window: {\n                  // Time allowed to upload ADA\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n                // fractionalization: {\n                //   percentage: 1,\n                //   token_supply: 1,\n                //   token_decimals: 1,\n                //   token_policy: \"\",\n                // },\n                custom_metadata: [\n                  // \n                  // [\n                  //   PlutusData.new_bytes(Buffer.from(\"foo\")).to_hex(),\n                  //   PlutusData.new_bytes(Buffer.from(\"bar\")).to_hex(),\n                  // ],\n                  [toHex('foo'), toHex('bar')],\n                  [toHex('bar'), toHex('foo')],\n                  [toHex('vaultId'), toHex(vaultConfig.vaultId)],\n                ], // like a tuple\n\n                // termination: {\n                //   termination_type: 1,\n                //   fdp: 1,\n                // },\n                // investment: {\n                //   reserve: 1,\n                //   liquidityPool: 1,\n                // },\n                admin: this.adminHash,\n                minting_key: this.adminHash,\n              },\n              shape: {\n                validatorHash: this.scPolicyId,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        requiredInputs: REQUIRED_INPUTS,\n      };\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n        vaultAssetName: assetName,\n      };\n    } catch (error) {\n      this.logger.error('Failed to create vault:', error);\n      throw error;\n    }\n  }\n\n  async createBurnTx(burnConfig: { customerAddress: string; assetVaultName: string }): Promise {\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, burnConfig.assetVaultName, this.blockfrost);\n    const input = {\n      changeAddress: burnConfig.customerAddress,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: burnConfig.assetVaultName, format: 'hex' },\n          policyId: this.scPolicyId,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [this.adminHash],\n    };\n    const buildResponse = await this.blockchainService.buildTransaction(input);\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n    return {\n      presignedTx: txToSubmitOnChain.to_hex(),\n      contractAddress: this.scAddress,\n    };\n  }\n\n  // Create a transaction to update the vault's metadata\n  async updateVaultMetadataTx(vaultConfig: VaultConfig) {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, vaultConfig.vaultName, this.blockfrost);\n    const input = {\n      changeAddress: vaultConfig.customerAddress,\n      message: 'Vault Update',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: {\n              vault_token_index: 0, // must fit the ordering defined in the outputs array\n              asset_name: vaultConfig.vaultName,\n            },\n          },\n        },\n      ],\n      outputs: [\n        {\n          address: this.scAddress,\n          assets: [\n            {\n              assetName: vaultConfig.vaultName,\n              policyId: this.scPolicyId,\n              quantity: 1,\n            },\n          ],\n          datum: {\n            type: 'inline',\n            value: {\n              contract_type: vaultConfig.contractType, // Represent an enum setup by L4VA (0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE)\n              asset_whitelist: vaultConfig.allowedPolicies,\n              // contributor_whitelist: [],\n              asset_window: vaultConfig.assetWindow,\n              acquire_window: vaultConfig.acquireWindow,\n              valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n              custom_metadata: vaultConfig.customMetadata || [],\n              admin: this.adminHash,\n              minting_key: this.adminHash,\n            },\n            shape: {\n              validatorHash: this.scPolicyId,\n              purpose: 'spend',\n            },\n          },\n        },\n      ],\n    };\n\n    try {\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n      };\n    } catch (error) {\n      this.logger.error('Failed to build vault update tx:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed vault transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitOnChainVaultTx(signedTx: { transaction: string; signatures: string | string[] }): Promise {\n    try {\n      // Ensure signatures is always an array\n      const signatures = Array.isArray(signedTx.signatures) ? signedTx.signatures : [signedTx.signatures];\n\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures,\n      });\n\n      return { txHash: result.txHash };\n    } catch (error) {\n      this.logger.error('Failed to submit vault transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaultInsertingService.html":{"url":"injectables/VaultInsertingService.html","title":"injectable - VaultInsertingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaultInsertingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminHash\n                            \n                            \n                                    Private\n                                    Readonly\n                                adminSKey\n                            \n                            \n                                    Private\n                                blockfrost\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    Async\n                                handleBlockchainEvent\n                            \n                            \n                                    Async\n                                handleBurnVault\n                            \n                            \n                                    Async\n                                handleScannerEvent\n                            \n                            \n                                    Async\n                                submitTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultsRepository: Repository, transactionsService: TransactionsService, blockchainScanner: BlockchainScannerService, configService: ConfigService, blockchainService: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainScanner\n                                                  \n                                                        \n                                                                        BlockchainScannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(params: BuildTransactionParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            BuildTransactionParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleBlockchainEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleBlockchainEvent(event: BlockchainWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:360\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            BlockchainWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleBurnVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleBurnVault(userId: string, vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:451\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleScannerEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleScannerEvent(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:332\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(signedTx: SubmitTransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:279\n                        \n                    \n\n\n            \n                \n                        Submit a signed transaction to the blockchain\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signedTx\n                                            \n                                                            SubmitTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing the transaction and signatures\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Transaction hash\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminSKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        blockfrost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VaultInsertingService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:69\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      console.log('INPUT ', input);\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaultManagingService.html":{"url":"injectables/VaultManagingService.html","title":"injectable - VaultManagingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaultManagingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminHash\n                            \n                            \n                                    Private\n                                    Readonly\n                                adminSKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                blockfrost\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                scAddress\n                            \n                            \n                                    Private\n                                    Readonly\n                                scPolicyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBurnTx\n                            \n                            \n                                    Async\n                                createOnChainVaultTx\n                            \n                            \n                                    Async\n                                submitOnChainVaultTx\n                            \n                            \n                                    Async\n                                updateVaultMetadataTx\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, blockchainService: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createBurnTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBurnTx(burnConfig: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:238\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                burnConfig\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOnChainVaultTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOnChainVaultTx(vaultConfig: VaultCreateConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Create a new vault with the specified configuration\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultConfig\n                                            \n                                                            VaultCreateConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Transaction hash and vault ID\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitOnChainVaultTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitOnChainVaultTx(signedTx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:366\n                        \n                    \n\n\n            \n                \n                        Submit a signed vault transaction to the blockchain\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signedTx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing the transaction and signatures\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Transaction hash\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateVaultMetadataTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateVaultMetadataTx(vaultConfig: VaultConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:289\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultConfig\n                                            \n                                                            VaultConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminSKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        blockfrost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VaultManagingService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scPolicyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:62\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  Address,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { BlockchainService } from './blockchain.service';\nimport { Datum1 } from './types/type';\nimport { generate_assetname_from_txhash_index, getUtxos, getVaultUtxo, toHex } from './utils/lib';\n\nexport interface VaultConfig {\n  vaultName: string;\n  customerAddress: string;\n  adminKeyHash: string;\n  policyId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nexport interface VaultCreateConfig {\n  vaultName: string;\n  customerAddress: string;\n  vaultId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nconst one_day = 24 * 60 * 60 * 1000;\n\n@Injectable()\nexport class VaultManagingService {\n  private readonly logger = new Logger(VaultManagingService.name);\n  private scAddress: string;\n  private readonly scPolicyId: string;\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private readonly blockfrost: any;\n\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  /**\n   * Create a new vault with the specified configuration\n   * @param config Vault configuration parameters\n   * @returns Transaction hash and vault ID\n   */\n  async createOnChainVaultTx(vaultConfig: VaultCreateConfig): Promise {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const utxos = await getUtxos(Address.from_bech32(vaultConfig.customerAddress), 0, this.blockfrost); // Any UTXO works.\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found.');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n    const assetName = generate_assetname_from_txhash_index(\n      selectedUtxo.input().transaction_id().to_hex(),\n      selectedUtxo.input().index()\n    );\n\n    try {\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          datum: { type: 'inline'; value: Datum1; shape: object };\n        }[];\n        requiredInputs: string[];\n      } = {\n        changeAddress: vaultConfig.customerAddress,\n        message: vaultConfig.vaultName,\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: assetName, format: 'hex' },\n            policyId: this.scPolicyId,\n            type: 'plutus',\n            quantity: 1,\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: this.scPolicyId,\n            redeemer: {\n              type: 'json',\n              value: {\n                vault_token_index: 0,\n                asset_name: assetName,\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: this.scAddress,\n            assets: [\n              {\n                assetName: { name: assetName, format: 'hex' },\n                policyId: this.scPolicyId,\n                quantity: 1,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: {\n                contract_type: vaultConfig.contractType,\n                asset_whitelist: vaultConfig.allowedPolicies,\n                // contributor_whitelist: [],\n                asset_window: {\n                  // Time allowed to upload NFT\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                investment_window: {\n                  // Time allowed to upload ADA\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n                // fractionalization: {\n                //   percentage: 1,\n                //   token_supply: 1,\n                //   token_decimals: 1,\n                //   token_policy: \"\",\n                // },\n                custom_metadata: [\n                  // \n                  // [\n                  //   PlutusData.new_bytes(Buffer.from(\"foo\")).to_hex(),\n                  //   PlutusData.new_bytes(Buffer.from(\"bar\")).to_hex(),\n                  // ],\n                  [toHex('foo'), toHex('bar')],\n                  [toHex('bar'), toHex('foo')],\n                  [toHex('vaultId'), toHex(vaultConfig.vaultId)],\n                ], // like a tuple\n\n                // termination: {\n                //   termination_type: 1,\n                //   fdp: 1,\n                // },\n                // investment: {\n                //   reserve: 1,\n                //   liquidityPool: 1,\n                // },\n                admin: this.adminHash,\n                minting_key: this.adminHash,\n              },\n              shape: {\n                validatorHash: this.scPolicyId,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        requiredInputs: REQUIRED_INPUTS,\n      };\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n        vaultAssetName: assetName,\n      };\n    } catch (error) {\n      this.logger.error('Failed to create vault:', error);\n      throw error;\n    }\n  }\n\n  async createBurnTx(burnConfig: { customerAddress: string; assetVaultName: string }): Promise {\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, burnConfig.assetVaultName, this.blockfrost);\n    const input = {\n      changeAddress: burnConfig.customerAddress,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: burnConfig.assetVaultName, format: 'hex' },\n          policyId: this.scPolicyId,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [this.adminHash],\n    };\n    const buildResponse = await this.blockchainService.buildTransaction(input);\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n    return {\n      presignedTx: txToSubmitOnChain.to_hex(),\n      contractAddress: this.scAddress,\n    };\n  }\n\n  // Create a transaction to update the vault's metadata\n  async updateVaultMetadataTx(vaultConfig: VaultConfig) {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, vaultConfig.vaultName, this.blockfrost);\n    const input = {\n      changeAddress: vaultConfig.customerAddress,\n      message: 'Vault Update',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: {\n              vault_token_index: 0, // must fit the ordering defined in the outputs array\n              asset_name: vaultConfig.vaultName,\n            },\n          },\n        },\n      ],\n      outputs: [\n        {\n          address: this.scAddress,\n          assets: [\n            {\n              assetName: vaultConfig.vaultName,\n              policyId: this.scPolicyId,\n              quantity: 1,\n            },\n          ],\n          datum: {\n            type: 'inline',\n            value: {\n              contract_type: vaultConfig.contractType, // Represent an enum setup by L4VA (0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE)\n              asset_whitelist: vaultConfig.allowedPolicies,\n              // contributor_whitelist: [],\n              asset_window: vaultConfig.assetWindow,\n              acquire_window: vaultConfig.acquireWindow,\n              valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n              custom_metadata: vaultConfig.customMetadata || [],\n              admin: this.adminHash,\n              minting_key: this.adminHash,\n            },\n            shape: {\n              validatorHash: this.scPolicyId,\n              purpose: 'spend',\n            },\n          },\n        },\n      ],\n    };\n\n    try {\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n      };\n    } catch (error) {\n      this.logger.error('Failed to build vault update tx:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed vault transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitOnChainVaultTx(signedTx: { transaction: string; signatures: string | string[] }): Promise {\n    try {\n      // Ensure signatures is always an array\n      const signatures = Array.isArray(signedTx.signatures) ? signedTx.signatures : [signedTx.signatures];\n\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures,\n      });\n\n      return { txHash: result.txHash };\n    } catch (error) {\n      this.logger.error('Failed to submit vault transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VaultShortResponse.html":{"url":"classes/VaultShortResponse.html","title":"class - VaultShortResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VaultShortResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/vault.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                bannerImage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                baseAllocation\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                invested\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phaseEndTime\n                            \n                            \n                                    \n                                    \n                                privacy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socialLinks\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                timeRemaining\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                total\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tvl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                vaultImage\n                            \n                            \n                                    \n                                    \n                                vaultStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bannerImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image', required: true})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        baseAllocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the vault', required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier of the vault'})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        invested\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the vault'})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phaseEndTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp when current phase ends', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        privacy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultPrivacy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Privacy setting of the vault', enum: VaultPrivacy})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socialLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinkEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Social links', type: undefined, required: false})@DtoRepresent({transform: false, expose: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        timeRemaining\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Time remaining in current phase in milliseconds', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        vaultImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Vault image', required: true})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vaultStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status of the vault', enum: VaultStatus})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:118\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { AcquirerWhitelistEntity } from '@/database/acquirerWhitelist.entity';\nimport { Asset } from '@/database/asset.entity';\nimport { AssetsWhitelistEntity } from '@/database/assetsWhitelist.entity';\nimport { ContributorWhitelistEntity } from '@/database/contributorWhitelist.entity';\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { TagEntity } from '@/database/tag.entity';\nimport { User } from '@/database/user.entity';\nimport { DtoRepresent } from '../../../decorators/dto-represents.decorator';\nimport {\n  VaultPrivacy,\n  VaultStatus,\n  VaultType,\n  ValueMethod,\n  ContributionWindowType,\n  InvestmentWindowType,\n  TerminationType,\n} from '../../../types/vault.types';\n\nexport class VaultShortResponse {\n  @ApiProperty({ description: 'Unique identifier of the vault' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  id: string;\n\n  @ApiProperty({ description: 'Name of the vault' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  name: string;\n\n  @ApiProperty({ description: 'Description of the vault', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  description?: string;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  tvl?: number;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  baseAllocation?: number;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  total?: number;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  invested?: number;\n\n  @ApiProperty({ description: 'Privacy setting of the vault', enum: VaultPrivacy })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  privacy: VaultPrivacy;\n\n  @ApiProperty({ description: 'Timestamp when current phase ends', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  phaseEndTime?: string;\n\n  @ApiProperty({ description: 'Time remaining in current phase in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ obj }) => {\n      if (!obj.phaseEndTime) return null;\n      const now = new Date();\n      const endTime = new Date(obj.phaseEndTime);\n      const diff = endTime.getTime() - now.getTime();\n      return diff > 0 ? diff : 0;\n    },\n    expose: true,\n  })\n  timeRemaining?: number;\n\n  @ApiProperty({ description: 'Vault image', required: true })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  vaultImage?: FileEntity;\n\n  @ApiProperty({ description: 'Banner image', required: true })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  bannerImage?: FileEntity;\n\n  @ApiProperty({ description: 'Status of the vault', enum: VaultStatus })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  vaultStatus: VaultStatus;\n\n  @ApiProperty({ description: 'Social links', type: [LinkEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'socialLinks' },\n  })\n  socialLinks?: LinkEntity[];\n}\n\nexport class VaultFullResponse extends VaultShortResponse {\n  @ApiProperty({ description: 'Type of the vault', enum: VaultType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  type: VaultType;\n\n  @ApiProperty({ description: 'Fractional token image ' })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  ftTokenImg: FileEntity;\n\n  @ApiProperty({ description: 'Hash of publication tx' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'publicationHash' },\n  })\n  publicationHash: string;\n\n  @ApiProperty({ description: 'Required values cost for success acquire phase in ada' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'requireReservedCostAda' },\n  })\n  requireReservedCostAda: number;\n\n  @ApiProperty({ description: 'Count of contributed assets  ' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'assetsCount' },\n  })\n  assetsCount: number;\n\n  @ApiProperty({ description: 'Response with list of assets prices  ' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'assetsPrices' },\n  })\n  assetsPrices?: any;\n\n  @ApiProperty({ description: 'Max count of contributed count ' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'maxContributeAssets' },\n  })\n  maxContributeAssets: number;\n\n  @ApiProperty({ description: 'Required values cost for success acquire phase in usd' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'requireReservedCostUsd' },\n  })\n  requireReservedCostUsd: number;\n\n  @ApiProperty({ description: 'Valuation type', enum: ValueMethod, required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'valueMethod' },\n  })\n  valueMethod?: ValueMethod;\n\n  @ApiProperty({ description: 'Contract address', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'contractAddress' },\n  })\n  contractAddress: string;\n\n  @ApiProperty({ description: 'Valuation currency', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'valuationCurrency' },\n  })\n  valuationCurrency?: string;\n\n  @ApiProperty({ description: 'Valuation amount', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'valuationAmount' },\n  })\n  valuationAmount?: number;\n\n  @ApiProperty({ description: 'Contribution duration in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'contributionDuration' },\n  })\n  contributionDuration?: number;\n\n  @ApiProperty({ description: 'Investment window duration in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'acquireWindowDuration' },\n  })\n  acquireWindowDuration?: number;\n\n  @ApiProperty({ description: 'Time elapsed duration in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'timeElapsedIsEqualToTime' },\n  })\n  timeElapsedIsEqualToTime?: number;\n\n  @ApiProperty({ description: 'Contribution window type', enum: ContributionWindowType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  contributionOpenWindowType: ContributionWindowType;\n\n  @ApiProperty({ description: 'Contribution window time' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  contributionOpenWindowTime: string;\n\n  @ApiProperty({ description: 'Investment window type', enum: InvestmentWindowType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquireOpenWindowType: InvestmentWindowType;\n\n  @ApiProperty({ description: 'Investment window time' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquireOpenWindowTime: string;\n\n  @ApiProperty({ description: 'Number of assets offered' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  tokensForAcquires: number;\n\n  @ApiProperty({ description: 'FT acquire reserve' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquireReserve: number;\n\n  @ApiProperty({ description: 'Liquidity pool contribution' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  liquidityPoolContribution: number;\n\n  @ApiProperty({ description: 'FT token supply' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  ftTokenSupply: number;\n\n  @ApiProperty({ description: 'FT token ticker' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  vaultTokenTicker: string;\n\n  @ApiProperty({ description: 'FT token decimals' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  ftTokenDecimals: number;\n\n  @ApiProperty({ description: 'Termination type', enum: TerminationType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  terminationType: TerminationType;\n\n  @ApiProperty({ description: 'Vault appreciation' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  vaultAppreciation: number;\n\n  @ApiProperty({ description: 'Vault owner', type: () => User })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  owner: User;\n\n  @ApiProperty({ description: 'Creation threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  creationThreshold?: number;\n\n  @ApiProperty({ description: 'Start threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  startThreshold?: number;\n\n  @ApiProperty({ description: 'Vote threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  voteThreshold?: number;\n\n  @ApiProperty({ description: 'Execution threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  executionThreshold?: number;\n\n  @ApiProperty({ description: 'Cosigning threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  cosigningThreshold?: number;\n\n  @ApiProperty({ description: 'Assets whitelist', type: [AssetsWhitelistEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  assetsWhitelist?: AssetsWhitelistEntity[];\n\n  @ApiProperty({ description: 'Acquirer whitelist', type: [AcquirerWhitelistEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquirerWhitelist?: AcquirerWhitelistEntity[];\n\n  @ApiProperty({ description: 'Contributor whitelist', type: [ContributorWhitelistEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  contributorWhitelist?: ContributorWhitelistEntity[];\n\n  @ApiProperty({ description: 'Assets', type: [Asset], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  assets?: Asset[];\n\n  @ApiProperty({ description: 'Acquirer whitelist CSV file', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquirerWhitelistCsv?: FileEntity;\n\n  @ApiProperty({ description: 'Tags', type: [TagEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  tags?: TagEntity[];\n\n  @ApiProperty({ description: 'Contribution phase start time', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: {\n      name: 'contributionPhaseStart',\n    },\n  })\n  contributionPhaseStart?: string;\n\n  @ApiProperty({ description: 'Investment phase start time', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  acquirePhaseStart?: string;\n\n  @ApiProperty({ description: 'Locked at time', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  lockedAt?: string;\n\n  @ApiProperty({ description: 'Creation timestamp' })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  createdAt: string;\n\n  @ApiProperty({ description: 'Last update timestamp' })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VaultStatusUpdate1745573712493.html":{"url":"classes/VaultStatusUpdate1745573712493.html","title":"class - VaultStatusUpdate1745573712493","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VaultStatusUpdate1745573712493\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745573712493-vaultStatusUpdate.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'VaultStatusUpdate1745573712493'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745573712493-vaultStatusUpdate.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745573712493-vaultStatusUpdate.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745573712493-vaultStatusUpdate.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class VaultStatusUpdate1745573712493 implements MigrationInterface {\n  name = 'VaultStatusUpdate1745573712493';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'created', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaultsController.html":{"url":"controllers/VaultsController.html","title":"controller - VaultsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaultsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/vaults.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vaults\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                burnPublishAtempt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                burnVaultAttempt\n                            \n                            \n                                    \n                                    \n                                    \n                                createVault\n                            \n                            \n                                    \n                                    \n                                    \n                                getMyDraftVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                getMyVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getVaultById\n                            \n                            \n                                    \n                                    \n                                    \n                                getVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getVaultTransactions\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                publishVault\n                            \n                            \n                                    \n                                    \n                                    \n                                saveDraft\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        burnPublishAtempt\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnPublishAtempt(id: string, query: GetVaultTransactionsDto, publishDto: PublishVaultDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Burn vault', description: 'Returns list of vault transactions. By default shows only confirmed transactions.', status: 200})@UseGuards(AuthGuard)@Post('burn-publish/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultTransactionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publishDto\n                                            \n                                                            PublishVaultDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        burnVaultAttempt\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnVaultAttempt(id: string, query: GetVaultTransactionsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Burn vault', description: 'Returns list of vault transactions. By default shows only confirmed transactions.', status: 200})@UseGuards(AuthGuard)@Post('burn-build/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultTransactionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    createVault(req, data: CreateVaultReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Create vault', description: 'Vault successfully created', status: 200})@UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateVaultReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getMyDraftVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyDraftVaults(req, query: GetVaultsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Select my draft vaults', description: 'Returns list of my draft vaults. Supports sorting by name, created_at, or updated_at.', status: 200})@UseGuards(AuthGuard)@Get('my/drafts')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getMyVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyVaults(req, query: GetVaultsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Select my vaults', description: 'Returns list of my vaults. Can be filtered by status: open (published, contribution, acquire) or locked. Supports sorting by name, created_at, or updated_at.', status: 200})@UseGuards(AuthGuard)@Get('my')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getVaultById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultById(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get one vault', description: 'Returns vault if user is the owner. Uses draft service for draft vaults.', status: 200})@UseGuards(AuthGuard)@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaults(query: GetVaultsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'List of public vaults', description: 'Returns paginated list of all published vaults. Default page: 1, default limit: 10. Supports sorting by name, created_at, or updated_at. Response includes total count and total pages.', status: 200})@UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            GetVaultsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getVaultTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultTransactions(id: string, query: GetVaultTransactionsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get vault transactions', description: 'Returns list of vault transactions. By default shows only confirmed transactions.', status: 200})@UseGuards(AuthGuard)@Get(':id/transactions')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultTransactionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        publishVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    publishVault(req, publishDto: PublishVaultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Publish vault', description: 'Publishes a vault with the provided transaction', status: 200})@UseGuards(AuthGuard)@Post('/publish')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publishDto\n                                            \n                                                            PublishVaultDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        saveDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDraft(req, data: SaveDraftReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Save draft vault', description: 'Vault successfully saved', status: 200})@UseGuards(AuthGuard)@Post('save-draft')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            SaveDraftReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, Param, Request, UseGuards, Query, Logger } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { ApiDoc } from '../../decorators/api-doc.decorator';\nimport { AuthGuard } from '../auth/auth.guard';\n\nimport { DraftVaultsService } from './draft-vaults.service';\nimport { CreateVaultReq } from './dto/createVault.req';\nimport { GetVaultTransactionsDto } from './dto/get-vault-transactions.dto';\nimport { GetVaultsDto } from './dto/get-vaults.dto';\nimport { PublishVaultDto } from './dto/publish-vault.dto';\nimport { SaveDraftReq } from './dto/saveDraft.req';\nimport { TransactionsService } from './processing-tx/offchain-tx/transactions.service';\nimport { VaultsService } from './vaults.service';\n\n@ApiTags('vaults')\n@Controller('vaults')\nexport class VaultsController {\n  private readonly logger = new Logger(VaultsController.name);\n  constructor(\n    private readonly vaultsService: VaultsService,\n    private readonly draftVaultsService: DraftVaultsService,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  @ApiDoc({\n    summary: 'Create vault',\n    description: 'Vault successfully created',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post()\n  createVault(\n    @Request() req,\n    @Body()\n    data: CreateVaultReq\n  ) {\n    const userId = req.user.sub;\n    return this.vaultsService.createVault(userId, data);\n  }\n\n  @ApiDoc({\n    summary: 'Publish vault',\n    description: 'Publishes a vault with the provided transaction',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('/publish')\n  async publishVault(@Request() req, @Body() publishDto: PublishVaultDto): Promise {\n    const userId = req.user.sub;\n    try {\n      return await this.vaultsService.publishVault(userId, publishDto);\n    } catch (error) {\n      this.logger.error('Error publishing vault', error);\n      throw error;\n    }\n  }\n\n  @ApiDoc({\n    summary: 'Save draft vault',\n    description: 'Vault successfully saved',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('save-draft')\n  saveDraft(\n    @Request() req,\n    @Body()\n    data: SaveDraftReq\n  ) {\n    const userId = req.user.sub;\n    this.logger.log('drfat data ', data);\n    return this.draftVaultsService.saveDraftVault(userId, data);\n  }\n\n  @ApiDoc({\n    summary: 'Select my vaults',\n    description:\n      'Returns list of my vaults. Can be filtered by status: open (published, contribution, acquire) or locked. Supports sorting by name, created_at, or updated_at.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('my')\n  getMyVaults(@Request() req, @Query() query: GetVaultsDto) {\n    const userId = req.user.sub;\n    return this.vaultsService.getMyVaults(userId, query.filter, query.page, query.limit, query.sortBy, query.sortOrder);\n  }\n\n  @ApiDoc({\n    summary: 'Select my draft vaults',\n    description: 'Returns list of my draft vaults. Supports sorting by name, created_at, or updated_at.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('my/drafts')\n  getMyDraftVaults(@Request() req, @Query() query: GetVaultsDto) {\n    const userId = req.user.sub;\n    return this.draftVaultsService.getMyDraftVaults(userId, query.page, query.limit, query.sortBy, query.sortOrder);\n  }\n\n  @ApiDoc({\n    summary: 'Get one vault',\n    description: 'Returns vault if user is the owner. Uses draft service for draft vaults.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get(':id')\n  async getVaultById(@Param('id') id: string, @Request() req) {\n    const userId = req.user.sub;\n    try {\n      return await this.draftVaultsService.getDraftVaultById(id, userId);\n    } catch (error) {\n      if (error?.message === 'Draft vault not found') {\n        return this.vaultsService.getVaultById(id, userId);\n      }\n      throw error;\n    }\n  }\n\n  @ApiDoc({\n    summary: 'List of public vaults',\n    description:\n      'Returns paginated list of all published vaults. Default page: 1, default limit: 10. Supports sorting by name, created_at, or updated_at. Response includes total count and total pages.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get()\n  getVaults(@Query() query: GetVaultsDto, @Request() req) {\n    const userId = req.user.sub;\n\n    return this.vaultsService.getVaults(userId, query.filter, query.page, query.limit, query.sortBy, query.sortOrder);\n  }\n\n  @ApiDoc({\n    summary: 'Get vault transactions',\n    description: 'Returns list of vault transactions. By default shows only confirmed transactions.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get(':id/transactions')\n  async getVaultTransactions(@Param('id') id: string, @Query() query: GetVaultTransactionsDto, @Request() req) {\n    const userId = req.user.sub;\n    // Verify vault exists and user has access\n    await this.vaultsService.getVaultById(id, userId);\n    return this.transactionsService.getVaultTransactions(id, query.status, query.type);\n  }\n\n  @ApiDoc({\n    summary: 'Burn vault',\n    description: 'Returns list of vault transactions. By default shows only confirmed transactions.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('burn-build/:id')\n  async burnVaultAttempt(@Param('id') id: string, @Query() query: GetVaultTransactionsDto, @Request() req) {\n    const userId = req.user.sub;\n    return await this.vaultsService.burnVaultAttempt(id, userId);\n  }\n\n  @ApiDoc({\n    summary: 'Burn vault',\n    description: 'Returns list of vault transactions. By default shows only confirmed transactions.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('burn-publish/:id')\n  async burnPublishAtempt(\n    @Param('id') id: string,\n    @Query() query: GetVaultTransactionsDto,\n    @Body() publishDto: PublishVaultDto,\n    @Request() req\n  ) {\n    const userId = req.user.sub;\n\n    return await this.vaultsService.burnVaultPublishTx(id, userId, publishDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaultsModule.html":{"url":"modules/VaultsModule.html","title":"module - VaultsModule","body":"\n                   \n\n\n\n\n    Modules\n    VaultsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VaultsModule\n\n\n\ncluster_VaultsModule_imports\n\n\n\ncluster_VaultsModule_exports\n\n\n\ncluster_VaultsModule_providers\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nVaultsModule\n\nVaultsModule\n\nVaultsModule -->\n\nAwsModule->VaultsModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nVaultsModule -->\n\nBlockchainModule->VaultsModule\n\n\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nVaultsModule -->\n\nLifecycleModule->VaultsModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nVaultsModule -->\n\nTransactionsModule->VaultsModule\n\n\n\n\n\nDraftVaultsService \n\nDraftVaultsService \n\nDraftVaultsService  -->\n\nVaultsModule->DraftVaultsService \n\n\n\n\n\nVaultsService \n\nVaultsService \n\nVaultsService  -->\n\nVaultsModule->VaultsService \n\n\n\n\n\nDraftVaultsService\n\nDraftVaultsService\n\nVaultsModule -->\n\nDraftVaultsService->VaultsModule\n\n\n\n\n\nVaultsService\n\nVaultsService\n\nVaultsModule -->\n\nVaultsService->VaultsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/vaults.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DraftVaultsService\n                        \n                        \n                            VaultsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaultsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                        \n                            BlockchainModule\n                        \n                        \n                            LifecycleModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DraftVaultsService\n                        \n                        \n                            VaultsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AwsModule } from '../aws_bucket/aws.module';\n\nimport { DraftVaultsService } from './draft-vaults.service';\nimport { LifecycleModule } from './phase-management/lifecycle/lifecycle.module';\nimport { TransactionsModule } from './processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from './processing-tx/onchain/blockchain.module';\nimport { VaultsController } from './vaults.controller';\nimport { VaultsService } from './vaults.service';\n\nimport { AcquirerWhitelistEntity } from '@/database/acquirerWhitelist.entity';\nimport { Asset } from '@/database/asset.entity';\nimport { AssetsWhitelistEntity } from '@/database/assetsWhitelist.entity';\nimport { ContributorWhitelistEntity } from '@/database/contributorWhitelist.entity';\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { TagEntity } from '@/database/tag.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [\n    AwsModule,\n    LifecycleModule,\n    TransactionsModule,\n    BlockchainModule,\n    TypeOrmModule.forFeature([\n      Vault,\n      User,\n      FileEntity,\n      Asset,\n      AssetsWhitelistEntity,\n      LinkEntity,\n      AcquirerWhitelistEntity,\n      TagEntity,\n      ContributorWhitelistEntity,\n    ]),\n  ],\n  providers: [VaultsService, DraftVaultsService],\n  controllers: [VaultsController],\n  exports: [VaultsService, DraftVaultsService],\n})\nexport class VaultsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VoteReq.html":{"url":"classes/VoteReq.html","title":"class - VoteReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VoteReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/dto/vote.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                option\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                reason\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        option\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Selected voting option', example: 'Yes'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/vote.req.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Optional reason for the vote', required: false, example: 'I support this proposal because...'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/vote.req.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class VoteReq {\n  @ApiProperty({\n    description: 'Selected voting option',\n    example: 'Yes',\n  })\n  @IsNotEmpty()\n  @IsString()\n  option: string;\n\n  @ApiProperty({\n    description: 'Optional reason for the vote',\n    required: false,\n    example: 'I support this proposal because...',\n  })\n  @IsString()\n  reason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VyfiController.html":{"url":"controllers/VyfiController.html","title":"controller - VyfiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VyfiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/vyfi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vyfi\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                checkPool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createLiquidityPool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getPoolInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        checkPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPool(networkId: number, tokenAUnit: string, tokenBUnit: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('check-pool')@ApiOperation({summary: 'Check if a VyFi liquidity pool exists'})@ApiQuery({name: 'networkId', required: true, type: Number})@ApiQuery({name: 'tokenAUnit', required: true, type: String})@ApiQuery({name: 'tokenBUnit', required: true, type: String})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                networkId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenAUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenBUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createLiquidityPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLiquidityPool(createPoolDto: CreatePoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create-pool')@ApiOperation({summary: 'Create a new VyFi liquidity pool'})@ApiBody({type: CreatePoolDto})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPoolDto\n                                            \n                                                            CreatePoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getPoolInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPoolInfo(poolId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pool/:poolId')@ApiOperation({summary: 'Get VyFi pool information'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                poolId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Query } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiQuery, ApiBody } from '@nestjs/swagger';\n\nimport { CreatePoolDto } from './dto/create-pool.dto';\nimport { VyfiService } from './vyfi.service';\n\n@ApiTags('VyFi')\n@Controller('vyfi')\nexport class VyfiController {\n  constructor(private readonly vyfiService: VyfiService) {}\n\n  @Get('check-pool')\n  @ApiOperation({ summary: 'Check if a VyFi liquidity pool exists' })\n  @ApiQuery({ name: 'networkId', required: true, type: Number })\n  @ApiQuery({ name: 'tokenAUnit', required: true, type: String })\n  @ApiQuery({ name: 'tokenBUnit', required: true, type: String })\n  async checkPool(\n    @Query('networkId') networkId: number,\n    @Query('tokenAUnit') tokenAUnit: string,\n    @Query('tokenBUnit') tokenBUnit: string\n  ) {\n    return this.vyfiService.checkPool({\n      networkId,\n      tokenAUnit,\n      tokenBUnit,\n    });\n  }\n\n  @Post('create-pool')\n  @ApiOperation({ summary: 'Create a new VyFi liquidity pool' })\n  @ApiBody({ type: CreatePoolDto })\n  async createLiquidityPool(@Body() createPoolDto: CreatePoolDto) {\n    return this.vyfiService.createLiquidityPool(createPoolDto);\n  }\n\n  @Get('pool/:poolId')\n  @ApiOperation({ summary: 'Get VyFi pool information' })\n  async getPoolInfo(@Query('poolId') poolId: string) {\n    return this.vyfiService.getPoolInfo(poolId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VyfiModule.html":{"url":"modules/VyfiModule.html","title":"module - VyfiModule","body":"\n                   \n\n\n\n\n    Modules\n    VyfiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VyfiModule\n\n\n\ncluster_VyfiModule_exports\n\n\n\ncluster_VyfiModule_providers\n\n\n\n\nVyfiService \n\nVyfiService \n\n\n\nVyfiModule\n\nVyfiModule\n\nVyfiService  -->\n\nVyfiModule->VyfiService \n\n\n\n\n\nVyfiService\n\nVyfiService\n\nVyfiModule -->\n\nVyfiService->VyfiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vyfi/vyfi.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VyfiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VyfiController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VyfiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { VyfiController } from './vyfi.controller';\nimport { VyfiService } from './vyfi.service';\n\n@Module({\n  imports: [HttpModule, ConfigModule],\n  controllers: [VyfiController],\n  providers: [VyfiService],\n  exports: [VyfiService],\n})\nexport class VyfiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VyfiService.html":{"url":"injectables/VyfiService.html","title":"injectable - VyfiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VyfiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/vyfi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adaAnvilApiUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                poolOwner\n                            \n                            \n                                    Private\n                                    Readonly\n                                vyfiApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkPool\n                            \n                            \n                                    Async\n                                createLiquidityPool\n                            \n                            \n                                    Private\n                                formatMetadataText\n                            \n                            \n                                    Async\n                                getPoolInfo\n                            \n                            \n                                    Private\n                                    Async\n                                getUtxos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vyfi/vyfi.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPool(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLiquidityPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLiquidityPool(createPoolDto: CreatePoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPoolDto\n                                            \n                                                            CreatePoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatMetadataText\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatMetadataText(tokenA: literal type, tokenB: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenA\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenB\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPoolInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPoolInfo(poolId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                poolId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getUtxos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUtxos(address: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                        Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adaAnvilApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://preprod.api.ada-anvil.app/v2/services/transactions'\n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/vyfi.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        poolOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/vyfi.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        vyfiApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.vyfi.io'\n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/vyfi.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'buffer';\n\nimport { Address, FixedTransaction, PrivateKey } from '@emurgo/cardano-serialization-lib-nodejs';\nimport { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nimport { CreatePoolDto } from './dto/create-pool.dto';\n\nconst poolOwner = {\n  skey: 'ed25519e_sk1eqleq0gr7awjymmkcehm4pza8ffq385fyxkntqe74u384fgfs4w7vncmhdlc2u2l78g4r82ctfw6s36dnuguadxh3lggluy9pwansegfprll7',\n  base_address_preprod:\n    'addr_test1qpjavykfl5n4t47xklzyuccevgple0e4c7mke2m6cd0z0fwy0pq8p292lgrquq7hx75c4wpvz0h8cjp69mp7men3nw8s46zete',\n};\n\n// Constants for VyFi pool creation\nconst VYFI_CONSTANTS = {\n  PROCESSING_FEE: 1900000, // 1.9 ADA in lovelace\n  MIN_POOL_ADA: 2000000, // 2 ADA in lovelace\n  MIN_RETURN_ADA: 2000000, // 2 ADA in lovelace\n  TOTAL_REQUIRED_ADA: 5900000, // 5.9 ADA in lovelace\n  POOL_ADDRESS:\n    'addr1qy5dasujdtm4hzrtamca9sjetu78hgqt8rkqs9tu69n0vq47wr70fcgkj4fe9tyr6z2jz8qvwvrc2gq04ltky960fw0smcuf0t',\n  METADATA_LABEL: '53554741',\n};\n\n@Injectable()\nexport class VyfiService {\n  private readonly vyfiApiUrl = 'https://api.vyfi.io';\n  private readonly adaAnvilApiUrl = 'https://preprod.api.ada-anvil.app/v2/services/transactions';\n  private readonly poolOwner: any;\n\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService\n  ) {\n    this.poolOwner = poolOwner;\n  }\n\n  async checkPool(params: { networkId: number; tokenAUnit: string; tokenBUnit: string }) {\n    const { networkId, tokenAUnit, tokenBUnit } = params;\n    const url = `${this.vyfiApiUrl}/lp`;\n    const queryParams = new URLSearchParams({\n      networkId: networkId.toString(),\n      tokenAUnit,\n      tokenBUnit,\n      v2: 'true',\n    });\n\n    try {\n      const response = await firstValueFrom(this.httpService.get(`${url}?${queryParams.toString()}`));\n      return {\n        exists: true,\n        data: response.data,\n      };\n    } catch (error) {\n      if (error.response?.status === 500) {\n        return {\n          exists: false,\n          error: 'Pool does not exist',\n        };\n      }\n      throw new Error(`Failed to check VyFi pool: ${error.message}`);\n    }\n  }\n\n  private formatMetadataText(\n    tokenA: { policyId?: string; assetName: string },\n    tokenB: { policyId?: string; assetName: string }\n  ): string {\n    const shortA = tokenA.policyId ? tokenA.policyId.substring(0, 8) : 'lovelace';\n    const shortB = tokenB.policyId ? tokenB.policyId.substring(0, 8) : 'lovelace';\n    return `VyFi: LP Factory Create Pool Order Request -- /${VYFI_CONSTANTS.METADATA_LABEL} ${shortA}/${shortB}`;\n  }\n\n  async createLiquidityPool(createPoolDto: CreatePoolDto) {\n    const { networkId, tokenA, tokenB } = createPoolDto;\n\n    // First check if pool exists\n    const poolCheck = await this.checkPool({\n      networkId,\n      tokenAUnit: tokenA.policyId ? `${tokenA.policyId}${tokenA.assetName}` : 'lovelace',\n      tokenBUnit: tokenB.policyId ? `${tokenB.policyId}${tokenB.assetName}` : 'lovelace',\n    });\n\n    if (poolCheck.exists) {\n      throw new Error('Pool already exists');\n    }\n\n    const CUSTOMER_ADDRESS = this.poolOwner.base_address_preprod;\n\n    // Generate metadata\n    const metadataText = this.formatMetadataText(tokenA, tokenB);\n\n    // Get UTxOs\n    const utxos = await this.getUtxos(Address.from_bech32(CUSTOMER_ADDRESS));\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n\n    // Construct transaction input with proper ADA amounts\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Create Liquidity Pool',\n      outputs: [\n        {\n          address: VYFI_CONSTANTS.POOL_ADDRESS,\n          assets: [\n            {\n              assetName: { name: tokenA.assetName, format: 'hex' },\n              policyId: tokenA.policyId,\n              quantity: tokenA.amount,\n            },\n            {\n              assetName: { name: tokenB.assetName, format: 'hex' },\n              policyId: tokenB.policyId,\n              quantity: tokenB.amount,\n            },\n          ],\n          lovelace: VYFI_CONSTANTS.TOTAL_REQUIRED_ADA,\n        },\n      ],\n      metadata: {\n        [VYFI_CONSTANTS.METADATA_LABEL]: metadataText,\n      },\n      requiredInputs: REQUIRED_INPUTS,\n    };\n\n    // Get API key from config\n    const apiKey = this.configService.get('VYFI_API_KEY');\n    if (!apiKey) {\n      throw new Error('VYFI_API_KEY not configured');\n    }\n\n    // Build the transaction\n    const buildResponse = await firstValueFrom(\n      this.httpService.post(`${this.adaAnvilApiUrl}/build`, input, {\n        headers: {\n          'x-api-key': apiKey,\n          'Content-Type': 'application/json',\n        },\n      })\n    );\n\n    const transaction = buildResponse.data;\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(transaction.complete, 'hex'));\n\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.poolOwner.skey));\n\n    // Submit the transaction\n    const submitResponse = await firstValueFrom(\n      this.httpService.post(\n        `${this.adaAnvilApiUrl}/submit`,\n        {\n          signatures: [],\n          transaction: txToSubmitOnChain.to_hex(),\n        },\n        {\n          headers: {\n            'x-api-key': apiKey,\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n    );\n\n    return {\n      ...submitResponse.data,\n      poolAddress: VYFI_CONSTANTS.POOL_ADDRESS,\n      fees: {\n        processingFee: VYFI_CONSTANTS.PROCESSING_FEE,\n        minPoolAda: VYFI_CONSTANTS.MIN_POOL_ADA,\n        minReturnAda: VYFI_CONSTANTS.MIN_RETURN_ADA,\n        totalRequiredAda: VYFI_CONSTANTS.TOTAL_REQUIRED_ADA,\n      },\n    };\n  }\n\n  private async getUtxos(address: Address) {\n    const apiKey = this.configService.get('BLOCKFROST_API_KEY');\n    if (!apiKey) {\n      throw new Error('BLOCKFROST_API_KEY not configured');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(`https://cardano-preprod.blockfrost.io/api/v0/addresses/${address.to_bech32()}/utxos`, {\n          headers: {\n            project_id: apiKey,\n          },\n        })\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error(`Failed to get UTXOs: ${error.message}`);\n    }\n  }\n\n  async getPoolInfo(poolId: string) {\n    try {\n      const response = await firstValueFrom(this.httpService.get(`${this.vyfiApiUrl}/pool/${poolId}`));\n      return response.data;\n    } catch (error) {\n      throw new Error(`Failed to get VyFi pool info: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletSummaryDto.html":{"url":"classes/WalletSummaryDto.html","title":"class - WalletSummaryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletSummaryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/dto/wallet-summary.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assets\n                            \n                            \n                                lastUpdated\n                            \n                            \n                                summary\n                            \n                            \n                                totalValueAda\n                            \n                            \n                                totalValueUsd\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetValueDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AssetValueDto } from './asset-value.dto';\n\nexport class WalletSummaryDto {\n  wallet: string;\n  assets: AssetValueDto[];\n  totalValueAda: number;\n  totalValueUsd: number;\n  lastUpdated: string;\n  summary: {\n    totalAssets: number;\n    nfts: number;\n    tokens: number;\n    ada: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebhookVerificationService.html":{"url":"injectables/WebhookVerificationService.html","title":"injectable - WebhookVerificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebhookVerificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxEventAge\n                            \n                            \n                                    Private\n                                    Readonly\n                                webhookAuthToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                verifySignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        verifySignature\n                        \n                    \n                \n            \n            \n                \nverifySignature(payload: string, signatureHeader: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signatureHeader\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WebhookVerificationService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        maxEventAge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        webhookAuthToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\n\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n// TODO: refactor or remove this service. Webhook verification is not used in the current implementation.\n// It was initially intended to verify Blockfrost webhook signatures, but the current setup does not utilize webhooks.\n// Used scanner service instead for processing transactions and events.\n\n@Injectable()\nexport class WebhookVerificationService {\n  private readonly logger = new Logger(WebhookVerificationService.name);\n  private readonly webhookAuthToken: string;\n  private readonly maxEventAge: number;\n\n  constructor(private readonly configService: ConfigService) {\n    this.webhookAuthToken = this.configService.get('BLOCKFROST_WEBHOOK_AUTH_TOKEN');\n    this.maxEventAge = 600; // 10 minutes max age for webhook events\n  }\n\n  verifySignature(payload: string, signatureHeader: string): boolean {\n    if (!this.webhookAuthToken) {\n      this.logger.error('BLOCKFROST_WEBHOOK_AUTH_TOKEN is not configured');\n      throw new Error('BLOCKFROST_WEBHOOK_AUTH_TOKEN is not configured');\n    }\n\n    if (!signatureHeader) {\n      this.logger.error('blockfrost-signature header is missing');\n      throw new Error('blockfrost-signature header is missing');\n    }\n\n    try {\n      // Parse the signature header\n      const [timestampHeader, signatureValue] = signatureHeader.split(',');\n      const timestamp = timestampHeader.split('=')[1];\n      const signature = signatureValue.split('=')[1];\n\n      // Log parsed values\n      this.logger.debug('Parsed signature components:', {\n        timestamp,\n        signature,\n        payloadLength: payload.length,\n      });\n\n      // Prepare the signature payload as per Blockfrost docs\n      const signaturePayload = `${timestamp}.${payload}`;\n\n      // Compute HMAC\n      const expectedSignature = crypto\n        .createHmac('sha256', this.webhookAuthToken)\n        .update(signaturePayload)\n        .digest('hex');\n\n      // Log computed values for debugging\n      this.logger.debug('Computed signature:', {\n        expectedSignature,\n        receivedSignature: signature,\n        match: expectedSignature === signature,\n      });\n\n      // Verify timestamp is within tolerance\n      const currentTime = Math.floor(Date.now() / 1000);\n      const timeDiff = Math.abs(currentTime - parseInt(timestamp));\n\n      if (timeDiff > this.maxEventAge) {\n        this.logger.error('Webhook event is too old:', {\n          eventTime: timestamp,\n          currentTime,\n          maxAge: this.maxEventAge,\n        });\n        return false;\n      }\n\n      // Compare signatures\n      if (expectedSignature === signature) {\n        this.logger.log('Webhook signature verified successfully');\n        return true;\n      }\n\n      this.logger.error('Signature mismatch:', {\n        expected: expectedSignature,\n        received: signature,\n      });\n      return false;\n    } catch (error) {\n      this.logger.error('Error during signature verification:', {\n        error: error.message,\n        signatureHeader,\n      });\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @blaze-cardano/uplc : 0.3.0\n        \n            @blockfrost/blockfrost-js : ^6.0.0\n        \n            @emurgo/cardano-message-signing-nodejs : ^1.1.0\n        \n            @emurgo/cardano-serialization-lib-nodejs : ^14.1.2\n        \n            @nestjs/axios : ^4.0.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/schedule : ^5.0.1\n        \n            @nestjs/swagger : ^8.1.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @types/cbor : ^6.0.4\n        \n            aws-sdk : ^2.1692.0\n        \n            axios : ^1.8.4\n        \n            cbor : ^10.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            crypto : ^1.0.1\n        \n            csv-parse : ^5.6.0\n        \n            multer : ^1.4.5-lts.1\n        \n            node-cache : ^5.1.2\n        \n            pg : ^8.13.1\n        \n            raw-body : ^3.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            typeorm-naming-strategies : ^4.1.0\n        \n            unique-username-generator : ^1.4.0\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AssetOriginType   (src/.../asset.types.ts)\n                        \n                        \n                            AssetStatus   (src/.../asset.types.ts)\n                        \n                        \n                            AssetType   (src/.../asset.types.ts)\n                        \n                        \n                            ContributionWindowType   (src/.../vault.types.ts)\n                        \n                        \n                            InvestmentWindowType   (src/.../vault.types.ts)\n                        \n                        \n                            OnchainTransactionStatus   (src/.../blockchain.service.ts)\n                        \n                        \n                            OnchainTransactionStatus   (src/.../transaction-status.enum.ts)\n                        \n                        \n                            ProposalType   (src/.../create-proposal.req.ts)\n                        \n                        \n                            SortOrder   (src/.../get-vaults.dto.ts)\n                        \n                        \n                            TerminationType   (src/.../vault.types.ts)\n                        \n                        \n                            TransactionStatus   (src/.../transaction.types.ts)\n                        \n                        \n                            TransactionType   (src/.../transaction.types.ts)\n                        \n                        \n                            ValueMethod   (src/.../vault.types.ts)\n                        \n                        \n                            VaultFilter   (src/.../get-vaults.dto.ts)\n                        \n                        \n                            VaultPrivacy   (src/.../vault.types.ts)\n                        \n                        \n                            VaultSortField   (src/.../get-vaults.dto.ts)\n                        \n                        \n                            VaultStatus   (src/.../vault.types.ts)\n                        \n                        \n                            VaultType   (src/.../vault.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/asset.types.ts\n    \n        \n            \n                \n                    \n                        \n                        AssetOriginType\n                    \n                \n                        \n                            \n                                 INVESTED\n                            \n                        \n                        \n                            \n                                Value : invested\n                            \n                        \n                        \n                            \n                                 ACQUIRED\n                            \n                        \n                        \n                            \n                                Value : acquired\n                            \n                        \n                        \n                            \n                                 CONTRIBUTED\n                            \n                        \n                        \n                            \n                                Value : contributed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        AssetStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOCKED\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 RELEASED\n                            \n                        \n                        \n                            \n                                Value : released\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        AssetType\n                    \n                \n                        \n                            \n                                 NFT\n                            \n                        \n                        \n                            \n                                Value : nft\n                            \n                        \n                        \n                            \n                                 CNT\n                            \n                        \n                        \n                            \n                                Value : cnt\n                            \n                        \n            \n        \n\n    src/types/vault.types.ts\n    \n        \n            \n                \n                    \n                        \n                        ContributionWindowType\n                    \n                \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n                        \n                            \n                                 uponVaultLaunch\n                            \n                        \n                        \n                            \n                                Value : upon-vault-launch\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InvestmentWindowType\n                    \n                \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n                        \n                            \n                                 uponAssetWindowClosing\n                            \n                        \n                        \n                            \n                                Value : upon-asset-window-closing\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TerminationType\n                    \n                \n                        \n                            \n                                 dao\n                            \n                        \n                        \n                            \n                                Value : dao\n                            \n                        \n                        \n                            \n                                 programmed\n                            \n                        \n                        \n                            \n                                Value : programmed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueMethod\n                    \n                \n                        \n                            \n                                 lbe\n                            \n                        \n                        \n                            \n                                Value : lbe\n                            \n                        \n                        \n                            \n                                 fixed\n                            \n                        \n                        \n                            \n                                Value : fixed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultPrivacy\n                    \n                \n                        \n                            \n                                 private\n                            \n                        \n                        \n                            \n                                Value : private\n                            \n                        \n                        \n                            \n                                 public\n                            \n                        \n                        \n                            \n                                Value : public\n                            \n                        \n                        \n                            \n                                 semiPrivate\n                            \n                        \n                        \n                            \n                                Value : semi-private\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultStatus\n                    \n                \n                        \n                            \n                                 draft\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 created\n                            \n                        \n                        \n                            \n                                Value : created\n                            \n                        \n                        \n                            \n                                 published\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n                        \n                            \n                                 contribution\n                            \n                        \n                        \n                            \n                                Value : contribution\n                            \n                        \n                        \n                            \n                                 acquire\n                            \n                        \n                        \n                            \n                                Value : acquire\n                            \n                        \n                        \n                            \n                                 investment\n                            \n                        \n                        \n                            \n                                Value : investment\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 governance\n                            \n                        \n                        \n                            \n                                Value : governance\n                            \n                        \n                        \n                            \n                                 failed\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultType\n                    \n                \n                        \n                            \n                                 single\n                            \n                        \n                        \n                            \n                                Value : single\n                            \n                        \n                        \n                            \n                                 multi\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n                        \n                            \n                                 ctn\n                            \n                        \n                        \n                            \n                                Value : ctn\n                            \n                        \n                        \n                            \n                                 cnt\n                            \n                        \n                        \n                            \n                                Value : cnt\n                            \n                        \n            \n        \n\n    src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n    \n        \n            \n                \n                    \n                        \n                        OnchainTransactionStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 CONFIRMED\n                            \n                        \n                        \n                            \n                                Value : confirmed\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : not_found\n                            \n                        \n            \n        \n\n    src/modules/vaults/processing-tx/onchain/types/transaction-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OnchainTransactionStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 CONFIRMED\n                            \n                        \n                        \n                            \n                                Value : confirmed\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : not_found\n                            \n                        \n            \n        \n\n    src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts\n    \n        \n            \n                \n                    \n                        \n                        ProposalType\n                    \n                \n                        \n                            \n                                 ASSET_SALE\n                            \n                        \n                        \n                            \n                                Value : asset_sale\n                            \n                        \n                        \n                            \n                                 VAULT_STRATEGY\n                            \n                        \n                        \n                            \n                                Value : vault_strategy\n                            \n                        \n                        \n                            \n                                 PARAMETER_CHANGE\n                            \n                        \n                        \n                            \n                                Value : parameter_change\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n            \n        \n\n    src/modules/vaults/dto/get-vaults.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultFilter\n                    \n                \n                        \n                            \n                                 open\n                            \n                        \n                        \n                            \n                                Value : open\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 contribution\n                            \n                        \n                        \n                            \n                                Value : contribution\n                            \n                        \n                        \n                            \n                                 acquire\n                            \n                        \n                        \n                            \n                                Value : acquire\n                            \n                        \n                        \n                            \n                                 governance\n                            \n                        \n                        \n                            \n                                Value : governance\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultSortField\n                    \n                \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 createdAt\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updatedAt\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n            \n        \n\n    src/types/transaction.types.ts\n    \n        \n            \n                \n                    \n                        \n                        TransactionStatus\n                    \n                \n                        \n                            \n                                 created\n                            \n                        \n                        \n                            \n                                Value : created\n                            \n                        \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 submitted\n                            \n                        \n                        \n                            \n                                Value : submitted\n                            \n                        \n                        \n                            \n                                 confirmed\n                            \n                        \n                        \n                            \n                                Value : confirmed\n                            \n                        \n                        \n                            \n                                 failed\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 stuck\n                            \n                        \n                        \n                            \n                                Value : stuck\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TransactionType\n                    \n                \n                        \n                            \n                                 mint\n                            \n                        \n                        \n                            \n                                Value : mint\n                            \n                        \n                        \n                            \n                                 payment\n                            \n                        \n                        \n                            \n                                Value : payment\n                            \n                        \n                        \n                            \n                                 contribute\n                            \n                        \n                        \n                            \n                                Value : contribute\n                            \n                        \n                        \n                            \n                                 acquire\n                            \n                        \n                        \n                            \n                                Value : acquire\n                            \n                        \n                        \n                            \n                                 investment\n                            \n                        \n                        \n                            \n                                Value : investment\n                            \n                        \n                        \n                            \n                                 burn\n                            \n                        \n                        \n                            \n                                Value : burn\n                            \n                        \n                        \n                            \n                                 swap\n                            \n                        \n                        \n                            \n                                Value : swap\n                            \n                        \n                        \n                            \n                                 stake\n                            \n                        \n                        \n                            \n                                Value : stake\n                            \n                        \n                        \n                            \n                                 extractLp\n                            \n                        \n                        \n                            \n                                Value : extract-lp\n                            \n                        \n                        \n                            \n                                 distributeLp\n                            \n                        \n                        \n                            \n                                Value : distribute-lp\n                            \n                        \n                        \n                            \n                                 updateVault\n                            \n                        \n                        \n                            \n                                Value : update-vault\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiDoc   (src/.../api-doc.decorator.ts)\n                        \n                        \n                            applyContributeParams   (src/.../apply_params.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            defineShape   (src/.../apply_params.ts)\n                        \n                        \n                            DtoRepresent   (src/.../dto-represents.decorator.ts)\n                        \n                        \n                            generate_assetname_from_txhash_index   (src/.../lib.ts)\n                        \n                        \n                            generate_tag_from_txhash_index   (src/.../lib.ts)\n                        \n                        \n                            getVaultUtxo   (src/.../lib.ts)\n                        \n                        \n                            toHex   (src/.../lib.ts)\n                        \n                        \n                            toPreloadedScript   (src/.../apply_params.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/api-doc.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiDoc\n                        \n                    \n                \n            \n            \n                \nApiDoc(__namedParameters: {summary: ApiDocParams, description, status})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                summary\n                                            \n                                                            ApiDocParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                description\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                status\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    200\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/modules/vaults/processing-tx/onchain/utils/apply_params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyContributeParams\n                        \n                    \n                \n            \n            \n                \napplyContributeParams(input)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineShape\n                        \n                    \n                \n            \n            \n                \ndefineShape(schema: any, definitions: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                definitions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toPreloadedScript\n                        \n                    \n                \n            \n            \n                \ntoPreloadedScript(__namedParameters: {definitions, ...preamble: any[]}, opts: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                definitions\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                preamble\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                opts\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/decorators/dto-represents.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DtoRepresent\n                        \n                    \n                \n            \n            \n                \nDtoRepresent(__namedParameters: {transform: DtoRepresentsType, expose})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transform\n                                            \n                                                            DtoRepresentsType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expose\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/modules/vaults/processing-tx/onchain/utils/lib.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generate_assetname_from_txhash_index\n                        \n                    \n                \n            \n            \n                \ngenerate_assetname_from_txhash_index(txHash: string, txOutputIdx: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txOutputIdx\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generate_tag_from_txhash_index\n                        \n                    \n                \n            \n            \n                \ngenerate_tag_from_txhash_index(tx_hash: string, tx_output_idx: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tx_hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tx_output_idx\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVaultUtxo\n                        \n                    \n                \n            \n            \n                \ngetVaultUtxo(policyId: string, assetName: string, blockfrost)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                policyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                blockfrost\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHex\n                        \n                    \n                \n            \n            \n                \ntoHex(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodMigration\nIf you need to generate new empty migration file\nExample :# development\n$ npm run migration:create --name=MigrationName\nIf you need to generate migration based on changes in entity\nExample :# development\n$ npm run migration:generate --name=MigrationName\nRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AcquireModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AssetsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AwsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContributionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DistributionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GovernanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtGlobalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LifecycleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LpTokensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaptoolsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaultsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VyfiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AcquireModule\n\n\n\ncluster_AcquireModule_imports\n\n\n\ncluster_AcquireModule_exports\n\n\n\ncluster_AcquireModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AssetsModule\n\n\n\ncluster_AssetsModule_exports\n\n\n\ncluster_AssetsModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_exports\n\n\n\ncluster_AwsModule_providers\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_BlockchainModule_providers\n\n\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_exports\n\n\n\ncluster_ContributionModule_providers\n\n\n\ncluster_DistributionModule\n\n\n\ncluster_DistributionModule_exports\n\n\n\ncluster_DistributionModule_providers\n\n\n\ncluster_GovernanceModule\n\n\n\ncluster_GovernanceModule_exports\n\n\n\ncluster_GovernanceModule_providers\n\n\n\ncluster_JwtGlobalModule\n\n\n\ncluster_JwtGlobalModule_imports\n\n\n\ncluster_JwtGlobalModule_exports\n\n\n\ncluster_LifecycleModule\n\n\n\ncluster_LifecycleModule_exports\n\n\n\ncluster_LifecycleModule_providers\n\n\n\ncluster_LpTokensModule\n\n\n\ncluster_LpTokensModule_exports\n\n\n\ncluster_LpTokensModule_providers\n\n\n\ncluster_TaptoolsModule\n\n\n\ncluster_TaptoolsModule_exports\n\n\n\ncluster_TaptoolsModule_providers\n\n\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_exports\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VaultsModule\n\n\n\ncluster_VaultsModule_exports\n\n\n\ncluster_VaultsModule_providers\n\n\n\ncluster_VyfiModule\n\n\n\ncluster_VyfiModule_exports\n\n\n\ncluster_VyfiModule_providers\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nAcquireModule\n\nAcquireModule\n\nAcquireModule -->\n\nTransactionsModule->AcquireModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTransactionsModule->BlockchainModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nContributionModule -->\n\nTransactionsModule->ContributionModule\n\n\n\n\n\nLpTokensModule\n\nLpTokensModule\n\nLpTokensModule -->\n\nTransactionsModule->LpTokensModule\n\n\n\n\n\nVaultsModule\n\nVaultsModule\n\nVaultsModule -->\n\nTransactionsModule->VaultsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nTransactionsService \n\nTransactionsService \n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\n\n\nAcquireService \n\nAcquireService \n\nAcquireService  -->\n\nAcquireModule->AcquireService \n\n\n\nAppModule -->\n\nAcquireModule->AppModule\n\n\n\n\n\nAcquireService\n\nAcquireService\n\nAcquireModule -->\n\nAcquireService->AcquireModule\n\n\n\n\n\nAssetsModule\n\nAssetsModule\n\nAppModule -->\n\nAssetsModule->AppModule\n\n\n\n\n\nAssetsService \n\nAssetsService \n\nAssetsService  -->\n\nAssetsModule->AssetsService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAwsModule->UsersModule\n\n\n\nVaultsModule -->\n\nAwsModule->VaultsModule\n\n\n\nAppModule -->\n\nAwsModule->AppModule\n\n\n\n\n\nAwsService \n\nAwsService \n\nAwsService  -->\n\nAwsModule->AwsService \n\n\n\nContributionModule -->\n\nBlockchainModule->ContributionModule\n\n\n\nLpTokensModule -->\n\nBlockchainModule->LpTokensModule\n\n\n\nVaultsModule -->\n\nBlockchainModule->VaultsModule\n\n\n\nAppModule -->\n\nBlockchainModule->AppModule\n\n\n\n\n\nBlockchainScannerService \n\nBlockchainScannerService \n\nBlockchainScannerService  -->\n\nBlockchainModule->BlockchainScannerService \n\n\n\n\n\nBlockchainService \n\nBlockchainService \n\nBlockchainService  -->\n\nBlockchainModule->BlockchainService \n\n\n\n\n\nVaultInsertingService \n\nVaultInsertingService \n\nVaultInsertingService  -->\n\nBlockchainModule->VaultInsertingService \n\n\n\n\n\nVaultManagingService \n\nVaultManagingService \n\nVaultManagingService  -->\n\nBlockchainModule->VaultManagingService \n\n\n\n\n\nWebhookVerificationService \n\nWebhookVerificationService \n\nWebhookVerificationService  -->\n\nBlockchainModule->WebhookVerificationService \n\n\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nLifecycleModule -->\n\nBlockchainModule->LifecycleModule\n\n\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nContributionService \n\nContributionService \n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\nLifecycleModule -->\n\nContributionModule->LifecycleModule\n\n\n\n\n\nDistributionModule\n\nDistributionModule\n\nAppModule -->\n\nDistributionModule->AppModule\n\n\n\n\n\nDistributionService \n\nDistributionService \n\nDistributionService  -->\n\nDistributionModule->DistributionService \n\n\n\nLifecycleModule -->\n\nDistributionModule->LifecycleModule\n\n\n\n\n\nJwtGlobalModule\n\nJwtGlobalModule\n\nAppModule -->\n\nJwtGlobalModule->AppModule\n\n\n\n\n\nTaptoolsModule \n\nTaptoolsModule \n\nTaptoolsModule  -->\n\nJwtGlobalModule->TaptoolsModule \n\n\n\nAppModule -->\n\nLpTokensModule->AppModule\n\n\n\n\n\nLpTokensService \n\nLpTokensService \n\nLpTokensService  -->\n\nLpTokensModule->LpTokensService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nVaultsModule->AppModule\n\n\n\n\n\nDraftVaultsService \n\nDraftVaultsService \n\nDraftVaultsService  -->\n\nVaultsModule->DraftVaultsService \n\n\n\n\n\nVaultsService \n\nVaultsService \n\nVaultsService  -->\n\nVaultsModule->VaultsService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAssetsService\n\nAssetsService\n\nAssetsModule -->\n\nAssetsService->AssetsModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAwsService\n\nAwsService\n\nAwsModule -->\n\nAwsService->AwsModule\n\n\n\n\n\nAnvilApiService\n\nAnvilApiService\n\nBlockchainModule -->\n\nAnvilApiService->BlockchainModule\n\n\n\n\n\nBlockchainScannerService\n\nBlockchainScannerService\n\nBlockchainModule -->\n\nBlockchainScannerService->BlockchainModule\n\n\n\n\n\nBlockchainService\n\nBlockchainService\n\nBlockchainModule -->\n\nBlockchainService->BlockchainModule\n\n\n\n\n\nVaultInsertingService\n\nVaultInsertingService\n\nBlockchainModule -->\n\nVaultInsertingService->BlockchainModule\n\n\n\n\n\nVaultManagingService\n\nVaultManagingService\n\nBlockchainModule -->\n\nVaultManagingService->BlockchainModule\n\n\n\n\n\nWebhookVerificationService\n\nWebhookVerificationService\n\nBlockchainModule -->\n\nWebhookVerificationService->BlockchainModule\n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\nDistributionService\n\nDistributionService\n\nDistributionModule -->\n\nDistributionService->DistributionModule\n\n\n\n\n\nGovernanceService \n\nGovernanceService \n\n\n\nGovernanceModule\n\nGovernanceModule\n\nGovernanceService  -->\n\nGovernanceModule->GovernanceService \n\n\n\n\n\nGovernanceService\n\nGovernanceService\n\nGovernanceModule -->\n\nGovernanceService->GovernanceModule\n\n\n\n\n\nTaptoolsModule\n\nTaptoolsModule\n\nJwtGlobalModule -->\n\nTaptoolsModule->JwtGlobalModule\n\n\n\n\n\nTaptoolsService \n\nTaptoolsService \n\nTaptoolsService  -->\n\nTaptoolsModule->TaptoolsService \n\n\n\nVaultsModule -->\n\nLifecycleModule->VaultsModule\n\n\n\n\n\nLifecycleService \n\nLifecycleService \n\nLifecycleService  -->\n\nLifecycleModule->LifecycleService \n\n\n\n\n\nLifecycleService\n\nLifecycleService\n\nLifecycleModule -->\n\nLifecycleService->LifecycleModule\n\n\n\n\n\nLpTokensService\n\nLpTokensService\n\nLpTokensModule -->\n\nLpTokensService->LpTokensModule\n\n\n\n\n\nTaptoolsService\n\nTaptoolsService\n\nTaptoolsModule -->\n\nTaptoolsService->TaptoolsModule\n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nDraftVaultsService\n\nDraftVaultsService\n\nVaultsModule -->\n\nDraftVaultsService->VaultsModule\n\n\n\n\n\nVaultsService\n\nVaultsService\n\nVaultsModule -->\n\nVaultsService->VaultsModule\n\n\n\n\n\nVyfiService \n\nVyfiService \n\n\n\nVyfiModule\n\nVyfiModule\n\nVyfiService  -->\n\nVyfiModule->VyfiService \n\n\n\n\n\nVyfiService\n\nVyfiService\n\nVyfiModule -->\n\nVyfiService->VyfiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    90 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Redeemer   (src/.../type.ts)\n                        \n                        \n                            Redeemer1   (src/.../type.ts)\n                        \n                        \n                            Redeemer2   (src/.../type.ts)\n                        \n                        \n                            Redeemer3   (src/.../type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/vaults/processing-tx/onchain/types/type.ts\n    \n    \n        \n            \n                \n                    \n                    Redeemer\n                \n            \n            \n                \n                        literal type | \"MintAdaPair\" | \"BurnLp\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redeemer1\n                \n            \n            \n                \n                            literal type | literal type | \"CancelAsset\" | \"CancelAda\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redeemer2\n                \n            \n            \n                \n                            literal type | \"VaultBurn\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redeemer3\n                \n            \n            \n                \n                            literal type | \"VaultBurn\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            assetsToValue   (src/.../lib.ts)\n                        \n                        \n                            blueprint   (src/.../apply_params.ts)\n                        \n                        \n                            configService   (src/.../typeorm.config.ts)\n                        \n                        \n                            DEFAULT_INITIAL_DELAY_MS   (src/.../blockchain-scanner.service.ts)\n                        \n                        \n                            DEFAULT_MAX_DELAY_MS   (src/.../blockchain-scanner.service.ts)\n                        \n                        \n                            DEFAULT_MAX_RETRIES   (src/.../blockchain-scanner.service.ts)\n                        \n                        \n                            getMimeTypeFromArrayBuffer   (src/.../index.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            getUtxos   (src/.../lib.ts)\n                        \n                        \n                            mbMultiplication   (src/.../aws.controller.ts)\n                        \n                        \n                            one_day   (src/.../vault-managing.service.ts)\n                        \n                        \n                            poolOwner   (src/.../vyfi.service.ts)\n                        \n                        \n                            transformImageToUrl   (src/.../index.ts)\n                        \n                        \n                            transformToSnakeCase   (src/.../index.ts)\n                        \n                        \n                            valuation_sc_type   (src/.../vault-sc-type.ts)\n                        \n                        \n                            vault_sc_privacy   (src/.../vault-sc-type.ts)\n                        \n                        \n                            VYFI_CONSTANTS   (src/.../vyfi.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/vaults/processing-tx/onchain/utils/lib.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        assetsToValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (assets: Amount[]) => {\n  const multiAsset = MultiAsset.new();\n  const lovelace = assets.find(asset => asset.unit === 'lovelace');\n  const policies = assets.filter(asset => asset.unit !== 'lovelace').map(asset => asset.unit.slice(0, 56));\n\n  if (!policies.length && lovelace) {\n    return Value.new(BigNum.from_str(String(Number(lovelace.quantity)  {\n    const policyAssets = assets.filter(asset => asset.unit.slice(0, 56) === policy);\n    const assetsValue = Assets.new();\n    policyAssets.forEach(asset => {\n      if (Number(asset.quantity) > 0)\n        assetsValue.insert(\n          AssetName.new(Buffer.from(asset.unit.slice(56), 'hex')),\n          BigNum.from_str(String(asset.quantity))\n        );\n    });\n    if (assetsValue.len() > 0) multiAsset.insert(ScriptHash.from_bytes(Buffer.from(policy, 'hex')), assetsValue);\n  });\n\n  const multiAssetsValue = Value.new(BigNum.from_str(lovelace ? String(lovelace.quantity) : '0'));\n  multiAssetsValue.set_multiasset(multiAsset);\n  return multiAssetsValue;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUtxos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (address: Address, min = 0, blockfrost) => {\n  const utxos = await blockfrost.addressesUtxosAll(address.to_bech32());\n  const parsedUtxos = TransactionUnspentOutputs.new();\n  utxos.forEach((utxo: any) => {\n    const { tx_hash, output_index, amount } = utxo;\n    if (Number(amount[0].quantity) > min) {\n      parsedUtxos.add(\n        TransactionUnspentOutput.new(\n          TransactionInput.new(TransactionHash.from_hex(tx_hash), output_index),\n          TransactionOutput.new(address, assetsToValue(amount))\n        )\n      );\n    }\n  });\n  return parsedUtxos;\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/utils/apply_params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        blueprint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./blueprint.json')\n                    \n                \n\n\n        \n    \n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_INITIAL_DELAY_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_DELAY_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_RETRIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n\n    src/helpers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMimeTypeFromArrayBuffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : arrayBuffer => {\n  const uint8arr = new Uint8Array(arrayBuffer);\n\n  const len = 4;\n  if (uint8arr.length >= len) {\n    const signatureArr = new Array(len);\n    for (let i = 0; i \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformImageToUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (imageEntity: FileEntity | null): string | null => {\n  return imageEntity?.file_url || null;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformToSnakeCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj: any): any => {\n  if (Array.isArray(obj)) {\n    return obj.map(item => transformToSnakeCase(item));\n  }\n  if (\n    obj !== null &&\n    typeof obj === 'object' &&\n    !(obj instanceof Date) &&\n    !(obj instanceof FileEntity) &&\n    !(obj instanceof User)\n  ) {\n    return Object.keys(obj).reduce((acc, key) => {\n      const snakeKey = snakeCase(key);\n      acc[snakeKey] = transformToSnakeCase(obj[key]);\n      return acc;\n    }, {});\n  }\n  return obj;\n}\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext): User => {\n  const request = ctx.switchToHttp().getRequest();\n  return request.user;\n})\n                    \n                \n\n            \n                \n                    Custom decorator to extract the authenticated user from the request\n\n                \n            \n\n        \n    \n\n    src/modules/aws_bucket/aws.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mbMultiplication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 1024 * 1024\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        one_day\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 24 * 60 * 60 * 1000\n                    \n                \n\n\n        \n    \n\n    src/modules/vyfi/vyfi.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        poolOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  skey: 'ed25519e_sk1eqleq0gr7awjymmkcehm4pza8ffq385fyxkntqe74u384fgfs4w7vncmhdlc2u2l78g4r82ctfw6s36dnuguadxh3lggluy9pwansegfprll7',\n  base_address_preprod:\n    'addr_test1qpjavykfl5n4t47xklzyuccevgple0e4c7mke2m6cd0z0fwy0pq8p292lgrquq7hx75c4wpvz0h8cjp69mp7men3nw8s46zete',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VYFI_CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PROCESSING_FEE: 1900000, // 1.9 ADA in lovelace\n  MIN_POOL_ADA: 2000000, // 2 ADA in lovelace\n  MIN_RETURN_ADA: 2000000, // 2 ADA in lovelace\n  TOTAL_REQUIRED_ADA: 5900000, // 5.9 ADA in lovelace\n  POOL_ADDRESS:\n    'addr1qy5dasujdtm4hzrtamca9sjetu78hgqt8rkqs9tu69n0vq47wr70fcgkj4fe9tyr6z2jz8qvwvrc2gq04ltky960fw0smcuf0t',\n  METADATA_LABEL: '53554741',\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/types/vault-sc-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        valuation_sc_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  fixed: 0,\n  lbe: 1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vault_sc_privacy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  private: 0,\n  public: 1,\n  semiPrivate: 2,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
