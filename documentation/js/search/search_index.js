var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/$AddedClaimEntity1751298845693.html",[0,0.235,1,4.43]],["body/classes/$AddedClaimEntity1751298845693.html",[0,0.255,1,7.698,2,0.829,3,0.054,4,0.048,5,0.048,6,8.596,7,5.366,8,2.261,9,2.624,10,0.132,11,0.419,12,0.816,13,1.326,14,2.34,15,1.444,16,2.332,17,2.332,18,0.241,19,0.005,20,0.236,21,1.852,22,0.841,23,0.528,24,5.366,25,2.332,26,3.151,27,5.366,28,1.154,29,0.664,30,1.17,31,1.752,32,2.332,33,5.366,34,0.119,35,1.109,36,0.054,37,1.763,38,2.963,39,3.232,40,3.161,41,2.704,42,3.26,43,2.889,44,2.889,45,3.145,46,1.803,47,6.664,48,1.381,49,3.48,50,2.866,51,3.94,52,3.323,53,4.208,54,1.695,55,4.16,56,1.528,57,5.366,58,1.62,59,2.256,60,0.994,61,4.806,62,1.506,63,3.34,64,2.802,65,2.7,66,3.329,67,4.802,68,5.012,69,2.876,70,5.257,71,5.366,72,3.94,73,2.183,74,3.01,75,2.829,76,7.16,77,2.963,78,2.963,79,4.436,80,2.587,81,2.744,82,2.122,83,2.963,84,2.369,85,2.406,86,1.844,87,2.369,88,2.495,89,0.004,90,0.004]],["title/classes/$npmConfigName1750085776373.html",[0,0.235,91,4.43]],["body/classes/$npmConfigName1750085776373.html",[0,0.256,2,0.832,3,0.054,4,0.048,5,0.048,8,2.267,9,2.629,10,0.132,11,0.42,12,0.817,13,1.329,14,2.342,15,1.445,16,2.338,17,2.338,18,0.28,19,0.005,20,0.237,21,1.083,22,0.844,23,0.529,25,2.338,26,3.153,28,1.157,29,0.665,30,1.173,31,1.754,32,2.338,34,0.12,35,1.113,36,0.054,37,1.799,38,3.051,39,3.185,40,3.163,41,2.599,42,3.163,43,2.893,44,2.893,45,3.265,46,2.412,73,2.04,74,3.214,75,2.719,77,2.848,78,2.848,80,2.486,81,2.638,82,2.124,83,2.848,84,2.374,85,2.412,86,1.849,87,2.374,88,3.337,89,0.004,90,0.004,91,7.709,92,8.609,93,5.386,94,5.386,95,5.386,96,5.386,97,6.32,98,3.846,99,4.175,100,5.269,101,5.024,102,3.411,103,3.951,104,3.201,105,3.137,106,5.024,107,4.63,108,2.679,109,3.488,110,4.452,111,1.011,112,2.803,113,2.199,114,2.707,115,4.175,116,6.674,117,4.175,118,4.175]],["title/classes/$npmConfigName1750413089611.html",[0,0.235,119,4.43]],["body/classes/$npmConfigName1750413089611.html",[0,0.263,2,0.854,3,0.055,4,0.049,5,0.049,8,2.306,9,2.663,10,0.136,11,0.427,12,0.824,13,1.352,14,2.36,15,1.456,16,2.378,17,2.378,18,0.278,19,0.005,20,0.243,21,1.111,22,0.866,23,0.535,25,2.378,26,3.169,28,1.177,29,0.677,30,1.194,31,1.772,32,2.378,34,0.123,35,1.142,36,0.055,37,1.804,38,3.298,39,3.2,40,3.181,41,2.626,42,3.181,43,2.923,44,2.923,73,2.061,74,2.454,75,2.747,77,2.877,78,2.877,80,2.512,81,2.665,82,2.061,83,2.877,84,2.416,85,2.454,86,1.881,87,2.416,88,3.395,89,0.004,90,0.004,98,3.913,103,4.019,104,3.256,113,2.238,114,2.754,119,7.789,120,8.698,121,5.528,122,5.528,123,5.528,124,5.528,125,6.386,126,4.285,127,4.544,128,5.361,129,3.72,130,4.711,131,3.256,132,4.019,133,4.711,134,2.238,135,2.378,136,5.111,137,4.285,138,6.743,139,4.285,140,4.285]],["title/controllers/AcquireController.html",[141,1.898,142,4.09]],["body/controllers/AcquireController.html",[0,0.262,3,0.055,4,0.049,5,0.049,10,0.136,12,0.744,13,1.351,15,1.525,18,0.229,19,0.005,20,0.428,23,0.535,28,1.317,29,0.757,30,1.478,34,0.211,36,0.055,54,2.581,60,1.719,82,1.729,89,0.004,90,0.004,103,5.355,111,1.036,112,3.191,141,2.118,142,6.031,143,2.082,144,3.958,145,5.521,146,2.958,147,7.296,148,7.296,149,5.656,150,5.521,151,1.598,152,4.944,153,4.944,154,4.658,155,5.521,156,2.899,157,3.436,158,3.082,159,5.521,160,7.453,161,4.944,162,4.944,163,6.031,164,4.707,165,5.521,166,4.918,167,5.521,168,8.172,169,7.186,170,5.521,171,2.177,172,5.521,173,2.293,174,4.016,175,3.81,176,5.521,177,3.321,178,3.8,179,2.235,180,3.865,181,2.683,182,3.323,183,3.126,184,1.125,185,5.232,186,5.608,187,2.883,188,1.205,189,2.958,190,3.436,191,3.971,192,2.883,193,2.624,194,3.039,195,5.521,196,5.999,197,4.944,198,4.944,199,5.521,200,5.521,201,1.744,202,2.236,203,1.906,204,4.944,205,3.883,206,4.627,207,5.521,208,4.28,209,1.571,210,3.067,211,3.562,212,1.963,213,5.521,214,5.521,215,5.521,216,5.521,217,5.521,218,4.944,219,5.521,220,5.521]],["title/modules/AcquireModule.html",[221,1.689,222,3.632]],["body/modules/AcquireModule.html",[0,0.324,3,0.068,4,0.061,5,0.061,19,0.005,34,0.223,36,0.068,89,0.004,90,0.004,111,1.278,142,7.449,143,3.144,144,3.098,184,1.387,192,3.554,193,3.234,196,7.531,197,6.094,221,3.077,222,7.417,223,3.098,224,3.098,225,3.234,226,3.234,227,3.165,228,4.282,229,4.282,230,6.094,231,6.094,232,6.094,233,6.094,234,5.719,235,3.961,236,3.234,237,3.098,238,6.806,239,4.051,240,3.467,241,2.324,242,4.565,243,6.806,244,1.975,245,3.647,246,2.892,247,3.647,248,2.706,249,4.565]],["title/classes/AcquireReq.html",[0,0.235,160,3.835]],["body/classes/AcquireReq.html",[0,0.439,2,1.11,3,0.072,4,0.064,5,0.064,10,0.176,11,0.504,18,0.268,19,0.005,23,0.47,34,0.213,36,0.072,60,1.595,89,0.004,90,0.004,102,3.413,144,3.921,151,1.405,160,6.676,188,1.567,250,7.182,251,2.286,252,6.846,253,5.273,254,2.575,255,4.283,256,6.431,257,4.47,258,7.182,259,2.416,260,2.416,261,1.93,262,3.921,263,3.841,264,1.958,265,7.182,266,2.708,267,1.525]],["title/injectables/AcquireService.html",[196,3.632,268,1.189]],["body/injectables/AcquireService.html",[0,0.206,3,0.043,4,0.039,5,0.039,10,0.107,11,0.362,12,0.656,13,1.146,15,1.353,18,0.249,19,0.005,20,0.421,21,0.873,22,0.681,23,0.514,28,1.162,29,0.668,30,1.011,34,0.211,35,0.897,36,0.043,37,1.613,46,2.64,48,1.194,54,1.372,58,2.176,62,1.218,75,1.372,86,1.119,89,0.003,90,0.003,103,4.888,111,1.558,114,1.638,129,2.212,144,3.78,149,4.796,156,2.519,158,2.333,160,6.884,171,2.375,173,1.218,174,2.39,177,2.817,184,0.885,191,4.316,192,2.268,193,2.064,194,2.39,196,4.542,198,3.889,201,1.954,202,2.721,203,2.32,209,2.528,210,3.49,212,1.486,241,1.483,244,1.708,245,2.327,246,2.501,247,2.327,248,1.727,251,2.121,267,1.313,268,1.486,269,1.825,270,4.343,271,3.24,272,3.366,273,4.266,274,5.958,275,5.587,276,6.187,277,3.991,278,6.187,279,4.343,280,5.54,281,2.947,282,4.343,283,3.991,284,2.306,285,6.187,286,2.327,287,2.614,288,2.019,289,2.801,290,2.913,291,2.913,292,2.801,293,2.801,294,2.459,295,2.703,296,2.801,297,2.16,298,3.04,299,3.04,300,2.801,301,3.991,302,3.04,303,2.704,304,3.59,305,2.9,306,3.59,307,2.552,308,3.04,309,3.889,310,3.59,311,2.801,312,3.503,313,6.187,314,4.343,315,6.187,316,4.343,317,3.366,318,1.292,319,3.889,320,3.889,321,5.291,322,3.152,323,3.889,324,3.59,325,3.889,326,4.343,327,5.54,328,4.343,329,3.889,330,3.59,331,3.366,332,3.59,333,3.889,334,4.343,335,5.114,336,4.343,337,3.991,338,3.188,339,3.59,340,3.59,341,3.59,342,1.638,343,3.59,344,3.59,345,1.414,346,2.913,347,2.327,348,3.889,349,5.54,350,4.343,351,3.188,352,3.366,353,4.343,354,3.889,355,3.889,356,3.889,357,3.188,358,2.064,359,3.889,360,3.366,361,3.889,362,1.201,363,3.889,364,3.188,365,2.913,366,3.366,367,3.04,368,3.889,369,3.59,370,1.414,371,2.047,372,3.889,373,3.889,374,4.542,375,3.59,376,3.315,377,2.416,378,1.861,379,3.889,380,3.889,381,3.59,382,3.889]],["title/classes/AcquirerWhitelist.html",[0,0.235,383,3.318]],["body/classes/AcquirerWhitelist.html",[0,0.459,2,0.921,3,0.06,4,0.053,5,0.053,10,0.146,11,0.449,12,0.699,18,0.215,19,0.005,20,0.443,23,0.502,28,0.961,29,0.552,34,0.189,36,0.093,48,1.48,52,2.459,73,1.412,89,0.004,90,0.004,151,1.166,188,1.3,201,1.883,244,1.412,251,1.792,259,2.841,260,2.841,261,1.602,264,1.625,318,2.281,383,5.144,384,4.376,385,4.03,386,5.576,387,5.37,388,7.67,389,4.376,390,3.345,391,3.144,392,2.896,393,5.631,394,3.845,395,3.645,396,5.389,397,4.172,398,2.554,399,2.772,400,2.459,401,2.85,402,3.587,403,2.315,404,3.845,405,1.613,406,4.773,407,1.557,408,1.792,409,3.998,410,4.172,411,3.194,412,3.998,413,3.998,414,3.998,415,4.172,416,3.845]],["title/classes/AcquirerWhitelistCsv.html",[0,0.235,414,3.318]],["body/classes/AcquirerWhitelistCsv.html",[0,0.455,2,0.888,3,0.057,4,0.051,5,0.051,10,0.141,11,0.438,12,0.523,18,0.257,19,0.005,20,0.449,23,0.599,34,0.185,36,0.092,48,1.703,52,2.369,73,1.974,89,0.004,90,0.004,151,1.791,188,1.253,244,1.361,251,1.75,259,2.827,260,2.827,261,1.544,264,1.566,318,2.227,383,3.852,384,4.217,385,2.729,386,5.313,387,5.196,389,6.722,390,3.324,391,3.089,392,2.845,393,5.497,394,3.705,395,4.195,396,5.313,397,4.02,398,2.461,399,2.671,400,2.369,401,2.8,402,3.457,403,2.26,404,3.705,405,1.59,406,4.66,407,1.5,408,1.75,409,3.852,410,4.02,411,3.078,412,3.852,413,3.852,414,5.022,415,5.832,416,5.374,417,5.743,418,5.743,419,5.743,420,5.743,421,5.743]],["title/entities/AcquirerWhitelistEntity.html",[422,2.162,423,3.632]],["body/entities/AcquirerWhitelistEntity.html",[0,0.368,3,0.06,4,0.054,5,0.054,10,0.148,11,0.453,12,0.847,14,2.168,18,0.275,19,0.005,20,0.431,21,1.809,23,0.609,34,0.19,35,1.248,36,0.06,48,1.647,64,4.457,69,4.573,81,1.851,86,1.993,89,0.004,90,0.004,111,1.873,113,2.758,151,1.819,260,2.525,261,1.624,284,1.965,302,4.229,385,2.871,408,1.808,422,3.381,423,5.68,424,3.238,425,6.042,426,6.266,427,5.137,428,4.229,429,5.601,430,5.805,431,6.042,432,4.657,433,6.042,434,4.229,435,6.042,436,4.684,437,7.737,438,5.68,439,4.684,440,6.042,441,5.411,442,5.416,443,4.815,444,6.042,445,4.991,446,4.991,447,4.815,448,5.189,449,3.637,450,3.898,451,3.326,452,3.238,453,4.052,454,4.052,455,4.381,456,4.052,457,3.898]],["title/classes/AddContractAddressToVault1745662880319.html",[0,0.235,458,4.43]],["body/classes/AddContractAddressToVault1745662880319.html",[0,0.279,2,0.906,3,0.059,4,0.052,5,0.052,8,2.397,9,2.741,10,0.144,11,0.444,12,0.839,13,1.405,14,2.398,15,1.48,16,2.472,17,2.472,18,0.236,19,0.005,20,0.258,21,1.179,22,0.919,23,0.551,25,2.472,26,3.206,28,1.224,29,0.704,30,1.241,31,1.813,32,2.472,34,0.13,35,1.212,36,0.059,37,1.764,38,3.124,39,3.233,40,3.222,41,2.783,42,3.222,43,2.991,44,2.991,45,3.039,52,2.419,53,3.063,73,2.109,74,2.991,75,2.911,77,2.944,78,2.944,80,2.57,81,2.727,82,2.109,83,2.944,84,2.511,85,2.551,86,1.955,87,2.511,89,0.004,90,0.004,113,1.797,135,2.472,458,7.969,459,8.899,460,5.865,461,5.865,462,5.865,463,5.865,464,4.298]],["title/classes/AddIndexToTransaction1744024797075.html",[0,0.235,465,4.43]],["body/classes/AddIndexToTransaction1744024797075.html",[0,0.266,2,0.866,3,0.056,4,0.05,5,0.05,8,2.327,9,2.681,10,0.202,11,0.431,12,0.827,13,1.364,14,2.369,15,1.462,16,2.4,17,2.4,18,0.231,19,0.005,20,0.247,21,1.127,22,0.878,23,0.539,25,2.4,26,3.178,28,1.188,29,0.683,30,1.205,31,1.782,32,2.4,34,0.125,35,1.158,36,0.056,37,1.793,38,3.145,39,3.253,40,3.191,41,2.815,42,3.258,43,2.939,44,2.939,45,3.102,49,2.724,73,2.152,74,3.053,75,2.945,77,3.005,78,3.005,80,2.624,81,2.68,82,2.152,83,3.085,84,2.438,85,2.476,86,2.402,87,2.723,88,2.606,89,0.004,90,0.004,112,3.548,113,1.718,127,3.488,465,7.831,466,8.745,467,5.605,468,5.605,469,5.605,470,5.605,471,5.605,472,7.369,473,5.605]],["title/classes/AddInvestmentToTxType1744032453542.html",[0,0.235,474,4.43]],["body/classes/AddInvestmentToTxType1744032453542.html",[0,0.26,2,0.844,3,0.055,4,0.049,5,0.049,8,2.287,9,2.647,10,0.134,11,0.424,12,0.82,13,1.341,14,2.351,15,1.451,16,2.359,17,2.359,18,0.281,19,0.005,20,0.24,21,1.097,22,0.856,23,0.532,25,2.359,26,3.162,28,1.167,29,0.671,30,1.184,31,1.764,32,2.359,34,0.121,35,1.128,36,0.055,37,1.801,38,3.062,39,3.193,40,3.173,41,2.613,42,3.173,43,2.909,44,2.909,45,3.275,46,2.434,73,2.051,74,3.223,75,2.734,77,2.863,78,2.863,80,2.5,81,2.652,82,2.051,83,2.863,84,2.396,85,2.434,86,1.865,87,2.396,88,3.368,89,0.004,90,0.004,97,6.354,98,3.881,99,4.232,100,5.317,101,5.069,102,3.442,104,2.435,105,3.165,106,5.069,107,4.672,112,2.828,113,2.219,114,2.731,115,4.232,116,6.71,117,4.232,118,4.232,474,7.75,475,8.655,476,5.459,477,5.459,478,5.459,479,5.459]],["title/classes/AddMetadataToTransaction1751453522246.html",[0,0.235,480,4.43]],["body/classes/AddMetadataToTransaction1751453522246.html",[0,0.25,2,0.813,3,0.053,4,0.047,5,0.047,8,2.232,9,2.599,10,0.129,11,0.414,12,0.81,13,1.309,14,2.327,15,1.436,16,2.302,17,2.302,18,0.279,19,0.005,20,0.232,21,1.058,22,0.825,23,0.522,25,2.302,26,3.139,28,1.139,29,0.655,30,1.155,31,1.738,32,2.302,34,0.117,35,1.087,36,0.053,37,1.806,38,3.147,39,3.222,40,3.147,41,2.686,42,3.147,43,2.867,44,2.867,45,3.248,46,2.375,62,1.983,63,3.276,73,2.021,74,3.197,75,2.81,77,2.822,78,2.822,80,2.464,81,2.614,82,2.171,83,2.822,84,2.338,85,2.375,86,1.821,87,2.338,88,3.287,89,0.004,90,0.004,97,6.262,98,3.787,99,4.081,100,5.189,101,4.948,102,3.359,103,3.891,104,3.152,105,3.089,106,4.948,107,4.56,108,3.515,109,4.145,110,5.843,111,1.327,112,3.331,113,2.445,114,2.666,115,4.081,116,6.612,117,4.081,118,4.081,480,7.638,481,8.53,482,5.264,483,5.264,484,5.264,485,5.264,486,3.168]],["title/classes/AddNullableForMetadata1743687086047.html",[0,0.235,487,4.43]],["body/classes/AddNullableForMetadata1743687086047.html",[0,0.278,2,0.903,3,0.058,4,0.052,5,0.052,8,2.391,9,2.736,10,0.143,11,0.443,12,0.838,13,1.402,14,2.396,15,1.478,16,2.466,17,2.466,18,0.236,19,0.005,20,0.257,21,1.174,22,0.916,23,0.55,25,2.466,26,3.203,28,1.22,29,0.702,30,1.238,31,1.811,32,2.466,34,0.13,35,1.207,36,0.058,37,1.762,38,3.12,39,3.231,40,3.219,41,2.779,42,3.219,43,2.986,44,2.986,45,3.034,50,2.355,62,2.124,73,2.105,74,3.17,75,2.807,77,2.94,78,2.94,80,2.566,81,2.723,82,2.105,83,2.94,84,2.505,85,2.544,86,1.95,87,2.505,89,0.004,90,0.004,113,2.32,251,1.769,487,7.957,488,8.886,489,5.842,490,5.842,491,5.842,492,5.842,493,2.605]],["title/classes/AddStakeAndWalletAddress1743433439139.html",[0,0.235,494,4.43]],["body/classes/AddStakeAndWalletAddress1743433439139.html",[0,0.272,2,0.885,3,0.057,4,0.051,5,0.051,8,2.361,9,2.71,10,0.141,11,0.437,12,0.833,13,1.384,14,2.383,15,1.47,16,2.435,17,2.435,18,0.233,19,0.005,20,0.252,21,1.151,22,0.898,23,0.545,25,2.435,26,3.191,28,1.205,29,0.693,30,1.222,31,1.797,32,2.435,34,0.127,35,1.183,36,0.057,37,1.78,38,3.161,39,3.264,40,3.206,41,2.832,42,3.271,43,2.964,44,2.964,45,3.124,52,2.363,53,2.991,73,2.09,74,3.074,75,2.963,77,2.918,78,2.918,80,2.547,81,2.703,82,2.09,83,2.918,84,2.473,85,2.512,86,1.925,87,2.473,89,0.004,90,0.004,113,1.755,494,7.898,495,8.819,496,5.728,497,5.728,498,5.728,499,5.728,500,6.475,501,6.45,502,7.475,503,2.849]],["title/classes/AddTotalAcquiredValueInAda1750670509513.html",[0,0.235,504,4.43]],["body/classes/AddTotalAcquiredValueInAda1750670509513.html",[0,0.278,2,0.905,3,0.059,4,0.052,5,0.052,8,2.395,9,2.739,10,0.144,11,0.444,12,0.839,13,1.404,14,2.397,15,1.479,16,2.47,17,2.47,18,0.236,19,0.005,20,0.258,21,1.524,22,0.918,23,0.551,25,2.47,26,3.205,28,1.223,29,0.703,30,1.24,31,1.813,32,2.47,34,0.13,35,1.21,36,0.059,37,1.763,38,3.122,39,3.232,40,3.221,41,2.781,42,3.221,43,2.989,44,2.989,45,3.037,58,1.768,73,2.108,74,2.989,75,2.91,77,2.943,78,2.943,80,2.569,81,2.726,82,2.108,83,2.943,84,2.509,85,2.549,86,1.954,87,2.509,89,0.004,90,0.004,113,1.795,135,2.47,504,7.965,505,8.895,506,5.858,507,5.858,508,5.858,509,5.858,510,7.584,511,3.779]],["title/classes/AddTotalAssetsCost1747665618438.html",[0,0.235,512,4.43]],["body/classes/AddTotalAssetsCost1747665618438.html",[0,0.273,2,0.886,3,0.057,4,0.051,5,0.051,8,2.363,9,2.712,10,0.141,11,0.438,12,0.834,13,1.385,14,2.384,15,1.471,16,2.437,17,2.437,18,0.234,19,0.005,20,0.252,21,1.674,22,0.899,23,0.545,25,2.437,26,3.192,28,1.206,29,0.693,30,1.223,31,1.798,32,2.437,34,0.128,35,1.185,36,0.057,37,1.781,38,3.207,39,3.264,40,3.207,41,2.833,42,3.207,43,2.965,44,2.965,45,3.013,58,2.258,73,2.091,74,2.965,75,2.964,77,2.919,78,2.919,80,2.549,81,2.704,82,2.091,83,2.919,84,2.475,85,2.514,86,1.927,87,2.475,89,0.004,90,0.004,113,2.293,135,2.874,511,4.826,512,7.901,513,8.824,514,5.736,515,5.736,516,5.736,517,5.736,518,7.481,519,7.481]],["title/classes/AddVaultLifecycleFields1741943808653.html",[0,0.235,520,4.43]],["body/classes/AddVaultLifecycleFields1741943808653.html",[0,0.312,2,1.016,3,0.066,4,0.059,5,0.059,8,2.577,9,2.89,10,0.161,12,0.743,13,1.511,14,2.47,15,1.524,16,2.657,17,2.657,18,0.229,19,0.005,23,0.534,25,2.657,26,3.271,28,1.315,29,0.756,30,1.334,31,1.891,32,2.657,34,0.146,35,1.358,36,0.066,37,1.45,39,2.657,41,2.678,45,2.786,74,2.742,75,2.93,89,0.004,90,0.004,111,1.234,113,2.979,135,2.657,284,1.669,347,5.21,429,5.522,520,7.306,521,8.872,522,6.573,523,6.573,524,6.573,525,7.306,526,6.573,527,6.573,528,7.306,529,7.306,530,6.744,531,5.095,532,6.573,533,3.956]],["title/classes/AddedAauired1748361017536.html",[0,0.235,534,4.43]],["body/classes/AddedAauired1748361017536.html",[0,0.263,2,0.854,3,0.055,4,0.049,5,0.049,8,2.306,9,2.663,10,0.136,11,0.427,12,0.824,13,1.352,14,2.36,15,1.456,16,2.378,17,2.378,18,0.278,19,0.005,20,0.243,21,1.111,22,0.866,23,0.535,25,2.378,26,3.169,28,1.177,29,0.677,30,1.194,31,1.772,32,2.378,34,0.123,35,1.142,36,0.055,37,1.804,38,3.073,39,3.2,40,3.181,41,2.626,42,3.181,43,2.923,44,2.923,45,3.235,46,1.858,73,2.061,74,3.232,75,2.747,77,2.877,78,2.877,80,2.512,81,2.665,82,2.061,83,2.877,84,2.416,85,2.454,86,1.881,87,2.416,88,3.395,89,0.004,90,0.004,98,3.913,113,2.238,114,2.754,127,3.44,251,1.706,365,4.898,534,7.789,535,8.698,536,5.528,537,5.528,538,5.528,539,5.528,540,7.789,541,5.528,542,6.539,543,4.569,544,4.898,545,5.528,546,8.698,547,5.528,548,5.528]],["title/classes/AddedAssetVaultName1745921850315.html",[0,0.235,549,4.43]],["body/classes/AddedAssetVaultName1745921850315.html",[0,0.279,2,0.906,3,0.059,4,0.052,5,0.052,8,2.397,9,2.741,10,0.144,11,0.444,12,0.839,13,1.405,14,2.398,15,1.48,16,2.472,17,2.472,18,0.236,19,0.005,20,0.258,21,1.179,22,0.919,23,0.551,25,2.472,26,3.206,28,1.224,29,0.704,30,1.241,31,1.813,32,2.472,34,0.13,35,1.212,36,0.059,37,1.764,38,3.124,39,3.233,40,3.222,41,2.783,42,3.222,43,2.991,44,2.991,45,3.039,52,2.419,53,3.063,73,2.109,74,2.991,75,2.911,77,2.944,78,2.944,80,2.57,81,2.727,82,2.109,83,2.944,84,2.511,85,2.551,86,1.955,87,2.511,89,0.004,90,0.004,113,1.797,135,2.472,549,7.969,550,8.899,551,5.865,552,5.865,553,5.865,554,5.865,555,7.591]],["title/classes/AddedAssetsStatus1748264767365.html",[0,0.235,556,4.43]],["body/classes/AddedAssetsStatus1748264767365.html",[0,0.265,2,0.861,3,0.056,4,0.073,5,0.05,8,2.318,9,2.673,10,0.137,11,0.429,12,0.826,13,1.359,14,2.365,15,1.459,16,2.39,17,2.39,18,0.266,19,0.005,20,0.245,21,1.12,22,0.873,23,0.537,25,2.39,26,3.174,28,1.183,29,0.68,30,1.2,31,1.778,32,2.39,34,0.124,35,1.151,36,0.056,37,1.799,38,3.08,39,3.204,40,3.187,41,2.737,42,3.187,43,2.932,44,2.932,45,3.179,73,2.067,74,2.932,75,2.863,77,2.886,78,2.886,80,2.52,81,2.673,82,2.067,83,2.886,84,2.428,85,2.466,86,1.89,87,2.428,88,2.59,89,0.004,90,0.004,113,2.515,127,3.466,244,1.739,251,1.918,365,5.505,493,2.484,540,7.349,542,4.987,544,5.851,556,7.812,557,8.723,558,5.569,559,5.569,560,5.569,561,5.569,562,6.571,563,7.338,564,6.571,565,5.388,566,5.569]],["title/classes/AddedContributorWhitelist1742484041497.html",[0,0.235,567,4.43]],["body/classes/AddedContributorWhitelist1742484041497.html",[0,0.261,2,0.85,3,0.055,4,0.049,5,0.049,8,2.299,9,2.657,10,0.135,11,0.426,12,0.822,13,1.348,14,2.356,15,1.454,16,2.37,17,2.37,18,0.229,19,0.005,20,0.242,21,1.745,22,0.862,23,0.534,25,2.37,26,3.166,28,1.173,29,0.675,30,1.19,31,1.769,32,2.37,34,0.122,35,1.136,36,0.055,37,1.77,38,2.987,39,3.244,40,3.178,41,2.726,42,3.273,43,2.917,44,2.917,45,3.168,46,1.848,48,1.404,49,3.537,50,2.7,51,4.038,52,2.269,53,2.872,64,2.872,65,2.745,66,3.384,67,4.881,68,5.094,69,2.947,72,4.038,73,2.198,74,3.034,75,2.852,77,2.987,78,2.987,80,2.608,81,2.767,82,2.139,83,2.987,84,2.408,85,2.446,86,2.236,87,2.698,88,2.558,89,0.004,90,0.004,426,4.038,567,7.773,568,8.681,569,5.5,570,5.5,571,5.5,572,5.5,573,5.225,574,5.5,575,7.278]],["title/classes/AddedDelete1747838327085.html",[0,0.235,576,4.43]],["body/classes/AddedDelete1747838327085.html",[0,0.266,2,0.865,3,0.056,4,0.05,5,0.05,8,2.325,9,2.68,10,0.137,11,0.431,12,0.827,13,1.363,14,2.368,15,1.461,16,2.398,17,2.398,18,0.231,19,0.005,20,0.246,21,1.757,22,0.877,23,0.539,25,2.398,26,3.177,28,1.187,29,0.682,30,1.204,31,1.781,32,2.398,34,0.125,35,1.156,36,0.056,37,1.793,38,3.257,39,3.286,40,3.19,41,2.869,42,3.19,43,2.937,44,2.937,45,2.985,50,2.559,73,2.071,74,2.937,75,3.001,77,2.892,78,2.892,80,2.525,81,2.678,82,2.071,83,2.892,84,2.436,85,2.474,86,1.897,87,2.436,89,0.004,90,0.004,113,2.521,135,2.398,251,1.721,408,1.923,500,5.406,576,7.827,577,8.741,578,5.598,579,5.598,580,5.598,581,5.598,582,5.611,583,2.765]],["title/classes/AddedLiquidationHash1749046550619.html",[0,0.235,584,4.43]],["body/classes/AddedLiquidationHash1749046550619.html",[0,0.279,2,0.906,3,0.059,4,0.052,5,0.052,8,2.397,9,2.741,10,0.144,11,0.444,12,0.839,13,1.405,14,2.398,15,1.48,16,2.472,17,2.472,18,0.236,19,0.005,20,0.258,21,1.179,22,0.919,23,0.551,25,2.472,26,3.206,28,1.224,29,0.704,30,1.241,31,1.813,32,2.472,34,0.13,35,1.212,36,0.059,37,1.764,38,3.124,39,3.233,40,3.222,41,2.783,42,3.222,43,2.991,44,2.991,45,3.039,52,2.419,53,3.063,73,2.109,74,2.991,75,2.911,77,2.944,78,2.944,80,2.57,81,2.727,82,2.109,83,2.944,84,2.511,85,2.551,86,1.955,87,2.511,89,0.004,90,0.004,113,1.797,135,2.472,584,7.969,585,8.899,586,5.865,587,5.865,588,5.865,589,5.865,590,7.591]],["title/classes/AddedMaxAssetsCount1747911428750.html",[0,0.235,591,4.43]],["body/classes/AddedMaxAssetsCount1747911428750.html",[0,0.278,2,0.904,3,0.059,4,0.052,5,0.052,8,2.393,9,2.738,10,0.144,11,0.443,12,0.839,13,1.403,14,2.397,15,1.479,16,2.468,17,2.468,18,0.236,19,0.005,20,0.257,21,1.523,22,0.917,23,0.55,25,2.468,26,3.204,28,1.222,29,0.702,30,1.239,31,1.812,32,2.468,34,0.13,35,1.208,36,0.059,37,1.763,38,3.121,39,3.232,40,3.22,41,2.78,42,3.22,43,2.988,44,2.988,45,3.036,50,1.82,58,1.766,73,2.106,74,2.988,75,2.909,77,2.941,78,2.941,80,2.568,81,2.724,82,2.106,83,2.941,84,2.507,85,2.547,86,1.952,87,2.507,89,0.004,90,0.004,113,1.793,135,2.468,511,3.774,591,7.961,592,8.89,593,5.85,594,5.85,595,5.85,596,5.85,597,7.577]],["title/classes/AddedPublicationHash1745583708330.html",[0,0.235,598,4.43]],["body/classes/AddedPublicationHash1745583708330.html",[0,0.279,2,0.906,3,0.059,4,0.052,5,0.052,8,2.397,9,2.741,10,0.144,11,0.444,12,0.839,13,1.405,14,2.398,15,1.48,16,2.472,17,2.472,18,0.236,19,0.005,20,0.258,21,1.179,22,0.919,23,0.551,25,2.472,26,3.206,28,1.224,29,0.704,30,1.241,31,1.813,32,2.472,34,0.13,35,1.212,36,0.059,37,1.764,38,3.124,39,3.233,40,3.222,41,2.783,42,3.222,43,2.991,44,2.991,45,3.039,52,2.419,53,3.063,73,2.109,74,2.991,75,2.911,77,2.944,78,2.944,80,2.57,81,2.727,82,2.109,83,2.944,84,2.511,85,2.551,86,1.955,87,2.511,89,0.004,90,0.004,113,1.797,135,2.472,598,7.969,599,8.899,600,5.865,601,5.865,602,5.865,603,5.865,604,7.591]],["title/classes/AddedReserveVaule1747821437539.html",[0,0.235,605,4.43]],["body/classes/AddedReserveVaule1747821437539.html",[0,0.273,2,0.886,3,0.057,4,0.051,5,0.051,8,2.363,9,2.712,10,0.141,11,0.438,12,0.834,13,1.385,14,2.384,15,1.471,16,2.437,17,2.437,18,0.234,19,0.005,20,0.252,21,1.674,22,0.899,23,0.545,25,2.437,26,3.192,28,1.206,29,0.693,30,1.223,31,1.798,32,2.437,34,0.128,35,1.185,36,0.057,37,1.781,38,3.207,39,3.264,40,3.207,41,2.833,42,3.207,43,2.965,44,2.965,45,3.013,58,2.258,73,2.091,74,2.965,75,2.964,77,2.919,78,2.919,80,2.549,81,2.704,82,2.091,83,2.919,84,2.475,85,2.514,86,1.927,87,2.475,89,0.004,90,0.004,113,2.293,135,2.874,511,4.826,605,7.901,606,8.824,607,5.736,608,5.736,609,5.736,610,5.736,611,7.481,612,7.481]],["title/classes/AddedTags1741943808652.html",[0,0.235,613,4.43]],["body/classes/AddedTags1741943808652.html",[0,0.261,2,0.847,3,0.055,4,0.049,5,0.049,8,2.293,9,2.652,10,0.221,11,0.425,12,0.861,13,1.344,14,2.354,15,1.452,16,2.365,17,2.365,18,0.228,19,0.005,20,0.241,21,1.459,22,0.859,23,0.533,25,2.365,26,3.164,28,1.17,29,0.673,30,1.187,31,1.766,32,2.365,34,0.122,35,1.132,36,0.055,37,1.814,38,3.175,39,3.277,40,3.175,41,2.722,42,3.127,43,2.44,44,2.44,45,2.96,46,2.44,48,1.401,49,3.957,50,2.696,51,4.023,52,2.26,53,2.861,65,2.738,66,3.376,67,4.869,72,5.33,73,2.054,74,2.44,75,2.848,77,2.402,78,2.402,80,2.097,81,2.225,82,1.72,83,2.402,84,2.867,85,1.842,86,2.233,87,1.813,88,4.031,89,0.004,90,0.004,113,2.495,127,4.518,135,3.018,503,2.725,613,7.762,614,8.668,615,5.48,616,5.48,617,5.48,618,5.48,619,6.001,620,5.48,621,5.48,622,5.48,623,5.48,624,5.48,625,4.683,626,6.501,627,6.501,628,4.53,629,5.48,630,5.48]],["title/classes/AddedTransactionModelAndRelations1743588383672.html",[0,0.235,631,4.43]],["body/classes/AddedTransactionModelAndRelations1743588383672.html",[0,0.209,2,0.68,3,0.044,4,0.039,5,0.039,8,1.972,9,2.364,10,0.108,11,0.365,12,0.76,13,1.156,14,2.201,15,1.358,16,2.034,17,2.034,18,0.267,19,0.005,20,0.193,21,0.884,22,0.689,23,0.475,25,2.034,26,3.018,28,1.006,29,0.579,30,1.021,31,1.61,32,2.034,34,0.098,35,0.909,36,0.044,37,1.844,38,3.389,39,3.36,40,3.013,41,2.977,42,3.108,43,2.655,44,2.655,45,3.164,46,2.098,49,2.138,50,2.773,52,3.441,53,4.357,54,1.972,56,1.777,59,2.624,62,1.752,63,2.738,73,1.977,74,3.252,75,3.079,77,2.76,78,2.76,80,2.41,81,2.421,82,1.977,83,2.867,84,2.065,85,2.098,86,1.608,87,2.065,88,2.903,89,0.003,90,0.003,98,3.346,112,3.941,113,3.006,114,2.355,134,2.528,251,1.846,493,2.784,631,7.074,632,7.9,633,4.399,634,4.399,635,4.399,636,4.399,637,3.886,638,5.161,639,3.181,640,5.161,641,5.161,642,5.591,643,4.584,644,6.5,645,3.886,646,7.074,647,4.399,648,5.591,649,3.535,650,3.437,651,3.181,652,3.939,653,4.399,654,7.9,655,6.244,656,4.399,657,3.939,658,3.939,659,4.399,660,4.399]],["title/interfaces/Amount.html",[56,1.408,661,1.156]],["body/interfaces/Amount.html",[3,0.049,4,0.044,5,0.044,10,0.214,11,0.396,15,1.06,18,0.19,19,0.005,20,0.427,22,0.773,34,0.172,36,0.087,37,1.372,56,2.364,58,2.507,59,2.074,89,0.003,90,0.003,111,0.926,158,1.861,171,1.236,173,1.898,209,2.898,212,2.211,251,1.804,281,1.685,284,1.961,305,2.791,307,2.79,317,3.825,345,1.607,362,2.297,370,1.607,398,2.115,399,3.146,400,3.426,403,1.49,405,1.567,407,2.017,533,2.97,661,1.153,662,1.894,663,1.365,664,4.079,665,3.573,666,2.577,667,2.794,668,4.935,669,2.794,670,2.794,671,1.88,672,4.419,673,3.071,674,3.454,675,4.935,676,4.935,677,2.636,678,4.419,679,6.058,680,2.97,681,6.912,682,4.935,683,4.079,684,4.935,685,8.701,686,2.577,687,2.577,688,2.577,689,2.577,690,4.419,691,4.419,692,2.862,693,4.419,694,4.072,695,4.419,696,6.058,697,4.419,698,4.364,699,4.419,700,4.419,701,4.419,702,5.592,703,4.419,704,4.419,705,4.079,706,4.419,707,4.419,708,4.419,709,4.419,710,4.419,711,6.058,712,4.419,713,4.419,714,4.419,715,3.454,716,5.592,717,3.625,718,2.345,719,4.419,720,6.058,721,4.419,722,4.419,723,2.899,724,4.967,725,4.419,726,4.419,727,4.419,728,4.419,729,4.419,730,4.419,731,6.438,732,4.419,733,4.419,734,6.765,735,4.935,736,4.935,737,6.765,738,6.765,739,6.765,740,4.079,741,4.419,742,4.935,743,4.935,744,4.419,745,4.935,746,2.514,747,3.183,748,4.079,749,4.935,750,4.935,751,4.935,752,4.935,753,4.935,754,6.765,755,4.079,756,4.935,757,5.667,758,4.935,759,4.419,760,3.31,761,4.419,762,4.935]],["title/interfaces/AnvilApiConfig.html",[661,1.156,763,3.632]],["body/interfaces/AnvilApiConfig.html",[0,0.228,3,0.048,4,0.043,5,0.043,10,0.118,11,0.388,15,1.396,18,0.242,19,0.005,20,0.441,22,1.04,29,0.826,31,1.815,34,0.169,36,0.048,37,1.351,50,1.492,62,1.861,73,1.572,89,0.003,90,0.003,111,0.9,134,1.942,158,2.501,171,1.201,173,1.345,177,3.02,178,4.564,180,5.743,181,4.186,184,0.977,202,2.33,203,1.986,209,2.452,212,2.14,251,1.121,254,1.719,268,1.593,284,2.084,305,2.757,318,1.426,342,3.094,345,1.562,370,1.562,371,2.947,377,1.873,378,2.055,395,3.614,405,0.864,661,1.777,662,1.84,663,1.326,671,1.168,692,1.778,763,5.583,764,3.717,765,3.717,766,6.48,767,6.17,768,5.636,769,5.743,770,3.196,771,1.873,772,3.224,773,3.357,774,3.756,775,2.096,776,1.691,777,2.443,778,2.23,779,3.841,780,2.385,781,2.385,782,3.216,783,3.521,784,3.521,785,2.385,786,5.895,787,3.216,788,5.895,789,3.216,790,3.717,791,6.677,792,3.717,793,4.643,794,3.717,795,3.717,796,3.717,797,5.024,798,3.717,799,3.357,800,3.717,801,3.094,802,4.435,803,2.984,804,3.094,805,2.886,806,3.717,807,3.717,808,3.717,809,3.717,810,3.717,811,3.717,812,3.717,813,5.142,814,2.23,815,3.717,816,2.443,817,3.717,818,3.717,819,3.717,820,3.717,821,3.717,822,3.717,823,3.717,824,3.717,825,3.717,826,2.797,827,3.717,828,3.717,829,3.521,830,1.873,831,3.717]],["title/injectables/AnvilApiService.html",[268,1.189,782,3.318]],["body/injectables/AnvilApiService.html",[0,0.195,3,0.041,4,0.037,5,0.037,10,0.1,11,0.347,12,0.795,13,1.098,15,1.546,18,0.277,19,0.005,20,0.442,21,0.823,22,1.093,23,0.596,28,1.51,29,0.809,30,1.383,31,1.93,34,0.155,36,0.041,37,1.239,50,1.273,62,1.663,73,1.405,89,0.003,90,0.003,111,0.768,134,1.657,158,2.236,171,1.025,173,1.148,177,2.699,178,4.48,180,5.351,181,3.943,184,0.834,201,1.293,202,2.791,203,2.279,209,2.309,212,2.032,251,0.956,254,2.126,268,1.424,269,1.72,284,1.942,305,2.569,318,1.217,342,2.236,345,1.333,370,1.333,371,2.798,377,1.598,378,1.754,395,3.313,405,0.737,661,1.629,663,2.558,671,0.997,692,1.517,763,5.612,764,7.17,765,3.173,766,6.283,767,5.629,768,5.394,769,5.921,770,3.556,771,1.598,772,2.882,773,2.865,774,4.328,775,1.789,776,1.443,777,2.085,778,1.903,779,3.618,780,2.036,781,2.036,782,3.977,783,5.118,784,5.118,785,2.036,786,5.405,787,2.745,788,5.405,789,2.745,790,4.596,791,6.289,792,4.596,793,6.375,794,4.596,795,5.405,796,3.173,797,4.732,798,3.173,799,2.865,800,3.173,801,2.64,802,4.066,803,2.547,804,2.64,805,2.463,806,3.173,807,3.173,808,3.173,809,3.173,810,3.173,811,3.173,812,3.173,813,4.596,814,1.903,815,3.173,816,2.085,817,3.173,818,3.173,819,3.173,820,3.173,821,3.173,822,3.173,823,3.173,824,3.173,825,3.173,826,3.458,827,3.173,828,3.173,829,4.353,830,1.598,831,3.173,832,4.596,833,4.596,834,3.005,835,5.929,836,4.093,837,4.093,838,4.093,839,3.554,840,4.093,841,4.093,842,4.093,843,4.093,844,4.093]],["title/interfaces/ApiDocParams.html",[661,1.156,845,4.09]],["body/interfaces/ApiDocParams.html",[3,0.072,4,0.064,5,0.064,10,0.176,11,0.504,18,0.259,19,0.005,20,0.437,34,0.192,36,0.072,54,3.136,60,1.839,89,0.004,90,0.004,154,3.848,184,1.463,185,4.323,186,5.556,188,1.567,205,4.719,212,1.725,661,1.678,662,2.756,731,5.568,845,7.625,846,6.431,847,6.431,848,7.906,849,6.431,850,4.323,851,7.182]],["title/controllers/AppController.html",[141,1.898,852,4.09]],["body/controllers/AppController.html",[0,0.34,3,0.086,4,0.064,5,0.064,10,0.175,13,1.59,19,0.005,20,0.378,23,0.468,30,1.168,34,0.212,36,0.072,54,2.712,60,1.59,89,0.004,90,0.004,141,2.742,143,2.695,146,3.83,151,1.398,154,3.83,184,1.456,187,3.732,188,1.559,203,1.867,205,3.397,212,1.717,785,3.555,797,5.009,850,5.168,852,7.098,853,7.147,854,8.551,855,4.794,856,4.641,857,6.657,858,7.147,859,7.147,860,6.758,861,6.4,862,4.611,863,4.611,864,7.147,865,7.147,866,7.147]],["title/modules/AppModule.html",[221,1.689,867,3.835]],["body/modules/AppModule.html",[0,0.248,3,0.052,4,0.047,5,0.047,18,0.146,19,0.005,34,0.228,35,1.076,36,0.052,89,0.004,90,0.004,143,2.646,184,1.061,193,2.475,221,2.71,222,6.705,223,2.371,224,2.371,225,2.475,226,2.475,227,2.422,228,3.772,229,2.475,234,5.327,235,3.335,236,2.475,237,2.371,239,3.411,240,2.653,241,1.778,242,3.493,267,1.49,284,1.323,408,1.217,424,2.791,771,2.034,852,6.561,860,6.705,861,4.664,867,8.068,868,4.664,869,4.664,870,4.664,871,6.705,872,6.705,873,6.126,874,5.684,875,6.705,876,6.393,877,6.393,878,6.705,879,6.705,880,6.393,881,6.705,882,5.208,883,4.664,884,3.824,885,3.646,886,4.664,887,4.038,888,7.017,889,4.664,890,4.664,891,5.208,892,5.208,893,5.208,894,5.208,895,5.208,896,5.208,897,5.208,898,5.208,899,4.305,900,5.208,901,6.284,902,5.208,903,5.208,904,7.937,905,5.208,906,3.824,907,5.208,908,4.664,909,4.664,910,4.664,911,5.208,912,5.208,913,5.44,914,5.208,915,7.017,916,5.208,917,5.208,918,5.208,919,5.208,920,5.208,921,5.208,922,4.305,923,5.208,924,5.208,925,5.208,926,3.241,927,5.208,928,5.208,929,7.017,930,5.208,931,5.208,932,5.208,933,5.208]],["title/injectables/AppService.html",[268,1.189,860,3.632]],["body/injectables/AppService.html",[0,0.361,3,0.076,4,0.068,5,0.068,10,0.186,13,1.648,19,0.005,20,0.391,23,0.497,30,1.241,34,0.198,36,0.076,89,0.005,90,0.005,184,1.547,212,1.823,268,2.138,269,3.19,797,4.427,854,8.721,856,4.589,860,6.533,934,7.589,935,7.589,936,7.589,937,4.896]],["title/entities/Asset.html",[244,1.172,422,2.162]],["body/entities/Asset.html",[0,0.257,3,0.036,4,0.058,5,0.032,10,0.089,11,0.316,12,0.917,14,2.054,18,0.289,19,0.005,20,0.379,21,1.804,23,0.641,29,0.856,34,0.18,35,0.745,36,0.036,48,1.25,54,2.046,58,1.631,62,2.161,63,3.363,69,4.127,86,1.392,89,0.003,90,0.003,111,1.655,113,2.951,151,1.914,171,2.312,244,1.704,246,2.805,254,1.294,260,2.665,261,0.97,267,2.017,284,1.645,289,4.969,290,5.166,291,5.166,292,2.328,303,1.577,358,3.661,360,5.971,362,1.791,364,2.649,365,5.166,367,5.392,374,2.649,403,1.089,405,1.456,408,1.681,422,1.577,424,1.933,427,5.617,429,5.586,430,4.64,432,3.252,436,2.797,443,6.061,445,3.486,446,3.486,447,4.476,448,4.824,449,2.172,450,2.328,451,1.986,457,3.486,464,4.361,530,6.367,544,3.624,562,4.838,564,4.838,565,3.967,582,4.636,583,2.417,644,4.838,814,3.759,938,3.608,939,5.971,940,6.367,941,6.367,942,6.367,943,6.897,944,6.851,945,3.608,946,3.608,947,3.608,948,6.477,949,3.608,950,3.608,951,3.608,952,3.608,953,3.608,954,3.608,955,2.983,956,3.608,957,3.608,958,6.268,959,6.683,960,6.683,961,6.683,962,3.608,963,3.608,964,3.608,965,3.608,966,3.608,967,3.608,968,3.608,969,3.608,970,6.441,971,3.608,972,3.608,973,3.608,974,4.82,975,3.608,976,3.608,977,3.608,978,3.608,979,3.608,980,3.608,981,3.608,982,3.608,983,3.608,984,3.608,985,3.608,986,3.231,987,3.608,988,3.608,989,3.608,990,3.608,991,2.983,992,3.608,993,3.231,994,2.797,995,3.608,996,2.797,997,2.328,998,2.797,999,2.797,1000,3.608,1001,3.231,1002,3.608,1003,3.608,1004,3.608,1005,2.983,1006,3.608,1007,3.608,1008,3.608,1009,3.608]],["title/classes/AssetMetadataDto.html",[0,0.235,1010,4.09]],["body/classes/AssetMetadataDto.html",[0,0.422,2,0.903,3,0.058,4,0.052,5,0.052,10,0.143,11,0.443,12,0.765,18,0.278,19,0.005,20,0.439,23,0.603,29,0.702,34,0.198,36,0.076,60,1.705,62,1.639,89,0.004,90,0.004,151,1.801,156,1.874,188,1.275,244,1.794,254,2.094,259,2.846,261,1.57,263,3.376,264,1.593,267,1.607,289,5.419,292,3.769,318,2.643,342,2.855,362,1.616,390,3.27,391,3.294,392,3.143,401,2.544,405,1.513,408,2.151,663,2.608,974,3.051,997,3.769,998,4.529,999,4.529,1010,7.61,1011,8.446,1012,5.232,1013,5.939,1014,7.522,1015,7.522,1016,5.842,1017,3.182,1018,5.558,1019,5.3,1020,5.842,1021,5.232,1022,5.842,1023,7.522,1024,5.842,1025,5.842,1026,5.842,1027,3.308,1028,3.68,1029,5.232,1030,5.232,1031,5.232,1032,5.232,1033,5.232,1034,5.232,1035,5.232,1036,4.529,1037,5.232,1038,4.529]],["title/classes/AssetValueDto.html",[0,0.235,1039,3.835]],["body/classes/AssetValueDto.html",[0,0.297,2,0.965,3,0.063,4,0.056,5,0.056,10,0.153,11,0.462,12,0.79,18,0.286,19,0.005,20,0.453,23,0.664,29,0.89,36,0.063,60,1.157,62,2.432,89,0.004,90,0.004,342,2.98,362,2.397,403,1.886,405,1.818,583,3.062,677,2.133,839,2.905,1013,4.03,1038,6.72,1039,6.127,1040,10.188,1041,6.247,1042,7.763,1043,7.763,1044,7.166,1045,7.166,1046,7.763,1047,7.166,1048,6.72,1049,7.166,1050,6.247,1051,6.247,1052,6.247,1053,6.247,1054,6.247,1055,6.247,1056,6.247,1057,6.247,1058,6.247,1059,6.247,1060,6.247,1061,6.247,1062,4.373,1063,4.19,1064,3.262,1065,4.373,1066,4.373,1067,4.19,1068,4.373,1069,3.76,1070,2.099]],["title/classes/AssetWhitelist.html",[0,0.235,397,3.463]],["body/classes/AssetWhitelist.html",[0,0.452,2,0.866,3,0.056,4,0.05,5,0.05,10,0.138,11,0.431,12,0.671,18,0.245,19,0.005,20,0.442,23,0.573,28,0.904,29,0.842,34,0.183,36,0.091,48,1.588,52,3.04,73,1.328,89,0.004,90,0.004,151,1.61,188,1.223,201,1.77,244,1.746,251,2.044,259,2.818,260,2.818,261,1.506,264,1.528,318,2.192,383,3.759,384,4.115,385,2.664,386,5.468,387,5.318,389,4.115,390,3.31,391,3.052,392,2.811,393,5.41,394,3.616,395,3.502,396,5.264,397,5.158,398,3.158,399,3.427,400,3.04,401,3.134,402,3.373,403,2.64,404,4.754,405,1.738,406,5.443,407,1.464,408,1.722,409,5.522,410,5.158,411,3.003,412,5.522,413,3.759,414,3.759,415,3.923,416,3.616,1071,7.369,1072,6.599,1073,7.369,1074,5.605,1075,5.605]],["title/classes/AssetWhitelistDto.html",[0,0.235,1076,4.43]],["body/classes/AssetWhitelistDto.html",[0,0.411,2,0.96,3,0.062,4,0.055,5,0.055,10,0.152,11,0.461,12,0.717,18,0.243,19,0.005,20,0.422,23,0.566,29,0.843,34,0.192,36,0.062,48,1.754,52,3.75,60,1.601,89,0.004,90,0.004,151,1.691,188,1.355,244,1.866,251,2.125,259,2.551,260,2.426,261,1.669,264,1.693,318,2.704,377,3.075,390,2.646,391,3.205,392,2.952,398,3.896,399,4.228,400,3.248,401,3.221,402,3.739,403,2.61,404,5.08,405,1.775,406,5.658,407,1.623,408,2.125,409,6.292,410,5.512,411,3.329,412,6.292,1076,7.052,1077,6.212,1078,3.438,1079,6.212,1080,6.212,1081,6.212,1082,6.212,1083,6.212,1084,7.052,1085,7.052,1086,7.052,1087,7.052,1088,6.212,1089,5.563,1090,5.563]],["title/controllers/AssetsController.html",[141,1.898,1091,4.09]],["body/controllers/AssetsController.html",[0,0.285,3,0.06,4,0.054,5,0.054,10,0.147,12,0.701,13,1.425,18,0.216,19,0.005,20,0.418,23,0.504,28,1.241,29,0.713,30,1.258,34,0.211,36,0.06,54,2.834,60,1.661,89,0.004,90,0.004,111,1.836,141,2.3,143,2.26,146,3.211,151,1.505,154,4.124,156,3.137,166,5.4,179,2.427,182,5.947,183,3.393,184,1.221,187,3.129,188,1.308,189,3.211,203,1.566,205,3.658,206,4.358,208,5.966,209,2.191,210,3.235,211,4.965,212,1.849,251,2.309,255,4.462,338,6.587,378,2.568,663,2.351,785,2.981,850,5.117,855,5.162,862,3.866,863,3.866,1091,6.362,1092,5.993,1093,7.696,1094,7.696,1095,5.993,1096,7.487,1097,8.034,1098,5.993,1099,5.993,1100,5.993,1101,5.993,1102,5.993,1103,4.954,1104,5.993,1105,6.242,1106,5.366,1107,5.993,1108,5.993,1109,5.993,1110,5.993,1111,5.993,1112,6.892,1113,6.892,1114,5.993,1115,5.993,1116,5.993]],["title/modules/AssetsModule.html",[221,1.689,871,3.632]],["body/modules/AssetsModule.html",[0,0.329,3,0.069,4,0.062,5,0.062,19,0.005,34,0.224,36,0.069,89,0.004,90,0.004,111,1.581,143,3.177,171,2.11,184,1.411,221,3.1,223,3.152,224,3.152,225,3.29,226,3.29,227,3.219,228,4.315,229,4.315,235,4.003,236,3.29,237,3.152,239,3.365,240,3.527,241,2.364,244,1.64,245,3.71,246,2.923,247,3.71,248,2.753,663,1.915,871,7.317,1091,7.505,1105,7.547,1106,6.199,1117,6.199,1118,6.199,1119,6.199,1120,6.923,1121,6.923,1122,4.167,1123,6.923]],["title/injectables/AssetsService.html",[268,1.189,1105,3.632]],["body/injectables/AssetsService.html",[0,0.229,3,0.031,4,0.028,5,0.028,10,0.076,12,0.749,13,0.892,15,1.509,18,0.242,19,0.005,20,0.445,21,0.969,22,0.755,23,0.538,28,1.325,29,0.762,30,1.3,31,1.863,34,0.192,35,0.642,36,0.031,37,1.656,46,1.044,48,1.764,54,0.981,62,0.871,82,0.736,89,0.002,90,0.002,111,1.776,131,2.968,132,3.251,156,2.962,157,2.999,171,0.778,174,1.71,184,0.633,201,1.522,202,1.81,203,1.543,209,2.54,210,3.693,212,1.975,241,1.06,244,2.082,245,1.664,246,2.309,247,1.664,248,1.235,251,1.921,254,1.728,261,0.835,268,1.158,269,1.305,273,3.928,274,4.882,283,3.109,284,2.445,287,1.869,288,1.444,289,2.003,290,2.083,291,2.083,292,2.003,295,1.933,296,2.003,297,1.545,298,2.174,299,2.174,301,3.81,303,1.357,304,2.567,305,3.132,307,3.392,308,2.174,310,4.882,311,4.294,312,1.758,318,1.433,331,2.408,338,2.28,351,2.28,352,2.408,356,4.316,357,2.28,362,0.859,364,3.538,365,3.232,366,2.408,367,2.174,405,1.704,407,1.992,411,3.566,533,2.901,649,1.758,663,2.335,747,3.109,748,2.567,939,3.736,940,2.567,941,2.567,942,2.567,944,5.29,996,6.917,998,5.585,999,5.585,1005,2.567,1036,5.16,1105,3.538,1124,3.106,1125,4.819,1126,4.819,1127,4.819,1128,4.819,1129,4.819,1130,4.819,1131,4.819,1132,3.106,1133,3.675,1134,3.106,1135,4.316,1136,4.819,1137,2.266,1138,3.106,1139,4.819,1140,4.75,1141,6.401,1142,3.106,1143,4.819,1144,3.106,1145,4.819,1146,3.106,1147,4.819,1148,3.106,1149,4.819,1150,3.106,1151,4.819,1152,3.106,1153,2.567,1154,2.174,1155,3.106,1156,4.294,1157,2.567,1158,7.123,1159,7.955,1160,5.502,1161,5.906,1162,5.96,1163,3.106,1164,4.882,1165,3.984,1166,3.106,1167,3.106,1168,1.357,1169,4.819,1170,3.106,1171,2.28,1172,3.106,1173,3.106,1174,3.106,1175,3.106,1176,7.205,1177,7.624,1178,3.374,1179,4.819,1180,3.882,1181,4.819,1182,2.408,1183,2.999,1184,3.736,1185,3.736,1186,4.819,1187,3.984,1188,4.316,1189,5.906,1190,4.882,1191,5.906,1192,6.656,1193,5.906,1194,5.956,1195,4.819,1196,4.882,1197,4.819,1198,3.984,1199,3.106,1200,3.106,1201,3.106,1202,4.316,1203,3.106,1204,3.106,1205,3.106,1206,2.781,1207,3.106,1208,3.106,1209,2.781,1210,2.781]],["title/entities/AssetsWhitelistEntity.html",[422,2.162,1211,3.632]],["body/entities/AssetsWhitelistEntity.html",[0,0.382,3,0.053,4,0.048,5,0.048,10,0.131,11,0.417,12,0.88,14,2.04,18,0.281,19,0.005,20,0.429,21,1.724,23,0.615,29,0.795,34,0.191,35,1.102,36,0.053,48,1.724,52,2.941,64,4.195,69,4.304,81,1.635,86,1.837,89,0.004,90,0.004,111,1.832,113,2.818,151,1.837,260,2.58,261,1.434,264,1.454,267,1.821,284,1.811,358,3.818,377,2.785,398,3.056,399,3.988,403,1.61,405,1.545,408,1.247,409,3.578,412,3.578,422,3.117,424,2.858,427,5.379,428,3.734,429,5.337,430,5.532,432,4.292,434,3.734,436,4.135,438,5.235,439,4.135,442,4.992,443,5.723,445,4.6,446,4.6,447,4.438,448,4.783,449,3.21,450,3.441,451,2.936,452,2.858,453,3.578,454,3.578,455,4.038,456,3.578,457,3.441,643,6.296,1084,6.386,1085,6.386,1086,6.386,1087,6.386,1089,4.777,1090,4.777,1211,5.235,1212,5.334,1213,7.388,1214,7.388,1215,5.334,1216,5.334,1217,5.334,1218,5.334,1219,5.334,1220,5.334,1221,5.334,1222,6.386,1223,5.334,1224,5.334,1225,5.334,1226,7.131,1227,5.334,1228,4.135]],["title/controllers/AuthController.html",[141,1.898,1229,4.09]],["body/controllers/AuthController.html",[0,0.327,3,0.069,4,0.061,5,0.061,10,0.169,12,0.627,13,1.554,15,1.419,18,0.193,19,0.005,23,0.45,28,1.109,29,0.638,30,1.125,34,0.215,36,0.069,54,2.65,60,1.554,89,0.004,90,0.004,141,2.64,143,2.595,146,3.687,151,1.346,154,3.687,158,2.595,164,5.413,178,3.199,181,3.344,184,1.402,187,3.593,188,1.501,205,3.27,212,1.653,246,3.271,785,3.422,848,5.687,850,5.05,855,4.614,862,4.438,863,4.438,1229,6.937,1230,6.88,1231,6.88,1232,9.831,1233,6.88,1234,6.921,1235,6.88,1236,6.88,1237,6.161,1238,6.161,1239,6.647,1240,6.161,1241,6.161,1242,6.88,1243,6.88,1244,6.88,1245,6.88,1246,6.88,1247,6.88]],["title/guards/AuthGuard.html",[189,2.651,1248,4.43]],["body/guards/AuthGuard.html",[0,0.297,3,0.063,4,0.056,5,0.056,8,1.976,10,0.154,12,0.79,13,1.465,15,1.36,18,0.264,19,0.005,20,0.348,23,0.568,28,1.398,29,0.804,30,1.293,31,1.612,34,0.203,36,0.063,37,1.112,89,0.004,90,0.004,184,1.275,189,4.239,201,2.498,202,2.881,209,2.469,212,1.9,254,3.11,267,1.328,268,1.9,284,2.009,305,2.658,345,2.038,370,2.038,378,4.115,770,4.099,771,2.443,1249,6.256,1250,6.256,1251,9.115,1252,7.91,1253,6.256,1254,8.599,1255,6.256,1256,7.91,1257,8.162,1258,6.256,1259,6.256,1260,7.91,1261,6.256,1262,7.768,1263,4.593,1264,4.593,1265,6.256,1266,4.43,1267,6.256,1268,6.256,1269,6.256,1270,5.171,1271,6.256,1272,6.256,1273,5.602]],["title/modules/AuthModule.html",[221,1.689,872,3.632]],["body/modules/AuthModule.html",[0,0.331,3,0.07,4,0.062,5,0.062,19,0.005,34,0.219,36,0.07,89,0.004,90,0.004,143,3.189,184,1.42,221,3.109,223,3.172,224,3.172,225,3.311,226,3.311,227,3.24,228,4.326,229,4.326,235,4.018,236,3.311,237,3.172,239,4.109,240,3.549,241,2.379,246,2.417,247,3.733,872,7.445,880,6.902,1229,7.526,1239,7.553,1240,6.239,1274,6.239,1275,6.967,1276,6.239,1277,6.239,1278,6.967,1279,6.967,1280,6.967,1281,6.239]],["title/injectables/AuthService.html",[268,1.189,1239,3.632]],["body/injectables/AuthService.html",[0,0.235,3,0.05,4,0.044,5,0.044,10,0.122,12,0.793,13,1.255,15,1.212,18,0.19,19,0.005,23,0.444,28,1.093,29,0.628,30,0.809,34,0.212,36,0.05,37,1.478,46,1.664,48,0.955,60,0.917,73,1.173,89,0.003,90,0.003,134,3.131,158,1.867,184,1.009,201,2.142,202,2.078,209,2.892,212,1.998,246,3.196,267,1.051,268,1.629,269,2.081,284,1.722,330,5.605,345,2.208,370,2.208,371,2.558,373,4.434,376,4.668,377,3.402,385,3.675,400,3.19,408,1.807,501,3.838,503,2.463,666,3.541,671,2.191,678,4.434,686,3.541,687,2.586,688,2.586,689,3.541,922,4.093,926,3.081,1178,3.466,1234,6.106,1237,4.978,1239,4.978,1241,4.434,1254,8.249,1263,3.635,1266,2.406,1282,4.951,1283,6.072,1284,4.951,1285,6.297,1286,4.951,1287,6.78,1288,4.951,1289,4.951,1290,4.951,1291,4.951,1292,4.951,1293,4.434,1294,4.951,1295,6.78,1296,4.951,1297,3.838,1298,4.093,1299,6.78,1300,4.434,1301,4.951,1302,5.187,1303,5.995,1304,4.951,1305,4.951,1306,4.951,1307,4.951,1308,4.951,1309,4.951,1310,4.951,1311,4.951,1312,4.951,1313,4.951,1314,4.951,1315,4.951,1316,4.951,1317,2.586,1318,4.951,1319,6.78,1320,4.951,1321,4.951,1322,4.951,1323,7.733,1324,4.951,1325,6.78,1326,4.951,1327,6.78,1328,4.951,1329,6.78,1330,4.951,1331,6.78,1332,6.78,1333,3.635,1334,4.093,1335,2.586,1336,4.951,1337,4.951,1338,4.093,1339,4.951,1340,4.951,1341,4.951,1342,4.093,1343,4.951,1344,4.951,1345,4.951,1346,6.78,1347,6.072,1348,5.677,1349,4.951,1350,5.413,1351,4.951,1352,5.605,1353,4.951,1354,4.951,1355,4.434,1356,3.321,1357,4.951,1358,3.635,1359,4.434,1360,4.093,1361,4.951,1362,2.208]],["title/controllers/AwsController.html",[141,1.898,1363,4.09]],["body/controllers/AwsController.html",[0,0.218,3,0.046,4,0.041,5,0.081,10,0.113,12,0.733,13,1.191,14,1.634,15,1.516,18,0.258,19,0.005,23,0.527,28,1.298,29,0.746,30,1.316,34,0.205,36,0.064,37,1.431,48,1.553,54,2.908,60,1.705,89,0.003,90,0.003,141,2.469,143,1.731,151,1.575,154,4.314,158,2.427,166,5.632,175,4.204,179,1.859,181,2.231,183,2.599,184,0.935,187,2.397,188,1.002,189,2.46,190,2.857,202,1.407,203,1.681,205,3.826,206,3.643,209,2.413,212,1.785,244,1.088,255,2.283,271,2.654,284,2.292,312,4.206,321,3.37,378,3.867,416,4.151,785,2.283,816,4.767,850,5.102,855,5.4,862,2.962,863,2.962,913,6.242,1064,5.005,1069,3.873,1264,5.454,1363,5.319,1364,4.111,1365,6.435,1366,6.435,1367,7.429,1368,7.429,1369,4.591,1370,7.735,1371,7.254,1372,7.21,1373,8.051,1374,8.051,1375,7.21,1376,4.591,1377,4.591,1378,4.591,1379,4.591,1380,4.591,1381,4.591,1382,6.451,1383,6.435,1384,5.669,1385,4.591,1386,4.591,1387,4.591,1388,4.591,1389,4.591,1390,4.591,1391,6.653,1392,6.653,1393,6.653,1394,6.653,1395,4.111,1396,4.111,1397,3.795,1398,5.762,1399,4.983,1400,4.111,1401,6.141,1402,5.762,1403,4.591,1404,4.591,1405,4.591,1406,4.591,1407,4.591,1408,4.005,1409,5.762,1410,4.316,1411,4.111,1412,6.435,1413,4.111,1414,4.591,1415,4.591,1416,4.591,1417,6.435,1418,6.435,1419,6.435,1420,6.435,1421,5.319,1422,6.435,1423,6.435,1424,4.591,1425,4.591,1426,4.591,1427,4.591,1428,4.591,1429,4.111,1430,2.527,1431,2.857,1432,3.37,1433,4.591,1434,4.591,1435,3.214,1436,4.591]],["title/modules/AwsModule.html",[221,1.689,873,3.318]],["body/modules/AwsModule.html",[0,0.318,3,0.067,4,0.06,5,0.06,15,1.049,19,0.005,34,0.222,36,0.067,89,0.004,90,0.004,143,3.111,184,1.364,221,3.054,223,3.047,224,3.047,225,3.18,226,3.18,227,3.112,228,4.251,229,4.251,235,3.921,236,3.18,237,3.047,239,4.01,240,3.409,241,2.285,267,1.421,770,3.925,771,2.614,873,6.637,885,5.775,1263,4.913,1270,5.532,1363,7.394,1399,6.865,1400,5.993,1437,5.993,1438,5.993,1439,5.993,1440,6.692,1441,6.396,1442,4.028,1443,5.993,1444,3.789,1445,4.317,1446,6.692,1447,6.692,1448,5.993,1449,5.993,1450,5.993,1451,5.993,1452,5.993,1453,5.993,1454,5.993,1455,3.903]],["title/injectables/AwsService.html",[268,1.189,1399,3.318]],["body/injectables/AwsService.html",[0,0.17,3,0.036,4,0.032,5,0.08,10,0.088,11,0.314,12,0.839,13,0.993,14,0.907,15,1.538,18,0.258,19,0.005,20,0.435,21,1.078,22,0.84,23,0.603,28,1.385,29,0.796,30,1.405,31,1.458,34,0.199,35,0.737,36,0.036,37,1.484,49,3.477,58,1.078,73,1.908,89,0.003,90,0.003,158,2.892,178,1.66,184,0.727,201,1.693,202,2.881,203,2.003,209,2.719,212,2.111,241,1.219,267,1.366,268,1.288,269,1.501,271,2.951,273,3.257,284,2.182,287,3.874,288,1.66,305,2.404,307,1.473,312,2.021,339,2.951,345,1.746,370,1.746,371,2.763,375,4.431,395,1.697,408,0.834,525,3.197,666,3.736,671,2.035,766,2.395,768,3.754,803,2.222,913,6.243,994,2.768,1064,2.799,1137,2.057,1362,1.592,1371,6.661,1372,4.8,1382,5.912,1384,3.458,1399,3.595,1429,3.197,1432,2.621,1442,2.149,1444,2.021,1445,2.303,1456,3.57,1457,7.668,1458,8.016,1459,5.36,1460,5.36,1461,5.36,1462,7.154,1463,5.36,1464,5.36,1465,5.36,1466,5.36,1467,3.57,1468,6.132,1469,5.36,1470,5.36,1471,5.36,1472,3.57,1473,7.154,1474,5.36,1475,3.57,1476,5.36,1477,7.154,1478,3.57,1479,3.57,1480,5.36,1481,3.57,1482,5.36,1483,3.57,1484,5.36,1485,3.57,1486,5.36,1487,3.57,1488,5.36,1489,3.57,1490,5.36,1491,5.36,1492,3.57,1493,2.799,1494,5.321,1495,3.197,1496,3.57,1497,3.57,1498,5.36,1499,2.951,1500,6.436,1501,3.57,1502,3.57,1503,3.57,1504,3.57,1505,3.57,1506,3.57,1507,3.57,1508,3.57,1509,3.57,1510,3.57,1511,3.57,1512,5.36,1513,3.57,1514,3.57,1515,3.197,1516,5.36,1517,6.436,1518,3.57,1519,4.431,1520,3.57,1521,3.57,1522,3.57,1523,3.57,1524,3.57,1525,3.57,1526,3.57,1527,5.36,1528,5.36,1529,3.57,1530,5.36,1531,5.36,1532,4.8,1533,5.36,1534,4.8,1535,3.57,1536,3.57,1537,3.57,1538,3.57,1539,3.57,1540,3.57,1541,3.57,1542,3.57,1543,3.57,1544,3.57,1545,2.395,1546,3.57,1547,2.082,1548,4.156,1549,1.819,1550,3.336,1551,3.57,1552,3.57,1553,3.197,1554,1.819,1555,3.57,1556,3.57,1557,3.57,1558,3.57,1559,3.57,1560,3.57,1561,5.36,1562,3.57,1563,3.57,1564,3.57,1565,3.57,1566,3.57,1567,3.57,1568,2.303,1569,6.436,1570,3.57,1571,6.407,1572,5.36,1573,6.407,1574,5.36,1575,5.36,1576,5.36,1577,5.36,1578,5.36,1579,8.053,1580,5.36,1581,3.936,1582,5.36,1583,4.156,1584,3.57,1585,4.156,1586,4.8,1587,4.156,1588,5.36,1589,2.149,1590,3.197,1591,3.197,1592,2.872,1593,3.57]],["title/interfaces/BlockchainAddressResponse.html",[661,1.156,1594,3.079]],["body/interfaces/BlockchainAddressResponse.html",[3,0.062,4,0.056,5,0.056,10,0.153,11,0.461,18,0.243,19,0.005,20,0.461,36,0.099,50,2.692,56,2.463,59,3.313,62,2.211,65,2.346,89,0.004,90,0.004,112,2.429,173,1.745,244,1.868,251,1.842,342,2.972,362,2.18,403,1.878,405,1.817,583,2.091,639,4.015,661,2.303,662,2.387,665,3.134,671,2.423,677,2.124,718,4.323,723,2.666,746,3.169,776,2.194,1070,2.649,1140,3.424,1594,4.905,1595,4.172,1596,5.007,1597,5.868,1598,4.744,1599,5.287,1600,4.339,1601,3.424,1602,3.872,1603,3.872,1604,3.424,1605,2.956,1606,2.893,1607,3.424,1608,4.172,1609,4.172,1610,3.872,1611,3.248,1612,4.172,1613,3.872,1614,4.172]],["title/interfaces/BlockchainContractResponse.html",[661,1.156,1610,3.079]],["body/interfaces/BlockchainContractResponse.html",[3,0.062,4,0.056,5,0.056,10,0.153,11,0.461,18,0.243,19,0.005,20,0.461,36,0.099,50,2.692,56,2.463,59,3.313,62,2.211,65,2.346,89,0.004,90,0.004,112,2.429,173,1.745,244,1.868,251,1.842,342,3.43,362,2.18,403,1.878,405,1.792,583,2.091,639,4.015,661,2.303,662,2.387,665,3.134,671,2.423,677,2.124,718,2.956,723,2.666,746,3.169,776,2.194,1070,2.649,1140,3.424,1594,3.872,1595,4.172,1596,3.424,1597,5.085,1598,4.744,1599,5.287,1600,4.339,1601,3.424,1602,3.872,1603,3.872,1604,3.424,1605,2.956,1606,2.893,1607,3.424,1608,4.172,1609,4.172,1610,4.905,1611,4.75,1612,6.101,1613,3.872,1614,4.172]],["title/controllers/BlockchainController.html",[141,1.898,1615,4.09]],["body/controllers/BlockchainController.html",[0,0.169,3,0.053,4,0.032,5,0.032,10,0.087,12,0.732,13,0.988,15,1.514,18,0.273,19,0.005,20,0.156,23,0.526,28,1.295,29,0.745,30,1.313,31,1.747,34,0.191,36,0.035,37,0.948,54,2.937,60,1.767,62,0.995,65,2.418,82,1.264,89,0.003,90,0.003,105,2.332,111,1.61,114,1.338,134,2.16,141,1.361,143,1.338,146,1.901,151,1.571,154,4.928,158,2.012,166,4.602,171,2.274,174,2.937,175,4.802,178,3.876,181,1.724,183,2.008,184,0.723,185,5.016,186,5.66,187,1.852,188,0.774,189,1.901,192,2.786,201,1.12,202,1.965,203,1.675,205,3.961,206,4.038,209,2.03,210,1.491,211,2.288,212,2.108,251,0.829,281,1.211,284,0.901,305,1.192,345,1.738,362,0.981,370,1.738,371,2.658,376,2.859,378,3.056,407,0.927,650,2.937,651,1.807,663,2.305,665,1.41,692,1.315,694,3.211,766,4.783,768,4.686,773,2.483,802,2.069,826,2.069,829,2.604,832,4.136,833,4.136,1017,2.695,1103,2.932,1137,2.46,1157,2.932,1168,1.55,1178,2.483,1238,3.176,1262,3.176,1266,1.724,1302,6.168,1333,2.604,1338,4.41,1362,2.379,1432,2.604,1493,1.852,1547,4.16,1548,6.228,1615,4.41,1616,3.547,1617,4.145,1618,5.335,1619,5.335,1620,5.335,1621,5.335,1622,4.438,1623,3.547,1624,3.547,1625,5.335,1626,5.236,1627,5.335,1628,3.547,1629,3.547,1630,4.777,1631,3.547,1632,3.176,1633,3.547,1634,3.547,1635,3.821,1636,5.335,1637,3.547,1638,5.524,1639,5.335,1640,5.723,1641,6.386,1642,5.335,1643,7.131,1644,3.547,1645,3.547,1646,6.412,1647,5.335,1648,3.547,1649,4.41,1650,3.547,1651,3.724,1652,3.547,1653,2.653,1654,2.859,1655,3.547,1656,3.547,1657,3.547,1658,5.236,1659,3.547,1660,3.547,1661,3.547,1662,3.547,1663,3.99,1664,3.32,1665,2.379,1666,2.379,1667,3.211,1668,4.3,1669,3.176,1670,4.707,1671,3.176,1672,3.547,1673,3.547,1674,3.547,1675,3.547,1676,3.547,1677,3.547,1678,3.547,1679,3.547,1680,3.547,1681,3.547,1682,3.547,1683,3.547,1684,3.547,1685,3.547,1686,3.547,1687,5.335,1688,2.859,1689,3.547,1690,3.547,1691,3.18,1692,6.412,1693,3.547,1694,5.335,1695,5.3,1696,5.741,1697,3.547,1698,3.547,1699,3.176,1700,3.547,1701,3.176,1702,3.547,1703,3.547,1704,3.547,1705,3.176,1706,3.547,1707,2.208,1708,2.932,1709,3.547,1710,5.335,1711,5.335,1712,5.335,1713,5.335,1714,3.547,1715,3.547,1716,5.335,1717,5.335,1718,4.777,1719,5.335,1720,3.547,1721,3.547,1722,3.547,1723,3.547,1724,3.547,1725,3.547,1726,2.379,1727,3.547,1728,3.547,1729,3.547,1730,2.379,1731,3.547,1732,2.379,1733,3.547,1734,3.547,1735,3.32,1736,1.686]],["title/modules/BlockchainModule.html",[221,1.689,874,3.079]],["body/modules/BlockchainModule.html",[0,0.277,3,0.058,4,0.052,5,0.052,19,0.005,34,0.225,36,0.058,89,0.004,90,0.004,111,1.574,143,2.848,184,1.186,221,2.863,223,2.649,224,2.649,225,2.765,226,2.765,227,2.706,228,3.984,229,3.984,234,5.495,235,3.589,236,2.765,237,2.649,239,3.67,240,2.964,241,1.987,242,3.903,248,2.314,249,3.903,267,1.235,663,1.609,771,2.273,773,4.073,782,6.319,801,3.754,874,6.454,885,4.073,909,5.211,910,5.211,1441,5.854,1442,3.502,1615,6.93,1617,2.894,1638,3.394,1667,6.045,1668,6.736,1669,5.211,1670,7.374,1671,5.211,1737,5.211,1738,5.819,1739,5.211,1740,5.211,1741,5.687,1742,4.881,1743,5.819,1744,3.754,1745,5.819,1746,3.622,1747,5.819,1748,3.502]],["title/injectables/BlockchainScannerService.html",[268,1.189,1741,2.801]],["body/injectables/BlockchainScannerService.html",[0,0.161,3,0.034,4,0.03,5,0.03,10,0.083,11,0.302,12,0.848,13,0.955,15,1.581,18,0.275,19,0.005,20,0.451,21,1.507,22,1.093,23,0.62,28,1.526,29,0.854,30,1.489,31,1.986,34,0.167,36,0.034,37,1.332,50,1.604,58,1.024,60,0.628,73,0.804,89,0.003,90,0.003,111,0.637,134,2.088,158,1.279,184,0.691,201,1.071,202,2.973,203,2.308,209,2.408,212,2.257,267,1.48,268,1.239,269,1.426,271,2.875,281,1.158,284,1.31,305,1.733,322,1.728,345,2.27,370,2.27,371,3.108,378,2.21,395,1.612,403,1.024,405,1.124,407,0.886,408,1.205,583,1.733,663,2.637,671,2.111,677,2.13,731,2.629,766,5.029,769,4.368,770,3.319,771,1.325,785,1.687,802,3.008,816,3.178,834,2.49,839,3.242,997,2.188,1273,4.618,1317,4.124,1410,2.275,1519,2.804,1591,4.618,1594,2.111,1598,2.041,1602,2.111,1603,2.111,1610,2.111,1613,2.111,1741,2.92,1749,7.393,1750,3.037,1751,6.239,1752,6.239,1753,5.157,1754,5.157,1755,5.157,1756,5.157,1757,5.157,1758,5.157,1759,5.157,1760,5.157,1761,6.239,1762,5.157,1763,5.157,1764,6.239,1765,5.157,1766,5.157,1767,6.717,1768,3.392,1769,7.897,1770,5.157,1771,3.392,1772,5.157,1773,3.392,1774,5.157,1775,3.392,1776,5.157,1777,3.392,1778,5.157,1779,3.392,1780,5.157,1781,3.392,1782,3.392,1783,3.392,1784,3.392,1785,3.392,1786,5.157,1787,3.392,1788,5.157,1789,3.392,1790,3.392,1791,3.392,1792,6.242,1793,3.392,1794,3.61,1795,5.157,1796,3.392,1797,3.392,1798,3.392,1799,3.392,1800,4.263,1801,3.037,1802,4.618,1803,4.618,1804,1.771,1805,3.392,1806,4.618,1807,3.037,1808,3.392,1809,3.037,1810,3.392,1811,3.392,1812,6.971,1813,3.392,1814,5.157,1815,5.157,1816,3.392,1817,5.157,1818,4.263,1819,5.157,1820,3.392,1821,4.185,1822,3.392,1823,5.157,1824,5.157,1825,5.157,1826,6.239,1827,3.392,1828,5.157,1829,2.804,1830,5.157,1831,2.111,1832,2.49,1833,3.392,1834,3.392,1835,3.392,1836,3.392,1837,5.157,1838,3.392,1839,5.157,1840,3.392,1841,3.392,1842,1.978,1843,3.037,1844,3.392,1845,2.041,1846,2.49,1847,3.392,1848,3.392,1849,3.392,1850,3.392,1851,3.392,1852,3.392,1853,3.392,1854,3.392,1855,3.392]],["title/injectables/BlockchainService.html",[268,1.189,1742,2.404]],["body/injectables/BlockchainService.html",[0,0.221,3,0.047,4,0.042,5,0.042,10,0.114,11,0.38,12,0.682,13,1.204,15,1.384,18,0.263,19,0.005,20,0.413,21,0.936,22,0.73,23,0.578,28,1.207,29,0.694,30,1.325,31,1.651,34,0.18,36,0.081,37,1.33,60,1.204,73,1.54,89,0.003,90,0.003,114,2.452,134,2.632,171,2.535,173,2.101,175,2.433,178,2.166,179,2.632,181,2.264,184,0.949,201,2.053,202,2.945,203,2.511,209,2.307,212,1.562,268,1.562,269,1.958,271,3.342,281,2.22,284,2.242,305,2.723,345,2.117,370,2.117,371,2.681,387,4.012,649,3.681,650,2.564,651,3.312,661,1.519,663,2.506,767,3.005,770,3.711,771,1.819,777,2.373,778,3.768,779,2.899,787,3.125,789,3.125,797,4.726,801,4.194,802,4.368,803,4.046,804,4.194,805,3.913,816,2.373,830,2.539,832,5.04,833,5.04,834,3.42,839,3.023,857,3.612,974,2.433,1017,2.733,1137,3.109,1362,2.899,1442,2.804,1468,6.652,1554,3.312,1592,3.484,1617,3.724,1624,3.724,1626,4.773,1653,2.317,1654,4.342,1742,3.159,1856,3.612,1857,6.19,1858,6.19,1859,6.501,1860,5.374,1861,4.659,1862,5.374,1863,5.374,1864,4.046,1865,4.659,1866,5.374,1867,3.579,1868,4.659,1869,5.374,1870,4.659,1871,5.04,1872,3.42,1873,2.373,1874,5.04,1875,2.717,1876,3.851,1877,3.851,1878,6.19,1879,3.851,1880,3.851,1881,3.851,1882,3.91,1883,3.851,1884,3.851,1885,3.851,1886,3.612,1887,3.851,1888,3.612,1889,3.395,1890,3.612,1891,3.851,1892,2.638,1893,2.638,1894,6.19,1895,3.005,1896,3.851,1897,2.899]],["title/interfaces/BlockchainTokenResponse.html",[661,1.156,1613,3.079]],["body/interfaces/BlockchainTokenResponse.html",[3,0.061,4,0.055,5,0.055,10,0.151,11,0.458,18,0.254,19,0.005,20,0.462,29,0.725,36,0.098,50,2.676,56,2.448,59,3.287,62,2.623,65,2.317,89,0.004,90,0.004,112,2.399,173,1.723,244,1.853,251,1.827,342,3.415,362,2.162,403,2.733,405,1.788,583,2.064,639,3.983,661,2.297,662,2.357,665,3.109,671,2.328,677,3.092,718,2.919,723,2.632,746,3.129,776,2.166,1070,2.628,1140,3.381,1594,3.823,1595,4.12,1596,3.381,1597,5.044,1598,4.706,1599,5.244,1600,4.304,1601,3.381,1602,3.823,1603,3.823,1604,3.381,1605,2.919,1606,2.856,1607,3.381,1608,4.12,1609,4.12,1610,3.823,1611,3.208,1612,4.12,1613,4.866,1614,6.073]],["title/interfaces/BlockchainTransactionListItem.html",[661,1.156,1598,2.978]],["body/interfaces/BlockchainTransactionListItem.html",[3,0.062,4,0.055,5,0.055,10,0.151,11,0.458,18,0.254,19,0.005,20,0.46,36,0.098,50,2.679,56,2.452,59,3.934,62,2.198,65,2.323,89,0.004,90,0.004,112,2.406,173,1.728,244,1.856,251,1.831,342,2.954,362,2.166,403,1.86,405,1.845,583,2.07,639,3.99,661,2.299,662,2.364,665,3.114,671,2.33,677,2.103,718,2.927,723,2.64,746,3.138,776,2.172,1070,2.632,1140,3.391,1594,3.834,1595,4.132,1596,3.391,1597,5.053,1598,5.184,1599,6.276,1600,5.151,1601,4.989,1602,3.834,1603,3.834,1604,3.391,1605,2.927,1606,2.864,1607,3.391,1608,4.132,1609,4.132,1610,3.834,1611,3.217,1612,4.132,1613,3.834,1614,4.132]],["title/interfaces/BlockchainTransactionListResponse.html",[661,1.156,1602,3.079]],["body/interfaces/BlockchainTransactionListResponse.html",[3,0.062,4,0.055,5,0.055,10,0.151,11,0.458,18,0.254,19,0.005,20,0.46,36,0.098,50,2.679,56,2.452,59,3.293,62,2.198,65,2.323,89,0.004,90,0.004,112,3.54,173,1.728,244,1.856,251,1.831,342,2.954,362,2.166,403,1.86,405,1.832,583,2.07,639,3.99,661,2.299,662,2.364,665,3.114,671,2.419,677,2.103,718,2.927,723,2.64,746,4.617,776,2.172,1070,2.632,1140,4.989,1594,3.834,1595,4.132,1596,3.391,1597,5.053,1598,5.455,1599,5.254,1600,4.312,1601,3.391,1602,4.875,1603,3.834,1604,3.391,1605,2.927,1606,2.864,1607,3.391,1608,4.132,1609,4.132,1610,3.834,1611,3.217,1612,4.132,1613,3.834,1614,4.132]],["title/interfaces/BlockchainTransactionResponse.html",[661,1.156,1603,3.079]],["body/interfaces/BlockchainTransactionResponse.html",[3,0.058,4,0.052,5,0.052,10,0.142,11,0.441,18,0.285,19,0.005,20,0.46,29,0.872,36,0.097,50,2.603,56,2.382,59,3.166,62,2.576,65,3.341,89,0.004,90,0.004,112,2.264,173,2.485,244,1.785,251,1.76,342,2.841,362,2.083,403,1.75,405,1.797,583,2.812,639,4.678,661,2.27,662,2.224,665,2.995,671,2.293,677,1.979,718,2.755,723,2.484,746,2.953,776,3.124,839,4.376,1070,2.531,1140,3.191,1594,3.607,1595,3.888,1596,3.191,1597,4.859,1598,4.534,1599,5.052,1600,5.055,1601,3.191,1602,3.607,1603,4.688,1604,4.877,1605,4.21,1606,4.12,1607,3.191,1608,3.888,1609,3.888,1610,3.607,1611,3.027,1612,3.888,1613,3.607,1614,3.888]],["title/interfaces/BlockchainUtxo.html",[661,1.156,1597,3.192]],["body/interfaces/BlockchainUtxo.html",[3,0.058,4,0.052,5,0.052,10,0.142,11,0.44,18,0.275,19,0.005,20,0.462,36,0.097,50,3.053,56,2.677,59,3.857,62,2.11,65,2.18,89,0.004,90,0.004,112,2.258,173,1.622,244,2.097,251,1.757,342,2.836,362,2.079,403,1.745,405,1.817,583,1.943,639,4.674,661,2.269,662,2.218,665,2.99,671,2.391,677,1.974,718,2.747,723,3.793,746,2.945,776,2.039,1070,2.527,1140,3.182,1594,3.598,1595,3.877,1596,3.182,1597,5.391,1598,4.526,1599,6.154,1600,4.139,1601,3.182,1602,3.598,1603,3.598,1604,3.182,1605,2.747,1606,2.688,1607,4.872,1608,5.936,1609,5.936,1610,3.598,1611,3.019,1612,3.877,1613,3.598,1614,3.877]],["title/classes/BlockchainWebhookDto.html",[0,0.235,1635,2.651]],["body/classes/BlockchainWebhookDto.html",[0,0.415,2,0.583,3,0.038,4,0.034,5,0.034,10,0.193,11,0.327,18,0.282,19,0.005,20,0.427,22,0.592,23,0.538,34,0.164,36,0.038,48,1.284,50,2.646,56,1.591,58,2.22,59,1.587,60,1.891,65,2.107,66,1.755,89,0.003,90,0.003,129,3.389,151,1.608,171,2.334,173,2.306,188,0.824,257,2.349,259,2.87,260,2.87,261,1.014,262,3.873,263,3.895,264,1.029,266,3.1,267,1.806,362,1.545,378,2.395,390,3.164,391,3.413,392,2.905,401,3.422,405,1.736,407,0.986,408,0.882,503,2.779,583,1.878,639,3.999,663,2.352,665,2.645,671,1.791,692,1.399,718,1.794,723,2.395,746,1.923,776,1.971,856,2.716,1027,2.137,1028,2.716,1070,1.878,1078,3.268,1137,2.144,1317,3.474,1547,3.259,1550,2.349,1568,2.435,1596,2.078,1600,2.078,1601,2.078,1604,2.078,1605,2.655,1606,1.755,1607,3.076,1635,2.994,1638,4.289,1640,5.116,1688,2.994,1691,1.683,1873,1.923,1898,2.642,1899,4.657,1900,4.657,1901,3.911,1902,3.38,1903,3.775,1904,3.911,1905,3.911,1906,3.775,1907,3.775,1908,4.744,1909,3.911,1910,3.911,1911,3.911,1912,3.911,1913,3.775,1914,3.775,1915,5.265,1916,2.642,1917,3.775,1918,3.775,1919,3.775,1920,3.911,1921,3.911,1922,3.911,1923,3.911,1924,3.775,1925,3.775,1926,2.137,1927,2.137,1928,6.087,1929,2.642,1930,4.933,1931,3.162,1932,2.642,1933,4.292,1934,2.642,1935,4.321,1936,3.164,1937,3.911,1938,4.933,1939,2.642,1940,4.933,1941,2.642,1942,2.642,1943,2.642,1944,2.202,1945,2.642,1946,5.148,1947,2.642,1948,2.202,1949,3.748,1950,2.642,1951,3.911,1952,3.748,1953,2.642,1954,2.642,1955,2.642,1956,2.642,1957,2.642,1958,2.349,1959,2.435,1960,1.834,1961,2.642,1962,2.642,1963,2.642]],["title/classes/BlockfrostAmount.html",[0,0.235,1928,3.318]],["body/classes/BlockfrostAmount.html",[0,0.423,2,0.623,3,0.04,4,0.036,5,0.036,10,0.198,11,0.343,18,0.277,19,0.005,20,0.428,22,0.919,23,0.384,34,0.169,36,0.04,48,0.778,50,2.702,56,1.67,58,2.292,59,1.695,60,1.901,65,1.521,66,1.875,89,0.003,90,0.003,129,2.055,151,1.147,171,2.339,173,2.361,188,0.88,259,2.883,260,2.883,261,1.084,262,3.954,263,3.969,264,1.099,266,3.174,267,1.844,362,2.23,378,1.728,390,3.203,391,3.462,392,2.966,401,3.424,405,1.731,407,1.054,408,0.943,503,2.006,583,1.971,639,4.109,663,1.912,665,3.453,671,1.849,692,1.495,718,1.917,723,2.514,746,2.055,776,2.069,856,1.96,1027,2.284,1028,2.851,1070,1.355,1078,2.332,1137,2.251,1317,2.106,1547,3.422,1550,2.51,1568,2.602,1596,2.22,1600,2.22,1601,2.22,1604,2.22,1605,2.788,1606,1.875,1607,3.229,1635,2.161,1638,3.422,1640,4.303,1688,2.161,1691,1.799,1873,2.055,1898,2.823,1899,2.823,1900,2.823,1901,2.823,1904,2.823,1905,2.823,1908,3.784,1909,2.823,1910,2.823,1911,2.823,1912,2.823,1915,5.092,1920,2.823,1921,2.823,1922,2.823,1923,2.823,1926,2.284,1927,2.284,1928,6.264,1929,2.823,1930,5.092,1931,3.286,1932,2.823,1933,4.46,1934,2.823,1935,4.44,1936,3.321,1937,4.106,1938,5.092,1939,2.823,1940,5.092,1941,2.823,1942,2.823,1943,2.823,1944,2.352,1945,2.823,1946,5.314,1947,2.823,1948,2.352,1949,3.935,1950,2.823,1951,4.106,1952,3.935,1953,2.823,1954,2.823,1955,2.823,1956,2.823,1957,2.823,1958,2.51,1959,2.602,1960,1.96,1961,2.823,1962,2.823,1963,2.823,1964,4.033,1965,4.033,1966,4.033,1967,4.033]],["title/classes/BlockfrostTransaction.html",[0,0.235,1940,3.318]],["body/classes/BlockfrostTransaction.html",[0,0.404,2,0.531,3,0.034,4,0.031,5,0.031,10,0.208,11,0.305,18,0.283,19,0.005,20,0.423,22,0.538,23,0.611,29,0.483,34,0.156,36,0.034,48,0.663,50,2.705,56,1.482,58,2.118,59,1.444,60,1.877,65,1.295,66,2.421,89,0.003,90,0.003,129,1.749,151,1.825,171,2.338,173,2.487,188,0.749,257,2.137,259,2.848,260,2.848,261,0.923,262,3.753,263,3.787,264,0.936,266,2.992,267,1.75,362,1.44,378,1.472,390,3.105,391,3.339,392,2.815,401,3.435,405,1.779,407,0.897,408,0.803,503,1.708,583,2.113,639,4.589,663,2.604,665,2.5,671,1.709,692,1.273,718,2.474,723,2.231,746,2.652,776,1.836,856,1.669,1027,1.944,1028,2.53,1070,1.154,1078,3.711,1137,1.998,1317,1.793,1547,4.092,1550,3.24,1568,3.358,1596,3.461,1600,3.461,1601,3.461,1604,3.461,1605,2.474,1606,2.923,1607,2.866,1635,1.84,1638,3.036,1640,3.913,1688,1.84,1691,1.531,1873,1.749,1898,2.404,1899,2.404,1900,2.404,1901,2.404,1904,2.404,1905,2.404,1908,3.358,1909,2.404,1910,2.404,1911,2.404,1912,2.404,1915,4.705,1916,2.404,1920,2.404,1921,2.404,1922,2.404,1923,2.404,1926,1.944,1927,1.944,1928,6.042,1929,2.404,1930,4.705,1931,2.988,1932,2.404,1933,4.526,1934,2.404,1935,4.368,1936,3.56,1937,3.644,1938,4.705,1939,2.404,1940,5.057,1941,2.404,1942,2.404,1943,2.404,1944,3.036,1945,2.404,1946,6.086,1947,2.404,1948,3.036,1949,5.057,1950,2.404,1951,5.278,1952,5.057,1953,3.644,1954,2.404,1955,4.401,1956,2.404,1957,4.401,1958,2.137,1959,3.358,1960,1.669,1961,2.404,1962,2.404,1963,2.404,1968,3.434,1969,3.434,1970,3.434,1971,3.434,1972,3.434,1973,3.434,1974,3.434,1975,3.434,1976,3.434,1977,3.434,1978,3.434,1979,3.434,1980,2.839,1981,3.434,1982,2.839,1983,3.434,1984,3.434,1985,3.434,1986,3.434,1987,3.434,1988,3.434,1989,3.434,1990,3.434,1991,3.434,1992,3.434,1993,3.434,1994,3.434]],["title/classes/BlockfrostTransactionEvent.html",[0,0.235,1915,3.318]],["body/classes/BlockfrostTransactionEvent.html",[0,0.421,2,0.614,3,0.04,4,0.035,5,0.035,10,0.197,11,0.339,18,0.281,19,0.005,20,0.422,22,0.622,23,0.449,34,0.168,36,0.04,48,0.766,50,2.689,56,1.651,58,2.275,59,1.669,60,1.898,65,1.498,66,1.847,89,0.003,90,0.003,129,2.023,151,1.34,171,2.401,173,2.349,188,0.867,257,3.61,259,2.88,260,2.88,261,1.067,262,3.935,263,3.952,264,1.083,266,3.157,267,1.835,362,1.604,378,1.702,390,3.194,391,3.451,392,2.952,401,3.406,405,1.727,407,1.038,408,0.928,503,1.975,583,1.949,639,4.083,663,2.084,665,2.725,671,1.836,692,1.472,718,1.887,723,2.486,746,2.023,776,2.827,856,1.93,1027,2.249,1028,2.819,1070,1.335,1078,2.725,1137,2.226,1317,2.074,1547,3.383,1550,2.472,1568,2.562,1596,2.186,1600,2.186,1601,2.186,1604,2.186,1605,3.809,1606,1.847,1607,3.193,1635,2.128,1638,3.383,1640,4.265,1688,2.128,1691,2.587,1873,2.023,1898,2.78,1899,2.78,1900,2.78,1901,2.78,1904,2.78,1905,2.78,1908,3.742,1909,2.78,1910,2.78,1911,2.78,1912,2.78,1915,5.376,1916,4.06,1920,2.78,1921,2.78,1922,2.78,1923,2.78,1926,2.249,1927,2.249,1928,6.16,1929,2.78,1930,5.376,1931,3.257,1932,2.78,1933,4.421,1934,2.78,1935,4.412,1936,3.284,1937,4.06,1938,5.376,1939,2.78,1940,5.376,1941,2.78,1942,2.78,1943,2.78,1944,2.316,1945,2.78,1946,5.275,1947,2.78,1948,2.316,1949,3.891,1950,2.78,1951,4.06,1952,3.891,1953,2.78,1954,2.78,1955,2.78,1956,2.78,1957,2.78,1958,2.472,1959,2.562,1960,3.33,1961,2.78,1962,2.78,1963,2.78,1995,3.971,1996,3.971,1997,3.971,1998,3.971]],["title/classes/BlockfrostTxInput.html",[0,0.235,1930,3.318]],["body/classes/BlockfrostTxInput.html",[0,0.416,2,0.586,3,0.038,4,0.034,5,0.034,10,0.202,11,0.328,18,0.28,19,0.005,20,0.427,22,0.595,23,0.539,29,0.683,34,0.164,36,0.038,48,0.732,50,2.721,56,2.099,58,2.226,59,2.805,60,1.892,65,1.431,66,1.764,89,0.003,90,0.003,129,1.933,151,1.611,171,2.36,173,2.454,188,0.828,257,2.361,259,2.871,260,2.871,261,1.02,262,3.879,263,3.901,264,1.034,266,3.106,267,1.809,362,1.551,378,1.626,390,3.167,391,3.417,392,2.909,401,3.424,405,1.726,407,0.991,408,0.887,503,1.887,583,2.243,639,4.008,663,2.356,665,2.653,671,2.076,692,1.407,718,1.803,723,3.159,746,1.933,776,1.978,856,1.844,1027,2.148,1028,2.726,1070,1.275,1078,3.274,1137,2.561,1317,1.981,1547,3.272,1550,2.361,1568,2.448,1596,2.088,1600,2.088,1601,2.088,1604,2.088,1605,2.666,1606,1.764,1607,4.058,1635,2.033,1638,3.272,1640,4.153,1688,2.033,1691,1.692,1873,1.933,1898,2.656,1899,2.656,1900,2.656,1901,2.656,1904,2.656,1905,2.656,1908,3.618,1909,2.656,1910,2.656,1911,2.656,1912,2.656,1915,4.945,1916,2.656,1920,2.656,1921,2.656,1922,2.656,1923,2.656,1926,2.148,1927,2.148,1928,6.182,1929,2.656,1930,5.277,1931,3.914,1932,2.656,1933,4.756,1934,2.656,1935,4.533,1936,3.778,1937,5.507,1938,4.945,1939,2.656,1940,4.945,1941,2.656,1942,2.656,1943,2.656,1944,2.213,1945,2.656,1946,5.161,1947,2.656,1948,2.213,1949,3.762,1950,2.656,1951,3.926,1952,3.762,1953,2.656,1954,2.656,1955,2.656,1956,2.656,1957,2.656,1958,2.361,1959,2.448,1960,1.844,1961,2.656,1962,2.656,1963,2.656,1980,3.136,1982,3.136,1999,3.794,2000,3.794,2001,3.794,2002,3.794,2003,3.794,2004,3.794,2005,3.794,2006,3.794,2007,3.794]],["title/classes/BlockfrostTxOutput.html",[0,0.235,1938,3.318]],["body/classes/BlockfrostTxOutput.html",[0,0.419,2,0.603,3,0.039,4,0.035,5,0.035,10,0.204,11,0.335,18,0.279,19,0.005,20,0.426,22,0.612,23,0.489,29,0.531,34,0.166,36,0.039,48,0.753,50,2.744,56,2.128,58,2.257,59,1.641,60,1.896,65,1.473,66,1.816,89,0.003,90,0.003,129,1.989,151,1.462,171,2.35,173,2.412,188,0.852,257,2.43,259,2.877,260,2.877,261,1.049,262,3.915,263,3.933,264,1.064,266,3.138,267,1.826,362,1.584,378,1.673,390,3.184,391,3.438,392,2.936,401,3.42,405,1.734,407,1.02,408,0.913,503,1.942,583,1.925,639,4.055,663,2.202,665,2.698,671,2.095,692,1.448,718,1.856,723,3.204,746,1.989,776,2.02,856,1.898,1027,2.211,1028,2.784,1070,1.312,1078,2.972,1137,2.604,1317,2.039,1547,3.342,1550,2.43,1568,2.519,1596,2.149,1600,2.149,1601,2.149,1604,2.149,1605,2.723,1606,1.816,1607,4.115,1635,2.092,1638,3.342,1640,4.223,1688,2.092,1691,1.741,1873,1.989,1898,2.733,1899,2.733,1900,2.733,1901,2.733,1904,2.733,1905,2.733,1908,3.696,1909,2.733,1910,2.733,1911,2.733,1912,2.733,1915,5.014,1916,2.733,1920,2.733,1921,2.733,1922,2.733,1923,2.733,1926,2.211,1927,2.211,1928,6.221,1929,2.733,1930,5.014,1931,3.225,1932,2.733,1933,4.823,1934,2.733,1935,4.855,1936,3.244,1937,4.01,1938,5.339,1939,2.733,1940,5.014,1941,2.733,1942,2.733,1943,2.733,1944,2.278,1945,2.733,1946,5.233,1947,2.733,1948,2.278,1949,3.843,1950,2.733,1951,4.01,1952,3.843,1953,2.733,1954,2.733,1955,2.733,1956,2.733,1957,2.733,1958,2.43,1959,2.519,1960,1.898,1961,2.733,1962,2.733,1963,2.733,1980,3.228,1982,3.228,2008,3.905,2009,3.905,2010,3.905,2011,3.905,2012,3.905]],["title/classes/BuildTransactionDto.html",[0,0.235,1622,3.079]],["body/classes/BuildTransactionDto.html",[0,0.444,2,0.703,3,0.046,4,0.041,5,0.041,10,0.112,11,0.374,12,0.73,18,0.265,19,0.005,20,0.438,23,0.484,34,0.164,36,0.09,48,1.69,49,3.107,56,1.295,60,1.858,89,0.003,90,0.003,111,1.2,151,1.446,156,2.05,171,2.396,173,2.074,177,3.989,188,0.992,203,2.645,244,1.515,251,1.727,257,2.831,259,2.824,260,2.824,261,1.222,262,3.651,263,3.296,264,1.24,266,2.788,267,1.794,281,2.183,318,2.513,362,2.044,390,3.138,391,2.74,392,2.738,398,1.949,401,3.383,403,1.93,405,1.332,407,1.67,408,1.727,493,2.028,663,2.217,671,1.953,673,5.258,677,2.183,692,2.74,772,3.897,775,3.692,776,2.979,778,2.973,779,3.768,780,3.18,781,2.262,830,2.497,1070,1.529,1078,2.939,1168,3.231,1622,3.979,1651,3.338,1663,2.831,1664,2.831,1916,3.184,2013,3.051,2014,3.961,2015,3.426,2016,4.548,2017,4.548,2018,4.548,2019,4.769,2020,4.124,2021,4.124,2022,4.124,2023,4.124,2024,4.548,2025,4.548,2026,4.288,2027,3.513,2028,4.288,2029,3.729,2030,3.051,2031,4.288,2032,4.288,2033,2.317,2034,2.934,2035,5.652,2036,4.412,2037,4.124,2038,2.934,2039,2.738,2040,4.288,2041,2.504]],["title/interfaces/BuildTransactionOutput.html",[661,1.156,2042,3.318]],["body/interfaces/BuildTransactionOutput.html",[0,0.11,3,0.023,4,0.021,5,0.021,10,0.119,11,0.224,12,0.674,15,0.977,18,0.24,19,0.005,20,0.415,22,0.977,29,0.656,30,0.38,31,0.992,34,0.199,35,0.48,36,0.071,37,1.402,46,0.781,48,0.939,50,0.723,54,2.826,56,1.605,58,1.702,62,0.652,65,0.876,80,0.671,82,1.476,86,2.032,89,0.002,90,0.002,104,1.036,105,2.464,108,1.155,109,1.129,111,1.481,112,0.907,114,1.441,131,2.779,134,1.547,135,1.244,156,1.808,171,2.384,173,2.15,174,1.279,177,1.058,179,0.941,184,0.473,191,2.365,194,1.279,201,0.734,202,2.348,203,1.933,209,2.781,210,1.606,212,1.354,241,0.793,244,1.476,246,1.326,248,0.924,251,1.566,254,0.833,264,0.633,266,1.835,267,1.197,268,0.918,271,1.576,273,1.739,281,2.128,284,1.879,286,2.047,288,1.08,294,1.315,297,1.155,303,1.67,305,2.38,307,1.576,312,1.315,318,1.136,322,1.183,342,1.835,345,1.585,347,2.608,358,3.995,362,2.362,370,1.585,371,2.061,377,2.202,399,1.777,400,3.051,403,2.313,405,1.207,407,2.002,408,0.893,464,1.315,493,1.036,582,1.398,583,1.284,637,3.029,645,1.446,650,1.279,651,1.183,661,1.566,662,0.891,663,0.642,665,1.935,666,1.213,667,1.315,669,1.315,670,1.315,671,2.011,677,2.617,680,1.398,686,1.213,687,1.213,688,1.213,689,1.213,692,2.925,694,2.929,698,1.499,717,1.245,723,0.995,770,2.046,771,0.907,772,2.74,774,2.163,775,2.464,776,2.497,777,1.183,778,1.777,779,2.514,780,1.9,781,1.155,814,1.08,826,1.355,830,2.202,856,1.857,926,1.446,1017,2.37,1070,1.284,1133,1.446,1137,1.867,1156,2.465,1168,1.67,1183,1.446,1266,2.74,1317,1.213,1362,1.036,1408,1.446,1430,3.688,1431,4.407,1455,1.355,1493,2.541,1549,3.608,1554,1.183,1589,1.398,1592,1.245,1605,1.104,1606,1.08,1611,1.213,1617,3.099,1624,1.155,1635,2.047,1651,1.995,1653,2.42,1654,1.245,1665,1.558,1666,1.558,1667,1.398,1688,1.245,1691,1.704,1707,1.446,1726,1.558,1730,1.558,1732,3.264,1735,3.029,1736,2.961,1741,2.163,1742,3.028,1744,1.499,1746,1.446,1748,1.398,1804,1.995,1821,2.563,1831,1.446,1842,2.228,1845,1.398,1864,1.446,1867,1.279,1873,2.479,1875,1.355,1882,1.213,1889,1.213,1892,2.163,1893,1.315,1897,1.446,1926,1.315,1927,1.315,1931,2.679,1935,3.104,1960,2.365,2015,1.245,2033,1.183,2036,2.944,2041,1.279,2042,3.264,2043,1.398,2044,1.626,2045,2.3,2046,1.446,2047,1.446,2048,1.315,2049,1.315,2050,1.355,2051,3.021,2052,1.446,2053,2.465,2054,1.499,2055,1.626,2056,2.465,2057,1.626,2058,1.558,2059,1.626,2060,1.446,2061,1.355,2062,1.499,2063,1.446,2064,2.378,2065,1.398,2066,1.355,2067,1.355,2068,1.398,2069,1.398,2070,1.398,2071,1.398,2072,1.626,2073,1.558,2074,2.563,2075,1.558,2076,1.626,2077,2.674,2078,1.558,2079,1.626,2080,3.264,2081,1.558,2082,1.558,2083,1.558,2084,1.558,2085,1.558,2086,2.674,2087,1.446,2088,1.626,2089,1.446,2090,1.446,2091,3.264,2092,1.558,2093,1.558,2094,1.558,2095,1.558,2096,2.563,2097,1.558,2098,1.626,2099,1.626,2100,2.563,2101,4.69,2102,2.674,2103,3.406,2104,1.626,2105,1.626,2106,1.626,2107,1.626,2108,1.499,2109,3.698,2110,2.929,2111,2.3,2112,2.3,2113,2.929,2114,2.563,2115,2.563,2116,2.465,2117,1.995,2118,2.228,2119,2.674,2120,2.378,2121,2.378,2122,2.465,2123,3.393,2124,2.608,2125,2.929,2126,1.626,2127,1.279,2128,1.446,2129,2.103,2130,1.558,2131,1.558,2132,1.499,2133,1.446,2134,1.315,2135,1.315,2136,1.355,2137,1.355,2138,1.355,2139,1.315,2140,1.558,2141,4.362,2142,2.674,2143,1.626,2144,1.155,2145,1.355,2146,1.626,2147,3.878,2148,1.626,2149,3.406,2150,1.398,2151,1.558,2152,1.626,2153,1.558,2154,1.626,2155,1.626,2156,1.558,2157,1.558,2158,1.626,2159,1.558,2160,1.626,2161,1.626,2162,1.626,2163,2.563,2164,2.3,2165,1.626,2166,2.674,2167,3.264,2168,4.69,2169,3.947,2170,3.947,2171,4.362,2172,2.563,2173,2.563,2174,2.465,2175,2.674,2176,2.563,2177,2.563,2178,2.674,2179,2.674,2180,2.674,2181,3.947,2182,2.674,2183,2.674,2184,1.626,2185,1.626,2186,1.398,2187,1.626,2188,2.674,2189,1.626,2190,2.674,2191,4.179,2192,1.626,2193,1.626,2194,1.626,2195,1.626,2196,1.626,2197,1.626,2198,1.626,2199,1.626,2200,1.499,2201,3.406,2202,1.626,2203,1.626,2204,1.499,2205,1.626,2206,1.626,2207,1.626,2208,1.626,2209,1.626,2210,1.155,2211,2.563,2212,2.378,2213,2.674,2214,1.398,2215,2.103,2216,1.626]],["title/interfaces/BuildTransactionParams.html",[661,1.156,774,2.801]],["body/interfaces/BuildTransactionParams.html",[0,0.232,3,0.049,4,0.044,5,0.044,10,0.12,11,0.393,15,1.404,18,0.251,19,0.005,20,0.445,22,1.053,31,1.826,34,0.171,36,0.049,37,1.364,50,1.52,62,1.885,73,1.592,89,0.003,90,0.003,111,0.917,134,1.978,158,2.534,171,1.224,173,1.371,177,3.947,178,4.464,180,4.703,181,3.732,184,0.996,202,2.353,203,2.006,209,2.468,212,2.153,251,1.142,254,1.751,268,1.614,284,2.101,305,2.779,318,1.453,342,2.534,345,1.591,370,1.591,371,2.964,377,1.908,378,2.094,395,3.649,405,0.88,661,1.795,662,1.875,663,1.351,671,1.19,692,1.811,763,4.933,764,3.787,765,3.787,766,6.271,767,5.921,768,5.453,769,4.703,770,3.228,771,1.908,772,3.265,773,3.42,774,4.348,775,3.615,776,2.917,777,2.489,778,2.272,779,3.867,780,2.43,781,2.43,782,3.277,783,3.587,784,3.587,785,2.43,786,5.953,787,3.277,788,5.953,789,3.277,790,3.787,791,6.722,792,3.787,793,4.703,794,3.787,795,3.787,796,3.787,797,5.057,798,3.787,799,3.42,800,3.787,801,3.152,802,4.479,803,3.041,804,3.152,805,2.94,806,3.787,807,3.787,808,3.787,809,3.787,810,3.787,811,3.787,812,3.787,813,5.208,814,2.272,815,3.787,816,2.489,817,3.787,818,3.787,819,3.787,820,3.787,821,3.787,822,3.787,823,3.787,824,3.787,825,3.787,826,2.85,827,3.787,828,3.787,829,3.587,830,1.908,831,3.787,839,3.124]],["title/interfaces/BuildTransactionParams-1.html",[407,1.076,661,0.963,774,2.333]],["body/interfaces/BuildTransactionParams-1.html",[0,0.111,3,0.023,4,0.021,5,0.021,10,0.12,11,0.224,12,0.675,15,0.978,18,0.24,19,0.005,20,0.419,22,0.978,29,0.216,30,0.381,31,0.994,34,0.199,35,0.481,36,0.071,37,1.403,46,0.783,48,0.941,50,0.725,54,2.828,56,1.608,58,1.705,62,0.654,65,0.879,80,0.673,82,1.479,86,2.035,89,0.002,90,0.002,104,1.039,105,2.469,108,1.159,109,1.133,111,1.483,112,0.91,114,1.445,131,2.783,134,1.551,135,1.248,156,1.812,171,2.385,173,2.152,174,1.283,177,2.572,179,0.944,184,0.475,191,2.37,194,1.283,201,0.736,202,2.351,203,1.935,209,2.782,210,1.61,212,1.357,241,0.796,244,1.479,246,1.329,248,0.927,251,1.14,254,0.835,264,0.635,266,1.839,267,1.199,268,0.92,271,1.58,273,1.744,281,2.131,284,1.881,286,2.053,288,1.084,294,1.319,297,1.159,303,1.674,305,2.383,307,1.58,312,1.319,318,1.139,322,1.187,342,1.839,345,1.589,347,2.613,358,3.999,362,2.364,370,1.589,371,2.065,377,2.206,399,1.781,400,3.055,403,2.316,405,1.018,407,2.004,408,0.895,464,1.319,493,1.039,582,1.403,583,1.287,637,3.035,645,1.45,650,1.283,651,1.187,661,1.568,662,0.894,663,0.644,665,1.939,666,1.217,667,1.319,669,1.319,670,1.319,671,1.869,677,2.62,680,1.403,686,1.217,687,1.217,688,1.217,689,1.217,692,2.629,694,2.935,698,1.503,717,1.249,723,0.999,770,2.05,771,0.91,772,1.862,774,2.762,775,3.099,776,2.785,777,1.187,778,1.781,779,2.519,780,1.905,781,1.159,814,1.084,826,1.359,830,2.206,856,1.862,926,1.45,1017,2.375,1070,1.287,1133,1.45,1137,1.871,1156,2.471,1168,1.674,1183,1.45,1266,2.745,1317,1.217,1362,1.039,1408,1.45,1430,3.694,1431,4.413,1455,1.359,1493,2.547,1549,3.613,1554,1.187,1589,1.403,1592,1.249,1605,1.107,1606,1.084,1611,1.217,1617,3.104,1624,1.159,1635,2.053,1651,2,1653,2.426,1654,1.249,1665,1.563,1666,1.563,1667,1.403,1688,1.249,1691,1.708,1707,1.45,1726,1.563,1730,1.563,1732,3.271,1735,3.035,1736,2.966,1741,2.169,1742,3.033,1744,1.503,1746,1.45,1748,1.403,1804,2,1821,2.569,1831,1.45,1842,2.234,1845,1.403,1864,1.45,1867,1.283,1873,2.484,1875,1.359,1882,1.217,1889,1.217,1892,2.169,1893,1.319,1897,1.45,1926,1.319,1927,1.319,1931,2.685,1935,3.11,1960,2.37,2015,1.249,2033,1.187,2036,2.95,2041,1.283,2042,3.789,2043,1.403,2044,1.631,2045,2.306,2046,1.45,2047,1.45,2048,1.319,2049,1.319,2050,1.359,2051,3.027,2052,1.45,2053,2.471,2054,1.503,2055,1.631,2056,2.471,2057,1.631,2058,1.563,2059,1.631,2060,1.45,2061,1.359,2062,1.503,2063,1.45,2064,2.384,2065,1.403,2066,1.359,2067,1.359,2068,1.403,2069,1.403,2070,1.403,2071,1.403,2072,1.631,2073,1.563,2074,2.569,2075,1.563,2076,1.631,2077,2.681,2078,1.563,2079,1.631,2080,3.271,2081,1.563,2082,1.563,2083,1.563,2084,1.563,2085,1.563,2086,2.681,2087,1.45,2088,1.631,2089,1.45,2090,1.45,2091,3.271,2092,1.563,2093,1.563,2094,1.563,2095,1.563,2096,2.569,2097,1.563,2098,1.631,2099,1.631,2100,2.569,2101,4.697,2102,2.681,2103,3.414,2104,1.631,2105,1.631,2106,1.631,2107,1.631,2108,1.503,2109,3.703,2110,2.935,2111,2.306,2112,2.306,2113,2.935,2114,2.569,2115,2.569,2116,2.471,2117,2,2118,2.234,2119,2.681,2120,2.384,2121,2.384,2122,2.471,2123,3.4,2124,2.613,2125,2.935,2126,1.631,2127,1.283,2128,1.45,2129,2.109,2130,1.563,2131,1.563,2132,1.503,2133,1.45,2134,1.319,2135,1.319,2136,1.359,2137,1.359,2138,1.359,2139,1.319,2140,1.563,2141,4.369,2142,2.681,2143,1.631,2144,1.159,2145,1.359,2146,1.631,2147,3.884,2148,1.631,2149,3.414,2150,1.403,2151,1.563,2152,1.631,2153,1.563,2154,1.631,2155,1.631,2156,1.563,2157,1.563,2158,1.631,2159,1.563,2160,1.631,2161,1.631,2162,1.631,2163,2.569,2164,2.306,2165,1.631,2166,2.681,2167,3.271,2168,4.697,2169,3.954,2170,3.954,2171,4.369,2172,2.569,2173,2.569,2174,2.471,2175,2.681,2176,2.569,2177,2.569,2178,2.681,2179,2.681,2180,2.681,2181,3.954,2182,2.681,2183,2.681,2184,1.631,2185,1.631,2186,1.403,2187,1.631,2188,2.681,2189,1.631,2190,2.681,2191,4.186,2192,1.631,2193,1.631,2194,1.631,2195,1.631,2196,1.631,2197,1.631,2198,1.631,2199,1.631,2200,1.503,2201,3.414,2202,1.631,2203,1.631,2204,1.503,2205,1.631,2206,1.631,2207,1.631,2208,1.631,2209,1.631,2210,1.159,2211,2.569,2212,2.384,2213,2.681,2214,1.403,2215,2.109,2216,1.631]],["title/interfaces/BurnLpTokensParams.html",[661,1.156,2217,3.632]],["body/interfaces/BurnLpTokensParams.html",[0,0.279,3,0.059,4,0.052,5,0.052,10,0.144,11,0.445,18,0.213,19,0.005,20,0.451,28,1.435,34,0.131,36,0.089,41,1.773,48,1.133,56,2.826,60,1.649,89,0.004,90,0.004,105,3.32,108,3.779,109,4.888,111,1.103,134,2.378,156,1.884,164,4.901,171,1.471,173,1.648,188,1.281,259,2.498,267,1.247,318,2.26,371,2.513,376,3.147,377,2.294,385,4.489,386,3.535,387,4.071,396,3.535,401,2.83,408,1.775,583,1.974,661,1.968,662,2.254,665,3.54,671,2.169,674,4.111,1266,2.854,1335,4.65,1794,6.233,1936,3.325,2014,3.147,2144,2.921,2210,5.027,2217,5.578,2218,3.655,2219,4.553,2220,4.553,2221,5.318,2222,6.902,2223,5.578,2224,3.939,2225,4.553,2226,4.553,2227,4.312,2228,4.553,2229,3.789,2230,4.312,2231,4.312,2232,4.111]],["title/classes/ChangeAssetsOwnerType1743678745097.html",[0,0.235,2233,4.43]],["body/classes/ChangeAssetsOwnerType1743678745097.html",[0,0.224,2,0.728,3,0.047,4,0.042,5,0.042,8,2.07,9,2.454,10,0.185,11,0.384,12,0.78,13,1.214,14,2.251,15,1.389,16,2.135,17,2.135,18,0.211,19,0.005,20,0.207,21,0.947,22,0.739,23,0.493,25,2.135,26,3.066,28,1.057,29,0.607,30,1.071,31,1.66,32,2.135,34,0.105,35,0.974,36,0.047,37,1.832,38,3.353,39,3.349,40,3.066,41,2.974,42,3.259,43,2.737,44,2.737,45,3.104,49,2.291,50,2.828,52,3.359,53,4.253,73,2.154,74,3.237,75,3.069,77,3.007,78,3.007,79,3.896,80,2.625,81,2.496,82,2.154,83,3.153,84,2.168,85,2.203,86,2.341,87,2.694,88,2.192,89,0.003,90,0.003,113,2.884,127,2.933,251,2.368,358,3.115,360,5.081,367,5.992,464,3.711,493,2.923,2233,7.293,2234,8.144,2235,4.713,2236,4.713,2237,4.713,2238,4.713,2239,4.221,2240,5.869,2241,7.293,2242,6.554,2243,4.221]],["title/classes/ChangeIntervalToBigint1742311345554.html",[0,0.235,2244,4.43]],["body/classes/ChangeIntervalToBigint1742311345554.html",[0,0.255,2,0.83,3,0.054,4,0.048,5,0.048,8,2.263,9,2.626,10,0.132,11,0.419,12,0.816,13,1.327,14,2.341,15,1.444,16,2.334,17,2.334,18,0.226,19,0.005,20,0.236,21,1.08,22,0.842,23,0.528,25,2.334,26,3.152,28,1.155,29,0.664,30,1.171,31,1.753,32,2.334,34,0.12,35,1.11,36,0.054,37,1.82,38,3.348,39,3.335,40,3.162,41,2.951,42,3.162,43,2.89,44,2.89,45,2.937,73,2.038,74,2.89,75,3.087,77,2.845,78,2.845,80,2.484,81,2.635,82,2.038,83,2.845,84,2.371,85,2.408,86,1.846,87,2.371,89,0.004,90,0.004,113,2.824,135,3.233,627,7.701,628,6.665,683,6.665,2244,7.701,2245,8.6,2246,5.373,2247,5.373,2248,5.373,2249,5.373,2250,6.667,2251,7.109]],["title/entities/Claim.html",[422,2.162,486,2.978]],["body/entities/Claim.html",[0,0.323,3,0.05,4,0.044,5,0.044,10,0.122,11,0.397,12,0.885,18,0.286,19,0.005,20,0.431,21,1.886,23,0.63,34,0.185,35,1.025,36,0.05,48,1.606,54,2.629,55,3.847,56,2.37,58,2.05,59,3.254,60,1.541,61,6.081,62,2.336,63,4.226,64,4.043,69,4.148,70,4.986,81,1.521,89,0.003,90,0.003,113,2.917,151,1.883,210,2.086,246,3.341,254,1.779,260,2.728,261,1.334,267,1.911,281,1.694,284,1.966,342,2.561,405,1.223,408,1.945,422,2.169,424,2.659,427,5.796,428,3.474,429,5.181,430,5.37,432,2.987,434,3.474,438,4.986,439,3.847,442,6.302,443,5.993,445,4.381,446,4.381,447,4.226,448,4.555,449,2.987,451,2.732,452,2.659,453,3.328,454,3.328,455,4.384,456,3.328,457,4.381,486,4.087,649,2.81,958,5.264,959,5.614,960,5.614,961,5.614,991,4.102,2252,4.962,2253,4.962,2254,5.614,2255,4.962,2256,4.962,2257,4.962,2258,4.962,2259,4.102,2260,4.962,2261,4.962,2262,4.962,2263,5.684,2264,4.962,2265,4.962,2266,4.962,2267,4.962,2268,4.962,2269,4.962,2270,4.962,2271,4.444,2272,6.791,2273,4.962,2274,3.847,2275,4.962,2276,4.444,2277,3.847]],["title/classes/ClaimResponseDto.html",[0,0.235,2278,4.09]],["body/classes/ClaimResponseDto.html",[0,0.379,2,0.978,3,0.063,4,0.057,5,0.057,10,0.155,11,0.466,18,0.285,19,0.005,20,0.447,23,0.653,29,0.893,34,0.177,36,0.063,48,1.682,54,2.754,56,2.482,60,1.615,62,2.447,89,0.004,90,0.004,151,1.952,260,2.91,261,1.701,281,2.978,342,3.005,405,1.435,451,4.8,452,4.673,2263,6.402,2274,4.905,2278,6.586,2279,10.05,2280,5.666,2281,6.328,2282,6.328,2283,6.328,2284,6.328,2285,6.328,2286,6.328,2287,6.328,2288,6.328,2289,6.328]],["title/controllers/ClaimsController.html",[141,1.898,2290,4.09]],["body/controllers/ClaimsController.html",[0,0.258,3,0.054,4,0.048,5,0.048,10,0.133,12,0.786,13,1.334,15,1.558,18,0.272,19,0.005,20,0.421,23,0.565,28,1.391,29,0.856,30,1.51,34,0.21,36,0.054,37,0.963,47,6.965,48,1.39,54,2.726,60,1.334,89,0.004,90,0.004,141,2.079,143,2.044,146,2.904,151,1.688,154,2.904,158,3.254,166,4.337,171,1.805,178,4.384,179,2.194,181,2.634,182,5.56,183,3.068,184,1.104,185,4.337,186,4.649,187,2.83,188,1.182,189,2.904,190,3.373,203,1.416,205,3.425,206,4.584,209,1.543,210,2.278,211,3.496,212,2.073,246,2.994,254,1.943,267,1.15,281,1.85,283,4.649,378,2.322,486,5.194,651,3.671,785,2.695,839,4.013,850,4.337,855,3.635,862,3.496,863,3.496,1435,3.793,1493,3.763,1611,3.763,1624,3.584,1867,2.983,2071,5.194,2278,5.957,2290,5.957,2291,5.419,2292,7.206,2293,7.206,2294,7.206,2295,7.206,2296,5.419,2297,6.69,2298,6.453,2299,5.419,2300,5.419,2301,5.419,2302,5.419,2303,5.419,2304,5.419,2305,5.419,2306,5.419,2307,5.419,2308,7.206,2309,5.419,2310,5.944,2311,4.853,2312,5.419,2313,4.853,2314,4.201,2315,4.853,2316,5.419,2317,5.419,2318,4.853,2319,5.419,2320,5.419,2321,5.419,2322,5.419,2323,5.419,2324,5.419,2325,5.419,2326,5.419,2327,5.419,2328,5.419,2329,5.419]],["title/modules/ClaimsModule.html",[221,1.689,875,3.632]],["body/modules/ClaimsModule.html",[0,0.314,3,0.066,4,0.059,5,0.059,19,0.005,34,0.225,36,0.066,89,0.004,90,0.004,143,3.088,171,2.051,184,1.347,193,3.142,221,3.038,223,3.01,224,3.01,225,3.142,226,3.142,227,3.075,228,4.228,229,4.228,234,5.679,235,3.892,236,3.142,237,3.01,239,3.98,240,3.368,241,2.258,242,4.435,246,2.841,247,3.543,486,3.98,875,7.47,1122,3.98,1441,6.348,1442,3.98,1742,4.732,2290,7.354,2310,7.503,2311,5.921,2330,5.921,2331,5.921,2332,6.612,2333,5.921,2334,6.612,2335,6.348,2336,5.466,2337,6.612,2338,5.921,2339,6.612]],["title/injectables/ClaimsService.html",[268,1.189,2310,3.632]],["body/injectables/ClaimsService.html",[0,0.133,3,0.028,4,0.025,5,0.025,10,0.068,11,0.259,12,0.696,13,0.82,15,1.455,18,0.229,19,0.005,20,0.421,21,0.56,22,0.437,23,0.534,28,1.316,29,0.791,30,1.334,31,1.891,34,0.201,35,0.576,36,0.028,37,1.587,46,2.3,47,5.647,48,1.647,54,2.161,56,0.794,59,1.172,60,1.161,62,0.782,64,1.456,82,1.726,89,0.002,90,0.002,114,1.67,129,2.256,157,1.735,171,2.208,173,2.142,174,2.437,175,1.456,179,2.771,182,4.384,184,0.568,191,3.711,193,1.325,194,1.535,201,1.399,202,2.662,203,2.185,209,2.542,210,2.315,212,1.904,241,0.952,246,3.284,247,1.494,267,1.332,268,1.064,269,1.172,271,2.587,273,3.808,274,4.553,281,3.01,283,4.415,284,2.168,286,3.361,287,1.678,288,1.296,293,2.856,294,1.579,298,1.952,301,1.799,304,2.305,305,2.663,307,3.15,338,3.251,345,1.442,370,1.442,371,2.264,376,2.373,377,1.089,378,1.897,381,2.305,400,1.15,422,2.742,424,2.373,452,1.494,455,1.579,486,6.041,533,1.678,649,1.579,666,1.456,667,1.579,671,1.079,672,2.497,686,1.456,687,1.456,688,1.456,689,1.456,747,1.799,760,2.97,770,3.21,771,1.089,775,1.218,830,1.089,1017,1.861,1070,1.488,1122,1.678,1137,1.699,1154,1.952,1334,3.66,1335,3.276,1375,3.965,1554,2.256,1589,1.678,1617,4.06,1624,2.739,1626,2.047,1638,2.583,1649,3.66,1653,1.387,1691,1.975,1742,3.711,1744,1.799,1842,1.626,1882,1.456,1944,2.583,1960,4.69,2014,3.361,2015,1.494,2048,1.579,2049,1.579,2061,3.213,2066,1.626,2067,1.626,2116,1.799,2117,1.456,2118,1.626,2132,1.799,2134,3.875,2135,1.579,2136,1.626,2137,1.626,2138,1.626,2139,1.579,2140,1.87,2145,1.626,2173,1.87,2174,5.112,2191,2.97,2263,2.047,2274,2.161,2276,2.497,2277,4.863,2297,4.863,2298,5.617,2310,3.251,2314,2.161,2315,2.497,2335,3.433,2336,2.305,2338,2.497,2340,2.788,2341,4.428,2342,4.428,2343,4.428,2344,4.428,2345,5.508,2346,4.428,2347,2.305,2348,5.508,2349,4.428,2350,3.433,2351,4.428,2352,2.788,2353,4.428,2354,4.428,2355,7.923,2356,5.508,2357,3.66,2358,2.756,2359,6.273,2360,3.965,2361,4.428,2362,4.428,2363,3.66,2364,2.97,2365,4.428,2366,7.636,2367,4.428,2368,6.313,2369,2.788,2370,4.428,2371,4.428,2372,4.428,2373,2.788,2374,4.428,2375,4.428,2376,4.428,2377,4.428,2378,2.788,2379,2.788,2380,6.273,2381,2.788,2382,4.428,2383,2.788,2384,3.965,2385,4.428,2386,4.428,2387,4.428,2388,2.788,2389,2.788,2390,2.161,2391,2.788,2392,2.788,2393,2.788,2394,2.497,2395,2.788,2396,2.497,2397,2.788,2398,2.788,2399,4.428,2400,2.788,2401,5.508,2402,2.497,2403,4.428,2404,6.273,2405,2.497,2406,2.788,2407,4.428,2408,2.788,2409,4.428,2410,2.788,2411,2.497,2412,2.788,2413,6.273,2414,6.273,2415,4.428,2416,4.428,2417,6.273,2418,2.788,2419,2.788,2420,2.305,2421,2.788,2422,2.161,2423,4.428,2424,5.508,2425,2.161,2426,2.497,2427,6.843,2428,2.497,2429,2.788,2430,2.497,2431,2.788,2432,2.788,2433,2.788,2434,2.788,2435,4.428,2436,3.66,2437,2.305,2438,2.788,2439,4.932,2440,4.428,2441,2.788,2442,4.428,2443,2.788,2444,2.788,2445,2.788,2446,2.788]],["title/classes/ContributeReq.html",[0,0.235,2447,3.318]],["body/classes/ContributeReq.html",[0,0.439,2,0.836,3,0.054,4,0.048,5,0.048,10,0.133,11,0.421,12,0.841,18,0.264,19,0.005,20,0.437,22,1.268,23,0.354,34,0.18,36,0.072,48,1.044,52,2.233,58,1.634,60,1.794,62,2.02,89,0.004,90,0.004,102,3.422,144,3.278,151,1.059,188,1.181,212,1.944,244,1.917,251,2.158,252,6.287,253,3.974,254,1.94,255,3.581,256,4.847,257,3.368,259,2.818,260,2.591,261,1.455,262,3.278,263,3.211,264,1.476,266,2.041,267,1.529,303,3.147,342,2.041,345,1.763,362,1.991,370,1.763,390,3.257,391,2.007,392,2.459,398,3.086,399,2.517,400,2.233,401,2.899,402,3.258,403,2.174,405,0.975,407,1.881,677,2.459,757,3.974,760,3.63,937,3.492,1013,3.492,1017,2.275,1019,3.789,1028,2.63,1062,3.789,1063,3.63,1064,4.226,1065,3.789,1066,3.789,1067,4.83,1068,6.464,1069,4.87,1545,3.63,1691,2.414,1948,3.157,2027,4.099,2029,3.157,2447,4.83,2448,4.196,2449,5.412,2450,5.287,2451,4.334,2452,6.333,2453,6.273,2454,4.196,2455,4.196,2456,4.196,2457,6.687,2458,6.687,2459,6.273,2460,5.664,2461,4.196,2462,4.196,2463,4.196]],["title/classes/ContributionAsset.html",[0,0.235,252,3.463]],["body/classes/ContributionAsset.html",[0,0.43,2,0.777,3,0.05,4,0.045,5,0.045,10,0.123,11,0.401,12,0.842,18,0.273,19,0.005,20,0.44,22,1.222,23,0.548,29,0.635,34,0.173,36,0.069,48,1.322,52,2.827,58,1.519,60,1.743,62,2.458,89,0.004,90,0.004,102,3.705,144,3.988,151,1.637,188,1.098,212,1.873,244,2.142,251,1.956,252,6.132,255,2.502,259,2.79,260,2.536,261,1.352,262,3.12,263,3.057,264,1.371,266,1.897,267,1.655,303,2.996,342,2.585,345,1.638,362,2.423,370,1.638,390,3.208,391,1.865,392,2.34,398,3.588,399,3.187,400,2.827,401,3.164,402,3.028,403,2.527,405,1.235,407,1.791,677,2.859,757,3.693,760,4.597,937,3.245,1013,3.245,1017,2.881,1019,4.798,1028,2.445,1062,3.521,1063,3.374,1064,4.071,1065,3.521,1066,3.521,1067,4.597,1068,6.327,1069,4.693,1078,3.1,1545,3.374,1691,3.057,1948,3.998,2027,3.979,2029,2.934,2447,3.374,2448,3.9,2450,5.032,2451,4.125,2452,6.147,2453,6.044,2454,5.314,2455,3.9,2456,3.9,2457,6.49,2458,6.49,2459,6.044,2460,5.458,2461,3.9,2462,3.9,2463,3.9,2464,5.03,2465,5.03,2466,5.03,2467,5.03,2468,5.03,2469,5.03,2470,5.03,2471,5.03,2472,5.03]],["title/controllers/ContributionController.html",[141,1.898,2473,4.09]],["body/controllers/ContributionController.html",[0,0.288,3,0.061,4,0.054,5,0.054,10,0.149,12,0.705,13,1.434,15,1.492,18,0.217,19,0.005,20,0.419,23,0.507,28,1.248,29,0.718,30,1.472,34,0.212,36,0.061,54,2.446,60,1.667,89,0.004,90,0.004,102,4.423,111,1.136,112,3.335,131,4.246,141,2.322,143,2.282,144,3.888,146,3.242,151,1.515,152,5.418,153,5.418,154,4.149,156,2.985,157,3.765,158,2.92,161,5.418,162,5.418,163,6.401,164,4.996,166,5.14,178,3.601,179,2.45,181,2.94,182,3.642,183,3.426,184,1.233,185,5.14,186,5.51,187,3.159,188,1.32,189,3.242,190,3.765,191,4.151,192,3.159,193,2.875,194,3.33,201,1.911,202,2.373,203,2.023,204,5.418,205,3.68,206,4.385,208,4.69,209,1.722,210,3.255,211,3.903,212,1.86,218,5.418,2447,6.574,2473,6.401,2474,6.05,2475,6.934,2476,6.05,2477,6.05,2478,5.418,2479,6.05,2480,5.978,2481,5.418,2482,5.418,2483,6.05,2484,6.05,2485,6.05,2486,6.05,2487,6.05,2488,6.05]],["title/modules/ContributionModule.html",[221,1.689,876,3.463]],["body/modules/ContributionModule.html",[0,0.314,3,0.066,4,0.059,5,0.059,19,0.005,34,0.225,36,0.066,89,0.004,90,0.004,111,1.239,143,3.085,144,3.006,171,2.049,184,1.345,192,4.272,193,3.138,221,3.036,223,3.006,224,3.006,225,3.138,226,3.138,227,3.07,228,4.225,229,4.225,234,5.677,235,3.888,236,3.138,237,3.006,239,3.976,240,3.363,241,2.254,242,4.428,244,1.938,245,3.538,246,2.839,247,3.538,248,2.625,249,4.428,874,6.058,876,7.12,906,4.847,1122,3.974,2473,7.349,2480,7.153,2481,5.912,2489,5.912,2490,6.602,2491,5.912,2492,5.912,2493,6.602,2494,6.602]],["title/injectables/ContributionService.html",[268,1.189,2480,3.463]],["body/injectables/ContributionService.html",[0,0.155,3,0.033,4,0.029,5,0.029,10,0.08,11,0.293,12,0.622,13,0.927,15,1.343,18,0.227,19,0.005,20,0.41,21,0.656,22,0.511,23,0.482,28,1.101,29,0.633,30,1.117,31,1.02,34,0.205,35,0.674,36,0.033,37,1.641,46,1.096,48,1.653,50,1.557,54,2.157,58,2.062,59,1.371,60,0.604,62,0.915,82,1.186,86,1.289,89,0.003,90,0.003,102,2.379,111,1.715,112,3.7,114,1.23,129,2.55,131,3.468,135,1.062,144,3.54,149,3.88,156,2.748,158,1.888,171,2.373,173,0.915,174,1.795,177,2.279,179,1.321,184,0.665,191,3.935,192,2.614,193,1.55,194,1.795,201,1.581,202,2.68,203,2.238,209,2.677,210,3.097,212,1.868,237,1.485,241,1.114,244,1.443,245,1.748,246,2.37,247,1.748,248,1.297,251,2.002,266,1.23,267,1.293,268,1.202,269,1.371,271,2.818,273,4.16,275,4.721,277,3.929,280,4.482,281,2.655,283,3.229,284,2.26,286,1.748,287,3.012,288,1.517,289,2.104,290,2.188,291,2.188,292,2.104,293,2.104,294,1.847,295,2.03,296,2.104,297,1.622,298,2.283,299,2.283,300,3.229,301,3.929,303,2.188,305,2.939,306,4.137,307,2.818,308,2.283,310,4.137,311,2.104,312,1.847,319,2.921,320,2.921,321,5.41,322,2.55,323,2.921,324,2.696,325,2.921,327,4.482,329,2.921,330,2.696,331,2.528,333,2.921,335,2.696,343,2.696,345,1.984,346,2.188,347,2.682,348,2.921,349,4.482,351,4.471,352,3.88,354,2.921,355,2.921,358,1.55,359,2.921,360,2.528,361,2.921,362,0.902,363,2.921,364,2.395,365,2.188,367,2.283,368,2.921,369,2.696,370,1.984,371,2.438,374,4.471,376,2.682,377,1.955,378,1.398,379,2.921,380,2.921,381,2.696,382,2.921,408,0.762,464,1.847,533,3.012,573,1.963,639,1.661,651,3.48,671,1.219,747,2.104,748,2.696,760,3.357,926,4.84,1017,2.104,1122,1.963,1160,2.696,1165,2.696,1182,2.528,1228,2.528,1334,2.696,1362,1.455,1493,3.18,1554,2.55,1598,1.963,1617,3.397,1641,4.482,1741,3.868,1746,2.03,1749,2.528,1801,2.921,1831,2.03,1845,1.963,1846,4.471,1889,1.703,1944,1.902,1959,3.229,1960,2.432,2050,2.919,2062,3.929,2108,2.104,2150,1.963,2153,2.188,2156,3.357,2167,2.188,2347,2.696,2350,3.88,2390,2.528,2411,2.921,2436,2.696,2447,5.431,2480,3.504,2482,2.921,2495,3.262,2496,5.005,2497,5.034,2498,5.005,2499,5.005,2500,3.262,2501,5.005,2502,3.262,2503,5.005,2504,5.005,2505,5.005,2506,5.454,2507,3.262,2508,5.005,2509,2.696,2510,6.09,2511,5.005,2512,3.262,2513,5.005,2514,2.395,2515,3.262,2516,3.262,2517,3.262,2518,3.262,2519,3.262,2520,6.831,2521,6.09,2522,6.09,2523,2.921,2524,3.262,2525,3.262,2526,3.262,2527,2.921,2528,4.137,2529,3.262,2530,2.696,2531,3.262,2532,5.005,2533,3.262,2534,3.262,2535,5.005,2536,3.262,2537,3.262,2538,3.262,2539,3.262,2540,3.262,2541,2.528,2542,3.262,2543,3.262,2544,3.262,2545,3.262,2546,2.528,2547,3.262,2548,3.262,2549,5.005,2550,2.921,2551,3.262,2552,5.005]],["title/classes/ContributorWhitelist.html",[0,0.235,413,3.318]],["body/classes/ContributorWhitelist.html",[0,0.459,2,0.921,3,0.06,4,0.053,5,0.053,10,0.146,11,0.449,12,0.699,18,0.215,19,0.005,20,0.443,23,0.502,28,0.961,29,0.552,34,0.189,36,0.093,48,1.48,52,2.459,73,1.412,89,0.004,90,0.004,151,1.166,188,1.3,201,1.883,244,1.412,251,1.792,259,2.841,260,2.841,261,1.602,264,1.625,318,2.281,383,3.998,384,4.376,385,2.833,386,5.576,387,5.37,389,4.376,390,3.345,391,3.144,392,2.896,393,5.631,394,3.845,395,3.645,396,5.389,397,4.172,398,2.554,399,2.772,400,2.459,401,2.85,402,3.587,403,2.703,404,3.845,405,1.613,406,4.773,407,1.557,408,1.792,409,3.998,410,4.172,411,3.194,412,3.998,413,5.144,414,3.998,415,4.172,416,3.845,2553,7.67]],["title/entities/ContributorWhitelistEntity.html",[422,2.162,2554,3.632]],["body/entities/ContributorWhitelistEntity.html",[0,0.368,3,0.06,4,0.054,5,0.054,10,0.148,11,0.453,12,0.847,14,2.168,18,0.275,19,0.005,20,0.431,21,1.809,23,0.609,34,0.19,35,1.248,36,0.06,48,1.647,64,4.457,69,4.573,81,1.851,86,1.993,89,0.004,90,0.004,111,1.873,113,2.758,151,1.819,260,2.525,261,1.624,284,1.965,385,2.871,408,1.808,422,3.381,424,3.238,426,6.266,427,5.137,428,4.229,429,5.601,430,5.805,432,4.657,434,4.229,436,4.684,438,5.68,439,4.684,441,5.411,442,5.416,443,4.815,445,4.991,446,4.991,447,4.815,448,5.189,449,3.637,450,3.898,451,3.326,452,3.238,453,4.052,454,4.052,455,4.381,456,4.052,457,3.898,573,3.637,2554,5.68,2555,6.042,2556,6.042,2557,6.042,2558,6.042,2559,7.737,2560,6.042,2561,6.042]],["title/classes/CreateAssetDto.html",[0,0.235,1036,3.835]],["body/classes/CreateAssetDto.html",[0,0.415,2,0.863,3,0.056,4,0.05,5,0.05,10,0.137,11,0.43,12,0.509,18,0.284,19,0.005,20,0.433,23,0.631,29,0.863,34,0.194,36,0.074,60,1.361,62,2.305,89,0.004,90,0.004,151,1.885,156,2.635,188,1.218,244,1.323,259,2.83,261,1.501,263,3.278,264,1.522,267,1.185,289,5.853,292,3.602,318,2.597,342,2.106,362,2.272,390,3.239,391,3.237,392,3.098,401,1.876,405,1.678,408,2.219,663,2.696,974,2.916,997,5.301,998,6.37,999,6.37,1010,7.701,1011,8.731,1012,5,1013,4.742,1014,5,1015,5,1017,2.347,1018,4.099,1019,3.908,1021,5,1023,6.582,1027,3.161,1028,3.572,1029,5,1030,5,1031,5,1032,5,1033,5,1034,5,1035,5,1036,5.698,1037,5,1038,6.37,2562,5.584,2563,7.35,2564,5.584,2565,5.584,2566,5.584,2567,5.584,2568,5.584,2569,5.584,2570,5.584,2571,5.584,2572,5.584,2573,5.584]],["title/classes/CreateClaimDto.html",[0,0.235,2368,4.09]],["body/classes/CreateClaimDto.html",[0,0.4,2,1.07,3,0.069,4,0.062,5,0.062,10,0.17,11,0.493,18,0.282,19,0.005,20,0.433,23,0.634,29,0.876,34,0.154,36,0.069,56,2.584,60,1.681,62,2.547,89,0.004,90,0.004,151,1.894,210,3.816,264,1.887,342,3.177,390,3.309,391,3.366,392,3.226,405,1.517,2368,6.963,2574,9.845,2575,6.923,2576,6.923,2577,6.923,2578,6.923,2579,6.923,2580,6.923,2581,6.923]],["title/classes/CreatePoolDto.html",[0,0.235,2582,3.632]],["body/classes/CreatePoolDto.html",[0,0.399,2,0.903,3,0.058,4,0.052,5,0.052,10,0.143,11,0.443,12,0.532,18,0.265,19,0.005,20,0.415,21,1.522,23,0.618,29,0.702,34,0.168,36,0.076,48,1.621,56,2.155,58,2.286,60,1.821,89,0.004,90,0.004,151,1.845,188,1.275,244,1.384,259,2.783,264,1.593,267,1.24,303,3.309,318,2.252,390,3.094,391,3.114,392,2.585,398,2.504,403,1.764,405,1.513,407,1.978,408,1.769,583,2.544,671,1.844,677,1.995,793,5.3,1028,4.082,1078,3.75,1266,4.666,1842,4.416,1936,4.287,2364,5.078,2425,5.869,2582,5.558,2583,8.597,2584,5.232,2585,6.512,2586,7.522,2587,7.522,2588,6.944,2589,6.944,2590,7.61,2591,5.842,2592,5.842,2593,6.22,2594,6.259,2595,7.571,2596,5.842,2597,5.842,2598,7.61,2599,7.571,2600,5.842,2601,5.842,2602,5.869,2603,5.869,2604,5.842,2605,5.842,2606,6.78,2607,4.529]],["title/classes/CreateProposalReq.html",[0,0.235,2608,3.835]],["body/classes/CreateProposalReq.html",[0,0.359,2,0.898,3,0.058,4,0.052,5,0.052,10,0.143,11,0.441,18,0.278,19,0.005,20,0.414,23,0.602,29,0.699,34,0.168,36,0.076,60,1.835,62,2.578,89,0.004,90,0.004,144,4.288,151,1.798,157,3.617,188,1.268,244,2.101,259,2.642,262,3.435,264,1.584,266,2.192,267,1.602,318,2.244,342,2.845,390,2.98,392,2.576,401,3.331,408,1.763,974,4.375,996,4.505,1027,3.29,1078,3.654,1171,4.267,1792,8.23,1804,3.035,2027,3.982,2071,4.541,2608,5.849,2609,8.434,2610,5.204,2611,9.19,2612,6.757,2613,7.683,2614,8.868,2615,8.868,2616,7.545,2617,5.811,2618,5.811,2619,6.757,2620,5.811,2621,5.811,2622,6.237,2623,5.811,2624,5.811,2625,5.811,2626,5.811,2627,8.23,2628,5.811,2629,5.811,2630,6.757,2631,6.757,2632,6.757,2633,5.811,2634,5.811,2635,5.204,2636,5.811,2637,5.811]],["title/classes/DatabaseStruct1741879378411.html",[0,0.235,2638,4.43]],["body/classes/DatabaseStruct1741879378411.html",[0,0.137,2,0.445,3,0.029,4,0.026,5,0.026,8,1.434,9,1.832,10,0.138,11,0.266,12,0.73,13,0.841,14,1.964,15,1.158,16,1.479,17,1.479,18,0.27,19,0.005,20,0.127,21,1.969,22,0.451,23,0.368,25,1.479,26,2.686,28,0.732,29,0.421,30,0.742,31,1.301,32,1.479,34,0.064,35,0.595,36,0.029,37,1.825,38,2.897,39,3.267,41,2.644,42,3.324,45,3.266,46,2.838,48,1.736,49,4.568,50,3.141,51,5.677,52,3.821,53,4.796,54,0.909,58,1.928,60,0.841,62,1.274,63,2.827,64,3.857,65,3.624,66,4.469,67,6.446,68,6.297,69,4.143,70,3.334,72,5.677,73,2.227,74,2.943,75,2.766,77,2.897,78,2.897,79,3.754,80,2.529,81,1.957,82,2.075,83,3.129,86,2.124,87,2.113,88,4.307,89,0.002,90,0.002,104,1.284,111,0.54,125,4.13,127,4.812,128,2.114,130,1.857,131,1.284,132,2.5,135,2.852,136,2.015,202,0.882,244,0.682,251,1.624,322,1.466,337,1.857,357,2.114,358,1.368,362,0.796,367,2.015,395,1.368,407,1.186,426,2.114,464,1.63,500,5.423,503,3.846,511,5.447,530,2.38,625,1.857,626,2.578,643,4.13,649,1.63,671,1.106,939,2.232,940,2.38,941,2.38,942,2.38,943,2.578,1069,2.734,1198,2.38,1213,2.38,1214,2.38,1228,4.951,1356,1.931,1360,2.38,1581,2.114,1583,2.232,1585,2.232,1587,2.232,2239,2.578,2240,2.578,2241,4.067,2243,2.578,2250,2.232,2251,2.38,2638,5.719,2639,6.386,2640,2.879,2641,2.879,2642,2.879,2643,2.879,2644,2.879,2645,4.954,2646,2.879,2647,6.386,2648,2.38,2649,2.879,2650,5.037,2651,6.614,2652,2.879,2653,2.879,2654,2.879,2655,2.879,2656,5.719,2657,2.879,2658,5.625,2659,2.879,2660,5.625,2661,2.879,2662,2.879,2663,5.037,2664,2.578,2665,2.38,2666,2.38,2667,5.625,2668,2.879,2669,2.578,2670,5.037,2671,2.578,2672,4.65,2673,3.521,2674,3.334,2675,2.38,2676,5.037,2677,2.114,2678,2.38,2679,5.625,2680,2.879,2681,2.578,2682,2.578,2683,1.857,2684,2.38,2685,2.879,2686,2.578,2687,2.578,2688,2.578,2689,2.578,2690,2.879,2691,2.879,2692,2.578,2693,4.542,2694,2.879,2695,1.931,2696,2.578,2697,2.879,2698,2.879,2699,2.879,2700,2.879,2701,2.879,2702,4.542,2703,5.625,2704,5.037,2705,5.625,2706,2.879,2707,2.879,2708,2.578,2709,2.879,2710,2.879,2711,2.879,2712,2.879,2713,2.879,2714,2.879,2715,2.879,2716,4.542,2717,4.542,2718,4.542,2719,6.614,2720,4.542,2721,4.067,2722,4.542,2723,4.542,2724,4.542,2725,4.067,2726,4.542,2727,4.542]],["title/interfaces/Datum.html",[661,1.156,2051,2.651]],["body/interfaces/Datum.html",[3,0.051,4,0.045,5,0.045,10,0.125,11,0.404,18,0.276,19,0.005,20,0.452,29,0.779,36,0.093,89,0.004,90,0.004,102,2.415,104,2.266,111,0.954,131,2.266,158,2.603,244,1.204,303,3.675,358,3.996,362,2.431,405,1.857,573,3.059,583,2.826,625,3.279,661,1.832,662,1.95,663,1.405,692,1.884,723,2.178,839,3.21,1070,2.634,2051,4.711,2109,3.604,2124,5.057,2127,4.991,2129,3.8,2215,3.8,2358,3.163,2683,3.279,2695,3.409,2728,3.94,2729,6.95,2730,6.95,2731,3.94,2732,3.94,2733,5.068,2734,6.076,2735,4.201,2736,3.94,2737,6.076,2738,5.351,2739,4.201,2740,3.94,2741,3.94,2742,5.351,2743,4.832,2744,5.351,2745,4.201,2746,4.201,2747,3.94,2748,4.201,2749,3.94,2750,4.63,2751,4.201,2752,5.706,2753,5.351,2754,4.201,2755,4.201,2756,4.201,2757,4.201,2758,3.558,2759,3.558,2760,4.832,2761,5.885,2762,6.95,2763,6.95,2764,5.885,2765,4.832,2766,3.558,2767,3.558,2768,3.409,2769,3.558,2770,3.558,2771,3.558,2772,3.558,2773,3.409,2774,3.558,2775,3.409,2776,3.558,2777,3.558]],["title/interfaces/Datum1.html",[661,1.156,2750,3.318]],["body/interfaces/Datum1.html",[3,0.048,4,0.043,5,0.043,10,0.118,11,0.389,18,0.288,19,0.005,20,0.45,29,0.863,36,0.091,89,0.003,90,0.003,102,2.284,104,3.662,111,0.902,131,2.143,158,2.505,244,1.139,303,2.1,358,2.284,362,1.837,405,1.855,573,4.943,583,2.76,625,5.298,661,1.779,662,1.844,663,1.329,692,1.782,723,2.059,839,4.45,1070,1.615,2051,4.401,2109,3.469,2124,4.99,2127,4.191,2129,3.657,2215,3.657,2358,5.111,2683,5.298,2695,3.223,2728,3.726,2729,3.973,2730,3.973,2731,3.726,2732,3.726,2733,4.877,2734,5.902,2735,3.973,2736,3.726,2737,5.902,2738,5.15,2739,3.973,2740,3.726,2741,3.726,2742,5.15,2743,4.65,2744,5.15,2745,3.973,2746,3.973,2747,3.726,2748,3.973,2749,3.726,2750,5.106,2751,3.973,2752,5.491,2753,5.15,2754,3.973,2755,3.973,2756,3.973,2757,3.973,2758,5.749,2759,5.749,2760,4.65,2761,5.749,2762,6.789,2763,6.789,2764,5.749,2765,4.65,2766,5.749,2767,5.749,2768,3.223,2769,3.364,2770,3.364,2771,3.364,2772,5.749,2773,5.508,2774,3.364,2775,3.223,2776,3.364,2777,5.749]],["title/interfaces/DistributeLpTokensParams.html",[661,1.156,2231,3.632]],["body/interfaces/DistributeLpTokensParams.html",[0,0.279,3,0.059,4,0.052,5,0.052,10,0.144,11,0.445,18,0.213,19,0.005,20,0.451,28,1.435,34,0.131,36,0.089,41,2.293,48,1.133,56,2.826,60,1.649,89,0.004,90,0.004,105,2.567,108,3.779,109,4.888,111,1.103,134,2.378,156,1.884,164,4.901,171,1.471,173,1.648,188,1.281,259,2.498,267,1.247,318,2.26,371,2.513,376,3.147,377,2.294,385,4.489,386,3.535,387,4.071,396,3.535,401,2.83,408,1.775,583,1.974,661,1.968,662,2.254,665,3.54,671,2.169,674,4.111,1266,2.854,1335,4.65,1794,6.233,1936,3.325,2014,3.147,2144,2.921,2210,5.027,2217,4.312,2218,3.655,2219,4.553,2220,4.553,2221,4.111,2222,6.902,2223,4.312,2224,3.939,2225,4.553,2226,4.553,2227,4.312,2228,4.553,2229,3.789,2230,5.578,2231,5.578,2232,5.318]],["title/modules/DistributionModule.html",[221,1.689,877,3.463]],["body/modules/DistributionModule.html",[0,0.344,3,0.072,4,0.065,5,0.065,19,0.005,34,0.213,36,0.072,89,0.004,90,0.004,111,1.359,184,1.475,221,3.161,223,3.296,224,3.296,225,3.441,226,3.441,227,3.367,228,4.399,229,4.399,235,4.113,236,3.441,237,3.296,239,3.519,240,3.689,241,2.472,248,2.879,249,4.857,877,7.039,2778,6.484,2779,6.484,2780,6.484,2781,7.588,2782,7.241,2783,7.241]],["title/injectables/DistributionService.html",[268,1.189,2781,3.632]],["body/injectables/DistributionService.html",[0,0.184,3,0.039,4,0.034,5,0.034,10,0.095,12,0.78,13,1.052,15,1.299,18,0.26,19,0.005,20,0.25,22,0.89,23,0.561,28,1.381,29,0.794,30,1.355,31,1.515,34,0.165,35,0.797,36,0.039,37,1.009,48,1.096,56,1.099,58,1.165,60,0.715,89,0.003,90,0.003,111,1.608,156,2.658,184,0.787,201,1.794,202,2.897,203,1.008,209,2.912,212,1.991,241,1.318,248,1.535,268,1.365,269,1.623,273,3.385,288,1.795,297,1.92,405,1.86,407,1.008,768,4.336,839,3.457,958,4.404,1133,3.536,1266,3.613,1736,2.7,2122,3.665,2204,3.665,2523,5.087,2593,3.977,2768,3.811,2781,5.458,2784,3.86,2785,4.696,2786,5.681,2787,5.681,2788,5.681,2789,5.087,2790,5.681,2791,5.681,2792,4.171,2793,5.087,2794,5.681,2795,5.087,2796,5.681,2797,4.404,2798,5.681,2799,5.681,2800,5.681,2801,5.681,2802,5.681,2803,5.681,2804,5.681,2805,5.681,2806,5.681,2807,5.681,2808,5.681,2809,5.681,2810,3.191,2811,3.86,2812,5.681,2813,3.86,2814,5.681,2815,3.86,2816,5.681,2817,9.252,2818,3.86,2819,7.872,2820,5.681,2821,7.435,2822,8.568,2823,7.435,2824,3.86,2825,3.86,2826,5.681,2827,8.791,2828,9.36,2829,3.86,2830,5.681,2831,3.86,2832,3.86,2833,5.681,2834,3.86,2835,6.037,2836,6.037,2837,5.087,2838,5.681,2839,5.681,2840,5.681,2841,5.681,2842,6.658,2843,5.681,2844,7.924,2845,3.86,2846,3.86,2847,7.435,2848,7.435,2849,5.681,2850,5.681,2851,3.86,2852,6.741,2853,3.86,2854,5.681,2855,3.86,2856,5.681,2857,3.86,2858,3.86,2859,3.457,2860,6.658,2861,5.681,2862,5.681,2863,5.681,2864,6.741,2865,6.741,2866,3.86,2867,3.86,2868,5.681,2869,5.681,2870,5.681,2871,6.741,2872,6.741,2873,3.86,2874,6.741,2875,5.681,2876,6.741,2877,3.86,2878,5.681,2879,5.681,2880,5.681,2881,3.86,2882,3.86]],["title/injectables/DraftVaultsService.html",[268,1.189,2883,3.632]],["body/injectables/DraftVaultsService.html",[0,0.202,3,0.026,4,0.024,5,0.038,10,0.065,12,0.681,13,0.786,15,1.257,18,0.171,19,0.005,20,0.377,21,0.853,22,0.414,23,0.398,28,0.981,29,0.564,30,0.869,31,1.45,34,0.206,35,0.546,36,0.026,37,1.686,46,0.888,48,1.442,50,2.615,58,2.484,64,1.38,75,0.835,80,1.757,89,0.002,90,0.002,111,1.781,130,1.705,136,4.259,157,1.645,182,1.591,184,0.539,201,1.34,202,2.521,203,2.095,209,2.714,210,3.534,212,1.867,241,0.902,246,0.917,247,1.416,248,1.051,251,0.618,254,3.294,261,0.71,267,0.561,268,1.019,269,1.111,273,4.36,284,1.807,287,1.591,288,1.229,295,1.645,296,1.705,297,1.314,298,1.85,301,3.925,302,2.97,303,3.505,305,1.786,307,1.09,321,3.903,322,1.346,345,0.861,351,1.94,352,3.289,358,1.256,370,0.861,371,0.874,375,2.185,385,1.256,395,1.256,405,1.282,407,1.389,411,2.273,423,1.94,424,1.416,426,3.115,493,1.179,531,2.049,533,1.591,573,1.591,619,4.394,747,1.705,1064,2.776,1069,2.554,1133,2.641,1137,2.04,1140,3.668,1141,5.233,1153,2.185,1156,2.737,1164,3.507,1180,2.475,1183,1.645,1184,2.049,1185,2.049,1187,2.185,1188,2.367,1190,2.185,1211,1.94,1213,2.185,1214,2.185,1228,3.289,1297,2.049,1298,2.185,1399,5.014,1430,1.455,1431,1.645,1444,3.445,1445,1.705,1493,1.38,1499,2.185,1581,4.467,1832,3.115,2186,4.282,2313,2.367,2314,2.049,2451,2.554,2497,4.394,2530,2.185,2546,2.049,2554,1.94,2619,2.367,2645,2.846,2810,2.185,2883,3.115,2884,6.663,2885,2.643,2886,4.243,2887,4.76,2888,4.243,2889,4.76,2890,4.76,2891,5.315,2892,5.315,2893,5.315,2894,5.315,2895,2.643,2896,4.243,2897,2.643,2898,2.643,2899,5.449,2900,5.03,2901,6.425,2902,2.643,2903,4.76,2904,4.243,2905,5.449,2906,2.643,2907,2.367,2908,2.367,2909,2.367,2910,2.185,2911,2.643,2912,2.367,2913,2.185,2914,2.643,2915,2.185,2916,2.185,2917,2.185,2918,1.645,2919,1.85,2920,1.94,2921,2.185,2922,2.367,2923,2.643,2924,2.643,2925,2.643,2926,2.643,2927,6.663,2928,4.394,2929,5.315,2930,4.394,2931,5.315,2932,2.367,2933,2.737,2934,2.643,2935,3.799,2936,2.643,2937,2.643,2938,2.643,2939,4.243,2940,2.643,2941,2.643,2942,4.243,2943,2.367,2944,4.243,2945,2.643,2946,2.643,2947,2.643,2948,2.643,2949,2.643,2950,2.643,2951,2.643,2952,2.643,2953,2.643,2954,2.643,2955,2.643,2956,2.643,2957,2.367,2958,7.114,2959,4.243,2960,2.643,2961,2.643,2962,2.643,2963,2.643,2964,2.643,2965,2.643,2966,2.643,2967,2.643,2968,2.643,2969,2.643,2970,2.643,2971,6.085,2972,2.643,2973,5.315,2974,5.449,2975,5.449,2976,2.643,2977,4.76,2978,6.085,2979,2.643,2980,4.76,2981,6.085,2982,2.643,2983,5.315,2984,2.367,2985,2.643,2986,4.243,2987,2.643,2988,4.243,2989,2.643,2990,4.243,2991,2.643,2992,4.243,2993,2.643,2994,4.243,2995,2.643,2996,2.367,2997,2.643,2998,6.694,2999,4.243,3000,2.643,3001,2.643,3002,4.243,3003,2.643,3004,4.243,3005,2.643,3006,4.243,3007,2.643,3008,4.243,3009,2.643,3010,4.243,3011,2.643,3012,4.243,3013,2.643,3014,4.243,3015,2.643,3016,4.243,3017,2.643,3018,4.243,3019,2.643,3020,4.243,3021,2.643,3022,4.243,3023,2.643,3024,4.243,3025,2.643,3026,4.243,3027,2.643,3028,4.243,3029,2.643,3030,4.243,3031,2.643,3032,4.243,3033,2.643,3034,4.243,3035,2.643,3036,4.243,3037,2.643,3038,4.243,3039,2.643,3040,4.243,3041,2.643,3042,4.243,3043,2.643,3044,2.643,3045,5.315,3046,2.643,3047,4.243,3048,2.643,3049,2.643,3050,5.315,3051,2.643,3052,5.315,3053,2.643,3054,2.643,3055,2.643,3056,2.643,3057,2.643,3058,2.643,3059,2.643,3060,2.643,3061,1.94,3062,2.643,3063,2.643,3064,2.643,3065,2.643,3066,2.643,3067,2.643,3068,2.643,3069,2.643,3070,2.643,3071,2.643,3072,5.449,3073,2.643,3074,4.243,3075,2.643,3076,2.367,3077,2.643,3078,2.643,3079,2.643,3080,2.643,3081,2.643,3082,2.643,3083,2.643,3084,2.643,3085,2.185,3086,2.643,3087,2.643,3088,2.643,3089,2.643,3090,2.643,3091,2.643,3092,2.643,3093,2.643,3094,2.643,3095,2.643,3096,2.643,3097,2.643,3098,2.643,3099,2.643,3100,2.643,3101,2.643,3102,2.643,3103,2.643,3104,2.643,3105,2.643,3106,2.643,3107,2.049]],["title/classes/DropOldVauleFormEnum1742800589634.html",[0,0.235,3108,4.43]],["body/classes/DropOldVauleFormEnum1742800589634.html",[0,0.259,2,0.842,3,0.054,4,0.049,5,0.049,8,2.284,9,2.644,10,0.134,11,0.423,12,0.82,13,1.339,14,2.35,15,1.45,16,2.355,17,2.355,18,0.277,19,0.005,20,0.24,21,1.095,22,0.854,23,0.531,25,2.355,26,3.16,28,1.166,29,0.67,30,1.182,31,1.762,32,2.355,34,0.121,35,1.125,36,0.054,37,1.801,38,2.86,39,3.191,40,3.171,41,2.61,42,3.171,43,2.906,44,2.906,45,3.346,46,2.43,73,2.049,74,3.293,75,2.731,77,2.86,78,2.86,80,2.497,81,2.65,82,2.049,83,2.86,84,2.392,85,2.43,86,1.862,87,2.392,88,3.362,89,0.004,90,0.004,98,3.874,111,1.524,113,2.216,114,2.727,135,2.355,2672,7.148,2673,5.605,2674,5.959,2675,4.502,2684,5.977,3108,7.743,3109,8.647,3110,5.446,3111,5.446,3112,5.446,3113,5.446,3114,4.877,3115,5.605,3116,4.877,3117,7.743,3118,4.877,3119,4.877]],["title/interfaces/DtoRepresentsType.html",[661,1.156,3120,4.09]],["body/interfaces/DtoRepresentsType.html",[0,0.349,3,0.073,4,0.066,5,0.066,10,0.18,11,0.51,18,0.245,19,0.005,34,0.194,36,0.073,89,0.004,90,0.004,184,1.495,212,1.763,260,2.829,261,1.972,661,1.715,662,2.815,731,5.688,849,6.57,2451,6.006,3120,7.695,3121,6.57,3122,6.57,3123,5.688,3124,7.337,3125,7.337,3126,7.337]],["title/classes/ExtractLpTokensDto.html",[0,0.235,3127,4.09]],["body/classes/ExtractLpTokensDto.html",[0,0.404,2,0.925,3,0.06,4,0.053,5,0.053,10,0.209,11,0.45,18,0.271,19,0.005,20,0.418,23,0.607,29,0.906,34,0.189,36,0.06,48,1.484,56,2.64,60,1.717,89,0.004,90,0.004,108,4.226,109,4.84,111,1.444,151,1.814,156,2.725,171,2.246,173,2.157,188,1.306,259,2.663,260,2.663,261,1.608,264,1.631,281,2.901,318,2.667,385,4.038,390,3.014,391,3.15,392,2.901,405,1.671,408,1.986,671,1.873,1078,3.688,1335,4.016,2014,4.121,2027,4.261,2210,4.721,2218,5.908,3127,6.357,3128,9.493,3129,5.985,3130,7.024,3131,5.985,3132,5.985,3133,5.359,3134,5.985,3135,5.985,3136,5.985,3137,5.985,3138,5.985,3139,5.985,3140,5.985]],["title/interfaces/ExtractLpTokensParams.html",[661,1.156,2229,3.192]],["body/interfaces/ExtractLpTokensParams.html",[0,0.276,3,0.058,4,0.052,5,0.052,10,0.142,11,0.441,18,0.235,19,0.005,20,0.453,28,1.428,34,0.129,36,0.089,41,1.75,48,1.453,56,2.82,60,1.64,89,0.004,90,0.004,105,2.533,108,4.406,109,4.849,111,1.414,134,2.347,156,2.841,164,4.859,171,1.452,173,1.626,188,1.265,259,2.485,267,1.231,318,2.24,371,2.492,376,3.106,377,2.264,385,4.473,386,3.489,387,4.036,396,3.489,401,2.812,408,1.76,583,1.948,661,1.955,662,2.224,665,3.522,671,2.158,674,4.057,1266,2.817,1335,4.626,1794,6.201,1936,3.282,2014,4.036,2144,2.883,2210,5.041,2217,4.255,2218,3.607,2219,4.493,2220,4.493,2221,4.057,2222,6.868,2223,4.255,2224,3.888,2225,4.493,2226,4.493,2227,4.255,2228,5.839,2229,4.859,2230,4.255,2231,4.255,2232,4.057]],["title/interfaces/ExtractLpTokensParams-1.html",[407,1.076,661,0.963,2229,2.658]],["body/interfaces/ExtractLpTokensParams-1.html",[3,0.071,4,0.063,5,0.063,10,0.174,11,0.5,18,0.273,19,0.005,20,0.452,29,0.882,34,0.157,36,0.085,56,2.709,89,0.004,90,0.004,156,3.053,171,2.296,281,3.25,283,4.566,371,2.342,376,3.793,377,2.764,385,4.523,405,1.783,583,2.379,661,1.995,662,2.716,1122,4.26,2218,4.405,2224,4.748,2229,5.507,3130,7.868,3141,7.078,3142,7.078]],["title/entities/FileEntity.html",[422,2.162,1444,2.801]],["body/entities/FileEntity.html",[0,0.343,3,0.054,4,0.049,5,0.049,10,0.133,11,0.422,12,0.919,18,0.289,19,0.005,20,0.442,21,1.736,23,0.627,34,0.161,35,1.122,36,0.054,48,1.564,62,2.594,63,4.492,64,4.696,69,4.818,73,1.287,89,0.004,90,0.004,113,2.936,151,1.874,260,2.688,261,1.46,267,1.532,284,1.833,395,2.582,408,2.019,415,3.803,416,3.505,422,3.155,424,2.911,427,5.678,429,5.376,430,5.573,432,4.345,442,6.706,443,5.753,445,4.657,446,4.657,449,3.27,451,2.99,452,2.911,453,3.644,454,3.644,455,4.087,456,3.644,457,3.505,839,2.526,986,4.865,1069,3.27,1444,4.087,1581,6.602,1583,6.971,1585,6.971,1587,6.971,3143,5.432,3144,5.432,3145,5.432,3146,5.432,3147,5.432,3148,5.432,3149,5.432,3150,5.432,3151,5.432,3152,5.432,3153,5.432,3154,5.432,3155,5.432,3156,5.432,3157,5.432]],["title/classes/GetClaimsDto.html",[0,0.235,2297,3.835]],["body/classes/GetClaimsDto.html",[0,0.394,2,1.04,3,0.067,4,0.06,5,0.06,10,0.165,11,0.485,18,0.232,19,0.005,23,0.542,29,0.867,34,0.199,36,0.067,54,3.089,55,6.42,60,1.732,89,0.004,90,0.004,151,1.62,188,1.469,254,2.414,264,1.835,338,6.08,390,2.783,392,3.062,486,4.984,649,3.812,974,4.324,1027,3.812,1611,4.324,2263,7.053,2274,5.22,2277,7.681,2297,6.42,2405,8.602,2450,6.584,2514,6.869,3158,8.968,3159,6.733,3160,8.968,3161,8.281,3162,9.357,3163,8.281,3164,6.733,3165,6.733,3166,6.733,3167,6.733,3168,6.733]],["title/classes/GetVaultTransactionsDto.html",[0,0.235,3169,4.09]],["body/classes/GetVaultTransactionsDto.html",[0,0.423,2,1.023,3,0.066,4,0.059,5,0.059,10,0.163,11,0.48,18,0.277,19,0.005,21,1.789,22,1.038,23,0.537,29,0.862,34,0.207,36,0.066,54,3.02,60,1.722,89,0.004,90,0.004,102,3.895,103,4.512,111,1.671,112,3.633,151,1.603,188,1.445,254,2.374,259,2.498,260,2.498,261,1.78,264,1.805,293,5.743,294,3.749,318,2.767,344,5.474,392,3.04,408,2.08,974,4.28,1027,3.749,2050,5.576,2177,5.971,2514,6.83,2528,5.474,3169,6.776,3170,7.359,3171,6.622,3172,8.196,3173,6.622,3174,6.622,3175,6.622,3176,6.622,3177,6.622,3178,6.622]],["title/classes/GetVaultsDto.html",[0,0.235,3179,4.09]],["body/classes/GetVaultsDto.html",[0,0.393,2,0.874,3,0.057,4,0.051,5,0.051,10,0.139,11,0.434,12,0.675,18,0.256,19,0.005,21,1.915,22,1.296,23,0.597,29,0.914,34,0.195,36,0.088,60,1.625,64,2.953,69,3.03,89,0.004,90,0.004,103,4.08,131,3.306,132,4.08,133,4.782,151,1.782,188,1.234,254,2.027,259,2.462,260,2.462,261,1.52,264,1.542,318,2.781,392,2.996,404,4.782,405,1.335,407,2.16,408,2.226,411,3.03,451,3.113,452,3.03,533,4.461,747,5.334,974,4.882,1027,3.202,1096,7.063,1140,4.08,1141,5.189,2039,4.461,2514,6.071,2899,7.404,2900,7.531,2901,7.989,2903,7.404,2935,7.858,3170,7.254,3179,6.127,3180,5.064,3181,8.158,3182,5.655,3183,5.655,3184,5.655,3185,5.655,3186,7.412,3187,5.655,3188,5.655,3189,5.655,3190,7.254,3191,5.655,3192,5.655,3193,6.637,3194,5.064,3195,6.637,3196,5.655,3197,5.064,3198,5.655,3199,5.655,3200,5.746,3201,5.655,3202,5.655,3203,5.655]],["title/controllers/GovernanceController.html",[141,1.898,3204,4.09]],["body/controllers/GovernanceController.html",[0,0.249,3,0.052,4,0.047,5,0.047,10,0.129,12,0.776,13,1.306,15,1.55,18,0.239,19,0.005,20,0.435,23,0.558,28,1.373,29,0.789,30,1.392,34,0.204,36,0.052,46,2.37,54,2.69,60,1.76,89,0.004,90,0.004,111,0.985,129,3.592,133,3.384,141,2.013,143,1.978,144,4.046,146,2.811,151,1.666,154,4.564,156,2.85,158,3.212,163,7.041,166,5.349,175,4.448,178,3.704,179,2.124,181,2.549,183,2.97,184,1.069,185,5.349,186,5.733,187,2.739,188,1.144,189,2.811,190,3.264,203,1.37,205,4.048,206,4.823,208,4.066,209,2.007,210,3.58,211,4.549,212,2.046,255,3.507,284,1.791,785,2.609,1154,3.672,1632,4.697,1691,3.552,2608,7.369,2613,7.369,3204,5.829,3205,5.245,3206,6.314,3207,6.314,3208,6.314,3209,7.095,3210,5.245,3211,5.245,3212,7.051,3213,5.245,3214,4.697,3215,5.245,3216,5.245,3217,5.245,3218,7.958,3219,4.697,3220,5.245,3221,7.627,3222,5.245,3223,5.245,3224,7.369,3225,5.245,3226,6.314,3227,5.245,3228,4.697,3229,4.697,3230,5.848,3231,4.697,3232,5.245,3233,5.245,3234,5.245,3235,5.245,3236,5.245,3237,5.245,3238,5.245,3239,5.245,3240,5.245,3241,5.245,3242,5.245,3243,5.245,3244,5.245,3245,5.245,3246,5.245]],["title/modules/GovernanceModule.html",[221,1.689,3247,3.835]],["body/modules/GovernanceModule.html",[0,0.339,3,0.071,4,0.064,5,0.064,19,0.005,34,0.217,36,0.071,89,0.004,90,0.004,111,1.337,143,3.232,144,3.243,184,1.452,221,3.139,223,3.243,224,3.243,225,3.386,226,3.386,227,3.313,228,4.369,229,4.369,235,4.073,236,3.386,237,3.243,239,3.462,240,3.629,241,2.433,248,2.832,249,4.778,3204,7.599,3230,7.573,3231,6.379,3247,7.771,3248,6.379,3249,6.379,3250,6.379,3251,7.124,3252,7.124]],["title/injectables/GovernanceService.html",[268,1.189,3230,3.632]],["body/injectables/GovernanceService.html",[0,0.237,3,0.05,4,0.045,5,0.045,10,0.123,12,0.796,13,1.262,15,1.537,18,0.245,19,0.005,20,0.445,23,0.572,28,1.408,29,0.81,30,1.364,34,0.205,35,1.031,36,0.05,37,1.211,48,1.61,54,1.576,65,1.882,68,5.841,89,0.004,90,0.004,111,1.64,129,2.542,132,2.747,135,1.625,144,4.105,156,2.802,158,2.928,175,3.56,184,1.017,201,2.153,202,1.529,203,1.304,209,1.94,210,3.95,212,2.166,241,1.704,246,1.732,248,1.984,267,1.447,268,1.638,269,2.098,272,3.869,273,3.799,277,4.398,284,2.29,286,2.674,287,3.004,288,2.321,295,3.106,296,3.219,297,2.482,300,4.398,305,2.936,306,5.635,307,3.442,308,3.493,322,2.542,376,3.653,377,2.662,452,2.674,455,3.86,816,3.473,1137,1.915,1154,3.493,1430,4.809,1617,3.391,1944,2.911,2164,3.004,2420,6.898,2608,7.285,2613,6.991,2622,5.635,3206,6.105,3207,6.105,3208,6.105,3209,6.469,3214,6.105,3218,6.953,3219,6.105,3221,4.469,3224,7.285,3226,4.469,3228,4.469,3229,4.469,3230,5.005,3253,4.99,3254,4.99,3255,6.817,3256,4.99,3257,4.99,3258,4.99,3259,6.817,3260,4.99,3261,4.99,3262,4.99,3263,4.99,3264,4.99,3265,4.99,3266,4.99,3267,7.472,3268,6.817,3269,4.99,3270,4.99,3271,6.817,3272,6.817,3273,4.99,3274,4.99]],["title/modules/JwtGlobalModule.html",[221,1.689,878,3.632]],["body/modules/JwtGlobalModule.html",[0,0.326,3,0.069,4,0.061,5,0.061,15,1.075,19,0.005,34,0.209,36,0.069,89,0.004,90,0.004,184,1.398,221,3.087,223,3.122,224,3.122,225,3.259,226,3.259,227,3.189,228,3.259,229,4.297,235,3.98,236,3.259,237,3.122,239,4.394,770,3.958,771,2.679,878,7.302,885,5.863,1263,5.035,1270,5.67,1443,8.097,1448,6.142,1449,6.142,1450,7.5,1451,6.142,1452,6.142,1453,6.142,1454,6.142,1455,4,3275,6.142,3276,6.142,3277,6.142,3278,7.538,3279,6.858,3280,6.858]],["title/interfaces/L4VaVault.html",[661,1.156,2749,3.835]],["body/interfaces/L4VaVault.html",[3,0.053,4,0.047,5,0.047,10,0.129,11,0.413,18,0.273,19,0.005,20,0.444,36,0.094,60,0.974,89,0.004,90,0.004,102,4.052,104,2.345,111,1.6,131,2.345,158,2.663,244,1.246,303,2.298,358,2.499,362,1.953,405,1.856,573,3.165,583,2.865,625,3.392,661,1.864,662,2.018,663,1.454,692,1.949,723,2.253,839,3.964,1070,1.767,2051,4.568,2109,3.688,2124,5.096,2127,4.39,2129,3.888,2215,3.888,2358,3.272,2683,3.392,2695,3.527,2728,4.076,2729,4.346,2730,4.346,2731,4.076,2732,4.076,2733,5.185,2734,6.182,2735,4.346,2736,4.076,2737,6.182,2738,5.475,2739,4.346,2740,4.076,2741,4.076,2742,5.475,2743,4.944,2744,5.475,2745,5.838,2746,5.838,2747,5.475,2748,5.838,2749,5.475,2750,4.737,2751,4.346,2752,5.838,2753,5.475,2754,4.346,2755,4.346,2756,4.346,2757,4.346,2758,3.68,2759,3.68,2760,4.944,2761,5.968,2762,7.048,2763,7.048,2764,5.968,2765,4.944,2766,3.68,2767,3.68,2768,3.527,2769,3.68,2770,3.68,2771,3.68,2772,3.68,2773,3.527,2774,3.68,2775,3.527,2776,3.68,2777,3.68]],["title/modules/LifecycleModule.html",[221,1.689,3281,3.632]],["body/modules/LifecycleModule.html",[0,0.306,3,0.064,4,0.058,5,0.058,12,0.586,19,0.005,34,0.225,36,0.064,89,0.004,90,0.004,111,1.209,144,2.931,184,1.312,192,3.362,221,3.001,223,2.931,224,2.931,225,3.06,226,3.06,227,2.994,228,4.177,229,4.177,235,3.828,236,3.06,237,2.931,239,3.914,240,3.28,241,2.198,244,1.908,245,3.45,248,2.56,249,4.318,874,6.02,876,6.771,877,6.771,883,5.766,884,4.727,886,5.766,887,4.991,901,5.766,906,4.727,908,5.766,3281,7.557,3282,5.766,3283,5.766,3284,5.766,3285,6.438,3286,7.895,3287,7.499,3288,6.438,3289,6.438,3290,6.438,3291,6.438,3292,6.438,3293,6.438,3294,6.438]],["title/injectables/LifecycleProcessor.html",[268,1.189,3287,3.835]],["body/injectables/LifecycleProcessor.html",[0,0.265,3,0.056,4,0.05,5,0.05,10,0.137,11,0.429,12,0.795,13,1.359,15,1.459,18,0.254,19,0.005,20,0.323,21,1.475,22,0.873,23,0.571,28,1.323,29,0.761,30,1.2,31,1.778,34,0.211,35,1.151,36,0.056,37,1.458,48,1.075,54,2.592,66,2.59,82,1.739,89,0.004,90,0.004,111,1.782,144,4.127,156,1.786,174,3.066,175,2.908,184,1.135,201,2.318,202,2.673,203,2.279,209,1.585,212,1.763,241,1.902,248,2.214,268,1.763,269,2.341,271,3.598,272,4.318,273,3.971,277,4.734,284,2.085,288,2.59,295,4.567,296,3.593,297,2.77,300,3.593,305,1.872,307,2.297,308,3.899,311,4.734,345,1.814,370,1.814,371,2.715,455,3.154,493,3.273,839,3.412,884,4.089,1137,2.137,1157,7.211,1493,3.832,1846,4.089,2039,4.417,2117,2.908,2933,3.593,3287,5.689,3295,5.569,3296,8.207,3297,7.338,3298,7.338,3299,7.338,3300,8.499,3301,5.569,3302,7.338,3303,5.569,3304,7.338,3305,5.569,3306,4.604,3307,5.569,3308,5.569,3309,5.569,3310,4.987,3311,8.207,3312,5.569,3313,5.569,3314,4.987,3315,5.569,3316,5.569,3317,5.569,3318,4.987,3319,4.987,3320,4.987,3321,7.338,3322,8.207,3323,5.569,3324,4.987,3325,4.987]],["title/injectables/LifecycleService.html",[268,1.189,3286,3.835]],["body/injectables/LifecycleService.html",[0,0.098,3,0.021,4,0.018,5,0.018,10,0.051,11,0.202,12,0.611,13,0.64,15,1.471,18,0.223,19,0.005,20,0.357,21,0.414,22,1.147,23,0.521,28,1.081,29,0.622,30,1.236,31,1.793,34,0.181,35,0.425,36,0.021,37,1.7,48,0.862,50,1.813,54,2.388,58,2.025,66,3.273,68,4.695,70,1.511,82,0.819,89,0.002,90,0.002,103,4.162,105,2.286,111,1.855,112,0.804,114,1.684,131,2.991,133,2.229,134,0.834,135,1.455,144,3.695,151,0.403,156,2.492,157,2.151,171,1.119,182,1.239,184,0.42,201,1.091,202,2.911,203,1.839,209,2.809,210,2.958,212,1.257,241,0.703,244,1.239,245,1.103,246,1.815,248,0.819,251,2.108,266,1.303,267,0.437,268,0.83,269,0.865,271,2.158,273,3.053,277,2.881,281,1.525,284,2.098,288,0.957,291,1.381,292,1.328,295,3.928,296,1.328,297,1.024,299,1.441,300,1.328,303,1.51,305,0.692,307,0.849,308,2.419,309,5.22,311,4.327,317,2.679,318,1.028,322,1.049,341,1.702,342,1.303,345,2.184,346,1.381,358,0.978,362,1.235,365,1.381,366,1.596,370,2.184,371,2.733,372,3.095,407,1.366,408,1.044,455,1.166,464,1.166,493,0.918,500,2.537,528,3.095,533,1.239,543,2.857,544,3.508,582,1.239,702,2.857,755,2.857,767,1.328,814,0.957,830,0.804,884,1.511,887,1.596,939,1.596,944,5.705,994,2.679,1018,3.84,1045,2.857,1048,3.462,1135,3.999,1160,3.692,1171,3.279,1180,4.105,1182,1.596,1206,1.844,1302,1.381,1335,2.332,1362,1.541,1430,1.902,1435,1.441,1547,1.201,1568,2.229,1653,1.024,1735,2.779,1736,3.693,1804,1.075,1832,1.511,1845,1.239,1846,3.84,1958,1.281,2109,1.075,2117,3.502,2122,3.761,2127,1.133,2138,1.201,2144,1.719,2150,1.239,2151,2.318,2157,1.381,2163,1.381,2164,1.239,2186,3.148,2200,2.881,2210,1.024,2221,1.441,2232,2.419,2358,3.255,2422,1.596,2460,1.441,2480,4.695,2506,1.844,2546,1.596,2602,2.679,2677,1.511,2781,4.924,2792,1.511,2793,1.844,2819,3.999,2835,1.844,2836,1.844,2842,4.684,2859,1.844,2860,1.844,3085,1.702,3115,1.596,3190,1.702,3286,2.679,3306,1.702,3310,7.123,3318,6.006,3319,6.302,3320,1.844,3324,4.684,3325,5.651,3326,2.059,3327,3.456,3328,3.456,3329,3.456,3330,3.456,3331,5.231,3332,5.231,3333,5.231,3334,5.231,3335,3.456,3336,4.466,3337,2.059,3338,7.038,3339,4.695,3340,3.456,3341,3.456,3342,3.456,3343,2.059,3344,3.456,3345,2.059,3346,2.059,3347,2.059,3348,3.456,3349,2.059,3350,2.059,3351,2.059,3352,2.059,3353,3.456,3354,2.059,3355,3.456,3356,7.038,3357,2.059,3358,2.059,3359,5.829,3360,2.059,3361,3.456,3362,2.059,3363,2.059,3364,2.059,3365,1.702,3366,1.702,3367,2.059,3368,2.059,3369,2.059,3370,2.059,3371,2.059,3372,3.456,3373,2.059,3374,2.059,3375,3.456,3376,2.059,3377,1.844,3378,2.059,3379,1.441,3380,2.059,3381,2.059,3382,4.466,3383,5.231,3384,2.059,3385,3.456,3386,8.878,3387,4.466,3388,2.059,3389,3.456,3390,2.059,3391,5.231,3392,3.456,3393,2.679,3394,5.231,3395,5.231,3396,3.456,3397,4.466,3398,3.095,3399,3.456,3400,3.456,3401,2.059,3402,6.311,3403,3.456,3404,4.684,3405,6.05,3406,3.456,3407,6.311,3408,6.311,3409,2.537,3410,3.456,3411,3.456,3412,4.684,3413,4.466,3414,5.231,3415,3.456,3416,5.231,3417,3.456,3418,1.844,3419,3.095,3420,3.456,3421,2.059,3422,2.059,3423,2.059,3424,7.038,3425,5.231,3426,2.059,3427,2.059,3428,2.059,3429,2.059,3430,2.059,3431,2.059,3432,5.829,3433,5.829,3434,2.059,3435,2.059,3436,2.059,3437,3.095,3438,2.059,3439,2.059,3440,2.059,3441,2.059,3442,1.844,3443,2.059,3444,2.059,3445,2.059,3446,5.231,3447,3.456,3448,2.059,3449,2.059,3450,2.059,3451,3.456,3452,2.059,3453,2.059,3454,3.456,3455,2.059,3456,1.702,3457,2.059,3458,2.059,3459,2.059,3460,3.456,3461,1.844,3462,2.059,3463,2.059,3464,2.059,3465,2.059,3466,2.059,3467,2.059,3468,2.059,3469,2.059,3470,1.844,3471,3.456,3472,5.231,3473,5.231,3474,5.231,3475,3.456,3476,3.456,3477,2.059,3478,5.231,3479,3.456,3480,2.059,3481,2.059,3482,2.059,3483,3.456,3484,2.059,3485,2.059,3486,2.059,3487,2.059,3488,2.059,3489,3.456,3490,2.059,3491,2.059,3492,5.231,3493,3.456,3494,5.231,3495,2.059,3496,2.059,3497,1.596,3498,2.059,3499,2.059,3500,2.059,3501,2.059,3502,1.596,3503,2.059,3504,2.059,3505,2.059,3506,2.059,3507,2.059,3508,2.059,3509,2.059,3510,2.059,3511,3.456,3512,2.059,3513,4.466,3514,4.466,3515,2.059,3516,2.059,3517,2.059,3518,2.059,3519,2.059,3520,2.059,3521,2.059,3522,2.059,3523,2.059,3524,2.059,3525,2.059,3526,2.059,3527,2.059,3528,1.844,3529,2.059,3530,2.059,3531,2.059,3532,2.059,3533,3.456,3534,2.059,3535,2.059,3536,2.059,3537,2.059,3538,2.059,3539,3.456,3540,2.059,3541,3.456,3542,2.059,3543,2.059]],["title/entities/LinkEntity.html",[422,2.162,2918,3.079]],["body/entities/LinkEntity.html",[0,0.343,3,0.054,4,0.048,5,0.048,10,0.133,11,0.422,12,0.915,18,0.277,19,0.005,20,0.431,21,1.735,23,0.617,34,0.192,35,1.119,36,0.054,48,1.665,64,4.228,69,4.339,70,5.291,81,2.644,86,1.856,89,0.004,90,0.004,111,1.838,113,2.753,151,1.844,156,1.738,210,2.278,246,3.397,260,2.686,261,1.456,267,1.53,284,1.83,395,4.101,408,2.017,422,3.15,424,2.904,427,5.674,428,3.793,429,5.371,430,5.567,432,3.262,434,3.793,438,6.336,442,6.041,443,5.959,445,4.649,446,4.649,447,5.039,448,5.431,449,3.262,450,3.496,451,2.983,452,2.904,453,3.635,454,3.635,455,4.08,456,3.635,457,3.496,991,4.48,2259,4.48,2271,4.853,2645,3.635,2918,4.485,3544,5.419,3545,5.419,3546,5.419,3547,5.419,3548,5.419,3549,5.419,3550,5.419,3551,5.419,3552,7.206,3553,7.206,3554,5.419,3555,5.419,3556,7.206,3557,5.419]],["title/classes/LoginReq.html",[0,0.235,1234,3.632]],["body/classes/LoginReq.html",[0,0.436,2,0.983,3,0.064,4,0.057,5,0.057,10,0.156,11,0.468,14,1.617,18,0.275,19,0.005,20,0.424,23,0.572,34,0.194,36,0.08,60,1.75,73,1.895,89,0.004,90,0.004,107,5.158,151,1.71,188,1.389,259,2.706,260,2.706,261,1.71,263,3.566,264,1.735,385,4.155,390,3.176,401,3.241,671,2.234,1028,3.886,1137,3.355,1234,5.871,1237,7.081,1302,6.64,1303,6.778,1333,4.672,1335,5.037,1352,6.61,2027,4.584,3558,5.699,3559,6.364,3560,6.364,3561,7.16,3562,7.16,3563,6.364,3564,7.16,3565,6.364,3566,5.699,3567,5.699]],["title/classes/LpTokenOperationResult.html",[0,0.235,2224,3.318]],["body/classes/LpTokenOperationResult.html",[0,0.262,2,0.851,3,0.055,4,0.049,5,0.049,10,0.135,11,0.426,12,0.502,18,0.244,19,0.005,20,0.443,23,0.569,28,1.4,29,0.837,34,0.122,36,0.087,41,1.662,48,1.062,56,2.642,60,1.608,89,0.004,90,0.004,105,2.407,108,3.623,109,4.772,111,1.034,134,2.949,151,1.596,156,1.766,164,5.603,171,1.824,173,2.044,188,1.202,201,1.739,259,2.437,267,1.546,318,2.583,371,2.988,376,4.373,377,2.845,385,3.879,386,4.384,387,4.84,396,3.315,401,3.119,408,2.03,583,2.448,661,1.907,665,3.245,671,1.988,674,5.713,1078,3.245,1266,3.54,1335,4.262,1794,6.726,1936,4.124,2014,2.951,2144,3.623,2210,4.883,2217,4.043,2218,5.621,2219,7.002,2220,4.269,2221,3.855,2222,6.327,2223,4.043,2224,4.885,2225,5.647,2226,5.647,2227,5.348,2228,4.269,2229,3.553,2230,4.043,2231,4.043,2232,3.855,3568,7.284,3569,5.507,3570,5.507]],["title/controllers/LpTokensController.html",[141,1.898,3571,4.09]],["body/controllers/LpTokensController.html",[0,0.284,3,0.06,4,0.053,5,0.053,10,0.147,12,0.544,13,1.421,15,1.33,18,0.167,19,0.005,23,0.391,28,1.237,29,0.553,30,0.976,34,0.206,36,0.06,37,1.06,54,2.68,60,1.81,89,0.004,90,0.004,108,4.221,109,4.838,111,1.682,134,2.417,141,2.29,143,2.251,146,3.198,151,1.167,158,2.251,175,4.009,178,2.775,181,2.901,183,3.379,184,1.216,185,4.62,186,5.779,187,3.117,188,1.302,189,3.198,203,1.559,205,2.836,206,3.379,209,1.699,212,1.434,254,3.042,267,1.267,283,3.85,284,1.516,287,4.62,305,2.006,345,1.944,370,1.944,371,1.974,376,4.113,377,2.998,408,1.395,671,1.454,785,2.969,848,4.934,899,6.346,1103,4.934,1335,4.009,1362,2.662,1547,4.477,1931,3.648,2144,2.969,2210,4.985,2218,4.777,2933,4.952,3127,7.405,3571,6.346,3572,5.968,3573,6.874,3574,5.345,3575,5.968,3576,6.874,3577,5.968,3578,7.599,3579,8.486,3580,5.968,3581,5.968,3582,7.676,3583,5.968,3584,6.874,3585,6.874,3586,5.968,3587,5.968,3588,6.23,3589,5.345,3590,5.345,3591,5.968,3592,5.968,3593,5.968,3594,5.968,3595,5.968,3596,5.968,3597,5.968,3598,5.968,3599,5.968]],["title/modules/LpTokensModule.html",[221,1.689,879,3.632]],["body/modules/LpTokensModule.html",[0,0.315,3,0.066,4,0.059,5,0.059,19,0.005,34,0.224,36,0.066,89,0.004,90,0.004,109,3.223,111,1.54,143,3.094,171,1.661,184,1.351,192,4.284,193,3.152,221,3.042,223,3.019,224,3.019,225,3.152,226,3.152,227,3.084,228,4.233,229,4.233,234,5.683,235,3.899,236,3.152,237,3.019,239,3.987,240,3.378,241,2.264,242,4.448,248,2.637,771,2.59,874,6.064,879,7.473,885,5.743,899,5.482,906,4.869,1122,3.992,2218,4.127,3571,7.364,3588,7.506,3589,5.939,3590,5.939,3600,5.939,3601,5.939,3602,5.939,3603,6.632,3604,6.632,3605,6.632,3606,5.939]],["title/injectables/LpTokensService.html",[268,1.189,3588,3.632]],["body/injectables/LpTokensService.html",[0,0.103,3,0.022,4,0.019,5,0.019,10,0.169,11,0.212,12,0.591,13,0.669,15,1.171,18,0.239,19,0.005,20,0.406,21,0.437,22,0.848,23,0.518,28,1.33,29,0.557,30,1.41,31,1.322,34,0.196,35,0.449,36,0.022,37,1.328,41,1.814,46,0.73,48,1.251,54,2.435,56,2.388,58,1.092,59,1.52,60,0.402,73,0.515,80,0.628,82,1.1,86,1.771,89,0.002,90,0.002,102,1.033,105,2.365,108,3.226,109,4.668,111,1.575,156,2.205,164,4.822,171,2.413,173,2.448,175,2.425,179,3.396,184,0.443,191,3.152,192,3.59,193,1.033,194,1.196,201,1.142,202,2.875,203,2.304,209,2.725,212,1.444,241,0.742,244,0.515,248,0.864,251,1.265,264,0.592,267,1.276,268,0.869,269,0.914,271,2.232,273,3.13,277,2.995,281,1.848,283,2.995,284,2.217,286,1.165,287,1.308,288,1.011,293,1.402,294,1.23,297,1.081,300,1.402,305,2.819,307,2.232,312,2.629,335,2.989,339,1.796,343,1.796,345,1.763,358,1.718,362,1,370,1.763,371,1.988,374,1.596,376,4.336,377,2.347,385,3.761,398,1.549,399,1.011,400,1.491,403,0.656,405,0.651,407,0.568,486,1.308,493,0.969,583,2.18,649,1.23,665,0.864,666,1.135,667,1.23,669,1.23,670,1.23,671,2.126,674,3.788,677,0.742,681,1.946,686,1.135,687,1.135,688,1.135,689,1.135,692,0.806,717,2.488,740,1.796,755,1.796,768,2.708,770,2.89,771,0.849,775,1.58,776,1.275,814,1.011,816,1.107,830,1.412,1005,1.796,1017,1.952,1070,0.73,1122,1.308,1266,3.152,1302,1.458,1335,4.793,1362,2.413,1408,1.353,1410,1.458,1430,1.99,1493,2.425,1534,3.238,1545,1.458,1547,1.268,1548,3.599,1549,1.107,1550,2.25,1553,1.946,1554,2.365,1592,1.165,1606,1.011,1624,1.081,1653,1.081,1654,1.165,1691,3.066,1701,4.158,1741,3.064,1742,3.341,1746,1.353,1749,1.685,1794,5.959,1804,1.135,1832,1.596,1842,2.109,1845,1.308,1846,3.409,1882,1.135,1886,1.685,1889,1.135,1895,2.333,1931,1.033,1935,3.308,1958,1.353,2014,1.165,2045,2.176,2048,1.23,2049,1.23,2051,2.9,2053,3.491,2054,1.402,2056,2.333,2061,2.708,2062,2.995,2065,1.308,2066,1.268,2067,1.268,2068,1.308,2069,1.308,2070,1.308,2074,2.425,2075,1.458,2078,1.458,2080,3.63,2081,1.458,2082,1.458,2083,1.458,2084,2.425,2085,3.63,2091,3.114,2092,1.458,2093,1.458,2094,1.458,2095,1.458,2096,2.425,2097,1.458,2100,2.425,2109,1.135,2110,2.176,2111,2.176,2112,1.308,2113,2.176,2114,2.425,2115,2.425,2116,2.333,2117,1.888,2118,2.109,2123,1.308,2124,1.165,2125,1.308,2129,1.196,2130,1.458,2131,1.458,2132,1.402,2134,2.047,2135,1.23,2136,1.268,2137,1.268,2139,1.23,2144,4.386,2145,1.268,2174,1.402,2210,4.666,2214,1.308,2218,5.036,2221,2.531,2223,1.596,2224,3.63,2229,3.491,2230,1.596,2232,1.521,2254,1.796,2336,1.796,2350,3.599,2357,2.989,2358,2.89,2364,1.458,2390,1.685,2420,4.474,2425,1.685,2437,1.796,2439,3.238,2460,1.521,2550,1.946,2607,1.685,2733,2.655,2734,1.685,2736,1.685,2737,1.685,2738,1.685,2753,4.195,2789,3.238,2933,5.105,3130,1.796,3267,3.238,3573,3.238,3574,3.238,3576,4.846,3578,5.381,3584,4.158,3588,2.655,3607,8.091,3608,2.173,3609,3.599,3610,3.599,3611,3.616,3612,3.616,3613,5.412,3614,3.616,3615,2.173,3616,3.616,3617,3.616,3618,2.173,3619,4.643,3620,4.643,3621,3.616,3622,2.173,3623,5.412,3624,4.643,3625,2.173,3626,2.173,3627,3.616,3628,3.616,3629,3.616,3630,2.173,3631,3.616,3632,3.616,3633,2.173,3634,2.173,3635,3.616,3636,2.173,3637,2.173,3638,2.173,3639,2.173,3640,2.173,3641,2.173,3642,1.946,3643,2.173,3644,2.173,3645,2.173,3646,4.643,3647,2.173,3648,2.173,3649,2.173,3650,1.685,3651,1.685,3652,4.643,3653,4.643,3654,1.946,3655,2.173,3656,2.173,3657,1.796,3658,1.685,3659,3.616,3660,2.173,3661,2.173,3662,2.173,3663,2.173,3664,2.173,3665,2.173,3666,1.946,3667,2.173,3668,2.173,3669,2.173,3670,2.173,3671,2.173,3672,2.173,3673,2.173,3674,2.173,3675,2.173,3676,3.616,3677,2.173,3678,2.173,3679,2.173,3680,2.173,3681,3.616,3682,2.173,3683,2.173,3684,2.173,3685,2.173,3686,2.173,3687,2.173,3688,1.946,3689,3.616,3690,2.173,3691,2.173,3692,2.173,3693,2.173,3694,2.173,3695,2.173,3696,2.173,3697,2.173,3698,2.173,3699,3.616,3700,2.173,3701,2.173,3702,2.173,3703,2.173,3704,2.173,3705,2.173,3706,2.173,3707,4.643,3708,4.643,3709,2.173,3710,3.238,3711,3.616,3712,3.238,3713,3.616,3714,2.173,3715,2.173,3716,1.946,3717,1.946,3718,2.173,3719,2.173,3720,2.173,3721,2.173,3722,2.173,3723,2.173,3724,2.173,3725,2.173]],["title/classes/MetadataFile.html",[0,0.235,2452,3.632]],["body/classes/MetadataFile.html",[0,0.437,2,0.82,3,0.053,4,0.047,5,0.047,10,0.13,11,0.416,12,0.868,18,0.271,19,0.005,20,0.443,22,1.256,23,0.525,34,0.178,36,0.071,48,1.024,52,2.19,58,1.603,60,1.765,62,1.994,89,0.004,90,0.004,102,3.378,144,3.896,151,1.567,188,1.158,212,1.925,244,1.899,251,1.873,252,5.991,255,2.64,259,2.811,260,2.576,261,1.427,262,3.236,263,3.17,264,1.447,266,2.002,267,1.509,303,3.107,342,2.002,345,1.729,362,1.966,370,1.729,390,3.244,391,1.968,392,2.427,398,3.046,399,2.468,400,2.19,401,2.876,402,3.195,403,2.146,405,0.956,407,1.857,677,2.427,757,3.897,760,3.56,937,3.424,1013,3.424,1017,2.231,1019,3.716,1028,2.58,1062,3.716,1063,3.56,1064,4.185,1065,3.716,1066,3.716,1067,4.767,1068,6.672,1069,4.823,1545,3.56,1691,2.367,1948,3.096,2027,4.067,2029,3.096,2447,3.56,2448,4.115,2450,5.218,2451,4.278,2452,6.551,2453,6.917,2454,4.115,2455,4.115,2456,4.115,2457,6.635,2458,6.635,2459,6.212,2460,5.609,2461,4.115,2462,4.115,2463,4.115,3726,7.176,3727,5.308,3728,5.308,3729,5.308]],["title/classes/NftAsset.html",[0,0.235,772,2.404]],["body/classes/NftAsset.html",[0,0.445,2,0.709,3,0.046,4,0.041,5,0.041,10,0.113,11,0.377,12,0.772,18,0.263,19,0.005,20,0.438,23,0.486,34,0.165,36,0.09,48,1.695,49,2.231,56,1.307,60,1.86,89,0.003,90,0.003,111,1.208,151,1.453,156,2.064,171,2.344,173,2.084,177,3.382,188,1.002,203,2.648,244,1.908,251,1.736,259,2.827,260,2.827,261,1.234,262,3.665,263,3.313,264,1.252,266,2.802,267,1.8,281,2.197,318,2.522,362,2.43,390,3.145,391,2.754,392,2.749,398,2.757,401,3.397,403,2.431,405,1.45,407,1.681,408,1.736,493,2.047,663,2.227,671,1.81,673,5.011,677,2.749,692,2.754,772,4.12,775,2.812,776,2.269,778,2.992,779,3.781,780,3.2,781,2.283,830,2.513,1070,1.543,1078,2.954,1168,3.519,1622,2.857,1651,3.36,1663,2.857,1664,2.857,1902,4.111,2013,3.079,2014,3.448,2015,2.46,2019,4.151,2020,2.962,2021,2.962,2022,2.962,2023,2.962,2026,4.316,2027,3.531,2028,4.316,2029,3.753,2030,3.079,2031,4.316,2032,4.316,2033,2.339,2034,2.962,2035,5.669,2036,4.427,2037,4.151,2038,2.962,2039,2.763,2040,4.316,2041,2.527,3730,4.591,3731,4.591,3732,4.591,3733,4.591,3734,4.591]],["title/classes/OnchainMetadata.html",[0,0.235,1067,3.318]],["body/classes/OnchainMetadata.html",[0,0.432,2,0.788,3,0.051,4,0.046,5,0.046,10,0.125,11,0.405,12,0.86,18,0.276,19,0.005,20,0.444,22,1.231,23,0.594,34,0.175,36,0.069,48,0.984,52,2.104,58,1.54,60,1.792,62,1.941,89,0.004,90,0.004,102,3.288,144,4.226,151,1.775,188,1.113,212,1.886,244,1.86,251,1.835,252,5.894,253,3.744,255,2.537,259,2.796,260,2.546,261,1.371,262,3.15,263,3.085,264,1.39,266,1.923,267,1.469,303,3.68,342,1.923,345,1.661,362,1.913,370,1.661,390,3.218,391,1.891,392,2.362,398,2.965,399,2.371,400,2.104,401,2.83,402,3.07,403,2.089,405,0.919,407,1.807,677,2.362,757,3.744,760,3.421,937,3.29,1013,3.29,1017,2.144,1019,3.57,1028,2.479,1062,3.57,1063,3.421,1064,4.596,1065,3.57,1066,3.57,1067,5.266,1068,6.611,1069,5.298,1545,3.421,1691,2.274,1948,2.975,2027,4.001,2029,2.975,2447,3.421,2448,3.954,2450,5.079,2451,4.164,2452,6.462,2453,6.087,2454,3.954,2455,3.954,2456,3.954,2457,6.527,2458,6.527,2459,6.087,2460,5.496,2461,3.954,2462,3.954,2463,3.954,3726,7.882,3735,5.1,3736,5.1,3737,5.1,3738,5.1,3739,5.1,3740,5.1,3741,5.1]],["title/classes/PaginatedResponseDto.html",[0,0.235,2910,4.09]],["body/classes/PaginatedResponseDto.html",[0,0.333,2,1.083,3,0.07,4,0.063,5,0.063,10,0.172,11,0.497,18,0.273,19,0.005,23,0.636,34,0.156,36,0.07,89,0.004,90,0.004,151,1.9,188,1.53,259,2.877,405,1.816,769,5.942,1140,5.025,1141,6.39,1180,5.325,1185,7.077,1187,7.546,2280,6.278,2910,7.017,3742,9.875,3743,7.011,3744,7.011,3745,7.011,3746,7.011,3747,7.011]],["title/classes/PaginationDto.html",[0,0.235,1096,3.835]],["body/classes/PaginationDto.html",[0,0.427,2,1.044,3,0.068,4,0.06,5,0.06,10,0.166,11,0.485,18,0.27,19,0.005,21,1.967,22,1.3,23,0.543,29,0.868,34,0.2,36,0.068,89,0.004,90,0.004,151,1.623,188,1.474,259,2.52,260,2.52,261,1.815,264,1.841,318,2.468,391,3.329,392,3.066,404,6.042,405,1.763,407,2.59,408,2.189,411,4.812,716,5.583,1096,6.432,1140,4.943,1141,6.286,3193,7.429,3194,6.048,3197,6.048,3748,6.754,3749,6.754,3750,6.754,3751,8.296]],["title/classes/PolicyId1749726859213.html",[0,0.235,3752,4.43]],["body/classes/PolicyId1749726859213.html",[0,0.288,2,0.935,3,0.061,4,0.054,5,0.054,8,2.446,9,2.782,10,0.149,11,0.453,12,0.848,13,1.434,14,2.418,15,1.492,16,2.522,17,2.522,18,0.24,19,0.005,20,0.266,21,1.216,22,0.948,23,0.559,25,2.522,26,3.224,28,1.248,29,0.718,30,1.266,31,1.835,32,2.522,34,0.135,35,1.25,36,0.061,37,1.741,38,3.242,39,3.192,40,3.242,41,2.718,42,3.242,43,3.026,44,3.026,73,2.133,75,2.844,77,2.979,78,2.979,80,2.6,81,2.759,82,2.133,83,2.979,84,2.562,85,2.602,86,1.995,87,2.562,89,0.004,90,0.004,3752,8.063,3753,9.004,3754,6.05,3755,6.05,3756,6.05,3757,6.05]],["title/classes/PolicyIdRestore1749727852748.html",[0,0.235,3758,4.43]],["body/classes/PolicyIdRestore1749727852748.html",[0,0.282,2,0.916,3,0.059,4,0.053,5,0.053,8,2.414,9,2.755,10,0.146,11,0.447,12,0.842,13,1.415,14,2.405,15,1.484,16,2.489,17,2.489,18,0.237,19,0.005,20,0.261,21,1.192,22,0.929,23,0.554,25,2.489,26,3.212,28,1.232,29,0.708,30,1.249,31,1.821,32,2.489,34,0.132,35,1.225,36,0.059,37,1.767,38,3.29,39,3.239,40,3.229,41,2.792,42,3.229,43,3.003,44,3.003,52,2.445,53,3.096,73,2.117,75,2.921,77,2.956,78,2.956,80,2.581,81,2.738,82,2.117,83,2.956,84,2.528,85,2.569,86,1.969,87,2.528,89,0.004,90,0.004,113,1.817,135,2.489,358,3.632,3758,8.001,3759,8.935,3760,5.928,3761,5.928,3762,5.928,3763,5.928]],["title/classes/PublicProfileRes.html",[0,0.235,3764,4.09]],["body/classes/PublicProfileRes.html",[0,0.238,2,0.774,3,0.05,4,0.045,5,0.045,10,0.123,11,0.4,12,0.761,18,0.275,19,0.005,20,0.432,22,1.31,23,0.638,29,0.872,34,0.186,36,0.05,48,1.501,50,2.126,60,1.44,89,0.004,90,0.004,151,1.905,188,1.093,253,3.676,254,2.45,259,2.754,260,2.867,267,2.159,318,2.685,405,1.505,408,2.394,451,4.282,452,4.168,671,1.895,1072,7.483,1348,6.135,1350,5.445,1356,5.217,1358,5.711,1444,4.952,1445,3.23,2451,5.861,2918,5.201,2919,3.505,3123,7.609,3764,5.648,3765,9.815,3766,5.007,3767,5.711,3768,7.832,3769,5.007,3770,5.007,3771,9.027,3772,5.007,3773,5.007,3774,5.007,3775,5.007,3776,5.007,3777,5.007,3778,5.007,3779,5.007,3780,5.007,3781,4.484,3782,4.484,3783,6.119]],["title/classes/PublishVaultDto.html",[0,0.235,3784,4.09]],["body/classes/PublishVaultDto.html",[0,0.409,2,0.952,3,0.062,4,0.055,5,0.055,10,0.151,11,0.458,18,0.254,19,0.005,20,0.433,23,0.593,29,0.887,34,0.192,36,0.062,48,1.749,60,1.678,89,0.004,90,0.004,111,1.47,151,1.773,156,2.762,171,2.434,177,3.921,188,1.344,254,2.208,259,2.625,260,2.625,261,1.656,264,1.679,266,2.323,267,1.308,318,2.696,390,3.145,392,2.941,401,3.306,408,1.831,779,4.042,830,3.655,1070,2.632,1078,3.604,2019,5.053,2020,5.053,2021,5.053,2022,5.053,2023,5.053,2027,3.722,2034,5.053,2035,5.053,2036,4.733,2037,3.974,3784,6.475,3785,9.358,3786,6.16,3787,6.16,3788,4.775,3789,6.16,3790,5.092,3791,6.16,3792,6.16,3793,6.16,3794,6.16,3795,6.16]],["title/injectables/RawBodyMiddleware.html",[268,1.189,3796,4.43]],["body/injectables/RawBodyMiddleware.html",[0,0.303,3,0.064,4,0.057,5,0.057,8,2.013,10,0.156,11,0.468,12,0.58,13,1.482,15,1.371,18,0.179,19,0.005,21,1.281,22,0.999,23,0.524,28,1.027,29,0.591,30,1.042,34,0.195,36,0.064,37,1.132,46,2.142,89,0.004,90,0.004,158,2.404,166,3.836,178,4.396,184,1.299,192,3.328,202,2.681,203,2.286,209,2.278,212,1.531,268,1.923,269,2.679,271,3.785,284,2.033,345,2.076,370,2.076,371,2.648,378,3.933,663,2.42,816,4.675,1222,5.707,1264,4.679,1370,7.232,1532,5.707,1590,5.707,1592,3.415,1638,3.717,1695,7.586,1696,5.707,1707,3.967,1708,5.269,1718,5.707,2394,8.466,2602,6.204,3796,7.167,3797,8.749,3798,6.373,3799,8.003,3800,9.177,3801,6.373,3802,8.003,3803,6.373,3804,8.003,3805,6.373,3806,6.373,3807,8.003,3808,6.373,3809,6.373,3810,6.373,3811,6.373,3812,6.373,3813,6.373,3814,6.373,3815,6.373]],["title/classes/RenameFieldFixEnum1742800375799.html",[0,0.235,3816,4.43]],["body/classes/RenameFieldFixEnum1742800375799.html",[0,0.249,2,0.81,3,0.052,4,0.047,5,0.047,8,2.225,9,2.593,10,0.129,11,0.412,12,0.809,13,1.305,14,2.324,15,1.434,16,2.295,17,2.295,18,0.275,19,0.005,20,0.23,21,1.053,22,0.821,23,0.521,25,2.295,26,3.136,28,1.136,29,0.653,30,1.152,31,1.735,32,2.295,34,0.117,35,1.082,36,0.052,37,1.805,38,2.816,39,3.169,40,3.144,41,2.57,42,3.144,43,2.861,44,2.861,45,3.376,46,2.368,73,2.017,74,3.27,75,2.689,77,2.816,78,2.816,80,2.459,81,2.609,82,2.168,83,2.816,84,2.331,85,2.368,86,1.815,87,2.331,88,3.276,89,0.004,90,0.004,98,3.775,111,1.755,113,2.159,114,2.657,135,2.773,493,3.142,2672,7.037,2673,5.462,2674,6.863,2675,7.037,2684,7.563,3114,4.692,3115,6.171,3116,4.692,3117,7.623,3118,4.692,3119,4.692,3816,7.623,3817,8.513,3818,5.239,3819,5.239,3820,5.239,3821,5.239]],["title/classes/RenameFields1746536544579.html",[0,0.235,3822,4.43]],["body/classes/RenameFields1746536544579.html",[0,0.234,2,0.76,3,0.049,4,0.044,5,0.044,8,2.132,9,2.51,10,0.121,11,0.395,12,0.792,13,1.25,14,2.28,15,1.407,16,2.198,17,2.198,18,0.258,19,0.005,20,0.216,21,0.989,22,0.771,23,0.505,25,2.198,26,3.094,28,1.088,29,0.626,30,1.103,31,1.69,32,2.198,34,0.109,35,1.016,36,0.049,37,1.838,38,3.367,39,3.35,40,3.098,41,2.975,42,3.18,43,2.787,44,2.787,45,2.968,52,2.784,53,3.525,73,2.059,74,2.921,75,3.112,77,2.875,78,2.875,80,2.51,81,2.663,82,2.059,83,2.875,84,2.233,85,2.268,86,1.985,87,2.549,88,3.138,89,0.003,90,0.003,113,2.87,127,4.201,135,3.261,302,4.725,337,4.354,511,5.35,2363,4.066,2670,6.9,2671,6.044,2683,4.354,2688,6.044,2692,6.044,2721,6.044,3822,7.427,3823,8.293,3824,4.918,3825,4.918,3826,4.918,3827,4.918,3828,6.749,3829,6.749,3830,6.044,3831,7.706,3832,6.749,3833,6.749]],["title/classes/RenameInvestmentToAcquire1746531791148.html",[0,0.235,3834,4.43]],["body/classes/RenameInvestmentToAcquire1746531791148.html",[0,0.175,2,0.569,3,0.037,4,0.033,5,0.033,8,1.732,9,2.135,10,0.09,11,0.321,12,0.707,13,1.015,14,2.069,15,1.277,16,1.786,17,1.786,18,0.28,19,0.005,20,0.162,21,0.74,22,0.577,23,0.429,25,1.786,26,2.886,28,0.884,29,0.508,30,0.896,31,1.48,32,1.786,34,0.082,35,0.76,36,0.037,37,1.852,38,3.372,39,3.359,40,2.868,41,2.974,42,3.196,43,2.441,44,2.441,45,3.35,46,2.737,49,2.665,65,2.739,66,3.377,67,4.872,73,1.93,74,3.265,75,3.099,77,2.694,78,2.694,80,2.352,81,2.226,82,1.93,83,2.868,84,1.814,85,1.843,86,1.413,87,1.814,88,3.787,89,0.003,90,0.003,97,5.333,98,3.892,99,2.853,100,4.026,101,3.839,102,2.606,103,3.019,104,3.239,105,2.397,106,3.839,107,3.538,112,2.142,113,2.942,114,2.739,115,2.853,116,5.631,117,2.853,118,2.853,125,5.333,126,2.853,128,4.026,129,2.793,130,3.538,131,2.445,132,3.019,133,3.538,135,3.315,136,3.839,137,2.853,138,5.631,139,2.853,140,2.853,244,1.299,302,2.576,347,5.02,503,2.727,511,3.538,529,4.911,683,4.533,2250,4.251,2673,4.251,2674,4.026,2676,5.869,2677,4.026,2678,4.533,2686,4.911,2687,4.911,2704,6.504,2708,4.911,2719,4.911,2725,4.911,3404,4.911,3830,4.911,3834,6.504,3835,7.263,3836,3.68,3837,3.68,3838,3.68,3839,3.68,3840,4.911,3841,5.484,3842,6.554,3843,5.484,3844,5.484,3845,7.263,3846,5.484,3847,5.484,3848,3.296]],["title/classes/RenameVaultField1742382533813.html",[0,0.235,3849,4.43]],["body/classes/RenameVaultField1742382533813.html",[0,0.278,2,0.905,3,0.059,4,0.052,5,0.052,8,2.395,9,2.739,10,0.144,11,0.444,12,0.839,13,1.404,14,2.397,15,1.479,16,2.47,17,2.47,18,0.236,19,0.005,20,0.258,21,1.177,22,0.918,23,0.551,25,2.47,26,3.205,28,1.223,29,0.703,30,1.24,31,1.813,32,2.47,34,0.13,35,1.21,36,0.059,37,1.763,38,3.122,39,3.232,40,3.221,41,2.685,42,3.221,43,2.989,44,2.989,45,3.037,73,2.108,74,2.989,75,2.809,77,2.943,78,2.943,80,2.569,81,2.726,82,2.108,83,2.943,84,2.509,85,2.549,86,1.954,87,2.509,89,0.004,90,0.004,98,4.064,113,2.324,135,2.47,2689,6.791,3840,6.791,3849,7.965,3850,8.895,3851,5.858,3852,5.858,3853,5.858,3854,5.858]],["title/classes/ReplaceLockedStateToGovernance1743424803837.html",[0,0.235,3855,4.43]],["body/classes/ReplaceLockedStateToGovernance1743424803837.html",[0,0.255,2,0.829,3,0.054,4,0.048,5,0.048,8,2.261,9,2.624,10,0.132,11,0.419,12,0.816,13,1.326,14,2.34,15,1.444,16,2.332,17,2.332,18,0.276,19,0.005,20,0.236,21,1.079,22,0.841,23,0.528,25,2.332,26,3.151,28,1.154,29,0.664,30,1.17,31,1.752,32,2.332,34,0.119,35,1.109,36,0.054,37,1.81,38,3.161,39,3.232,40,3.161,41,2.704,42,3.161,43,2.889,44,2.889,45,3.262,46,2.406,65,2.024,66,2.495,67,3.599,73,2.037,74,3.211,75,2.829,77,2.844,78,2.844,80,2.483,81,2.634,82,2.037,83,2.844,84,2.369,85,2.406,86,1.844,87,2.369,88,3.329,89,0.004,90,0.004,98,3.837,104,3.193,113,2.469,114,2.7,125,6.311,126,4.16,128,5.257,130,4.619,131,3.193,132,3.941,133,3.462,135,2.8,136,5.012,137,4.16,138,6.664,139,4.16,140,4.16,3470,6.411,3855,7.698,3856,8.596,3857,5.366,3858,5.366,3859,5.366,3860,5.366]],["title/classes/SignatureData.html",[0,0.235,1237,3.632]],["body/classes/SignatureData.html",[0,0.439,2,1.005,3,0.065,4,0.058,5,0.058,10,0.16,11,0.474,14,2.059,18,0.267,19,0.005,20,0.427,23,0.531,34,0.196,36,0.081,60,1.761,73,2.254,89,0.004,90,0.004,107,4.196,151,1.585,188,1.419,259,2.721,260,2.721,261,1.748,263,3.615,264,1.773,385,3.091,390,3.196,401,3.259,671,1.975,1028,3.94,1137,3.389,1234,4.776,1237,6.983,1302,6.724,1303,5.043,1333,5.951,1335,4.611,1352,5.377,2027,4.609,3558,5.825,3561,7.259,3562,5.825,3564,5.825,3566,7.259,3567,7.259,3861,6.505,3862,6.505]],["title/classes/SocialLink.html",[0,0.235,394,3.192]],["body/classes/SocialLink.html",[0,0.457,2,0.909,3,0.059,4,0.053,5,0.053,10,0.144,11,0.445,12,0.811,18,0.236,19,0.005,20,0.445,23,0.552,28,0.948,29,0.545,34,0.187,36,0.092,48,1.467,52,2.426,73,1.393,89,0.004,90,0.004,151,1.487,188,1.283,201,1.857,244,1.393,251,1.777,259,2.836,260,2.836,261,1.581,264,1.603,318,2.262,383,3.945,384,4.318,385,2.795,386,5.552,387,5.359,389,4.318,390,3.337,391,3.124,392,2.877,393,5.582,394,4.905,395,4.234,396,5.362,397,4.117,398,2.52,399,2.735,400,2.426,401,2.832,402,3.54,403,2.295,404,3.794,405,1.605,406,4.732,407,1.536,408,1.777,409,3.945,410,4.117,411,3.151,412,3.945,413,3.945,414,3.945,415,4.117,416,3.794,3863,7.604,3864,5.881,3865,5.881]],["title/classes/SocialLinkDto.html",[0,0.235,3866,4.09]],["body/classes/SocialLinkDto.html",[0,0.42,2,0.89,3,0.058,4,0.051,5,0.074,10,0.141,11,0.439,12,0.871,18,0.234,19,0.005,20,0.427,22,0.903,23,0.491,34,0.197,36,0.075,60,1.832,89,0.004,90,0.004,132,3.17,135,2.443,151,1.467,188,1.256,246,3.066,255,2.864,259,2.776,260,2.722,261,1.548,262,3.415,264,1.57,266,2.172,267,1.222,318,2.846,332,4.76,390,3.215,391,3.092,392,3.313,394,4.839,395,4.547,401,3.325,405,1.503,408,2.236,1028,3.645,1064,4.615,1078,2.982,1168,2.517,1180,4.375,1348,4.228,1350,4.031,1356,3.862,1358,4.228,1410,3.862,1549,3.821,2033,2.933,2645,3.862,3061,6.728,3767,4.228,3866,6.895,3867,7.47,3868,5.156,3869,6.2,3870,5.758,3871,5.758,3872,6.851,3873,5.758,3874,5.758,3875,5.156,3876,4.76,3877,5.156,3878,4.228,3879,5.156,3880,5.156,3881,5.156,3882,5.156,3883,5.156,3884,4.464,3885,5.156,3886,5.156,3887,6.716,3888,4.228,3889,5.156,3890,5.156,3891,5.156]],["title/classes/SubmitTransactionDto.html",[0,0.235,1651,2.584]],["body/classes/SubmitTransactionDto.html",[0,0.442,2,0.692,3,0.045,4,0.04,5,0.04,10,0.11,11,0.37,12,0.725,18,0.265,19,0.005,20,0.441,23,0.521,29,0.586,34,0.163,36,0.09,48,1.729,49,2.177,56,1.275,60,1.854,89,0.003,90,0.003,111,1.376,151,1.558,156,2.554,171,2.431,173,2.057,177,3.824,188,0.977,203,2.625,244,1.498,251,1.713,254,1.606,259,2.819,260,2.819,261,1.204,262,3.626,263,3.269,264,1.221,266,2.764,267,1.783,281,2.159,318,2.665,362,2.027,390,3.127,391,2.718,392,2.719,398,1.919,401,3.397,403,1.909,405,1.321,407,1.652,408,1.713,493,1.997,663,2.323,671,1.786,673,4.957,677,2.159,692,2.718,772,3.871,775,2.764,776,2.23,778,2.941,779,3.996,780,3.145,781,2.228,830,3.281,1070,2.125,1078,3.167,1168,3.204,1622,2.788,1651,3.828,1663,2.788,1664,2.788,2013,3.004,2014,3.389,2015,2.4,2019,4.729,2020,2.89,2021,2.89,2022,2.89,2023,2.89,2026,4.242,2027,3.484,2028,4.242,2029,3.689,2030,3.004,2031,4.242,2032,4.242,2033,2.282,2034,2.89,2035,5.78,2036,4.679,2037,4.08,2038,2.89,2039,2.696,2040,4.242,2041,2.466,3788,3.472,3790,5.228,3892,4.011,3893,4.479,3894,4.479,3895,4.011,3896,4.479,3897,4.479]],["title/interfaces/SubmitTransactionParams.html",[661,1.156,2058,3.318]],["body/interfaces/SubmitTransactionParams.html",[0,0.111,3,0.023,4,0.021,5,0.021,10,0.12,11,0.224,12,0.674,15,0.978,18,0.24,19,0.005,20,0.422,22,0.978,29,0.452,30,0.381,31,0.993,34,0.199,35,0.481,36,0.071,37,1.403,46,0.782,48,0.94,50,0.724,54,2.828,56,1.607,58,1.704,62,0.653,65,0.878,80,0.672,82,1.478,86,2.034,89,0.002,90,0.002,104,1.038,105,2.467,108,1.158,109,1.131,111,1.482,112,0.909,114,1.443,131,2.782,134,1.55,135,1.247,156,2.273,171,2.412,173,2.152,174,1.281,177,1.06,179,0.943,184,0.474,191,2.369,194,1.281,201,0.735,202,2.35,203,1.934,209,2.781,210,1.609,212,1.356,241,0.795,244,1.478,246,1.328,248,0.926,251,1.139,254,0.835,264,0.635,266,1.838,267,1.198,268,0.919,271,1.579,273,1.742,281,2.13,284,1.881,286,2.051,288,1.082,294,1.318,297,1.158,303,1.673,305,2.382,307,1.579,312,1.318,318,1.138,322,1.186,342,1.838,345,1.587,347,2.611,358,3.997,362,2.363,370,1.587,371,2.064,377,2.205,399,1.78,400,3.054,403,2.315,405,1.017,407,2.004,408,0.894,464,1.318,493,1.038,582,1.401,583,1.286,637,3.033,645,1.449,650,1.281,651,1.186,661,1.567,662,0.893,663,0.644,665,1.938,666,1.216,667,1.318,669,1.318,670,1.318,671,1.868,677,2.619,680,1.401,686,1.216,687,1.216,688,1.216,689,1.216,692,2.628,694,2.933,698,1.502,717,1.247,723,0.998,770,2.049,771,0.909,772,1.86,774,2.167,775,2.467,776,2.5,777,1.186,778,1.78,779,2.518,780,1.904,781,1.158,814,1.082,826,1.358,830,2.768,856,1.86,926,1.449,1017,2.373,1070,1.286,1133,1.449,1137,1.87,1156,2.469,1168,1.673,1183,1.449,1266,2.744,1317,1.216,1362,1.038,1408,1.449,1430,3.692,1431,4.411,1455,1.358,1493,2.545,1549,3.611,1554,1.186,1589,1.401,1592,1.247,1605,1.106,1606,1.082,1611,1.216,1617,3.103,1624,1.158,1635,2.051,1651,1.999,1653,2.424,1654,1.247,1665,1.561,1666,1.561,1667,1.401,1688,1.247,1691,1.707,1707,1.449,1726,1.561,1730,1.561,1732,3.269,1735,3.033,1736,2.964,1741,2.167,1742,3.032,1744,1.502,1746,1.449,1748,1.401,1804,1.999,1821,2.567,1831,1.449,1842,2.232,1845,1.401,1864,1.449,1867,1.281,1873,2.483,1875,1.358,1882,1.216,1889,1.216,1892,2.167,1893,1.318,1897,1.449,1926,1.318,1927,1.318,1931,2.683,1935,3.108,1960,2.369,2015,1.247,2033,1.186,2036,2.948,2041,1.281,2042,2.567,2043,1.401,2044,1.63,2045,2.304,2046,1.449,2047,1.449,2048,1.318,2049,1.318,2050,1.358,2051,3.025,2052,1.449,2053,2.469,2054,1.502,2055,1.63,2056,2.469,2057,1.63,2058,2.567,2059,1.63,2060,1.449,2061,1.358,2062,1.502,2063,1.449,2064,2.382,2065,1.401,2066,1.358,2067,1.358,2068,1.401,2069,1.401,2070,1.401,2071,1.401,2072,1.63,2073,1.561,2074,2.567,2075,1.561,2076,1.63,2077,2.679,2078,1.561,2079,1.63,2080,3.269,2081,1.561,2082,1.561,2083,1.561,2084,1.561,2085,1.561,2086,2.679,2087,1.449,2088,1.63,2089,1.449,2090,1.449,2091,3.269,2092,1.561,2093,1.561,2094,1.561,2095,1.561,2096,2.567,2097,1.561,2098,1.63,2099,1.63,2100,2.567,2101,4.695,2102,2.679,2103,3.411,2104,1.63,2105,1.63,2106,1.63,2107,1.63,2108,1.502,2109,3.702,2110,2.933,2111,2.304,2112,2.304,2113,2.933,2114,2.567,2115,2.567,2116,2.469,2117,1.999,2118,2.232,2119,2.679,2120,2.382,2121,2.382,2122,2.469,2123,3.398,2124,2.611,2125,2.933,2126,1.63,2127,1.281,2128,1.449,2129,2.107,2130,1.561,2131,1.561,2132,1.502,2133,1.449,2134,1.318,2135,1.318,2136,1.358,2137,1.358,2138,1.358,2139,1.318,2140,1.561,2141,4.366,2142,2.679,2143,1.63,2144,1.158,2145,1.358,2146,1.63,2147,3.882,2148,1.63,2149,3.411,2150,1.401,2151,1.561,2152,1.63,2153,1.561,2154,1.63,2155,1.63,2156,1.561,2157,1.561,2158,1.63,2159,1.561,2160,1.63,2161,1.63,2162,1.63,2163,2.567,2164,2.304,2165,1.63,2166,2.679,2167,3.269,2168,4.695,2169,3.952,2170,3.952,2171,4.366,2172,2.567,2173,2.567,2174,2.469,2175,2.679,2176,2.567,2177,2.567,2178,2.679,2179,2.679,2180,2.679,2181,3.952,2182,2.679,2183,2.679,2184,1.63,2185,1.63,2186,1.401,2187,1.63,2188,2.679,2189,1.63,2190,2.679,2191,4.184,2192,1.63,2193,1.63,2194,1.63,2195,1.63,2196,1.63,2197,1.63,2198,1.63,2199,1.63,2200,1.502,2201,3.411,2202,1.63,2203,1.63,2204,1.502,2205,1.63,2206,1.63,2207,1.63,2208,1.63,2209,1.63,2210,1.158,2211,2.567,2212,2.382,2213,2.679,2214,1.401,2215,2.107,2216,1.63]],["title/classes/SubmitVaultTxDto.html",[0,0.235,2038,3.192]],["body/classes/SubmitVaultTxDto.html",[0,0.442,2,0.687,3,0.045,4,0.04,5,0.04,10,0.109,11,0.368,12,0.723,18,0.264,19,0.005,20,0.44,23,0.52,29,0.583,34,0.162,36,0.089,48,1.725,49,2.162,56,1.266,60,1.853,89,0.003,90,0.003,111,1.371,151,1.553,156,2.546,171,2.429,173,2.049,177,3.814,188,0.97,203,2.623,244,1.491,251,1.706,254,2.256,259,2.817,260,2.817,261,1.195,262,3.614,263,3.256,264,1.212,266,2.754,267,1.779,281,2.149,318,2.717,362,2.019,390,3.122,391,2.707,392,2.711,398,1.906,401,3.395,403,1.9,405,1.315,407,1.644,408,1.706,493,1.983,663,1.23,671,1.779,673,4.941,677,2.149,692,2.707,772,3.859,775,2.75,776,2.219,778,2.926,779,3.988,780,3.13,781,2.212,830,3.272,1070,2.115,1078,3.157,1168,3.192,1622,2.768,1651,4.67,1663,2.768,1664,2.768,2013,2.983,2014,3.372,2015,2.383,2019,4.711,2020,2.869,2021,2.869,2022,2.869,2023,2.869,2026,4.221,2027,3.47,2028,4.221,2029,3.67,2030,2.983,2031,4.221,2032,4.221,2033,2.266,2034,2.869,2035,5.769,2036,4.67,2037,4.059,2038,4.059,2039,3.787,2040,4.221,2041,2.448,3195,7.109,3788,3.448,3790,3.677,3892,3.983,3895,3.983,3898,4.447,3899,4.447,3900,4.447,3901,4.447,3902,4.447]],["title/classes/TagDto.html",[0,0.235,3903,4.43]],["body/classes/TagDto.html",[0,0.438,2,1.108,3,0.072,4,0.064,5,0.064,10,0.176,11,0.503,12,0.904,18,0.241,19,0.005,20,0.378,23,0.563,28,1.156,29,0.665,34,0.205,36,0.072,60,1.328,89,0.004,90,0.004,151,1.402,188,1.564,201,2.265,259,2.414,260,2.414,261,1.927,264,1.955,386,5.178,387,5.239,390,2.891,396,4.316,401,2.891,1078,2.851,1168,3.134,2027,4.089,3072,7.704,3903,7.704,3904,7.17,3905,8.604,3906,7.17]],["title/entities/TagEntity.html",[422,2.162,2920,3.632]],["body/entities/TagEntity.html",[0,0.394,3,0.067,4,0.06,5,0.06,10,0.166,11,0.485,12,0.903,18,0.252,19,0.005,20,0.412,23,0.588,34,0.2,35,1.393,36,0.067,40,2.742,48,1.854,84,2.231,86,1.737,89,0.004,90,0.004,111,1.861,113,2.54,135,3.049,151,1.755,254,2.972,260,2.325,261,1.812,267,1.76,422,2.947,424,3.613,427,4.059,432,4.989,447,5.159,449,4.059,450,4.35,503,3.354,2920,6.085,3076,6.038,3907,6.743,3908,6.743,3909,6.743,3910,6.743,3911,6.743,3912,6.743,3913,8.289,3914,6.743,3915,8.289,3916,8.289,3917,6.743,3918,8.289]],["title/controllers/TaptoolsController.html",[141,1.898,3919,4.09]],["body/controllers/TaptoolsController.html",[0,0.28,3,0.084,4,0.053,5,0.053,10,0.144,12,0.536,13,1.408,15,1.396,18,0.213,19,0.005,20,0.392,22,1.321,23,0.385,28,0.948,29,0.545,30,0.961,31,1.198,34,0.21,36,0.059,37,1.045,48,1.135,54,2.814,60,1.708,89,0.004,90,0.004,111,1.672,141,2.257,143,2.218,146,3.151,151,1.15,154,4.074,156,2.439,158,2.218,175,4.4,179,2.381,182,3.54,183,3.33,184,1.198,185,4.576,186,5.436,187,3.071,188,1.283,189,3.151,190,3.66,193,2.795,203,1.536,205,3.614,206,4.305,212,1.827,251,2.208,284,1.494,286,4.074,305,2.555,307,3.136,345,1.915,370,1.915,371,2.788,671,1.852,759,5.266,785,2.925,850,4.576,862,3.794,863,3.794,1171,6.54,1180,4.435,1335,3.971,1589,3.54,1736,2.795,2150,4.576,2335,4.559,2357,4.862,2933,3.794,3339,5.898,3409,4.318,3657,4.862,3919,6.286,3920,5.881,3921,5.266,3922,6.809,3923,5.881,3924,5.881,3925,5.881,3926,5.881,3927,5.895,3928,4.862,3929,5.266,3930,5.266,3931,5.881,3932,5.881,3933,5.881,3934,5.881,3935,5.881,3936,5.881,3937,5.881,3938,5.881,3939,5.881,3940,5.881]],["title/modules/TaptoolsModule.html",[221,1.689,3278,3.632]],["body/modules/TaptoolsModule.html",[0,0.336,3,0.071,4,0.063,5,0.063,19,0.005,34,0.22,36,0.071,89,0.004,90,0.004,111,1.327,143,3.216,184,1.44,221,3.128,223,3.217,224,3.217,225,3.359,226,3.359,227,3.286,228,4.353,229,4.353,235,4.053,236,3.359,237,3.217,239,3.435,240,3.6,241,2.413,244,2.021,245,3.787,248,2.81,249,4.74,3278,7.347,3339,7.214,3919,7.573,3930,6.328,3941,6.328,3942,6.328,3943,6.328,3944,7.067,3945,7.067]],["title/injectables/TaptoolsService.html",[268,1.189,3339,3.463]],["body/injectables/TaptoolsService.html",[0,0.094,3,0.02,4,0.018,5,0.018,10,0.049,11,0.196,12,0.757,13,0.62,15,1.392,18,0.215,19,0.005,20,0.409,21,1.148,22,1.302,23,0.535,28,1.117,29,0.642,30,1.219,31,1.759,34,0.171,35,0.41,36,0.02,37,1.452,46,0.667,48,1.195,50,1.042,54,0.627,56,0.565,58,2.659,60,0.805,62,1.434,73,1.03,89,0.002,90,0.002,102,3.292,103,3.409,111,1.44,114,1.264,134,1.357,156,1.831,179,2.069,184,0.404,192,1.036,193,0.943,201,1.058,202,2.895,203,2.135,205,4.056,209,2.808,212,2.074,241,0.678,244,2.201,245,1.063,248,0.789,251,2.16,254,1.559,255,0.987,266,0.748,267,0.711,268,0.805,269,0.834,271,2.108,272,1.539,273,3.001,275,3.371,277,2.162,284,2.193,286,1.063,288,0.923,289,1.28,290,1.331,291,1.331,292,1.28,297,0.987,299,1.389,300,1.28,301,1.28,305,2.424,307,1.382,311,4.811,324,1.641,340,1.641,345,2.349,347,1.063,362,1.713,364,1.457,366,1.539,370,2.349,371,1.889,385,2.713,398,1.864,400,1.382,403,1.99,405,1.116,407,1.136,408,0.783,411,1.063,455,2.462,544,2.248,565,2.46,583,1.126,665,1.332,671,0.483,677,2.791,692,1.894,694,3.075,705,4.224,768,1.954,783,3.193,797,3.33,802,3.612,805,2.017,816,2.908,993,1.777,996,4.801,1013,1.28,1038,3.371,1039,3.371,1042,3.894,1043,3.894,1044,5.45,1045,4.719,1046,5.112,1047,1.641,1048,5.37,1049,5.727,1062,1.389,1063,1.331,1064,1.036,1065,1.389,1066,1.389,1067,1.331,1068,1.389,1069,1.195,1070,0.667,1137,0.762,1165,1.641,1168,0.867,1171,3.193,1178,1.389,1180,2.537,1182,1.539,1183,2.085,1194,2.77,1196,1.641,1202,1.777,1335,3.895,1338,3.595,1362,1.939,1370,1.641,1430,1.092,1435,1.389,1493,3.618,1519,5.119,1548,1.539,1549,1.011,1550,1.235,1691,2.762,1735,3.18,1736,3.948,1800,2.77,1809,1.777,1818,1.641,1829,4.719,1933,2.162,2033,1.011,2036,1.75,2108,1.28,2144,3.08,2164,1.195,2172,2.917,2186,1.195,2200,3.296,2204,2.805,2210,3.08,2227,3.751,2254,1.641,2335,1.539,2514,3.193,2607,3.371,2612,1.777,2635,3.001,2837,5.112,2984,1.777,3314,1.777,3339,2.346,3379,3.044,3405,4.224,3409,4.191,3419,1.777,3437,3.001,3456,1.641,3657,1.641,3710,1.777,3921,3.001,3922,3.001,3927,2.598,3928,1.641,3929,3.001,3946,1.985,3947,4.349,3948,5.112,3949,4.349,3950,4.349,3951,5.11,3952,3.351,3953,3.351,3954,3.351,3955,3.351,3956,3.351,3957,3.351,3958,1.985,3959,1.985,3960,1.985,3961,3.351,3962,1.985,3963,3.351,3964,1.985,3965,3.351,3966,8.307,3967,1.985,3968,3.351,3969,1.985,3970,3.351,3971,1.985,3972,3.351,3973,1.985,3974,3.351,3975,1.985,3976,3.351,3977,3.351,3978,1.985,3979,4.349,3980,3.351,3981,1.985,3982,3.351,3983,1.985,3984,4.349,3985,1.777,3986,1.985,3987,1.777,3988,3.595,3989,1.985,3990,3.351,3991,3.351,3992,1.985,3993,4.349,3994,1.985,3995,4.349,3996,4.349,3997,1.985,3998,1.985,3999,1.985,4000,1.985,4001,3.351,4002,3.351,4003,6.193,4004,1.985,4005,4.349,4006,6.193,4007,5.11,4008,4.349,4009,1.985,4010,6.193,4011,3.351,4012,1.985,4013,1.985,4014,1.985,4015,3.351,4016,3.351,4017,3.351,4018,1.985,4019,1.985,4020,1.985,4021,1.985,4022,5.11,4023,6.193,4024,1.985,4025,3.351,4026,3.001,4027,3.351,4028,1.777,4029,4.349,4030,1.985,4031,3.351,4032,1.985,4033,3.351,4034,3.351,4035,4.719,4036,3.351,4037,1.985,4038,3.351,4039,1.985,4040,3.351,4041,3.351,4042,5.45,4043,3.351,4044,5.45,4045,3.351,4046,4.224,4047,4.224,4048,3.351,4049,5.11,4050,5.11,4051,3.351,4052,1.985,4053,4.576,4054,5.11,4055,4.349,4056,1.985,4057,1.985,4058,1.985,4059,1.985,4060,4.349,4061,1.985,4062,1.985,4063,1.985,4064,3.351,4065,1.985,4066,1.985,4067,3.351,4068,1.985,4069,1.985,4070,3.351,4071,1.985,4072,1.985,4073,1.985,4074,1.985,4075,1.985,4076,1.985,4077,1.985,4078,1.985,4079,1.985,4080,1.985,4081,1.985,4082,3.351,4083,1.985,4084,1.985,4085,3.351,4086,1.985,4087,3.351,4088,1.985,4089,1.985,4090,3.351,4091,1.985,4092,1.985,4093,1.985,4094,1.985,4095,1.985,4096,1.985,4097,1.985,4098,1.985,4099,1.985,4100,1.985,4101,1.985,4102,1.985,4103,1.985,4104,1.985,4105,1.985,4106,1.777,4107,1.985,4108,1.985,4109,1.985,4110,1.985,4111,3.351,4112,1.985,4113,1.985,4114,2.598,4115,1.985,4116,3.351,4117,1.985,4118,1.985,4119,1.777,4120,1.985,4121,3.351,4122,1.985,4123,1.985,4124,1.985,4125,1.985,4126,1.985,4127,1.985,4128,3.351,4129,1.985,4130,1.985,4131,1.777,4132,5.11,4133,1.985,4134,5.709,4135,1.985,4136,3.351,4137,1.985,4138,1.985,4139,1.985,4140,1.985,4141,4.349,4142,4.349,4143,3.351,4144,3.351,4145,1.985,4146,1.985,4147,1.985,4148,1.985,4149,1.985,4150,1.985,4151,3.351,4152,1.985,4153,1.985,4154,1.985,4155,1.985]],["title/classes/TokenInfo.html",[0,0.235,2598,4.09]],["body/classes/TokenInfo.html",[0,0.413,2,0.97,3,0.063,4,0.056,5,0.056,10,0.154,11,0.464,12,0.722,18,0.244,19,0.005,20,0.423,21,1.261,23,0.569,34,0.176,36,0.079,48,1.676,56,2.678,58,1.894,60,1.845,89,0.004,90,0.004,151,1.699,188,1.369,244,1.878,259,2.816,264,1.71,267,1.332,303,2.742,318,1.866,390,3.162,391,3.22,392,2.706,398,3.396,403,2.622,405,1.565,407,1.639,408,1.466,583,2.108,671,1.93,677,2.966,793,4.392,1028,4.221,1078,3.454,1266,4.573,1842,3.659,1936,3.552,2364,5.315,2425,4.864,2582,4.606,2583,8.171,2584,5.618,2585,4.864,2586,5.618,2587,5.618,2588,5.186,2589,5.186,2590,6.551,2593,5.547,2594,5.186,2598,7.543,2602,4.864,2603,4.864,2606,7.096,2607,4.864,4156,6.274,4157,6.274,4158,7.924,4159,6.274,4160,6.274]],["title/entities/Transaction.html",[171,1.239,422,2.162]],["body/entities/Transaction.html",[0,0.32,3,0.049,4,0.044,5,0.044,10,0.189,11,0.393,12,0.864,14,1.952,18,0.287,19,0.005,20,0.43,23,0.645,29,0.831,34,0.199,35,1.01,36,0.049,48,1.482,54,2.831,56,2.187,59,3.23,60,0.906,62,2.156,63,4.185,86,2.365,89,0.003,90,0.003,111,1.723,113,2.971,151,1.926,171,1.924,188,1.067,244,2.175,251,1.796,259,1.886,260,2.515,261,1.314,267,2.147,281,1.67,293,5.596,294,2.769,342,2.536,405,1.49,407,1.278,422,2.138,424,2.621,427,5.221,432,2.944,443,6.165,447,4.185,448,4.51,449,2.944,450,3.155,503,3.344,637,3.044,638,4.043,640,6.351,641,6.351,642,6.88,645,4.782,955,5.558,970,4.38,974,4.884,1078,1.945,1908,4.338,2050,5.059,4161,4.891,4162,6.724,4163,4.891,4164,4.38,4165,6.724,4166,4.891,4167,4.891,4168,4.891,4169,4.891,4170,4.891,4171,4.891,4172,4.891,4173,4.891,4174,4.891,4175,4.891,4176,4.891,4177,4.891,4178,4.891,4179,4.891,4180,4.891,4181,4.891,4182,4.891,4183,4.891,4184,4.891,4185,4.891,4186,6.021,4187,6.021,4188,4.891,4189,4.891,4190,4.891,4191,4.891,4192,4.891]],["title/interfaces/TransactionBuildResponse.html",[661,1.156,777,2.52]],["body/interfaces/TransactionBuildResponse.html",[0,0.231,3,0.049,4,0.043,5,0.043,10,0.119,11,0.392,15,1.402,18,0.243,19,0.005,20,0.449,22,1.049,31,1.823,34,0.17,36,0.049,37,1.36,50,1.511,62,1.878,73,1.586,89,0.003,90,0.003,111,0.912,134,1.967,158,2.524,171,1.217,173,2.315,177,3.047,178,4.459,180,4.685,181,3.721,184,0.99,202,2.346,203,2,209,2.463,212,2.149,251,1.135,254,1.742,268,1.608,284,2.096,305,2.773,318,1.445,342,2.524,345,1.582,370,1.582,371,2.959,377,1.897,378,2.082,395,3.639,405,0.875,661,1.789,662,1.864,663,1.344,671,1.184,692,1.801,763,4.914,764,3.767,765,3.767,766,6.263,767,5.912,768,5.446,769,4.685,770,3.219,771,1.897,772,3.253,773,3.401,774,3.79,775,2.124,776,1.713,777,3.41,778,3.837,779,3.859,780,4.104,781,4.104,782,3.259,783,3.567,784,3.567,785,2.417,786,5.936,787,3.259,788,5.936,789,3.259,790,3.767,791,6.708,792,3.767,793,4.685,794,3.767,795,3.767,796,3.767,797,5.047,798,3.767,799,3.401,800,3.767,801,3.134,802,4.466,803,3.024,804,3.134,805,2.924,806,3.767,807,3.767,808,3.767,809,3.767,810,3.767,811,3.767,812,3.767,813,5.189,814,2.259,815,3.767,816,2.475,817,3.767,818,3.767,819,3.767,820,3.767,821,3.767,822,3.767,823,3.767,824,3.767,825,3.767,826,2.834,827,3.767,828,3.767,829,3.567,830,1.897,831,3.767]],["title/interfaces/TransactionBuildResponse-1.html",[407,1.076,661,0.963,777,2.099]],["body/interfaces/TransactionBuildResponse-1.html",[0,0.249,3,0.052,4,0.047,5,0.047,10,0.129,11,0.413,15,1.105,18,0.239,19,0.005,20,0.432,30,1.153,31,1.437,34,0.189,36,0.085,37,1.415,73,1.671,89,0.004,90,0.004,114,1.978,134,2.855,171,2.517,173,1.978,175,2.739,178,2.439,179,2.855,181,2.549,184,1.069,201,1.657,202,2.723,203,2.322,209,2.424,212,1.694,268,1.694,271,2.908,281,2.408,284,2.257,305,2.862,345,2.297,370,2.297,371,2.818,387,4.762,649,3.992,650,2.887,651,3.592,661,1.648,662,2.013,663,1.451,767,3.384,770,3.348,771,2.049,777,3.592,778,4.256,779,2.339,787,3.518,789,3.518,797,4.646,801,3.384,802,4.646,803,4.388,804,4.549,805,4.244,816,2.672,830,2.754,857,4.066,974,2.739,1017,2.205,1137,2.706,1362,3.145,1442,3.157,1468,5.848,1554,2.672,1592,3.778,1617,3.507,1624,3.962,1626,3.851,1653,2.609,1654,3.778,1742,2.549,1856,4.066,1857,4.336,1858,4.336,1860,4.336,1862,4.336,1863,4.336,1864,3.264,1866,4.336,1867,2.887,1869,4.336,1871,5.466,1872,3.851,1873,2.672,1874,5.466,1875,3.059,1876,4.336,1877,4.336,1878,6.584,1879,4.336,1880,4.336,1881,4.336,1882,4.159,1883,4.336,1884,4.336,1885,4.336,1886,4.066,1887,4.336,1888,4.066,1889,3.682,1890,4.066,1891,4.336,1892,2.97,1893,2.97,1894,6.584,1895,3.384,1896,4.336,1897,3.264]],["title/interfaces/TransactionBuildResponse-2.html",[661,0.963,777,2.099,814,1.916]],["body/interfaces/TransactionBuildResponse-2.html",[0,0.11,3,0.023,4,0.021,5,0.021,10,0.119,11,0.223,12,0.674,15,0.976,18,0.243,19,0.005,20,0.425,22,0.976,29,0.215,30,0.38,31,0.991,34,0.199,35,0.48,36,0.071,37,1.402,46,0.78,48,0.939,50,0.722,54,2.826,56,1.604,58,1.702,62,0.651,65,0.876,80,0.671,82,1.476,86,2.032,89,0.002,90,0.002,104,1.035,105,2.463,108,1.155,109,1.128,111,1.481,112,0.907,114,1.44,131,2.778,134,1.546,135,1.244,156,1.808,171,2.384,173,2.316,174,1.278,177,1.057,179,0.94,184,0.473,191,2.364,194,1.278,201,0.733,202,2.348,203,1.932,209,2.78,210,1.605,212,1.354,241,0.793,244,1.476,246,1.325,248,0.923,251,1.137,254,0.832,264,0.633,266,1.835,267,1.197,268,0.917,271,1.575,273,1.739,281,2.127,284,1.879,286,2.046,288,1.08,294,1.315,297,1.155,303,1.669,305,2.379,307,1.575,312,1.315,318,1.136,322,1.183,342,1.835,345,1.584,347,2.607,358,3.994,362,2.361,370,1.584,371,2.061,377,2.201,399,1.776,400,3.051,403,2.313,405,1.015,407,2.002,408,0.892,464,1.315,493,1.035,582,1.397,583,1.283,637,3.028,645,1.445,650,1.278,651,1.183,661,1.565,662,0.891,663,0.642,665,1.934,666,1.212,667,1.315,669,1.315,670,1.315,671,1.866,677,2.616,680,1.397,686,1.212,687,1.212,688,1.212,689,1.212,692,2.625,694,2.928,698,1.498,717,1.244,723,0.995,770,2.045,771,0.907,772,1.856,774,2.162,775,2.463,776,2.497,777,1.945,778,2.897,779,2.514,780,3.098,781,2.803,814,1.08,826,1.354,830,2.201,856,1.856,926,1.445,1017,2.369,1070,1.283,1133,1.445,1137,1.867,1156,2.464,1168,1.669,1183,1.445,1266,2.739,1317,1.212,1362,1.035,1408,1.445,1430,3.687,1431,4.406,1455,1.354,1493,2.54,1549,3.607,1554,1.183,1589,1.397,1592,1.244,1605,1.103,1606,1.08,1611,1.212,1617,3.098,1624,1.155,1635,2.046,1651,1.994,1653,2.42,1654,1.244,1665,1.557,1666,1.557,1667,1.397,1688,1.244,1691,1.703,1707,1.445,1726,1.557,1730,1.557,1732,3.263,1735,3.028,1736,2.96,1741,2.162,1742,3.027,1744,1.498,1746,1.445,1748,1.397,1804,1.994,1821,2.561,1831,1.445,1842,2.227,1845,1.397,1864,1.445,1867,1.278,1873,2.478,1875,1.354,1882,1.212,1889,1.212,1892,2.162,1893,1.315,1897,1.445,1926,1.315,1927,1.315,1931,2.679,1935,3.103,1960,2.364,2015,1.244,2033,1.183,2036,2.943,2041,1.278,2042,2.561,2043,1.397,2044,1.625,2045,2.299,2046,1.445,2047,1.445,2048,1.315,2049,1.315,2050,1.354,2051,3.02,2052,1.445,2053,2.464,2054,1.498,2055,1.625,2056,2.464,2057,1.625,2058,1.557,2059,1.625,2060,1.445,2061,1.354,2062,1.498,2063,1.445,2064,2.377,2065,1.397,2066,1.354,2067,1.354,2068,1.397,2069,1.397,2070,1.397,2071,1.397,2072,1.625,2073,1.557,2074,2.561,2075,1.557,2076,1.625,2077,2.673,2078,1.557,2079,1.625,2080,3.263,2081,1.557,2082,1.557,2083,1.557,2084,1.557,2085,1.557,2086,2.673,2087,1.445,2088,1.625,2089,1.445,2090,1.445,2091,3.263,2092,1.557,2093,1.557,2094,1.557,2095,1.557,2096,2.561,2097,1.557,2098,1.625,2099,1.625,2100,2.561,2101,4.689,2102,2.673,2103,3.405,2104,1.625,2105,1.625,2106,1.625,2107,1.625,2108,1.498,2109,3.697,2110,2.928,2111,2.299,2112,2.299,2113,2.928,2114,2.561,2115,2.561,2116,2.464,2117,1.994,2118,2.227,2119,2.673,2120,2.377,2121,2.377,2122,2.464,2123,3.392,2124,2.607,2125,2.928,2126,1.625,2127,1.278,2128,1.445,2129,2.102,2130,1.557,2131,1.557,2132,1.498,2133,1.445,2134,1.315,2135,1.315,2136,1.354,2137,1.354,2138,1.354,2139,1.315,2140,1.557,2141,4.36,2142,2.673,2143,1.625,2144,1.155,2145,1.354,2146,1.625,2147,3.877,2148,1.625,2149,3.405,2150,1.397,2151,1.557,2152,1.625,2153,1.557,2154,1.625,2155,1.625,2156,1.557,2157,1.557,2158,1.625,2159,1.557,2160,1.625,2161,1.625,2162,1.625,2163,2.561,2164,2.299,2165,1.625,2166,2.673,2167,3.263,2168,4.689,2169,3.945,2170,3.945,2171,4.36,2172,2.561,2173,2.561,2174,2.464,2175,2.673,2176,2.561,2177,2.561,2178,2.673,2179,2.673,2180,2.673,2181,3.945,2182,2.673,2183,2.673,2184,1.625,2185,1.625,2186,1.397,2187,1.625,2188,2.673,2189,1.625,2190,2.673,2191,4.178,2192,1.625,2193,1.625,2194,1.625,2195,1.625,2196,1.625,2197,1.625,2198,1.625,2199,1.625,2200,1.498,2201,3.405,2202,1.625,2203,1.625,2204,1.498,2205,1.625,2206,1.625,2207,1.625,2208,1.625,2209,1.625,2210,1.155,2211,2.561,2212,2.377,2213,2.673,2214,1.397,2215,2.102,2216,1.625]],["title/classes/TransactionBuildResponseDto.html",[0,0.235,1663,3.079]],["body/classes/TransactionBuildResponseDto.html",[0,0.443,2,0.694,3,0.045,4,0.04,5,0.04,10,0.11,11,0.371,12,0.726,18,0.265,19,0.005,20,0.441,23,0.522,34,0.163,36,0.09,48,1.622,49,2.181,56,1.278,60,1.855,89,0.003,90,0.003,111,1.189,151,1.559,156,2.031,171,2.413,173,2.448,177,3.341,188,0.979,203,2.655,244,1.501,251,1.715,259,2.82,260,2.82,261,1.206,262,3.629,263,3.273,264,1.224,266,2.768,267,1.785,281,2.162,318,2.5,362,2.029,390,3.129,391,2.721,392,2.722,398,1.923,401,3.398,403,1.912,405,1.322,407,1.654,408,1.715,493,2.824,663,2.325,671,1.788,673,4.961,677,2.162,692,2.721,772,3.874,775,2.768,776,2.233,778,3.909,779,4.083,780,4.181,781,3.65,830,2.473,1070,1.508,1078,3.169,1168,3.207,1622,2.793,1651,3.307,1663,3.941,1664,2.793,2013,3.01,2014,3.394,2015,2.405,2019,4.086,2020,2.895,2021,2.895,2022,2.895,2023,2.895,2026,4.248,2027,3.488,2028,4.248,2029,3.694,2030,3.01,2031,4.248,2032,4.248,2033,2.286,2034,2.895,2035,5.628,2036,4.781,2037,4.086,2038,2.895,2039,2.701,2040,4.248,2041,3.486,4193,7.339,4194,4.488,4195,4.488,4196,4.488,4197,4.488,4198,4.488]],["title/classes/TransactionModelFix1743089378621.html",[0,0.235,4199,4.43]],["body/classes/TransactionModelFix1743089378621.html",[0,0.24,2,0.779,3,0.05,4,0.045,5,0.045,8,2.168,9,2.542,10,0.124,11,0.402,12,0.798,13,1.271,14,2.298,15,1.418,16,2.236,17,2.236,18,0.284,19,0.005,20,0.222,21,1.38,22,0.79,23,0.511,25,2.236,26,3.111,28,1.107,29,0.636,30,1.122,31,1.708,32,2.236,34,0.112,35,1.041,36,0.05,37,1.817,38,2.992,39,3.2,40,3.116,41,2.53,42,3.16,43,2.816,44,2.816,45,3.261,46,2.623,48,1.324,49,2.45,50,2.814,51,3.701,52,3.22,53,4.076,54,1.592,59,2.119,62,1.414,63,3.138,72,3.701,73,2.077,74,3.166,75,2.647,77,2.772,78,2.772,80,2.42,81,2.568,82,1.986,83,2.772,84,2.271,85,2.307,86,1.768,87,2.271,88,4.077,89,0.004,90,0.004,97,5.731,98,3.678,100,3.701,101,3.529,102,2.396,105,2.204,106,3.529,107,3.252,112,2.681,113,2.104,114,2.589,127,4.272,134,2.041,135,2.236,357,3.701,637,3.138,638,4.168,639,2.568,643,5.04,645,3.138,646,6.99,648,4.515,649,2.855,650,2.775,651,2.568,657,4.515,658,4.515,2663,7.504,2664,6.147,2665,5.675,2666,5.675,4199,7.504,4200,8.38,4201,5.042,4202,5.042,4203,5.042,4204,5.042,4205,5.042,4206,5.042,4207,5.042,4208,8.38,4209,5.042,4210,5.042]],["title/classes/TransactionOutput.html",[0,0.235,673,3.079]],["body/classes/TransactionOutput.html",[0,0.443,2,0.695,3,0.045,4,0.04,5,0.04,10,0.11,11,0.371,12,0.727,18,0.268,19,0.005,20,0.435,23,0.481,29,0.809,34,0.163,36,0.09,48,1.623,49,2.186,56,1.805,60,1.855,89,0.003,90,0.003,111,1.191,151,1.437,156,2.034,171,2.333,173,2.061,177,3.345,188,0.981,203,2.642,244,1.503,251,2.096,254,1.612,257,2.799,259,2.821,260,2.821,261,1.209,262,3.632,263,3.276,264,1.226,266,2.771,267,1.786,281,2.166,318,2.668,362,2.032,390,3.13,391,2.724,392,2.724,398,1.927,401,3.389,403,1.915,405,1.437,407,1.657,408,1.966,493,2.006,663,2.206,671,2.126,673,5.236,677,2.166,692,3.326,772,4.089,775,2.772,776,2.237,778,2.949,779,3.752,780,3.154,781,2.237,830,2.477,1070,1.511,1078,2.921,1168,3.677,1622,2.799,1651,3.312,1663,2.799,1664,2.799,2013,3.016,2014,3.937,2015,2.41,2019,4.091,2020,2.901,2021,2.901,2022,2.901,2023,2.901,2026,4.254,2027,3.491,2028,4.254,2029,3.699,2030,4.254,2031,4.254,2032,5.351,2033,3.231,2034,2.901,2035,5.632,2036,4.393,2037,4.091,2038,2.901,2039,2.707,2040,4.254,2041,2.476,4211,4.497,4212,4.497,4213,4.497,4214,4.497,4215,4.497,4216,4.497]],["title/interfaces/TransactionSubmitResponse.html",[661,1.156,1875,2.886]],["body/interfaces/TransactionSubmitResponse.html",[0,0.251,3,0.053,4,0.047,5,0.047,10,0.13,11,0.415,15,1.111,18,0.224,19,0.005,20,0.424,30,1.159,31,1.445,34,0.19,36,0.086,37,1.421,73,1.68,89,0.004,90,0.004,114,1.995,134,2.871,171,2.52,173,1.989,175,2.762,178,2.46,179,2.871,181,2.571,184,1.078,201,1.671,202,2.731,203,2.328,209,2.433,212,1.703,268,1.703,271,2.925,281,3.043,284,2.264,305,2.872,345,2.31,370,2.31,371,2.827,387,3.8,649,4.015,650,2.912,651,3.612,661,1.657,662,2.03,663,1.463,767,3.412,770,3.362,771,2.066,777,2.694,778,3.72,779,2.359,787,3.548,789,3.548,797,4.666,801,3.412,802,4.666,803,4.413,804,4.574,805,4.268,816,2.694,830,2.769,857,4.1,974,2.762,1017,2.223,1137,2.721,1362,3.162,1442,3.184,1468,5.873,1554,2.694,1592,3.8,1617,3.527,1624,3.978,1626,3.883,1653,2.631,1654,3.8,1742,2.571,1856,4.1,1857,4.372,1858,4.372,1860,4.372,1862,4.372,1863,4.372,1864,3.292,1866,4.372,1867,2.912,1869,4.372,1871,5.497,1872,3.883,1873,2.694,1874,5.497,1875,4.136,1876,4.372,1877,4.372,1878,6.612,1879,4.372,1880,4.372,1881,4.372,1882,4.177,1883,4.372,1884,4.372,1885,4.372,1886,4.1,1887,4.372,1888,4.1,1889,3.703,1890,4.1,1891,4.372,1892,2.995,1893,2.995,1894,6.612,1895,3.412,1896,4.372,1897,3.292]],["title/interfaces/TransactionSubmitResponse-1.html",[407,1.076,661,0.963,1875,2.403]],["body/interfaces/TransactionSubmitResponse-1.html",[0,0.112,3,0.023,4,0.021,5,0.021,10,0.12,11,0.226,12,0.677,15,0.982,18,0.232,19,0.005,20,0.416,22,0.982,29,0.218,30,0.384,31,0.999,34,0.199,35,0.485,36,0.071,37,1.407,46,0.789,48,0.946,50,0.73,54,2.833,56,1.615,58,1.713,62,0.659,65,0.885,80,0.678,82,1.485,86,2.04,89,0.002,90,0.002,104,1.047,105,2.48,108,1.168,109,1.141,111,1.486,112,0.917,114,1.453,131,2.794,134,1.56,135,1.255,156,1.82,171,2.388,173,2.158,174,1.292,177,1.069,179,0.951,184,0.478,191,2.383,194,1.292,201,0.741,202,2.357,203,1.941,209,2.784,210,1.62,212,1.363,241,0.802,244,1.485,246,1.337,248,0.933,251,1.146,254,0.842,264,0.64,266,1.849,267,1.205,268,0.926,271,1.59,273,1.755,281,2.537,284,1.887,286,2.065,288,1.092,294,1.329,297,1.168,303,1.684,305,2.391,307,1.59,312,1.329,318,1.146,322,1.196,342,1.849,345,1.597,347,2.627,358,4.007,362,2.368,370,1.597,371,2.073,377,2.216,399,1.792,400,3.064,403,2.322,405,1.022,407,2.01,408,0.901,464,1.329,493,1.047,582,1.413,583,1.295,637,3.051,645,1.461,650,1.292,651,1.196,661,1.574,662,0.901,663,0.649,665,1.949,666,1.226,667,1.329,669,1.329,670,1.329,671,1.874,677,2.627,680,1.413,686,1.226,687,1.226,688,1.226,689,1.226,692,2.637,694,2.951,698,1.515,717,1.258,723,1.006,770,2.061,771,0.917,772,1.873,774,2.182,775,2.48,776,2.509,777,1.196,778,1.792,779,2.53,780,1.917,781,1.168,814,1.092,826,1.369,830,2.216,856,1.873,926,1.461,1017,2.385,1070,1.295,1133,1.461,1137,1.881,1156,2.486,1168,1.684,1183,1.461,1266,2.758,1317,1.226,1362,1.047,1408,1.461,1430,3.707,1431,4.428,1455,1.369,1493,2.56,1549,3.624,1554,1.196,1589,1.413,1592,1.258,1605,1.116,1606,1.092,1611,1.226,1617,3.117,1624,1.168,1635,2.065,1651,2.013,1653,2.438,1654,1.258,1665,1.575,1666,1.575,1667,1.413,1688,1.258,1691,1.719,1707,1.461,1726,1.575,1730,1.575,1732,3.288,1735,3.051,1736,2.978,1741,2.182,1742,3.045,1744,1.515,1746,1.461,1748,1.413,1804,2.013,1821,2.585,1831,1.461,1842,2.248,1845,1.413,1864,1.461,1867,1.292,1873,2.497,1875,2.248,1882,1.226,1889,1.226,1892,2.182,1893,1.329,1897,1.461,1926,1.329,1927,1.329,1931,2.697,1935,3.123,1960,2.383,2015,1.258,2033,1.196,2036,2.963,2041,1.292,2042,2.585,2043,1.413,2044,1.643,2045,2.32,2046,1.461,2047,1.461,2048,1.329,2049,1.329,2050,1.369,2051,3.041,2052,1.461,2053,2.486,2054,1.515,2055,1.643,2056,2.486,2057,1.643,2058,1.575,2059,1.643,2060,1.461,2061,1.369,2062,1.515,2063,1.461,2064,2.399,2065,1.413,2066,1.369,2067,1.369,2068,1.413,2069,1.413,2070,1.413,2071,1.413,2072,1.643,2073,1.575,2074,2.585,2075,1.575,2076,1.643,2077,2.698,2078,1.575,2079,1.643,2080,3.288,2081,1.575,2082,1.575,2083,1.575,2084,1.575,2085,1.575,2086,2.698,2087,1.461,2088,1.643,2089,1.461,2090,1.461,2091,3.288,2092,1.575,2093,1.575,2094,1.575,2095,1.575,2096,2.585,2097,1.575,2098,1.643,2099,1.643,2100,2.585,2101,4.714,2102,2.698,2103,3.432,2104,1.643,2105,1.643,2106,1.643,2107,1.643,2108,1.515,2109,3.715,2110,2.951,2111,2.32,2112,2.32,2113,2.951,2114,2.585,2115,2.585,2116,2.486,2117,2.013,2118,2.248,2119,2.698,2120,2.399,2121,2.399,2122,2.486,2123,3.415,2124,2.627,2125,2.951,2126,1.643,2127,1.292,2128,1.461,2129,2.121,2130,1.575,2131,1.575,2132,1.515,2133,1.461,2134,1.329,2135,1.329,2136,1.369,2137,1.369,2138,1.369,2139,1.329,2140,1.575,2141,4.386,2142,2.698,2143,1.643,2144,1.168,2145,1.369,2146,1.643,2147,3.9,2148,1.643,2149,3.432,2150,1.413,2151,1.575,2152,1.643,2153,1.575,2154,1.643,2155,1.643,2156,1.575,2157,1.575,2158,1.643,2159,1.575,2160,1.643,2161,1.643,2162,1.643,2163,2.585,2164,2.32,2165,1.643,2166,2.698,2167,3.288,2168,4.714,2169,3.972,2170,3.972,2171,4.386,2172,2.585,2173,2.585,2174,2.486,2175,2.698,2176,2.585,2177,2.585,2178,2.698,2179,2.698,2180,2.698,2181,3.972,2182,2.698,2183,2.698,2184,1.643,2185,1.643,2186,1.413,2187,1.643,2188,2.698,2189,1.643,2190,2.698,2191,4.203,2192,1.643,2193,1.643,2194,1.643,2195,1.643,2196,1.643,2197,1.643,2198,1.643,2199,1.643,2200,1.515,2201,3.432,2202,1.643,2203,1.643,2204,1.515,2205,1.643,2206,1.643,2207,1.643,2208,1.643,2209,1.643,2210,1.168,2211,2.585,2212,2.399,2213,2.698,2214,1.413,2215,2.121,2216,1.643]],["title/classes/TransactionSubmitResponseDto.html",[0,0.235,1664,3.079]],["body/classes/TransactionSubmitResponseDto.html",[0,0.448,2,0.735,3,0.048,4,0.043,5,0.043,10,0.117,11,0.386,12,0.745,18,0.256,19,0.005,20,0.439,23,0.312,34,0.168,36,0.091,48,1.657,49,2.313,56,1.355,60,1.867,89,0.003,90,0.003,111,1.239,151,0.931,156,2.116,171,2.392,173,2.294,177,3.448,188,1.038,203,2.626,244,1.563,251,1.77,259,2.838,260,2.838,261,1.279,262,3.723,263,3.378,264,1.297,266,2.856,267,1.824,281,2.933,318,2.555,362,2.094,390,3.17,391,2.808,392,2.792,398,2.039,401,3.389,403,1.992,405,1.364,407,1.724,408,1.77,493,2.122,663,1.825,671,1.845,673,5.09,677,2.253,692,2.808,772,3.975,775,2.884,776,2.327,778,3.068,779,3.831,780,3.282,781,2.367,830,2.577,1070,1.599,1078,1.892,1168,3.31,1622,2.962,1651,3.446,1663,2.962,1664,4.106,2013,3.192,2014,3.536,2015,2.55,2019,4.257,2020,3.07,2021,3.07,2022,3.07,2023,3.07,2026,4.425,2027,3.599,2028,4.425,2029,3.848,2030,3.192,2031,4.425,2032,4.425,2033,2.424,2034,3.07,2035,5.734,2036,4.485,2037,4.257,2038,3.07,2039,2.864,2040,4.425,2041,2.62,4217,4.759,4218,4.759]],["title/controllers/TransactionsController.html",[141,1.898,4219,4.09]],["body/controllers/TransactionsController.html",[0,0.297,3,0.062,4,0.056,5,0.056,10,0.153,12,0.568,13,1.462,15,1.56,18,0.175,19,0.005,20,0.381,23,0.567,28,1.006,29,0.578,30,1.416,34,0.203,36,0.062,50,2.695,89,0.004,90,0.004,112,3.669,141,2.394,143,2.353,146,3.343,151,1.694,158,3.267,171,2.281,173,2.215,179,2.526,183,3.532,184,1.271,185,5.481,187,3.258,188,1.361,189,3.343,190,3.882,191,4.21,193,4.327,203,1.63,205,4.117,206,3.532,212,2.305,246,3.16,281,2.696,663,2.518,785,3.103,1435,5.527,1691,3.521,3456,6.527,3585,7.071,4219,6.527,4220,6.238,4221,9.106,4222,9.106,4223,7.071,4224,6.238,4225,7.527,4226,6.238,4227,6.238,4228,6.238,4229,5.586,4230,6.238,4231,6.238,4232,5.586,4233,6.238,4234,6.238,4235,6.238,4236,6.238,4237,6.238,4238,6.238,4239,6.238,4240,6.238,4241,6.238]],["title/modules/TransactionsModule.html",[221,1.689,234,2.886]],["body/modules/TransactionsModule.html",[0,0.332,3,0.07,4,0.062,5,0.062,19,0.005,34,0.222,36,0.07,89,0.004,90,0.004,111,1.589,143,3.192,171,1.748,184,1.422,191,5.001,193,3.316,221,3.111,223,3.177,224,3.177,225,3.316,226,3.316,227,3.245,228,4.329,229,4.329,234,5.822,235,4.022,236,3.316,237,3.177,239,3.391,240,3.555,241,2.383,244,2.005,245,3.739,248,2.774,663,1.93,1122,4.2,3606,6.248,4219,7.531,4232,6.248,4242,6.248,4243,6.248,4244,6.248,4245,6.978,4246,6.978]],["title/injectables/TransactionsService.html",[191,2.404,268,1.189]],["body/injectables/TransactionsService.html",[0,0.159,3,0.033,4,0.03,5,0.03,10,0.082,12,0.845,13,0.943,15,1.594,18,0.277,19,0.005,20,0.446,23,0.608,28,1.496,29,0.86,30,1.517,31,2.019,34,0.187,35,0.689,36,0.033,37,1.532,48,1.876,50,1.921,54,2.865,56,1.449,58,1.007,59,2.14,60,0.618,82,1.637,86,1.78,89,0.003,90,0.003,111,1.651,112,1.303,149,3.947,156,2.91,157,4.301,171,2.324,173,0.936,179,1.351,184,0.68,191,2.475,193,4.451,201,1.608,202,1.892,203,1.613,209,2.504,212,2.206,241,1.139,244,1.463,245,1.787,248,1.326,251,1.739,268,1.223,269,1.402,273,4.005,275,4.787,277,3.984,281,2.944,284,1.569,286,1.787,288,1.551,290,2.237,293,4.801,297,1.659,299,2.335,300,2.152,301,4.458,305,2.075,307,3.07,344,2.757,369,2.757,374,2.449,405,0.601,407,0.871,533,4.912,640,2.757,641,2.757,663,2.59,671,1.683,747,5.265,839,2.368,1122,2.008,1137,1.28,1164,2.757,1184,2.586,1194,2.757,1196,2.757,1209,2.987,1210,2.987,2050,5.131,2073,2.237,2159,3.415,2176,2.237,2347,2.757,2350,3.947,2390,2.586,2428,2.987,2436,5.713,2475,4.559,2478,4.559,2527,7.308,2528,2.757,3658,3.947,4223,4.559,4229,4.559,4247,3.335,4248,5.092,4249,5.092,4250,5.092,4251,5.092,4252,5.092,4253,5.092,4254,5.092,4255,5.53,4256,5.092,4257,5.092,4258,3.335,4259,5.092,4260,3.335,4261,5.092,4262,3.335,4263,5.092,4264,3.335,4265,3.335,4266,5.092,4267,3.335,4268,5.092,4269,5.092,4270,3.335,4271,5.092,4272,3.335,4273,5.092,4274,3.335,4275,5.092,4276,3.335,4277,3.335,4278,3.335,4279,5.092,4280,3.335,4281,5.092,4282,3.335,4283,5.092,4284,3.335,4285,3.335,4286,3.335,4287,3.335,4288,3.335,4289,3.335,4290,3.335,4291,3.335,4292,3.335,4293,3.335,4294,3.335,4295,5.092,4296,5.092,4297,3.335,4298,3.335,4299,3.335,4300,5.092,4301,3.335,4302,3.335,4303,3.335,4304,3.335]],["title/classes/TxUpdateReq.html",[0,0.235,169,4.09]],["body/classes/TxUpdateReq.html",[0,0.449,2,1.173,3,0.076,4,0.068,5,0.068,10,0.186,11,0.521,18,0.213,19,0.005,20,0.391,23,0.497,34,0.198,36,0.076,89,0.005,90,0.005,144,4.051,151,1.484,169,7.356,260,2.497,261,2.04,264,2.069,281,3.224,2027,4.229,4305,7.589,4306,7.589,4307,7.589]],["title/classes/UpdateFieldsType1741946649594.html",[0,0.235,4308,4.43]],["body/classes/UpdateFieldsType1741946649594.html",[0,0.263,2,0.855,3,0.055,4,0.049,5,0.049,8,2.308,9,2.665,10,0.136,11,0.428,12,0.824,13,1.353,14,2.36,15,1.457,16,2.38,17,2.38,18,0.23,19,0.005,20,0.243,21,1.112,22,0.867,23,0.536,25,2.38,26,3.17,28,1.178,29,0.677,30,1.195,31,1.773,32,2.38,34,0.123,35,1.143,36,0.055,37,1.804,38,3.298,39,3.307,40,3.182,41,2.904,42,3.182,43,2.924,44,2.924,45,2.971,65,2.756,66,3.398,67,4.902,73,2.062,74,2.924,75,3.038,77,2.879,78,2.879,80,2.513,81,2.667,82,2.062,83,2.879,84,2.418,85,2.456,86,1.882,87,2.418,89,0.004,90,0.004,113,2.667,135,3.133,628,6.041,2250,6.746,2251,7.193,4308,7.792,4309,8.702,4310,5.535,4311,5.535,4312,5.535,4313,5.535]],["title/classes/UpdateProfileDto.html",[0,0.235,3878,3.632]],["body/classes/UpdateProfileDto.html",[0,0.395,2,0.765,3,0.05,4,0.044,5,0.078,10,0.122,11,0.397,12,0.839,18,0.267,19,0.005,20,0.423,22,1.063,23,0.603,29,0.908,34,0.185,36,0.068,60,1.814,89,0.003,90,0.003,132,3.732,135,2.709,151,1.802,188,1.08,246,3.254,254,1.775,255,3.372,259,2.7,260,2.631,261,1.331,262,3.087,264,1.35,266,1.867,267,1.051,318,2.951,332,5.605,390,3.096,391,2.867,392,3.203,394,4.989,395,4.275,401,3.335,405,1.621,408,2.153,1028,3.295,1064,4.898,1078,3.662,1168,2.963,1180,4.851,1348,5.677,1350,5.413,1356,5.187,1358,5.677,1410,4.548,1549,4.237,2033,3.454,2645,4.548,3061,6.106,3133,7.448,3767,5.677,3788,3.838,3866,5.605,3867,8.399,3868,4.434,3869,4.093,3872,6.753,3875,4.434,3876,4.093,3877,4.434,3878,4.978,3879,6.072,3880,6.072,3881,6.072,3882,6.072,3883,6.072,3884,5.256,3885,6.072,3886,6.072,3887,7.448,3888,4.978,3889,6.072,3890,6.072,3891,6.072,4314,4.951,4315,4.951,4316,4.951,4317,4.951,4318,4.951,4319,4.951,4320,6.78,4321,4.951,4322,4.951]],["title/classes/UpdateRelationto1742209228422.html",[0,0.235,4323,4.43]],["body/classes/UpdateRelationto1742209228422.html",[0,0.264,2,0.859,3,0.056,4,0.05,5,0.05,8,2.314,9,2.67,10,0.136,11,0.429,12,0.825,13,1.357,14,2.363,15,1.458,16,2.386,17,2.386,18,0.23,19,0.005,20,0.244,21,1.117,22,0.871,23,0.537,25,2.386,26,3.173,28,1.181,29,0.679,30,1.198,31,1.776,32,2.386,34,0.124,35,1.148,36,0.056,37,1.805,38,3.3,39,3.309,40,3.185,41,2.906,42,3.185,43,2.929,44,2.929,45,2.976,52,2.292,53,2.901,73,2.065,74,2.929,75,3.041,77,2.883,78,2.883,80,2.517,81,2.671,82,2.065,83,2.883,84,2.424,85,2.462,86,1.887,87,2.424,89,0.004,90,0.004,113,2.671,135,3.136,511,5.288,2696,6.56,4323,7.804,4324,8.715,4325,5.555,4326,5.555,4327,5.555,4328,5.555,4329,7.326,4330,7.326,4331,7.326]],["title/classes/UpdateType1742819100112.html",[0,0.235,4332,4.43]],["body/classes/UpdateType1742819100112.html",[0,0.285,2,0.925,3,0.06,4,0.053,5,0.053,8,2.429,9,2.767,10,0.147,11,0.45,12,0.845,13,1.424,14,2.411,15,1.488,16,2.505,17,2.505,18,0.238,19,0.005,20,0.263,21,1.203,22,0.938,23,0.556,25,2.505,26,3.218,28,1.24,29,0.713,30,1.257,31,1.827,32,2.505,34,0.133,35,1.236,36,0.06,37,1.738,38,2.966,39,3.185,40,3.235,41,2.707,42,3.235,43,3.014,44,3.014,45,3.062,73,2.125,74,3.014,75,2.832,77,2.966,78,2.966,80,2.59,81,2.748,82,2.125,83,2.966,84,2.544,85,2.584,86,1.981,87,2.544,89,0.004,90,0.004,4332,8.03,4333,8.967,4334,5.985,4335,5.985,4336,5.985,4337,5.985]],["title/classes/UpdateTypes1746532933340.html",[0,0.235,4338,4.43]],["body/classes/UpdateTypes1746532933340.html",[0,0.273,2,0.889,3,0.058,4,0.051,5,0.051,8,2.367,9,2.715,10,0.141,11,0.438,12,0.834,13,1.388,14,2.385,15,1.472,16,2.441,17,2.441,18,0.234,19,0.005,20,0.253,21,1.156,22,0.901,23,0.546,25,2.441,26,3.194,28,1.208,29,0.695,30,1.225,31,1.8,32,2.441,34,0.128,35,1.188,36,0.058,37,1.771,38,3.107,39,3.246,40,3.209,41,2.666,42,3.244,43,2.968,44,2.968,45,3.128,73,2.17,74,3.078,75,2.893,77,3.03,78,3.03,80,2.646,81,2.807,82,2.17,83,3.03,84,2.479,85,2.518,86,2.147,87,2.758,89,0.004,90,0.004,98,4.016,302,5.835,2656,6.711,3848,5.15,4338,7.909,4339,8.832,4340,5.751,4341,5.751,4342,5.751,4343,5.751]],["title/classes/UploadImageDto.html",[0,0.235,4344,4.43]],["body/classes/UploadImageDto.html",[0,0.356,2,1.157,3,0.075,4,0.067,5,0.09,10,0.184,11,0.517,18,0.248,19,0.005,20,0.388,23,0.49,34,0.167,36,0.075,60,1.634,89,0.005,90,0.005,151,1.464,188,1.633,253,5.496,259,2.477,1064,4.61,1382,6.481,1384,5.695,1549,4.497,4344,7.905,4345,8.827,4346,7.486,4347,8.827,4348,7.486]],["title/entities/User.html",[246,1.717,422,2.162]],["body/entities/User.html",[0,0.292,3,0.043,4,0.038,5,0.038,10,0.106,11,0.36,12,0.911,14,1.823,18,0.283,19,0.005,20,0.427,21,1.922,23,0.644,34,0.191,35,0.89,36,0.043,47,5.563,48,1.51,58,2.599,60,1.449,64,3.747,69,3.845,89,0.003,90,0.003,111,1.663,113,2.901,135,2.337,151,1.923,246,2.135,260,2.743,261,1.158,267,1.923,284,1.563,405,1.551,408,1.829,411,3.297,422,1.883,424,2.309,427,5.804,428,3.016,429,4.871,430,5.049,432,2.593,434,3.016,443,5.151,445,3.969,446,3.969,447,4.466,449,2.593,450,2.78,451,2.372,452,2.309,453,2.89,454,2.89,455,3.483,456,2.89,457,2.78,486,5.333,501,5.563,503,3.06,582,4.982,583,2.63,643,4.517,671,1.907,814,3.639,955,3.562,958,6.067,959,6.47,960,5.086,961,6.47,1190,5.086,1303,3.34,1348,3.163,1350,3.016,1356,5.249,1358,3.163,1360,6.47,1444,5.017,2259,3.562,2430,5.509,2648,5.932,2650,5.509,2651,5.509,2918,5.151,2928,5.932,2930,5.932,2957,5.509,3767,3.163,4164,3.858,4186,5.509,4187,7.009,4349,4.309,4350,6.426,4351,4.309,4352,4.309,4353,4.309,4354,4.309,4355,4.309,4356,4.309,4357,4.309,4358,4.309,4359,4.309,4360,4.309,4361,4.309,4362,4.309,4363,4.309,4364,4.309,4365,4.309,4366,4.309,4367,4.309,4368,4.309,4369,6.152,4370,4.309,4371,4.309,4372,4.309,4373,4.309,4374,4.309,4375,4.309,4376,4.309,4377,4.309,4378,4.309,4379,7.176,4380,4.309,4381,4.309,4382,4.309,4383,4.309]],["title/controllers/UsersController.html",[141,1.898,4384,4.09]],["body/controllers/UsersController.html",[0,0.212,3,0.045,4,0.04,5,0.083,10,0.109,12,0.764,13,1.167,14,2.018,15,1.54,18,0.223,19,0.005,20,0.322,23,0.549,28,1.352,29,0.777,30,1.519,34,0.207,36,0.045,48,1.216,54,2.976,60,1.745,82,2.165,89,0.003,90,0.003,141,1.71,143,1.681,146,2.388,151,1.64,154,4.493,158,3.162,166,5.501,178,2.93,179,1.804,180,3.12,181,2.166,183,2.523,184,0.908,187,2.327,188,0.972,189,2.388,190,2.774,203,1.164,205,3.984,206,4.499,209,2.262,210,3.659,211,5.126,212,2.014,246,3.02,284,2.211,378,3.133,416,4.065,500,3.272,785,2.217,850,5.239,855,5.623,862,2.875,863,2.875,1064,4.92,1137,3.049,1264,5.367,1285,5.117,1382,6.39,1384,5.896,1391,6.546,1392,6.546,1393,6.546,1394,6.546,1395,3.991,1396,3.991,1397,3.684,1401,6.043,1408,3.922,1409,5.643,1410,4.227,1411,5.643,2364,5.838,2422,7.304,3872,7.66,3878,5.834,3888,5.834,4225,6.569,4384,5.209,4385,4.456,4386,5.643,4387,5.643,4388,5.643,4389,6.546,4390,6.546,4391,4.456,4392,4.456,4393,4.456,4394,3.991,4395,6.301,4396,5.643,4397,4.456,4398,4.456,4399,4.456,4400,7.116,4401,4.456,4402,4.456,4403,4.456,4404,6.301,4405,4.456,4406,4.456,4407,4.456,4408,4.456,4409,4.456,4410,4.456,4411,4.456,4412,3.991,4413,3.991,4414,3.991,4415,4.456,4416,4.456,4417,4.456,4418,4.456,4419,4.456,4420,4.456,4421,4.456,4422,4.456,4423,4.456,4424,4.456,4425,4.456,4426,6.301,4427,4.456,4428,6.301,4429,4.456,4430,6.301,4431,4.456,4432,4.456]],["title/modules/UsersModule.html",[221,1.689,880,3.463]],["body/modules/UsersModule.html",[0,0.325,3,0.068,4,0.061,5,0.061,19,0.005,34,0.223,36,0.068,89,0.004,90,0.004,143,3.152,184,1.393,221,3.083,223,3.113,224,3.113,225,3.249,226,3.249,227,3.179,228,4.291,229,4.291,235,3.973,236,3.249,237,3.113,239,4.063,240,3.483,241,2.335,246,2.372,247,3.664,873,6.584,880,7.077,1281,6.123,1285,7.184,1444,4.733,1445,4.411,2918,5.203,2919,4.786,4384,7.464,4414,6.123,4433,6.123,4434,6.837,4435,6.123,4436,6.123,4437,6.837,4438,6.123,4439,6.837]],["title/injectables/UsersService.html",[268,1.189,1285,3.463]],["body/injectables/UsersService.html",[0,0.242,3,0.033,4,0.03,5,0.08,10,0.082,11,0.297,12,0.801,13,0.941,15,1.542,18,0.242,19,0.005,20,0.44,21,0.668,22,0.521,23,0.576,28,1.389,29,0.799,30,1.374,31,1.89,34,0.199,35,0.687,36,0.033,37,1.648,46,2.498,48,1.512,58,1.861,62,1.425,80,1.78,82,1.857,89,0.003,90,0.003,135,1.655,184,0.678,201,1.604,202,2.498,203,1.803,209,2.723,210,3.811,212,2.02,241,1.135,246,3.298,247,1.782,254,1.821,261,0.894,267,1.078,268,1.22,269,1.398,271,2.846,273,4.002,284,2.135,287,2.002,288,1.546,298,2.328,301,5.055,305,2.498,307,3.066,331,5.762,387,3.303,395,1.58,422,2.22,501,2.578,531,3.938,671,1.986,913,6.517,1017,1.398,1064,4.092,1137,1.276,1153,2.749,1285,3.556,1297,2.578,1298,2.749,1347,2.978,1355,2.978,1359,4.549,1382,5.753,1384,3.277,1399,5.468,1413,4.549,1444,4.616,1445,2.145,1458,4.549,1493,2.653,1499,2.749,1571,4.549,1573,4.549,1581,5.066,1583,3.938,1585,3.938,1586,4.549,1587,3.938,1952,3.407,2186,2.002,2422,3.938,2451,2.002,2497,4.199,2530,6.478,2645,4.134,2648,4.199,2889,5.52,2890,5.52,2907,2.978,2908,2.978,2918,2.07,2919,2.328,2922,2.978,2928,5.704,2930,6.478,2943,4.549,2974,4.549,2975,5.52,2977,5.52,2996,2.978,3061,4.525,3405,4.199,3716,2.978,3764,2.749,3872,4.778,3878,5.066,3888,3.73,4350,7.017,4386,4.549,4387,4.549,4388,4.549,4389,4.549,4390,4.549,4394,4.549,4396,2.978,4400,5.52,4412,2.978,4413,2.978,4440,3.325,4441,5.08,4442,5.08,4443,3.325,4444,5.08,4445,5.08,4446,3.325,4447,3.325,4448,5.08,4449,3.325,4450,5.08,4451,3.325,4452,3.325,4453,5.08,4454,3.325,4455,5.08,4456,3.325,4457,5.08,4458,3.325,4459,5.08,4460,3.325,4461,5.08,4462,3.325,4463,3.325,4464,3.325,4465,5.08,4466,5.08,4467,3.325,4468,3.325,4469,3.325,4470,3.325,4471,5.08,4472,3.325,4473,3.325,4474,3.325,4475,3.325,4476,3.325,4477,6.9,4478,5.08,4479,3.325,4480,3.325,4481,5.08,4482,5.08,4483,3.325,4484,6.164,4485,3.325,4486,6.164,4487,5.08,4488,3.325,4489,3.325,4490,5.08,4491,3.325,4492,3.325,4493,3.325,4494,3.325,4495,3.325,4496,3.325,4497,3.325,4498,3.325,4499,3.325,4500,3.325,4501,3.325,4502,3.325,4503,3.325,4504,3.325,4505,3.325,4506,5.08,4507,5.08,4508,5.08,4509,5.08,4510,5.08]],["title/classes/VaultAssetsSummaryDto.html",[0,0.235,3927,3.835]],["body/classes/VaultAssetsSummaryDto.html",[0,0.264,2,0.857,3,0.056,4,0.05,5,0.05,10,0.136,11,0.479,18,0.286,19,0.005,20,0.383,22,1.365,23,0.621,34,0.123,36,0.056,60,1.756,62,1.557,65,2.761,82,1.734,89,0.004,90,0.004,111,1.746,151,1.855,188,1.211,193,4.574,251,2.395,254,1.989,255,3.641,259,2.7,362,1.534,403,1.675,405,1.846,503,3.641,583,1.865,663,2.662,677,1.895,1017,3.077,1044,4.587,1048,4.301,1049,4.587,1070,2.927,1078,3.77,1180,5.081,1185,5.675,1736,3.479,2210,4.504,3409,5.374,3658,5.675,3927,5.675,3928,7.956,4026,6.555,4035,7.485,4042,6.772,4044,6.772,4046,6.772,4047,6.772,4114,5.675,4511,4.969,4512,5.548,4513,5.548,4514,5.548,4515,5.548,4516,5.548,4517,4.969,4518,4.969]],["title/interfaces/VaultConfig.html",[661,1.156,1658,3.632]],["body/interfaces/VaultConfig.html",[0,0.133,3,0.028,4,0.025,5,0.025,10,0.069,11,0.26,12,0.504,14,1.405,15,0.987,18,0.269,19,0.005,20,0.439,22,1.2,23,0.184,28,0.452,29,0.777,30,0.728,31,1.127,34,0.177,36,0.055,37,1.36,46,1.859,48,0.541,58,2.582,62,1.249,66,2.069,82,1.31,89,0.002,90,0.002,104,1.251,105,1.226,111,1.535,114,1.678,156,0.9,171,2.212,173,2.049,179,1.802,184,0.572,201,0.886,202,2.62,203,2,209,2.645,212,1.512,251,1.293,255,1.395,267,1.336,268,1.069,271,1.836,281,0.958,284,2.077,305,2.116,307,1.157,337,4.061,345,1.801,346,1.882,362,1.741,370,1.801,371,2.627,377,2.459,400,3.013,403,2.397,405,1.646,406,2.77,407,2.427,573,2.678,625,2.871,661,1.04,662,1.077,663,0.776,666,1.465,667,1.589,669,1.589,670,1.589,671,1.672,677,2.793,680,1.689,686,1.465,687,1.465,688,1.465,689,1.465,715,1.964,717,1.503,718,2.115,724,2.06,770,2.325,771,1.096,775,2.751,776,2.22,814,2.572,830,2.681,839,2.927,856,2.163,937,1.81,974,2.888,997,3.568,1017,2.646,1070,1.859,1168,1.226,1362,1.251,1384,2.871,1455,1.636,1549,2.817,1554,1.429,1617,1.395,1624,2.751,1653,2.751,1654,1.503,1658,4.061,1668,1.882,1736,1.333,1742,3.336,1748,1.689,1767,5.321,1804,1.465,1867,1.544,1882,2.888,1889,1.465,1892,1.589,1893,2.52,1895,1.81,1931,2.628,1960,1.364,2043,1.689,2045,2.678,2046,1.746,2047,1.746,2048,1.589,2049,1.589,2051,2.964,2052,1.746,2060,1.746,2061,1.636,2063,1.746,2064,4.546,2065,1.689,2066,1.636,2067,1.636,2068,3.789,2069,1.689,2070,1.689,2087,2.77,2089,2.77,2090,2.77,2109,3.585,2110,3.789,2111,3.329,2112,3.329,2113,1.689,2117,3.287,2118,3.672,2120,2.77,2121,2.77,2123,4.397,2124,3.373,2125,3.789,2127,2.45,2128,2.77,2129,3.465,2133,3.442,2134,2.52,2135,3.132,2136,3.226,2137,3.226,2138,3.226,2139,3.132,2144,1.395,2145,1.636,2147,1.746,2212,3.918,2214,2.678,2215,2.45,2358,2.77,2541,2.175,2683,2.871,2695,1.882,2743,3.115,2750,2.985,2758,3.115,2759,3.115,2760,3.115,2761,4.407,2764,4.407,2765,3.115,2766,1.964,2767,1.964,2768,1.882,2769,1.964,2770,1.964,2771,1.964,2772,3.115,2773,1.882,2774,1.964,2775,1.882,2776,1.964,2777,3.115,2792,2.06,2933,1.81,3379,3.115,3393,3.45,3497,5.663,3502,2.175,3609,4.88,3610,2.175,3650,6.629,3651,2.175,4519,2.175,4520,5.674,4521,5.674,4522,5.674,4523,5.674,4524,5.674,4525,5.04,4526,3.45,4527,2.175,4528,2.175,4529,2.319,4530,4.572,4531,4.622,4532,3.45,4533,2.319,4534,4.288,4535,2.175,4536,2.319,4537,2.319,4538,2.175,4539,2.319,4540,6.328,4541,3.679,4542,2.319,4543,2.319,4544,2.175,4545,2.175,4546,2.175,4547,3.45,4548,2.175,4549,2.319,4550,2.319,4551,3.45,4552,3.679,4553,5.204,4554,3.679,4555,3.679,4556,2.319,4557,5.204,4558,3.679,4559,2.319,4560,2.319,4561,3.679,4562,3.679,4563,2.319,4564,2.319,4565,2.319,4566,2.319,4567,4.572,4568,2.319,4569,3.679,4570,3.679,4571,2.319,4572,2.319,4573,2.319,4574,2.319,4575,2.319,4576,2.06,4577,2.319,4578,2.319,4579,2.319,4580,2.319,4581,2.319,4582,2.319,4583,2.319]],["title/interfaces/VaultCreateConfig.html",[661,1.156,4532,3.835]],["body/interfaces/VaultCreateConfig.html",[0,0.133,3,0.028,4,0.025,5,0.025,10,0.069,11,0.26,12,0.504,14,1.405,15,0.987,18,0.269,19,0.005,20,0.439,22,1.2,23,0.184,28,0.452,29,0.777,30,0.728,31,1.127,34,0.177,36,0.055,37,1.36,46,1.859,48,0.541,58,2.582,62,1.249,66,2.069,82,1.31,89,0.002,90,0.002,104,1.251,105,1.226,111,1.535,114,1.678,156,2.019,171,2.212,173,2.049,179,1.802,184,0.572,201,0.886,202,2.62,203,2,209,2.645,212,1.512,251,1.293,255,1.395,267,1.336,268,1.069,271,1.836,281,0.958,284,2.077,305,2.116,307,1.157,337,4.061,345,1.801,346,1.882,362,1.741,370,1.801,371,2.627,377,2.459,400,3.013,403,2.072,405,1.646,406,2.77,407,2.427,573,2.678,625,2.871,661,1.04,662,1.077,663,0.776,666,1.465,667,1.589,669,1.589,670,1.589,671,1.672,677,2.793,680,1.689,686,1.465,687,1.465,688,1.465,689,1.465,715,1.964,717,1.503,718,2.115,724,2.06,770,2.325,771,1.096,775,2.751,776,2.22,814,2.572,830,2.681,839,2.927,856,2.163,937,1.81,974,2.888,997,3.568,1017,2.646,1070,1.859,1168,1.226,1362,1.251,1384,2.871,1455,1.636,1549,2.817,1554,1.429,1617,1.395,1624,2.751,1653,2.751,1654,1.503,1658,3.267,1668,1.882,1736,1.333,1742,3.336,1748,1.689,1767,5.321,1804,1.465,1867,1.544,1882,2.888,1889,1.465,1892,1.589,1893,2.52,1895,1.81,1931,2.628,1960,1.364,2043,1.689,2045,2.678,2046,1.746,2047,1.746,2048,1.589,2049,1.589,2051,2.964,2052,1.746,2060,1.746,2061,1.636,2063,1.746,2064,4.546,2065,1.689,2066,1.636,2067,1.636,2068,3.789,2069,1.689,2070,1.689,2087,2.77,2089,2.77,2090,2.77,2109,3.585,2110,3.789,2111,3.329,2112,3.329,2113,1.689,2117,3.287,2118,3.672,2120,2.77,2121,2.77,2123,4.397,2124,3.373,2125,3.789,2127,2.45,2128,2.77,2129,3.465,2133,3.442,2134,2.52,2135,3.132,2136,3.226,2137,3.226,2138,3.226,2139,3.132,2144,1.395,2145,1.636,2147,1.746,2212,3.918,2214,2.678,2215,2.45,2358,2.77,2541,2.175,2683,2.871,2695,1.882,2743,3.115,2750,2.985,2758,3.115,2759,3.115,2760,3.115,2761,4.407,2764,4.407,2765,3.115,2766,1.964,2767,1.964,2768,1.882,2769,1.964,2770,1.964,2771,1.964,2772,3.115,2773,1.882,2774,1.964,2775,1.882,2776,1.964,2777,3.115,2792,2.06,2933,1.81,3379,3.115,3393,3.45,3497,5.663,3502,2.175,3609,2.175,3610,2.175,3650,6.629,3651,2.175,4519,2.175,4520,5.674,4521,5.674,4522,5.674,4523,5.674,4524,5.674,4525,5.04,4526,3.45,4527,2.175,4528,2.175,4529,2.319,4530,4.572,4531,4.622,4532,4.288,4533,5.204,4534,4.288,4535,2.175,4536,2.319,4537,2.319,4538,2.175,4539,2.319,4540,6.328,4541,3.679,4542,2.319,4543,2.319,4544,2.175,4545,2.175,4546,2.175,4547,3.45,4548,2.175,4549,2.319,4550,2.319,4551,3.45,4552,3.679,4553,5.204,4554,3.679,4555,3.679,4556,2.319,4557,5.204,4558,3.679,4559,2.319,4560,2.319,4561,3.679,4562,3.679,4563,2.319,4564,2.319,4565,2.319,4566,2.319,4567,4.572,4568,2.319,4569,3.679,4570,3.679,4571,2.319,4572,2.319,4573,2.319,4574,2.319,4575,2.319,4576,2.06,4577,2.319,4578,2.319,4579,2.319,4580,2.319,4581,2.319,4582,2.319,4583,2.319]],["title/injectables/VaultInsertingService.html",[268,1.189,1667,2.978]],["body/injectables/VaultInsertingService.html",[0,0.102,3,0.021,4,0.019,5,0.019,10,0.113,11,0.208,12,0.76,13,0.66,15,1.328,18,0.251,19,0.005,20,0.417,21,0.429,22,1.008,23,0.502,28,1.036,29,0.632,30,1.051,31,1.31,34,0.195,35,0.441,36,0.068,37,1.361,46,0.718,48,0.885,50,0.664,54,2.774,56,1.524,58,1.616,60,0.395,62,0.599,65,0.805,80,0.617,82,1.41,86,1.973,89,0.002,90,0.002,104,0.952,105,2.339,108,1.062,109,1.038,111,1.438,112,0.834,114,1.344,131,2.654,134,1.443,135,1.161,156,2.062,171,2.383,173,2.149,174,1.175,177,0.972,179,0.865,184,0.435,191,3.315,194,1.175,201,1.125,202,2.663,203,2.181,209,2.752,210,1.927,212,1.286,241,0.729,244,1.41,246,1.236,248,0.849,251,1.072,254,0.766,264,0.582,266,1.729,267,1.136,268,0.856,269,0.898,271,2.208,273,2.437,281,2.032,284,1.886,286,1.909,288,0.993,294,1.209,297,1.062,303,1.557,305,2.292,307,1.47,312,1.209,318,1.06,322,1.088,342,1.729,345,1.493,347,2.457,358,3.9,362,2.308,370,1.493,371,1.968,377,2.09,399,1.657,400,2.948,403,2.241,405,0.964,407,1.94,408,0.833,464,1.209,493,0.952,582,1.285,583,1.197,637,2.854,645,1.329,650,1.175,651,1.088,661,1.502,663,2.176,665,1.823,666,1.115,667,1.209,669,1.209,670,1.209,671,1.808,677,2.535,680,1.285,686,1.115,687,1.115,688,1.115,689,1.115,692,2.529,694,2.76,698,1.378,717,2.457,723,0.915,768,1.245,770,2.867,771,0.834,772,1.732,774,3.031,775,2.339,776,2.405,777,1.088,778,1.657,779,2.387,780,1.772,781,1.062,814,0.993,826,2.078,830,2.324,832,2.762,833,2.762,856,1.732,926,1.329,1017,2.501,1070,1.197,1133,2.218,1137,1.759,1156,2.299,1168,1.557,1183,1.329,1266,2.601,1317,1.115,1362,0.952,1408,1.329,1430,3.539,1431,4.245,1455,1.245,1493,2.394,1549,3.475,1554,1.815,1589,1.285,1592,1.144,1605,1.015,1606,0.993,1611,1.115,1617,3.198,1624,1.062,1635,2.868,1640,2.218,1651,2.795,1653,2.662,1654,1.909,1665,1.432,1666,1.432,1667,2.145,1688,1.144,1691,1.589,1707,1.329,1726,1.432,1730,1.432,1732,3.075,1735,2.854,1736,2.828,1741,3.031,1742,3.608,1744,1.378,1746,1.329,1748,1.285,1804,1.861,1821,2.39,1831,1.329,1842,2.078,1845,1.285,1864,2.218,1867,1.961,1873,2.336,1875,1.245,1882,1.115,1889,1.115,1892,2.018,1893,1.209,1897,1.329,1926,1.209,1927,1.209,1931,2.544,1935,2.946,1960,2.228,2015,1.144,2033,1.088,2036,2.795,2041,1.175,2042,2.39,2043,4.735,2044,1.495,2045,2.145,2046,1.329,2047,1.329,2048,1.209,2049,1.209,2050,1.245,2051,2.868,2052,1.329,2053,2.299,2054,1.378,2055,1.495,2056,2.299,2057,1.495,2058,1.432,2059,2.494,2060,2.854,2061,2.674,2062,2.958,2063,1.329,2064,2.218,2065,1.285,2066,1.245,2067,1.245,2068,1.285,2069,1.285,2070,1.285,2071,1.285,2072,1.495,2073,1.432,2074,2.39,2075,1.432,2076,1.495,2077,2.494,2078,1.432,2079,1.495,2080,3.075,2081,1.432,2082,1.432,2083,1.432,2084,1.432,2085,1.432,2086,2.494,2087,1.329,2088,1.495,2089,1.329,2090,1.329,2091,3.075,2092,1.432,2093,1.432,2094,1.432,2095,1.432,2096,2.39,2097,1.432,2098,1.495,2099,1.495,2100,2.39,2101,4.5,2102,2.494,2103,3.21,2104,1.495,2105,1.495,2106,1.495,2107,1.495,2108,1.378,2109,3.562,2110,2.76,2111,2.145,2112,2.145,2113,2.76,2114,2.39,2115,2.39,2116,2.299,2117,1.861,2118,2.078,2119,2.494,2120,2.218,2121,2.218,2122,2.299,2123,3.222,2124,2.457,2125,2.76,2126,1.495,2127,1.175,2128,1.329,2129,1.961,2130,1.432,2131,1.432,2132,1.378,2133,1.329,2134,1.209,2135,1.209,2136,1.245,2137,1.245,2138,1.245,2139,1.209,2140,1.432,2141,4.165,2142,2.494,2143,1.495,2144,1.062,2145,1.245,2146,1.495,2147,3.703,2148,1.495,2149,3.21,2150,1.285,2151,1.432,2152,1.495,2153,1.432,2154,1.495,2155,1.495,2156,1.432,2157,1.432,2158,1.495,2159,1.432,2160,1.495,2161,1.495,2162,2.494,2163,2.39,2164,2.145,2165,1.495,2166,2.494,2167,3.075,2168,4.5,2169,3.747,2170,3.747,2171,4.165,2172,2.39,2173,2.39,2174,2.299,2175,2.494,2176,2.39,2177,2.39,2178,2.494,2179,2.494,2180,2.494,2181,3.747,2182,2.494,2183,2.494,2184,1.495,2185,2.494,2186,1.285,2187,1.495,2188,2.494,2189,1.495,2190,2.494,2191,3.991,2192,1.495,2193,1.495,2194,1.495,2195,1.495,2196,1.495,2197,1.495,2198,1.495,2199,1.495,2200,1.378,2201,3.21,2202,1.495,2203,1.495,2204,1.378,2205,1.495,2206,1.495,2207,1.495,2208,2.494,2209,1.495,2210,1.062,2211,2.39,2212,2.218,2213,2.494,2214,1.285,2215,1.961,2216,1.495,2810,1.765,4584,3.563,4585,3.563,4586,3.563,4587,3.563,4588,2.135,4589,2.135,4590,2.135,4591,2.135,4592,2.135,4593,2.135,4594,2.135,4595,2.135]],["title/injectables/VaultManagingService.html",[268,1.189,1668,3.318]],["body/injectables/VaultManagingService.html",[0,0.124,3,0.026,4,0.023,5,0.023,10,0.064,11,0.246,12,0.705,13,0.778,14,1.339,15,1.338,18,0.266,19,0.005,20,0.43,21,0.525,22,1.213,23,0.559,28,1.14,29,0.614,30,1.157,31,1.442,34,0.172,36,0.053,37,1.322,46,2.03,48,0.81,58,2.529,60,0.483,62,1.178,66,1.953,82,1.249,89,0.002,90,0.002,104,1.164,105,1.141,111,1.602,114,1.584,156,0.837,158,0.984,171,2.276,173,2.17,179,1.701,184,0.532,201,1.327,202,2.902,203,2.374,209,2.609,212,1.451,251,1.232,255,1.298,267,1.283,268,1.009,269,1.097,271,2.492,281,0.891,284,2.128,305,2.03,307,1.077,337,3.897,345,1.717,346,1.751,362,1.671,370,1.717,371,2.559,377,2.359,400,2.918,403,1.999,405,1.537,406,2.614,407,2.394,573,2.528,625,2.71,661,0.982,663,2.36,666,1.363,667,1.478,669,1.478,670,1.478,671,1.613,677,2.726,680,1.571,686,1.363,687,1.363,688,1.363,689,1.363,715,1.827,717,2.825,718,1.996,724,1.916,770,2.974,771,1.019,775,2.64,776,2.13,814,2.451,830,2.763,834,1.916,839,2.809,856,2.041,937,1.684,974,2.753,997,3.4,1017,2.783,1070,1.771,1168,1.141,1362,1.164,1384,2.71,1455,1.522,1549,2.685,1554,2.14,1617,2.089,1624,2.622,1653,3.005,1654,2.251,1658,5.194,1668,2.817,1736,1.24,1742,3.881,1748,1.571,1767,3.256,1804,1.363,1867,2.312,1882,2.753,1889,1.363,1892,1.478,1893,2.378,1895,1.684,1931,2.505,1960,1.268,2043,5.137,2045,2.528,2046,1.624,2047,1.624,2048,1.478,2049,1.478,2051,2.825,2052,1.624,2060,3.281,2061,3.074,2063,1.624,2064,4.403,2065,1.571,2066,1.522,2067,1.522,2068,3.636,2069,1.571,2070,1.571,2087,2.614,2089,2.614,2090,2.614,2109,3.458,2110,3.636,2111,3.173,2112,3.173,2113,1.571,2117,3.155,2118,3.524,2120,2.614,2121,2.614,2123,4.258,2124,3.237,2125,3.636,2127,2.312,2128,2.614,2129,3.325,2133,3.281,2134,2.378,2135,2.985,2136,3.074,2137,3.074,2138,3.074,2139,2.985,2144,1.298,2145,1.522,2147,1.624,2212,3.76,2214,2.528,2215,2.312,2358,2.614,2541,2.023,2683,2.71,2695,1.751,2743,2.94,2750,2.817,2758,2.94,2759,2.94,2760,2.94,2761,4.229,2764,4.229,2765,2.94,2766,1.827,2767,1.827,2768,1.751,2769,1.827,2770,1.827,2771,1.827,2772,2.94,2773,1.751,2774,1.827,2775,1.751,2776,1.827,2777,2.94,2792,1.916,2933,2.71,3379,2.94,3393,4.086,3497,4.086,3502,2.023,3609,2.023,3610,4.086,3650,6.494,3651,2.023,4519,2.023,4520,3.472,4521,3.472,4522,3.472,4523,3.472,4524,3.472,4525,3.084,4526,3.256,4527,2.023,4528,2.023,4529,2.157,4530,4.357,4531,4.435,4532,4.683,4533,2.157,4534,4.086,4535,2.023,4536,3.472,4537,4.357,4538,2.023,4539,3.472,4540,6.149,4541,3.472,4542,2.157,4543,2.157,4544,2.023,4545,2.023,4546,2.023,4547,3.256,4548,2.023,4549,2.157,4550,2.157,4551,3.256,4552,3.472,4553,4.994,4554,3.472,4555,3.472,4556,2.157,4557,4.994,4558,3.472,4559,2.157,4560,2.157,4561,3.472,4562,3.472,4563,2.157,4564,2.157,4565,2.157,4566,2.157,4567,4.357,4568,3.472,4569,3.472,4570,3.472,4571,2.157,4572,3.472,4573,2.157,4574,2.157,4575,2.157,4576,1.916,4577,2.157,4578,2.157,4579,2.157,4580,2.157,4581,3.472,4582,2.157,4583,2.157,4596,4.2,4597,4.2,4598,4.2,4599,4.2,4600,4.2,4601,2.61,4602,2.61,4603,2.61,4604,2.61,4605,2.61,4606,2.61,4607,2.61,4608,2.61,4609,2.61,4610,2.61]],["title/classes/VaultShortResponse.html",[0,0.235,2913,4.09]],["body/classes/VaultShortResponse.html",[0,0.174,2,0.342,3,0.022,4,0.02,5,0.033,10,0.054,11,0.215,12,0.821,18,0.265,19,0.005,20,0.393,22,1.513,23,0.552,29,0.835,34,0.177,36,0.037,48,0.907,50,2.754,54,1.159,56,0.629,58,1.107,60,1.876,65,2.063,66,3.372,68,1.548,82,0.524,89,0.002,90,0.002,103,2.588,104,2.44,111,1.556,131,2.705,132,1.217,151,1.648,173,0.62,188,0.482,209,1.338,212,0.881,244,1.114,245,1.185,246,1.631,247,1.185,251,1.529,254,1.315,255,1.1,259,2.832,260,2.863,267,2.14,284,1.842,295,4.313,296,1.427,303,1.603,311,4.678,318,2.935,321,4.016,340,3.886,376,1.966,383,1.483,405,1.716,408,2.39,413,1.483,414,1.483,423,3.451,451,1.217,452,1.185,503,1.824,544,2.46,565,3.451,619,3.032,671,0.539,746,2.395,816,1.126,944,1.623,974,3.929,997,2.366,1001,1.98,1047,1.828,1063,1.483,1064,3.168,1078,3.351,1180,2.742,1211,3.451,1266,2.659,1350,3.29,1356,5.338,1371,1.714,1421,1.828,1444,3.923,1445,1.427,1736,1.051,1908,2.366,1944,2.14,1959,1.427,1960,1.075,2039,1.331,2071,3.293,2117,2.455,2451,6.068,2509,4.522,2546,1.714,2554,3.451,2593,1.548,2645,2.46,2677,4.454,2682,5.432,2773,1.483,2775,1.483,2797,1.714,2913,3.886,2915,1.828,2916,1.828,2917,1.828,2918,3.405,2919,1.548,2920,3.451,2921,1.828,2980,1.98,3061,2.693,3085,3.032,3123,7.824,3209,1.714,3365,3.886,3366,3.886,3377,1.98,3398,3.285,3409,1.623,3412,5.432,3658,1.714,3666,1.98,3767,4.016,3768,6.494,3781,1.98,3782,1.98,3783,4.209,3888,2.693,4028,4.899,4106,1.98,4114,2.844,4525,4.454,4611,2.211,4612,4.701,4613,4.701,4614,4.701,4615,4.701,4616,3.668,4617,2.211,4618,2.211,4619,2.211,4620,3.668,4621,2.211,4622,2.211,4623,2.211,4624,2.211,4625,3.668,4626,2.211,4627,2.211,4628,2.211,4629,3.668,4630,6.066,4631,2.211,4632,2.211,4633,2.211,4634,2.211,4635,2.211,4636,2.211,4637,4.209,4638,4.899,4639,7.252,4640,6.542,4641,1.98,4642,2.211,4643,2.211,4644,2.211,4645,4.701,4646,2.211,4647,2.211,4648,2.211,4649,3.668,4650,3.668,4651,3.668,4652,3.668,4653,2.211,4654,3.668,4655,3.668,4656,3.668,4657,3.668,4658,3.668,4659,4.701,4660,3.668,4661,3.668,4662,2.211,4663,3.668,4664,2.211,4665,2.211,4666,2.211,4667,2.211,4668,2.211,4669,2.211,4670,2.211,4671,2.211,4672,2.211,4673,2.211,4674,2.211,4675,2.211,4676,2.211,4677,2.211,4678,2.211,4679,2.211,4680,2.211,4681,2.211,4682,2.211,4683,2.211,4684,2.211,4685,2.211,4686,3.668,4687,2.211]],["title/classes/VaultStatusUpdate1745573712493.html",[0,0.235,4688,4.43]],["body/classes/VaultStatusUpdate1745573712493.html",[0,0.26,2,0.844,3,0.055,4,0.049,5,0.049,8,2.287,9,2.647,10,0.134,11,0.424,12,0.82,13,1.341,14,2.351,15,1.451,16,2.359,17,2.359,18,0.277,19,0.005,20,0.24,21,1.097,22,0.856,23,0.532,25,2.359,26,3.162,28,1.167,29,0.671,30,1.184,31,1.764,32,2.359,34,0.121,35,1.128,36,0.055,37,1.801,38,3.062,39,3.193,40,3.173,41,2.613,42,3.173,43,2.909,44,2.909,45,3.275,46,2.434,73,2.051,74,3.223,75,2.734,77,2.863,78,2.863,80,2.5,81,2.652,82,2.051,83,2.863,84,2.396,85,2.434,86,1.865,87,2.396,88,3.368,89,0.004,90,0.004,98,3.881,104,3.23,113,2.219,114,2.731,125,6.354,126,4.232,128,5.317,129,2.781,130,4.672,131,3.23,132,3.986,133,4.672,135,2.359,136,5.069,137,4.232,138,6.71,139,4.232,140,4.232,4688,7.75,4689,8.655,4690,5.459,4691,5.459,4692,5.459,4693,5.459]],["title/controllers/VaultsController.html",[141,1.898,4694,4.09]],["body/controllers/VaultsController.html",[0,0.145,3,0.03,4,0.027,5,0.027,10,0.075,12,0.846,13,0.879,14,1.206,15,1.442,18,0.241,19,0.005,20,0.391,21,1.725,23,0.562,28,1.383,29,0.795,30,1.59,31,0.967,34,0.198,36,0.03,37,1.269,46,1.595,48,1.576,54,3.046,60,1.767,64,3.95,69,4.053,89,0.002,90,0.002,103,2.613,105,2.879,111,1.871,112,3.557,129,2.418,130,4.249,131,2.117,132,2.613,135,2.997,141,1.169,143,1.149,146,1.632,151,1.678,154,4.598,158,2.484,166,5.877,171,1.189,175,3.439,178,3.32,179,1.233,181,2.307,182,5.831,183,1.724,184,0.621,187,1.59,188,0.665,189,1.632,190,1.895,191,2.835,192,1.59,193,1.447,194,1.676,201,0.962,202,2.018,203,1.721,205,4.078,206,4.859,209,2.443,210,3.868,211,5.536,212,2.1,246,2.024,255,4.53,271,1.958,284,0.774,303,2.075,305,1.595,307,1.256,317,3.68,345,1.546,347,1.632,351,3.485,370,1.546,371,2.362,378,3.501,407,1.24,411,2.544,651,3.853,746,2.418,816,2.418,850,5.262,855,5.756,862,1.965,863,1.965,1097,4.251,1112,5.223,1113,5.223,1137,3.293,1140,2.613,1141,3.323,1158,2.727,1178,2.132,1180,3.842,1592,1.632,1630,4.251,2150,3.964,2314,3.68,2318,2.727,2360,4.251,2402,2.727,2785,3.924,2795,4.251,2883,4.282,2887,4.251,2905,5.898,2909,2.727,2912,2.727,2932,6.773,2998,4.251,3107,7.06,3169,7.094,3179,7.094,3200,3.68,3717,6.773,3784,6.529,4255,4.251,4694,3.924,4695,3.046,4696,5.833,4697,4.747,4698,5.833,4699,4.747,4700,4.747,4701,4.747,4702,4.747,4703,5.833,4704,3.046,4705,8.169,4706,7.563,4707,4.747,4708,4.747,4709,3.046,4710,3.046,4711,4.747,4712,3.046,4713,3.046,4714,6.586,4715,3.046,4716,3.046,4717,3.046,4718,3.046,4719,3.046,4720,3.046,4721,4.747,4722,3.046,4723,3.046,4724,3.046,4725,4.747,4726,3.046,4727,3.046,4728,3.046,4729,4.747,4730,3.046,4731,3.046,4732,3.046,4733,3.046,4734,3.046,4735,3.046,4736,4.747,4737,3.046,4738,3.046,4739,3.046,4740,4.747,4741,3.046,4742,3.046,4743,4.251,4744,3.046,4745,3.046,4746,3.046,4747,3.046,4748,4.822,4749,3.046,4750,3.046,4751,3.046,4752,3.046,4753,3.046,4754,3.046,4755,3.046,4756,3.046,4757,3.046,4758,3.046,4759,3.046,4760,3.046,4761,3.046,4762,4.747,4763,5.833,4764,5.833,4765,3.046,4766,3.046,4767,3.046,4768,3.046,4769,3.046,4770,3.046,4771,3.046,4772,4.747,4773,3.046,4774,3.046,4775,3.046,4776,3.046,4777,3.046,4778,3.046,4779,3.046,4780,3.046,4781,3.046,4782,3.046]],["title/modules/VaultsModule.html",[221,1.689,881,3.632]],["body/modules/VaultsModule.html",[0,0.28,3,0.059,4,0.053,5,0.053,19,0.005,34,0.229,36,0.059,89,0.004,90,0.004,111,1.427,143,2.867,184,1.198,192,3.971,193,2.795,221,2.877,223,2.677,224,2.677,225,2.795,226,2.795,227,2.735,228,4.004,229,4.004,234,5.511,235,3.614,236,2.795,237,2.677,239,3.695,240,2.996,241,2.008,242,3.945,244,1.802,245,3.151,246,2.638,247,3.151,248,2.338,311,3.794,423,5.582,873,6.337,874,5.88,881,7.547,906,4.318,1211,5.582,1444,4.305,1445,3.794,2554,5.582,2883,7.385,2915,4.862,2916,4.862,2917,4.862,2918,4.732,2919,4.117,2920,5.582,2921,4.862,3107,4.559,3281,6.937,4438,5.266,4694,6.966,4743,6.809,4748,8.315,4783,5.266,4784,5.266,4785,5.881,4786,5.266,4787,5.881,4788,5.881,4789,5.881,4790,5.881]],["title/classes/VoteReq.html",[0,0.235,3224,3.835]],["body/classes/VoteReq.html",[0,0.403,2,1.082,3,0.07,4,0.063,5,0.063,10,0.172,11,0.496,18,0.238,19,0.005,20,0.417,23,0.555,29,0.879,34,0.189,36,0.07,60,1.57,89,0.004,90,0.004,144,4.153,151,1.659,157,4.356,188,1.527,259,2.559,264,1.908,318,2.522,390,3.066,401,3.187,408,1.982,1078,3.372,2027,4.03,2613,6.574,2622,7.01,3209,6.574,3224,6.574,4791,7,4792,9.712,4793,9.712,4794,8.48,4795,7,4796,7,4797,7.01,4798,7,4799,7]],["title/controllers/VyfiController.html",[141,1.898,4800,4.09]],["body/controllers/VyfiController.html",[0,0.268,3,0.056,4,0.05,5,0.05,10,0.138,12,0.851,13,1.37,15,1.531,18,0.277,19,0.005,20,0.44,23,0.541,28,1.331,29,0.765,30,1.35,34,0.195,36,0.056,46,2.487,89,0.004,90,0.004,141,2.164,143,2.127,146,3.023,151,1.615,158,3.114,178,2.623,181,2.741,182,3.395,184,1.149,185,5.277,187,2.946,188,1.231,203,1.474,205,3.925,212,1.984,267,1.983,284,1.88,318,2.779,322,3.77,347,3.023,405,1.579,785,2.806,1154,3.948,2364,4.963,2582,7.091,2585,7.057,2593,6.664,2603,7.381,2797,6.796,4800,6.117,4801,5.641,4802,7.395,4803,6.626,4804,6.626,4805,5.641,4806,8.366,4807,8.366,4808,7.4,4809,7.4,4810,5.641,4811,5.641,4812,5.641,4813,5.641,4814,5.051,4815,7.4,4816,5.641,4817,5.641,4818,5.051,4819,5.641,4820,5.641,4821,6.626,4822,8.767,4823,7.4,4824,5.051,4825,6.063,4826,5.051,4827,5.641,4828,5.641,4829,5.641,4830,5.641,4831,5.641,4832,5.641,4833,5.641,4834,5.641,4835,5.641,4836,5.641,4837,5.641]],["title/modules/VyfiModule.html",[221,1.689,4838,3.835]],["body/modules/VyfiModule.html",[0,0.339,3,0.071,4,0.064,5,0.064,19,0.005,34,0.217,36,0.071,89,0.004,90,0.004,143,3.232,184,1.452,221,3.139,223,3.243,224,3.243,225,3.386,226,3.386,227,3.313,228,4.369,229,4.369,235,4.073,236,3.386,237,3.243,239,3.462,771,2.782,885,5.999,1441,6.644,1442,4.288,4800,7.599,4825,7.573,4826,6.379,4838,7.771,4839,6.379,4840,6.379,4841,6.379,4842,7.124,4843,7.124]],["title/injectables/VyfiService.html",[268,1.189,4825,3.632]],["body/injectables/VyfiService.html",[0,0.165,3,0.053,4,0.031,5,0.031,10,0.085,11,0.307,12,0.776,13,0.972,15,1.435,18,0.269,19,0.005,20,0.407,21,1.056,22,0.823,23,0.571,28,1.285,29,0.739,30,1.239,34,0.184,36,0.035,37,1.471,46,1.765,58,1.049,62,1.474,73,1.5,89,0.003,90,0.003,109,1.689,158,2.661,171,1.996,184,0.708,201,1.659,202,2.934,203,2.36,209,2.815,212,1.915,251,0.812,267,1.115,268,1.262,269,1.461,284,2.165,305,2.781,307,1.433,322,2.675,345,2.062,347,3.782,362,1.452,370,2.062,371,2.335,377,1.357,378,1.489,395,1.651,400,2.612,403,2.131,405,0.626,408,0.812,533,2.091,666,2.743,671,1.942,677,2.41,686,1.814,687,1.814,688,1.814,689,1.814,692,3.234,715,3.676,718,3.354,768,3.063,770,3.479,771,1.357,775,1.519,776,1.225,784,6.076,797,3.693,799,3.676,802,3.693,803,3.269,804,3.388,805,3.161,814,2.442,816,3.226,830,1.357,839,3.706,1137,1.333,1154,2.432,1342,2.872,1362,2.824,1442,2.091,1468,5.852,1549,2.675,1624,1.728,1653,1.728,1736,3.601,1818,5.234,1829,2.872,1831,2.162,1832,2.551,1871,5.471,1872,2.551,1882,1.814,1889,3.307,1890,2.694,1895,2.241,1931,3.009,1933,2.241,1944,2.027,1949,2.33,2048,1.967,2049,1.967,2134,1.967,2135,1.967,2139,1.967,2211,3.523,2363,2.872,2437,2.872,2582,5.852,2585,5.875,2588,5.234,2589,6.265,2590,2.872,2593,5.794,2594,2.872,2603,5.471,2797,2.694,4053,3.111,4538,2.694,4544,2.694,4545,2.694,4546,2.694,4547,4.072,4548,2.694,4551,2.694,4802,4.703,4803,4.703,4804,4.703,4806,6.32,4807,6.32,4814,4.703,4818,4.703,4821,3.111,4824,3.111,4825,3.856,4844,3.111,4845,6.332,4846,6.786,4847,6.332,4848,6.332,4849,3.475,4850,5.252,4851,5.252,4852,3.475,4853,3.475,4854,3.475,4855,3.475,4856,3.475,4857,5.252,4858,3.475,4859,5.252,4860,5.252,4861,3.475,4862,5.252,4863,3.475,4864,3.111,4865,3.111,4866,3.111,4867,3.111,4868,3.475,4869,3.111,4870,3.111,4871,3.111,4872,3.111,4873,3.111,4874,4.703,4875,3.111,4876,3.111,4877,3.111,4878,3.111,4879,3.111,4880,3.111,4881,3.111,4882,3.111,4883,3.475,4884,3.475,4885,3.475,4886,3.475,4887,3.475,4888,3.475,4889,3.475,4890,3.475,4891,6.332,4892,3.475,4893,5.252,4894,3.475,4895,6.332,4896,3.475,4897,5.252,4898,3.475,4899,3.475,4900,3.475,4901,3.475,4902,3.475,4903,3.475,4904,3.475,4905,3.475,4906,5.252,4907,3.475,4908,3.475,4909,3.475,4910,3.475,4911,5.252,4912,3.475,4913,3.475,4914,3.475,4915,3.475,4916,5.252,4917,3.475,4918,3.475,4919,3.475,4920,3.475,4921,3.475,4922,3.475,4923,3.475,4924,3.475,4925,3.475,4926,3.475,4927,3.475,4928,3.475,4929,3.475,4930,3.475,4931,3.475,4932,3.475,4933,3.475,4934,3.475,4935,3.475,4936,3.475,4937,3.475]],["title/classes/WalletSummaryDto.html",[0,0.235,3988,4.09]],["body/classes/WalletSummaryDto.html",[0,0.333,2,1.082,3,0.07,4,0.063,5,0.063,10,0.172,11,0.496,18,0.28,19,0.005,20,0.417,23,0.646,34,0.156,36,0.07,89,0.004,90,0.004,205,4.335,244,1.659,251,2.132,405,1.815,839,3.255,1039,7.072,1335,4.764,1736,3.327,2210,3.482,3987,6.268,3988,7.01,4035,5.786,4042,7.541,4044,7.541,4046,7.541,4047,5.786,4511,6.268,4517,6.268,4518,6.268,4938,9.988,4939,7,4940,7,4941,7,4942,7]],["title/injectables/WebhookVerificationService.html",[268,1.189,1670,3.632]],["body/injectables/WebhookVerificationService.html",[0,0.237,3,0.05,4,0.045,5,0.045,10,0.123,11,0.399,12,0.621,13,1.262,18,0.234,19,0.005,20,0.413,21,1.003,22,0.782,23,0.572,28,1.099,29,0.632,30,0.816,34,0.173,36,0.05,65,3.147,89,0.004,90,0.004,112,1.949,175,2.606,184,1.017,192,2.606,201,1.576,202,2.92,203,2.518,209,2.627,212,2.005,267,1.059,268,1.638,269,2.098,271,3.442,284,2.119,305,2.291,345,1.625,370,1.625,371,2.255,405,1.228,408,1.815,411,2.674,531,3.869,583,2.291,663,2.494,717,3.653,770,3.791,771,1.949,785,2.482,799,4.772,830,2.662,834,3.664,1162,4.469,1178,4.772,1283,6.105,1302,6.663,1317,3.56,1333,5.005,1362,2.226,1421,4.125,1430,2.747,1432,3.664,1435,3.493,1592,2.674,1638,4.529,1640,3.106,1649,4.125,1670,5.005,1688,3.653,1699,6.105,1705,4.469,1707,4.243,1708,4.125,1804,2.606,1948,2.911,2071,4.103,2785,5.635,3688,4.469,3712,4.469,3884,6.019,4114,5.285,4119,4.469,4576,3.664,4943,9.018,4944,4.99,4945,7.764,4946,7.764,4947,6.817,4948,6.817,4949,8.736,4950,4.99,4951,6.817,4952,4.99,4953,4.99,4954,4.99,4955,4.99,4956,4.99,4957,4.99,4958,4.99,4959,4.99,4960,7.764,4961,4.99,4962,7.764,4963,4.99,4964,4.99,4965,4.99,4966,4.99,4967,4.99,4968,4.99,4969,7.764,4970,6.817,4971,4.99,4972,4.99,4973,4.99,4974,4.99,4975,4.99,4976,4.99,4977,4.99,4978,4.99,4979,4.99,4980,4.99,4981,4.99,4982,4.99,4983,4.99,4984,4.99,4985,4.99,4986,4.99,4987,8.736,4988,4.99,4989,4.99,4990,4.99,4991,4.99,4992,4.99,4993,4.99,4994,4.99,4995,6.817,4996,4.99,4997,6.817,4998,4.99,4999,4.99,5000,4.99,5001,4.99,5002,4.99,5003,4.99,5004,4.99,5005,4.99,5006,4.99,5007,4.99,5008,4.99,5009,4.99]],["title/dependencies.html",[224,2.712,5010,3.689]],["body/dependencies.html",[0,0.391,19,0.005,35,1.698,49,3.233,62,1.866,89,0.004,90,0.004,178,3.093,184,1.355,188,1.451,224,3.028,241,2.271,261,1.788,264,1.813,377,2.598,503,3.308,669,3.766,670,3.766,686,4.292,687,3.474,688,3.474,689,4.292,771,2.598,779,2.966,884,4.884,887,5.157,889,5.957,890,5.957,922,5.499,1263,4.884,1264,4.884,1293,5.957,1300,5.957,1371,5.157,1397,5.499,1398,5.957,1432,4.884,1442,4.004,1494,5.499,1495,5.957,1695,5.499,1800,5.499,1872,4.884,3306,5.499,3884,5.157,3948,5.957,3985,5.957,5011,6.652,5012,6.652,5013,6.652,5014,6.652,5015,6.652,5016,6.652,5017,6.652,5018,6.652,5019,8.219,5020,6.652,5021,6.652,5022,6.652,5023,6.652,5024,6.652,5025,6.652,5026,6.652,5027,6.652,5028,6.652,5029,6.652,5030,6.652,5031,6.652,5032,6.652,5033,6.652,5034,6.652,5035,6.652,5036,6.652,5037,6.652,5038,6.652,5039,6.652,5040,6.652,5041,6.652,5042,6.652,5043,6.652,5044,6.652,5045,6.652,5046,6.652,5047,6.652,5048,6.652,5049,6.652,5050,6.652,5051,6.652]],["title/miscellaneous/enumerations.html",[5052,2.658,5053,5.334]],["body/miscellaneous/enumerations.html",[10,0.117,12,0.602,14,1.678,19,0.005,22,1.658,55,5.123,64,2.491,69,2.556,82,1.13,89,0.003,90,0.003,101,4.626,102,3.14,103,4.896,104,3.651,105,2.888,106,4.626,107,4.263,108,2.372,109,3.212,110,3.943,111,1.24,129,4.17,130,4.263,131,3.651,132,4.896,133,5.281,134,3.764,144,2.171,202,2.323,244,1.13,289,4.263,290,4.432,291,4.432,293,4.263,295,4.113,337,4.263,357,6.01,451,2.625,452,2.556,486,3.977,543,5.462,544,4.432,565,4.851,649,5.41,650,3.637,651,4.531,652,5.917,663,1.827,747,4.263,1018,6.01,1168,2.888,1198,5.462,1856,3.697,1873,4.17,1874,6.346,2050,3.854,2109,3.451,2263,4.851,2277,5.123,2509,5.462,2609,4.271,2610,5.917,2627,5.917,2630,5.917,2631,5.917,2632,5.917,2665,5.462,2666,5.462,2669,4.271,2674,4.851,2677,3.502,2678,3.943,2681,5.917,2900,5.462,2901,5.462,3107,5.123,3115,3.697,3170,3.943,3180,7.33,3181,5.917,3190,5.462,3200,5.123,3365,5.462,3366,5.462,3654,4.271,4525,4.851,4531,4.851,4637,5.917,4638,5.917,5052,3.077,5053,4.271,5054,7.582,5055,4.769,5056,9.119,5057,4.769,5058,4.769,5059,6.608,5060,4.769,5061,6.79,5062,6.608,5063,4.769,5064,4.769,5065,4.769,5066,4.769,5067,4.769,5068,6.608,5069,4.271,5070,6.608,5071,4.769,5072,4.769,5073,4.769,5074,4.769]],["title/miscellaneous/functions.html",[5052,2.658,5075,5.334]],["body/miscellaneous/functions.html",[10,0.156,12,0.909,18,0.278,19,0.005,20,0.442,21,1.606,22,1.252,28,1.61,29,0.926,54,2.523,59,2.671,60,1.479,89,0.004,90,0.004,154,3.405,205,3.797,227,4.063,260,2.241,281,2.17,403,1.919,405,1.651,663,2.209,664,5.253,677,2.728,717,4.281,732,5.691,733,7.154,740,5.253,741,7.154,744,5.691,761,5.691,845,6.604,846,5.691,847,7.154,850,4.808,1931,3.02,2053,5.154,2054,5.154,2451,4.808,3120,6.604,3121,5.691,3122,7.154,3123,6.193,3642,7.154,4526,6.193,4527,6.193,4528,6.193,5052,4.1,5075,5.691,5076,6.355,5077,7.824,5078,6.355,5079,7.989,5080,6.355,5081,8.209,5082,6.355,5083,5.691,5084,6.355,5085,6.355,5086,9.167,5087,6.355,5088,6.355,5089,7.989,5090,7.989,5091,6.355,5092,6.355,5093,6.355]],["title/index.html",[10,0.101,3442,3.689,5094,4.12]],["body/index.html",[4,0.049,5,0.049,19,0.005,60,1.011,66,3.779,73,1.294,89,0.004,90,0.004,114,2.059,237,4.214,273,2.485,284,1.387,322,4.716,341,4.513,346,3.662,401,3.111,422,2.386,665,2.171,805,3.286,994,4.232,1184,4.232,1342,5.987,1431,5.058,1494,5.987,1515,4.889,1843,4.889,1888,5.614,2117,2.851,2164,4.359,2364,3.662,2384,4.889,2396,4.889,2426,6.485,2747,6.71,3200,4.232,3300,6.485,3418,7.75,3461,4.889,3528,4.889,3869,5.987,3876,4.513,4131,6.485,4576,4.008,4797,7.155,5095,5.459,5096,5.459,5097,8.126,5098,5.459,5099,5.459,5100,5.459,5101,7.242,5102,8.126,5103,5.459,5104,9.803,5105,5.459,5106,9.803,5107,8.126,5108,5.459,5109,7.242,5110,5.459,5111,5.459,5112,7.242,5113,5.459,5114,7.242,5115,5.459,5116,5.459,5117,8.126,5118,5.459,5119,5.459,5120,5.459,5121,5.459,5122,5.459,5123,8.655,5124,9.591,5125,9.257,5126,7.242,5127,5.459,5128,5.459,5129,5.459,5130,7.242,5131,7.242,5132,7.242,5133,5.459,5134,9.257,5135,8.655,5136,5.459,5137,5.459,5138,5.459,5139,5.459,5140,5.459,5141,8.655,5142,5.459,5143,5.459,5144,5.459,5145,5.459,5146,7.242,5147,5.459,5148,5.459,5149,5.459,5150,5.459,5151,5.459,5152,7.242,5153,5.459,5154,5.459,5155,5.459,5156,7.242,5157,5.459,5158,5.459,5159,7.242,5160,5.459,5161,5.459,5162,5.459,5163,5.459,5164,5.459,5165,5.459,5166,5.459,5167,5.459,5168,7.242,5169,5.459,5170,5.459,5171,5.459,5172,5.459,5173,5.459,5174,5.459,5175,5.459,5176,5.459,5177,7.242,5178,5.459,5179,5.459,5180,5.459,5181,5.459,5182,5.459,5183,5.459,5184,7.242,5185,7.242,5186,5.459,5187,5.459,5188,5.459,5189,5.459,5190,5.459,5191,5.459,5192,5.459,5193,4.889,5194,5.459,5195,5.459,5196,5.459,5197,5.459,5198,5.459,5199,4.889]],["title/modules.html",[223,3.085]],["body/modules.html",[19,0.004,89,0.004,90,0.004,222,5.139,223,3.187,234,4.083,867,5.426,871,5.139,872,5.139,873,4.695,874,4.356,875,5.139,876,4.9,877,4.9,878,5.139,879,5.139,880,4.9,881,5.139,3247,5.426,3278,5.139,3281,5.139,4797,8.632,4838,5.426,5200,10.442,5201,10.442,5202,10.442]],["title/overview.html",[5203,6.069]],["body/overview.html",[2,0.646,19,0.005,89,0.003,90,0.003,143,1.576,191,4.267,196,6.446,221,1.427,222,6.597,223,1.902,224,1.902,225,1.986,226,1.986,227,1.943,228,1.986,229,1.986,230,3.741,231,3.741,232,3.741,233,3.741,234,5.545,235,2.86,236,1.986,237,1.902,269,1.756,407,1.092,424,2.239,662,1.603,782,4.731,860,5.178,867,7.921,868,3.741,869,3.741,870,3.741,871,6.254,872,6.597,873,6.027,874,6.31,875,6.821,876,6.585,877,6.146,878,6.254,879,6.821,880,6.407,881,7.226,1105,6.446,1117,3.741,1118,3.741,1119,3.741,1239,6.446,1248,3.741,1274,3.741,1276,3.741,1277,3.741,1285,6.146,1399,5.889,1437,3.741,1438,3.741,1439,3.741,1667,5.284,1668,5.889,1670,6.446,1737,3.741,1739,3.741,1740,3.741,1741,4.971,1742,4.367,2310,6.446,2330,3.741,2331,3.741,2333,3.741,2480,6.146,2489,3.741,2491,3.741,2492,3.741,2778,3.741,2779,3.741,2780,3.741,2781,6.446,2883,6.446,3230,6.446,3247,6.341,3248,3.741,3249,3.741,3250,3.741,3275,3.741,3276,3.741,3277,3.741,3278,6.821,3281,7.097,3282,3.741,3283,3.741,3284,3.741,3286,6.806,3287,5.468,3339,6.146,3588,6.446,3600,3.741,3601,3.741,3602,3.741,3941,3.741,3942,3.741,3943,3.741,4242,3.741,4243,3.741,4244,3.741,4433,3.741,4435,3.741,4436,3.741,4748,7.258,4783,3.741,4784,3.741,4786,3.741,4825,6.446,4838,6.341,4839,3.741,4840,3.741,4841,3.741,5203,3.741,5204,4.178,5205,4.178,5206,4.178,5207,4.178,5208,4.178,5209,4.178]],["title/properties.html",[11,0.349,5010,3.689]],["body/properties.html",[11,0.469,19,0.005,60,1.484,89,0.005,90,0.005,856,3.896,5193,7.179,5199,7.179,5210,8.016,5211,8.016]],["title/miscellaneous/typealiases.html",[5052,2.658,5212,5.957]],["body/miscellaneous/typealiases.html",[10,0.187,18,0.282,19,0.005,89,0.005,90,0.005,663,2.102,839,4.618,2124,4.773,2215,4.903,2728,5.894,2731,5.894,2732,5.894,2733,6.54,2740,5.894,2741,5.894,2742,6.905,2744,6.905,5052,4.904,5213,7.602,5214,9.744]],["title/miscellaneous/variables.html",[5052,2.658,5215,5.334]],["body/miscellaneous/variables.html",[10,0.109,14,1.127,15,0.696,18,0.251,19,0.005,20,0.195,21,1.995,22,1.555,37,0.789,50,2.468,56,1.789,58,2.698,59,1.866,73,1.052,89,0.003,90,0.003,108,2.208,158,1.674,202,1.36,209,2.779,212,2.231,246,2.531,251,1.037,284,1.853,337,2.863,378,2.693,398,1.902,399,2.922,400,2.592,405,1.314,407,1.642,663,2.315,664,3.669,671,1.531,679,3.975,690,5.627,691,3.975,692,3.313,693,3.975,694,3.782,695,3.975,696,5.627,697,3.975,698,4.054,699,3.975,700,3.975,701,3.975,702,5.194,703,3.975,704,3.975,705,3.669,706,3.975,707,3.975,708,3.975,709,3.975,710,3.975,711,5.627,712,3.975,713,3.975,714,3.975,715,4.398,716,5.194,717,2.378,718,2.109,719,3.975,720,5.627,721,3.975,722,3.975,723,2.693,724,3.259,725,3.975,726,3.975,727,3.975,728,3.975,729,3.975,730,3.975,770,3.066,814,3.392,944,3.259,1017,3.519,1018,3.259,1257,3.975,1297,4.871,1364,3.975,1401,5.194,1402,5.627,1410,2.977,1444,3.558,1545,2.977,1589,4.39,1736,3.77,1749,3.441,1750,7.103,1802,5.627,1803,5.627,1804,3.281,1806,5.627,1807,3.975,1958,2.762,2043,2.672,2056,4.054,3379,4.398,4225,3.669,4519,4.871,4531,3.259,4534,4.871,4535,3.441,4641,8.003,4844,3.975,4846,5.627,4864,3.975,4865,3.975,4866,3.975,4867,3.975,4869,5.627,4870,3.975,4871,3.975,4872,3.975,4873,3.975,4874,5.627,4875,3.975,4876,3.975,4877,3.975,4878,3.975,4879,3.975,4880,3.975,4881,3.975,4882,3.975,5052,2.863,5061,3.975,5069,3.975,5077,3.975,5081,5.627,5083,3.975,5215,3.975,5216,4.439,5217,7.294,5218,6.283,5219,7.294,5220,6.283,5221,6.283,5222,4.439,5223,7.294,5224,6.283,5225,6.283,5226,6.283,5227,7.294,5228,7.294,5229,6.283,5230,4.439,5231,4.439,5232,4.439,5233,4.439,5234,4.439,5235,4.439,5236,6.283,5237,4.439,5238,4.439,5239,4.439,5240,4.439,5241,4.439,5242,4.439,5243,4.439,5244,4.439,5245,4.439,5246,4.439,5247,4.439,5248,4.439,5249,4.439,5250,4.439,5251,4.439,5252,4.439,5253,4.439,5254,4.439,5255,4.439,5256,4.439,5257,4.439]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":58,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"injectables/AcquireService.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedReserveVaule1747821437539.html":{},"interfaces/Amount.html":{},"entities/Asset.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["0'})@isstring()@expose",{"_index":1974,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["0.0.1",{"_index":5210,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":2842,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["0.14.1",{"_index":5036,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":5046,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":5013,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":5048,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":5035,"title":{},"body":{"dependencies.html":{}}}],["0x",{"_index":3723,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["0x123...abc",{"_index":2225,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["0})@isnumber()@expose",{"_index":1980,"title":{},"body":{"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1",{"_index":407,"title":{"interfaces/BuildTransactionParams-1.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse-1.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":5037,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":5015,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":5050,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":5039,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":5032,"title":{},"body":{"dependencies.html":{}}}],["1.9",{"_index":4872,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["1/100",{"_index":1032,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["10",{"_index":411,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"classes/ContributorWhitelist.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{},"injectables/TaptoolsService.html":{},"entities/User.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["10.0.0",{"_index":5019,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":5028,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":5034,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":5022,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":5025,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1718,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{}}}],["1000",{"_index":1804,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/CreateProposalReq.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["1000000",{"_index":2033,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{}}}],["10000000",{"_index":2126,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["1024",{"_index":1402,"title":{},"body":{"controllers/AwsController.html":{},"miscellaneous/variables.html":{}}}],["10})@expose",{"_index":3194,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["10})@isoptional()@isnumber()@expose({name",{"_index":1079,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["11",{"_index":5206,"title":{},"body":{"overview.html":{}}}],["11.0.2",{"_index":5018,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":5024,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":5051,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":2635,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/TaptoolsService.html":{}}}],["123.jpg",{"_index":3887,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd",{"_index":402,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{}}}],["1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@isnotempty()@expose",{"_index":2469,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@isstring()@matches(/^[0",{"_index":1083,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["1234abcd",{"_index":2040,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["1234abcd...'})@expose",{"_index":4195,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["1234abcd...'})@expose({name",{"_index":4217,"title":{},"body":{"classes/TransactionSubmitResponseDto.html":{}}}],["123e4567",{"_index":2020,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["12d3",{"_index":2022,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["14.1.2",{"_index":5016,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":5205,"title":{},"body":{"overview.html":{}}}],["15000",{"_index":4020,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["1647611205",{"_index":1945,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1647611205})@isnumber()@expose",{"_index":1972,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["1647611209",{"_index":1963,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1647611209})@isnumber()@expose",{"_index":1906,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["1664454750",{"_index":1929,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["1664454750'})@isstring()@expose",{"_index":1964,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["174345",{"_index":1950,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["174345'})@isstring()@expose",{"_index":1976,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["18",{"_index":5204,"title":{},"body":{"overview.html":{}}}],["1900000",{"_index":4871,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["1].unit",{"_index":2077,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["1_000_000).tostring",{"_index":2203,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["1d",{"_index":1454,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["1e",{"_index":4135,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["1e6",{"_index":2833,"title":{},"body":{"injectables/DistributionService.html":{}}}],["1})@expose",{"_index":3197,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["1})@isnotempty()@expose",{"_index":2471,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["1})@isnumber()@expose",{"_index":1902,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/NftAsset.html":{}}}],["1})@isoptional()@isnumber()@expose({name",{"_index":1081,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["2",{"_index":814,"title":{"interfaces/TransactionBuildResponse-2.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"entities/User.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["2.1692.0",{"_index":5031,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":960,"title":{},"body":{"entities/Asset.html":{},"entities/Claim.html":{},"entities/User.html":{}}}],["200",{"_index":154,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"miscellaneous/functions.html":{}}}],["2000000",{"_index":4874,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["200})@apiconsumes('multipart/form",{"_index":4404,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@get",{"_index":858,"title":{},"body":{"controllers/AppController.html":{}}}],["200})@get('/csv/:id",{"_index":1376,"title":{},"body":{"controllers/AwsController.html":{}}}],["200})@get('/image/:id",{"_index":1379,"title":{},"body":{"controllers/AwsController.html":{}}}],["200})@get('/profile/:id",{"_index":4397,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@httpcode(httpstatus.ok)@post('login",{"_index":1235,"title":{},"body":{"controllers/AuthController.html":{}}}],["200})@useguards(authguard",{"_index":3925,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["200})@useguards(authguard)@get",{"_index":4730,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get(':id",{"_index":4726,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get(':id/transactions",{"_index":4733,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get('acquired/:vaultid",{"_index":1101,"title":{},"body":{"controllers/AssetsController.html":{}}}],["200})@useguards(authguard)@get('contributed/:vaultid",{"_index":1098,"title":{},"body":{"controllers/AssetsController.html":{}}}],["200})@useguards(authguard)@get('my",{"_index":4722,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get('my')@apiresponse({type",{"_index":2299,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["200})@useguards(authguard)@get('my/drafts",{"_index":4718,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@get('profile",{"_index":4392,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@useguards(authguard)@patch('profile",{"_index":4401,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@useguards(authguard)@post",{"_index":4715,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@post('/publish",{"_index":4737,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@post('burn",{"_index":4707,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useguards(authguard)@post('save",{"_index":4741,"title":{},"body":{"controllers/VaultsController.html":{}}}],["200})@useinterceptors(undefined)@post('/upload')@useguards(authguard",{"_index":1388,"title":{},"body":{"controllers/AwsController.html":{}}}],["200})@useinterceptors(undefined)@useguards(authguard)@post('/handle",{"_index":1385,"title":{},"body":{"controllers/AwsController.html":{}}}],["201",{"_index":163,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{}}}],["24",{"_index":4535,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":5207,"title":{},"body":{"overview.html":{}}}],["2561",{"_index":1910,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["3",{"_index":2460,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["3.0.0",{"_index":5044,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":5020,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1808,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["30000",{"_index":1807,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["32",{"_index":5209,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":1525,"title":{},"body":{"injectables/AwsService.html":{}}}],["3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be",{"_index":1942,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be'})@isstring()@expose",{"_index":1968,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["4",{"_index":1958,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":5017,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":5049,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":4002,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["401",{"_index":1643,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["404",{"_index":759,"title":{},"body":{"interfaces/Amount.html":{},"controllers/TaptoolsController.html":{}}}],["415e",{"_index":1922,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["426",{"_index":1954,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["426614174000",{"_index":2034,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["426614174000'})@isuuid()@expose({name",{"_index":2024,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["426})@isnumber()@expose",{"_index":1987,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["4761",{"_index":1911,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2",{"_index":2028,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2'})@isstring()@expose",{"_index":3732,"title":{},"body":{"classes/NftAsset.html":{}}}],["4c34766149676f722033",{"_index":2461,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["4})@isnumber()@expose",{"_index":1991,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["5",{"_index":1410,"title":{},"body":{"controllers/AwsController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/LpTokensService.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["5.0",{"_index":2862,"title":{},"body":{"injectables/DistributionService.html":{}}}],["5.0.1",{"_index":5026,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":5041,"title":{},"body":{"dependencies.html":{}}}],["5.56.0",{"_index":5033,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":5038,"title":{},"body":{"dependencies.html":{}}}],["5.9",{"_index":4878,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1829,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["53554741",{"_index":4882,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["5432",{"_index":921,"title":{},"body":{"modules/AppModule.html":{}}}],["56",{"_index":399,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["56044914",{"_index":1947,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["56044914})@isnumber()@expose",{"_index":1989,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["56051594",{"_index":1956,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["56051594})@isoptional()@expose",{"_index":1984,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["5900000",{"_index":4877,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["5mb",{"_index":1411,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["6",{"_index":2254,"title":{},"body":{"entities/Claim.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["6.0.0",{"_index":5014,"title":{},"body":{"dependencies.html":{}}}],["6.0.4",{"_index":5030,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3379,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":4963,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["6233638f28d6",{"_index":1962,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["6233638f28d6'})@isstring()@expose",{"_index":1924,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["635f",{"_index":1921,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["6379",{"_index":916,"title":{},"body":{"modules/AppModule.html":{}}}],["64",{"_index":3725,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["7",{"_index":3703,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["7.8.1",{"_index":5047,"title":{},"body":{"dependencies.html":{}}}],["7012249",{"_index":1943,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["7012249})@isnumber()@expose",{"_index":1970,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["8",{"_index":4893,"title":{},"body":{"injectables/VyfiService.html":{}}}],["8.1.0",{"_index":5027,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":5043,"title":{},"body":{"dependencies.html":{}}}],["83a400",{"_index":2035,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["83a400...'})@expose",{"_index":4193,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["83a400...'})@isstring()@expose",{"_index":3790,"title":{},"body":{"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["83a400...'})@isstring()@isnotempty()@expose",{"_index":3794,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e",{"_index":3567,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["84a400",{"_index":2037,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["9",{"_index":2712,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["904bebf8c7f5d9ee343147cf8bbee24ec1beafe1e73c7d0a1c74b83c4f7a0b35#2",{"_index":3663,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["91",{"_index":4111,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b",{"_index":1941,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b'})@isstring()@expose",{"_index":1978,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["95",{"_index":5208,"title":{},"body":{"overview.html":{}}}],["98",{"_index":1555,"title":{},"body":{"injectables/AwsService.html":{}}}],["98b62937438e",{"_index":1961,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["98b62937438e'})@isstring()@expose",{"_index":1913,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c",{"_index":2462,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["9]{98",{"_index":1539,"title":{},"body":{"injectables/AwsService.html":{}}}],["9a",{"_index":1084,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["9fa1",{"_index":1912,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["__data",{"_index":2737,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["__dirname",{"_index":929,"title":{},"body":{"modules/AppModule.html":{}}}],["__variant",{"_index":2734,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["_req",{"_index":1646,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["a.added_at",{"_index":3523,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.added_by",{"_index":3530,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.asset_id",{"_index":3527,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.contract_address",{"_index":3522,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.id",{"_index":3520,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.isfungibletoken).length",{"_index":4051,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["a.isnft).length",{"_index":4050,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["a.origin_type",{"_index":3525,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.policy_id",{"_index":3526,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.policyid).join",{"_index":2543,"title":{},"body":{"injectables/ContributionService.html":{}}}],["a.quantity",{"_index":3524,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.type",{"_index":3521,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a.unit",{"_index":3683,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["a.vault_id",{"_index":3531,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883",{"_index":3566,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["a456",{"_index":2023,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["a5a8",{"_index":1923,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["abstain",{"_index":2637,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["acc",{"_index":5250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acc[snakekey",{"_index":5248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accepted",{"_index":379,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["access",{"_index":1158,"title":{},"body":{"injectables/AssetsService.html":{},"controllers/VaultsController.html":{}}}],["accesskeyid",{"_index":1507,"title":{},"body":{"injectables/AwsService.html":{}}}],["accesstoken",{"_index":1353,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1328,"title":{},"body":{"injectables/AuthService.html":{}}}],["acl",{"_index":1514,"title":{},"body":{"injectables/AwsService.html":{}}}],["acquire",{"_index":103,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["acquire(vaultid",{"_index":278,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquire.controller",{"_index":243,"title":{},"body":{"modules/AcquireModule.html":{}}}],["acquire.service",{"_index":197,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{}}}],["acquire_open_window_time",{"_index":3844,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquire_open_window_type",{"_index":3843,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquire_phase_start",{"_index":3404,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquire_reserve",{"_index":3833,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["acquire_window",{"_index":4578,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["acquire_window_duration",{"_index":3841,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquirecontroller",{"_index":142,"title":{"controllers/AcquireController.html":{}},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{}}}],["acquired",{"_index":543,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"injectables/LifecycleService.html":{},"miscellaneous/enumerations.html":{}}}],["acquiredurationms",{"_index":3539,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquireend",{"_index":3541,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquiremodule",{"_index":222,"title":{"modules/AcquireModule.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["acquireopenwindowtime",{"_index":4667,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquireopenwindowtype",{"_index":4666,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquirephasestart",{"_index":4687,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquirer",{"_index":3085,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["acquirer_whitelist",{"_index":302,"title":{},"body":{"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateTypes1746532933340.html":{}}}],["acquirer_whitelist_csv",{"_index":2944,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquirer_whitelist_csv_id",{"_index":3845,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["acquireradamap",{"_index":3422,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquireradamap[userid",{"_index":3444,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquirereq",{"_index":160,"title":{"classes/AcquireReq.html":{}},"body":{"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{}}}],["acquirereq.assets",{"_index":313,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquirereq.assets.length",{"_index":315,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquirereq.assets.map(async",{"_index":353,"title":{},"body":{"injectables/AcquireService.html":{}}}],["acquirereserve",{"_index":4670,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["acquirers",{"_index":2793,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["acquirerwhitelist",{"_index":383,"title":{"classes/AcquirerWhitelist.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/VaultShortResponse.html":{}}}],["acquirerwhitelistcsv",{"_index":414,"title":{"classes/AcquirerWhitelistCsv.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/VaultShortResponse.html":{}}}],["acquirerwhitelistcsvkey",{"_index":2981,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquirerwhitelistentity",{"_index":423,"title":{"entities/AcquirerWhitelistEntity.html":{}},"body":{"entities/AcquirerWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["acquirerwhitelistfile",{"_index":2983,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquirerwhitelistrepository",{"_index":2892,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["acquireservice",{"_index":196,"title":{"injectables/AcquireService.html":{}},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"overview.html":{}}}],["acquirestart",{"_index":3537,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquirestarttime",{"_index":3394,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquirevaults",{"_index":3533,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["acquirewindow",{"_index":4520,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["acquirewindowduration",{"_index":4661,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["action",{"_index":83,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["active",{"_index":3270,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["actual",{"_index":3710,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["actually",{"_index":2997,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["ada",{"_index":1736,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/variables.html":{}}}],["ada_price_usd",{"_index":3994,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["adaanvilapiurl",{"_index":4845,"title":{},"body":{"injectables/VyfiService.html":{}}}],["adaprice",{"_index":4003,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["adapriceusd",{"_index":3966,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["adasent",{"_index":2819,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["add",{"_index":75,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["addassettovault",{"_index":1125,"title":{},"body":{"injectables/AssetsService.html":{}}}],["addassettovault(userid",{"_index":1136,"title":{},"body":{"injectables/AssetsService.html":{}}}],["addcontractaddresstovault.ts",{"_index":460,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault.ts:18",{"_index":462,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault.ts:4",{"_index":461,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault.ts:6",{"_index":463,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["addcontractaddresstovault1745662880319",{"_index":458,"title":{"classes/AddContractAddressToVault1745662880319.html":{}},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["added",{"_index":1005,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/LpTokensService.html":{}}}],["added_at",{"_index":939,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{}}}],["added_by",{"_index":367,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["addedaauired.ts",{"_index":536,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired.ts:25",{"_index":538,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired.ts:4",{"_index":537,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired.ts:6",{"_index":539,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedaauired1748361017536",{"_index":534,"title":{"classes/AddedAauired1748361017536.html":{}},"body":{"classes/AddedAauired1748361017536.html":{}}}],["addedassetsstatus.ts",{"_index":558,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus.ts:23",{"_index":560,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus.ts:4",{"_index":559,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus.ts:6",{"_index":561,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetsstatus1748264767365",{"_index":556,"title":{"classes/AddedAssetsStatus1748264767365.html":{}},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["addedassetvaultname.ts",{"_index":551,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname.ts:18",{"_index":553,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname.ts:4",{"_index":552,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname.ts:6",{"_index":554,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedassetvaultname1745921850315",{"_index":549,"title":{"classes/AddedAssetVaultName1745921850315.html":{}},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["addedat",{"_index":1006,"title":{},"body":{"entities/Asset.html":{}}}],["addedat'})@column({name",{"_index":945,"title":{},"body":{"entities/Asset.html":{}}}],["addedby",{"_index":948,"title":{},"body":{"entities/Asset.html":{}}}],["addedby'})@manytoone(undefined",{"_index":947,"title":{},"body":{"entities/Asset.html":{}}}],["addedby.id",{"_index":1004,"title":{},"body":{"entities/Asset.html":{}}}],["addedby.id)@joincolumn({name",{"_index":949,"title":{},"body":{"entities/Asset.html":{}}}],["addedclaimentity.ts",{"_index":7,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["addedclaimentity.ts:23",{"_index":27,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["addedclaimentity.ts:4",{"_index":24,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["addedclaimentity.ts:6",{"_index":33,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["addedclaimentity1751298845693",{"_index":1,"title":{"classes/$AddedClaimEntity1751298845693.html":{}},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["addedcontributorwhitelist.ts",{"_index":569,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist.ts:23",{"_index":571,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist.ts:4",{"_index":570,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist.ts:6",{"_index":572,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addedcontributorwhitelist1742484041497",{"_index":567,"title":{"classes/AddedContributorWhitelist1742484041497.html":{}},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["addeddelete.ts",{"_index":578,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete.ts:20",{"_index":580,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete.ts:4",{"_index":579,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete.ts:6",{"_index":581,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addeddelete1747838327085",{"_index":576,"title":{"classes/AddedDelete1747838327085.html":{}},"body":{"classes/AddedDelete1747838327085.html":{}}}],["addedliquidationhash.ts",{"_index":586,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash.ts:18",{"_index":588,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash.ts:4",{"_index":587,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash.ts:6",{"_index":589,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedliquidationhash1749046550619",{"_index":584,"title":{"classes/AddedLiquidationHash1749046550619.html":{}},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["addedmaxassetscount.ts",{"_index":593,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount.ts:18",{"_index":595,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount.ts:4",{"_index":594,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount.ts:6",{"_index":596,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedmaxassetscount1747911428750",{"_index":591,"title":{"classes/AddedMaxAssetsCount1747911428750.html":{}},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["addedpublicationhash.ts",{"_index":600,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash.ts:18",{"_index":602,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash.ts:4",{"_index":601,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash.ts:6",{"_index":603,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedpublicationhash1745583708330",{"_index":598,"title":{"classes/AddedPublicationHash1745583708330.html":{}},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["addedreservevaule.ts",{"_index":607,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule.ts:19",{"_index":609,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule.ts:4",{"_index":608,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule.ts:6",{"_index":610,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedreservevaule1747821437539",{"_index":605,"title":{"classes/AddedReserveVaule1747821437539.html":{}},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["addedtags.ts",{"_index":615,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags.ts:26",{"_index":617,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags.ts:4",{"_index":616,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags.ts:6",{"_index":618,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtags1741943808652",{"_index":613,"title":{"classes/AddedTags1741943808652.html":{}},"body":{"classes/AddedTags1741943808652.html":{}}}],["addedtransactionmodelandrelations.ts",{"_index":633,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations.ts:39",{"_index":635,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations.ts:4",{"_index":634,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations.ts:6",{"_index":636,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addedtransactionmodelandrelations1743588383672",{"_index":631,"title":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["addindextotransaction.ts",{"_index":467,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction.ts:22",{"_index":469,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction.ts:4",{"_index":468,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction.ts:6",{"_index":470,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addindextotransaction1744024797075",{"_index":465,"title":{"classes/AddIndexToTransaction1744024797075.html":{}},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["addinvestmenttotxtype.ts",{"_index":476,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype.ts:25",{"_index":478,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype.ts:4",{"_index":477,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype.ts:6",{"_index":479,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["addinvestmenttotxtype1744032453542",{"_index":474,"title":{"classes/AddInvestmentToTxType1744032453542.html":{}},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["additional",{"_index":2619,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/DraftVaultsService.html":{}}}],["additionalproperties",{"_index":1019,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["addmetadatatotransaction.ts",{"_index":482,"title":{},"body":{"classes/AddMetadataToTransaction1751453522246.html":{}}}],["addmetadatatotransaction.ts:26",{"_index":484,"title":{},"body":{"classes/AddMetadataToTransaction1751453522246.html":{}}}],["addmetadatatotransaction.ts:4",{"_index":483,"title":{},"body":{"classes/AddMetadataToTransaction1751453522246.html":{}}}],["addmetadatatotransaction.ts:6",{"_index":485,"title":{},"body":{"classes/AddMetadataToTransaction1751453522246.html":{}}}],["addmetadatatotransaction1751453522246",{"_index":480,"title":{"classes/AddMetadataToTransaction1751453522246.html":{}},"body":{"classes/AddMetadataToTransaction1751453522246.html":{}}}],["addnewvaultstatus.ts",{"_index":121,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnewvaultstatus.ts:17",{"_index":123,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnewvaultstatus.ts:4",{"_index":122,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnewvaultstatus.ts:6",{"_index":124,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["addnullableformetadata.ts",{"_index":489,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata.ts:18",{"_index":491,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata.ts:4",{"_index":490,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata.ts:6",{"_index":492,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addnullableformetadata1743687086047",{"_index":487,"title":{"classes/AddNullableForMetadata1743687086047.html":{}},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["addr1",{"_index":1553,"title":{},"body":{"injectables/AwsService.html":{},"injectables/LpTokensService.html":{}}}],["addr1[a",{"_index":1536,"title":{},"body":{"injectables/AwsService.html":{}}}],["addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a",{"_index":1932,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a'})@isstring()@expose",{"_index":1999,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["addr1q934ccfkwy292",{"_index":3564,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv",{"_index":1939,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv'})@isstring()@expose",{"_index":2008,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["addr1qy2k4r9",{"_index":2031,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["addr1qy2k4r9...'})@expose",{"_index":4211,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["addr1qy2k4r9...'})@isstring()@expose({name",{"_index":2016,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["addr1qy5dasujdtm4hzrtamca9sjetu78hgqt8rkqs9tu69n0vq47wr70fcgkj4fe9tyr6z2jz8qvwvrc2gq04ltky960fw0smcuf0t",{"_index":4880,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["addr_test1",{"_index":3718,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["addr_test1qpjavykfl5n4t47xklzyuccevgple0e4c7mke2m6cd0z0fwy0pq8p292lgrquq7hx75c4wpvz0h8cjp69mp7men3nw8s46zete",{"_index":4867,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":671,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublicProfileRes.html":{},"classes/SignatureData.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["address'})@column({unique",{"_index":4351,"title":{},"body":{"entities/User.html":{}}}],["address'})@isstring",{"_index":2595,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["address.'})@apiresponse({status",{"_index":3577,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["address.from_bytes(buffer.from(addresshex",{"_index":1312,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.startswith('addr1",{"_index":3719,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["address.startswith('addr_test",{"_index":3992,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["address.startswith('addr_test1",{"_index":3720,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["address.startswith('stake1",{"_index":3721,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["address.startswith('stake_test1",{"_index":3722,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["addresses",{"_index":1534,"title":{},"body":{"injectables/AwsService.html":{},"injectables/LpTokensService.html":{}}}],["addresses.length",{"_index":1560,"title":{},"body":{"injectables/AwsService.html":{}}}],["addresses.push(address",{"_index":1558,"title":{},"body":{"injectables/AwsService.html":{}}}],["addresshex",{"_index":1308,"title":{},"body":{"injectables/AuthService.html":{}}}],["addressmatches",{"_index":1332,"title":{},"body":{"injectables/AuthService.html":{}}}],["addstakeandwalletaddress.ts",{"_index":496,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress.ts:21",{"_index":498,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress.ts:4",{"_index":497,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress.ts:6",{"_index":499,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addstakeandwalletaddress1743433439139",{"_index":494,"title":{"classes/AddStakeAndWalletAddress1743433439139.html":{}},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["addtotalacquiredvalueinada.ts",{"_index":506,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada.ts:18",{"_index":508,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada.ts:4",{"_index":507,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada.ts:6",{"_index":509,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalacquiredvalueinada1750670509513",{"_index":504,"title":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["addtotalassetscost.ts",{"_index":514,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost.ts:19",{"_index":516,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost.ts:4",{"_index":515,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost.ts:6",{"_index":517,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addtotalassetscost1747665618438",{"_index":512,"title":{"classes/AddTotalAssetsCost1747665618438.html":{}},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["addupdatetransactiontype.ts",{"_index":93,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addupdatetransactiontype.ts:25",{"_index":95,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addupdatetransactiontype.ts:4",{"_index":94,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addupdatetransactiontype.ts:6",{"_index":96,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["addvaultlifecyclefields.ts",{"_index":522,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["addvaultlifecyclefields.ts:14",{"_index":523,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["addvaultlifecyclefields.ts:4",{"_index":524,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["addvaultlifecyclefields1741943808653",{"_index":520,"title":{"classes/AddVaultLifecycleFields1741943808653.html":{}},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["admin",{"_index":2358,"title":{},"body":{"injectables/ClaimsService.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["admin_key_hash",{"_index":2213,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["adminhash",{"_index":2060,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["adminkeyhash",{"_index":3609,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["adminskey",{"_index":2061,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["against",{"_index":333,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["age",{"_index":4965,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["age=3600",{"_index":1422,"title":{},"body":{"controllers/AwsController.html":{}}}],["aiken",{"_index":2745,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["aliases",{"_index":5213,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allacquirer",{"_index":3091,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["allacquirer.size",{"_index":3093,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["allocation",{"_index":2798,"title":{},"body":{"injectables/DistributionService.html":{}}}],["allow",{"_index":319,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["allowed",{"_index":406,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["allowedcontributors",{"_index":4533,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["allowedpolicies",{"_index":4521,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["allowing",{"_index":5147,"title":{},"body":{"index.html":{}}}],["alphanumeric",{"_index":1556,"title":{},"body":{"injectables/AwsService.html":{}}}],["already",{"_index":1832,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/VyfiService.html":{}}}],["alter",{"_index":74,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["always",{"_index":4582,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["amazing",{"_index":5189,"title":{},"body":{"index.html":{}}}],["amoun",{"_index":3667,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["amount",{"_index":56,"title":{"interfaces/Amount.html":{}},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"injectables/ClaimsService.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["amount'})@column({type",{"_index":2253,"title":{},"body":{"entities/Claim.html":{}}}],["amount.unit",{"_index":753,"title":{},"body":{"interfaces/Amount.html":{}}}],["amountoflpstoclaim",{"_index":3681,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["amounts",{"_index":1933,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["analyze",{"_index":2190,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["andwhere('vault.acquire_phase_start",{"_index":3534,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.acquire_window_duration",{"_index":3535,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_duration",{"_index":3485,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_open_window_time",{"_index":3481,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_open_window_type",{"_index":3476,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["andwhere('vault.contribution_phase_start",{"_index":3484,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["anvil",{"_index":801,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["anvil.app/v2/services/transactions",{"_index":4860,"title":{},"body":{"injectables/VyfiService.html":{}}}],["anvilapi",{"_index":1857,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["anvilapiconfig",{"_index":763,"title":{"interfaces/AnvilApiConfig.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["anvilapikey",{"_index":1858,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["anvilapiservice",{"_index":782,"title":{"injectables/AnvilApiService.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"overview.html":{}}}],["any)[data.phasestartfield",{"_index":3323,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["any)[phasestartfield",{"_index":3380,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["api",{"_index":797,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["api.service",{"_index":1745,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["api.service.ts",{"_index":765,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["api.service.ts:115",{"_index":836,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:129",{"_index":843,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:32",{"_index":844,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:33",{"_index":835,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:40",{"_index":840,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:48",{"_index":842,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:56",{"_index":841,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api.service.ts:64",{"_index":838,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["api_version",{"_index":1899,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["apibearerauth",{"_index":3585,"title":{},"body":{"controllers/LpTokensController.html":{},"controllers/TransactionsController.html":{}}}],["apibody",{"_index":4823,"title":{},"body":{"controllers/VyfiController.html":{}}}],["apiconsumes",{"_index":4410,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiconsumes('multipart/form",{"_index":4426,"title":{},"body":{"controllers/UsersController.html":{}}}],["apidoc",{"_index":850,"title":{},"body":{"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/ClaimsController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"miscellaneous/functions.html":{}}}],["apidoc(__namedparameters",{"_index":5082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apidoc({summary",{"_index":855,"title":{},"body":{"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/ClaimsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["apidocparams",{"_index":845,"title":{"interfaces/ApiDocParams.html":{}},"body":{"interfaces/ApiDocParams.html":{},"miscellaneous/functions.html":{}}}],["apikey",{"_index":784,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"injectables/VyfiService.html":{}}}],["apioperation",{"_index":185,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/VyfiController.html":{}}}],["apiproperty",{"_index":259,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{}}}],["apiproperty()@dtorepresent({transform",{"_index":3771,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["apiproperty()@isstring",{"_index":3726,"title":{},"body":{"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["apiproperty()@isstring()@expose",{"_index":389,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["apiproperty()@isurl()@expose",{"_index":3865,"title":{},"body":{"classes/SocialLink.html":{}}}],["apiproperty({description",{"_index":1078,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributionAsset.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/LpTokenOperationResult.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{}}}],["apiproperty({enum",{"_index":3172,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["apiproperty({required",{"_index":1072,"title":{},"body":{"classes/AssetWhitelist.html":{},"classes/PublicProfileRes.html":{}}}],["apiproperty({type",{"_index":253,"title":{},"body":{"classes/AcquireReq.html":{},"classes/ContributeReq.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/UploadImageDto.html":{}}}],["apipropertyoptional",{"_index":2450,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/GetClaimsDto.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["apipropertyoptional({description",{"_index":2466,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["apipropertyoptional({enum",{"_index":3161,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["apiquery",{"_index":4822,"title":{},"body":{"controllers/VyfiController.html":{}}}],["apiresponse",{"_index":186,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{}}}],["apitags",{"_index":187,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["apitags('acquire",{"_index":199,"title":{},"body":{"controllers/AcquireController.html":{}}}],["apitags('assets",{"_index":1107,"title":{},"body":{"controllers/AssetsController.html":{}}}],["apitags('auth",{"_index":1242,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('blockchain",{"_index":1672,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["apitags('claims",{"_index":2316,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["apitags('contributions",{"_index":2483,"title":{},"body":{"controllers/ContributionController.html":{}}}],["apitags('files",{"_index":1403,"title":{},"body":{"controllers/AwsController.html":{}}}],["apitags('governance",{"_index":3232,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["apitags('info",{"_index":864,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('lp",{"_index":3591,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["apitags('taptools",{"_index":3932,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["apitags('transactions",{"_index":4233,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["apitags('users",{"_index":4415,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('vaults",{"_index":4749,"title":{},"body":{"controllers/VaultsController.html":{}}}],["apitags('vyfi",{"_index":4827,"title":{},"body":{"controllers/VyfiController.html":{}}}],["apiversion",{"_index":854,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["app.controller",{"_index":891,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":861,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":852,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["application",{"_index":5125,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":804,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["applications",{"_index":5101,"title":{},"body":{"index.html":{}}}],["apply",{"_index":3675,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["applycontributeparams",{"_index":2053,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/functions.html":{}}}],["applycontributeparams(input",{"_index":5084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applydecorators",{"_index":849,"title":{},"body":{"interfaces/ApiDocParams.html":{},"interfaces/DtoRepresentsType.html":{}}}],["applydecorators(apioperation",{"_index":851,"title":{},"body":{"interfaces/ApiDocParams.html":{}}}],["applydecorators(transform",{"_index":3124,"title":{},"body":{"interfaces/DtoRepresentsType.html":{}}}],["appmodule",{"_index":867,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciation",{"_index":4676,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["appservice",{"_index":860,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"overview.html":{}}}],["array",{"_index":1070,"title":{},"body":{"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["array(len",{"_index":5239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.from(allacquirer).map(walletaddress",{"_index":3095,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["array.from(assetmap.values",{"_index":4129,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["array.from(balances.entries",{"_index":4072,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["array.isarray(acquirereq.assets",{"_index":314,"title":{},"body":{"injectables/AcquireService.html":{}}}],["array.isarray(obj",{"_index":5242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(signedtx.signatures",{"_index":4583,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["arraybuffer",{"_index":5233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asc",{"_index":3190,"title":{},"body":{"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"miscellaneous/enumerations.html":{}}}],["asset",{"_index":244,"title":{"entities/Asset.html":{}},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/AwsController.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/enumerations.html":{}}}],["asset.asset_id",{"_index":4127,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.asset_name",{"_index":3441,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.assetid",{"_index":4132,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.assetname",{"_index":2107,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.deleted",{"_index":3389,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.dex_price",{"_index":1204,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.dto",{"_index":1155,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.dto.ts",{"_index":1012,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:13",{"_index":1024,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:17",{"_index":1025,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:22",{"_index":1022,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:35",{"_index":1020,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.dto.ts:41",{"_index":2573,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:45",{"_index":2572,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:49",{"_index":2562,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:54",{"_index":2570,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:58",{"_index":2569,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:63",{"_index":2565,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:68",{"_index":2564,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:73",{"_index":2567,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["asset.dto.ts:9",{"_index":1026,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["asset.entity",{"_index":4188,"title":{},"body":{"entities/Transaction.html":{}}}],["asset.floor_price",{"_index":1203,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.id",{"_index":3439,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.isnft",{"_index":4155,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.last_valuation",{"_index":1205,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.locked_at",{"_index":1197,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.metadata",{"_index":4128,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.origin_type",{"_index":3437,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["asset.policy_id",{"_index":4126,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.policy_id}.${asset.asset_name",{"_index":3443,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["asset.policy_id}_${asset.asset_id",{"_index":4120,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.policyid",{"_index":2108,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.policyid}.${asset.assetid",{"_index":4147,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.quantity",{"_index":1735,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.released_at",{"_index":1200,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.status",{"_index":1194,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["asset.transaction",{"_index":4165,"title":{},"body":{"entities/Transaction.html":{}}}],["asset.type",{"_index":1202,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TaptoolsService.html":{}}}],["asset.unit",{"_index":694,"title":{},"body":{"interfaces/Amount.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["asset.unit.slice(0",{"_index":698,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["asset.unit.slice(56",{"_index":2205,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["asset.valueada",{"_index":4153,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.valueusd",{"_index":4154,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset.vault",{"_index":1210,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TransactionsService.html":{}}}],["asset.vault.owner.id",{"_index":1191,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset.vault.vault_status",{"_index":1193,"title":{},"body":{"injectables/AssetsService.html":{}}}],["asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40",{"_index":2456,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["asset_appreciation",{"_index":2696,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["asset_count_cap_max",{"_index":1213,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["asset_count_cap_min",{"_index":1214,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["asset_id",{"_index":360,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{}}}],["asset_name",{"_index":2127,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["asset_sale",{"_index":2630,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["asset_value_${policyid}_${assetname",{"_index":4104,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["asset_vault_name",{"_index":555,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["asset_whitelist",{"_index":2759,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["asset_window",{"_index":625,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["assetdetails",{"_index":4079,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetdetails.data",{"_index":4081,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetid",{"_index":996,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/CreateProposalReq.html":{},"injectables/TaptoolsService.html":{}}}],["assetid'})@column({name",{"_index":951,"title":{},"body":{"entities/Asset.html":{}}}],["assetitem",{"_index":354,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem.assetname",{"_index":361,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem.policyid",{"_index":359,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem.quantity",{"_index":363,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetitem?.metadata",{"_index":368,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["assetmap",{"_index":4117,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetmap.get(key",{"_index":4122,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetmap.set(key",{"_index":4125,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetmetadatadto",{"_index":1010,"title":{"classes/AssetMetadataDto.html":{}},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["assetname",{"_index":677,"title":{},"body":{"interfaces/Amount.html":{},"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/functions.html":{}}}],["assetname.new(buffer.from(asset.unit.slice(56",{"_index":707,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetorigintype",{"_index":291,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"miscellaneous/enumerations.html":{}}}],["assetorigintype.acquired",{"_index":366,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["assetorigintype.contributed",{"_index":1182,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["assetrepository",{"_index":275,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["assets",{"_index":251,"title":{},"body":{"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/variables.html":{}}}],["assets\".\"origin_type",{"_index":563,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["assets.controller",{"_index":1121,"title":{},"body":{"modules/AssetsModule.html":{}}}],["assets.filter(asset",{"_index":696,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assets.find(asset",{"_index":693,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assets.length",{"_index":748,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{}}}],["assets.map(asset",{"_index":1186,"title":{},"body":{"injectables/AssetsService.html":{}}}],["assets.map(async",{"_index":1209,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TransactionsService.html":{}}}],["assets.new",{"_index":703,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assets.service",{"_index":1106,"title":{},"body":{"controllers/AssetsController.html":{},"modules/AssetsModule.html":{}}}],["assets?.some(asset",{"_index":3388,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["assets_offered_percent",{"_index":2828,"title":{},"body":{"injectables/DistributionService.html":{}}}],["assets_origin_type_enum",{"_index":548,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["assets_origin_type_enum_old",{"_index":541,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["assets_whitelist",{"_index":1228,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["assetsbyusers",{"_index":3420,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["assetscontroller",{"_index":1091,"title":{"controllers/AssetsController.html":{}},"body":{"controllers/AssetsController.html":{},"modules/AssetsModule.html":{}}}],["assetscount",{"_index":4652,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["assetslist",{"_index":2103,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["assetsmodule",{"_index":871,"title":{"modules/AssetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules.html":{},"overview.html":{}}}],["assetsprices",{"_index":4654,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["assetsrepository",{"_index":1135,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{}}}],["assetsresponse",{"_index":4058,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetsresponse.data.received_sum.foreach(asset",{"_index":4063,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetsresponse.data.sent_sum.foreach(asset",{"_index":4066,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetsservice",{"_index":1105,"title":{"injectables/AssetsService.html":{}},"body":{"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"overview.html":{}}}],["assetstatus",{"_index":290,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["assetstatus.locked",{"_index":1196,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["assetstatus.pending",{"_index":364,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{}}}],["assetstatus.released",{"_index":1199,"title":{},"body":{"injectables/AssetsService.html":{}}}],["assetstovalue",{"_index":690,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetstovalue(amount",{"_index":730,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue",{"_index":702,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LifecycleService.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue.insert",{"_index":706,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue.len",{"_index":709,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["assetsvalue.totalvalueada",{"_index":3407,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["assetsvalue.totalvalueusd",{"_index":3408,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["assetswhitelist",{"_index":4685,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["assetswhitelistentity",{"_index":1211,"title":{"entities/AssetsWhitelistEntity.html":{}},"body":{"entities/AssetsWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["assetswhitelistrepository",{"_index":2891,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["assetswithvalues",{"_index":4130,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.filter(a",{"_index":4151,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.length",{"_index":4150,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.map(asset",{"_index":4152,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetswithvalues.push",{"_index":4136,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assettype",{"_index":289,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"injectables/TaptoolsService.html":{},"miscellaneous/enumerations.html":{}}}],["assettype.cnt",{"_index":356,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{}}}],["assettype.nft",{"_index":1165,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{}}}],["assetvalue",{"_index":4137,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetvalue?.priceada",{"_index":4139,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetvalue?.priceusd",{"_index":4140,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["assetvaluedto",{"_index":1039,"title":{"classes/AssetValueDto.html":{}},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["assetvaultname",{"_index":3502,"title":{},"body":{"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["assetwhitelist",{"_index":397,"title":{"classes/AssetWhitelist.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["assetwhitelistdto",{"_index":1076,"title":{"classes/AssetWhitelistDto.html":{}},"body":{"classes/AssetWhitelistDto.html":{}}}],["assetwindow",{"_index":4522,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["associate",{"_index":2386,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["async",{"_index":15,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":1828,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["attempting",{"_index":1838,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["attributes",{"_index":1013,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["auth",{"_index":1231,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":1280,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":1240,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.guard",{"_index":190,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AwsController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["authcontroller",{"_index":1229,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticated",{"_index":4225,"title":{},"body":{"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":1352,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["authguard",{"_index":189,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"guards/AuthGuard.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["authmodule",{"_index":872,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":5193,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1817,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["authservice",{"_index":1239,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["auto",{"_index":1502,"title":{},"body":{"injectables/AwsService.html":{}}}],["autoloadentities",{"_index":932,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":3263,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["avoid",{"_index":2984,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/TaptoolsService.html":{}}}],["await",{"_index":37,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1494,"title":{},"body":{"injectables/AwsService.html":{},"dependencies.html":{},"index.html":{}}}],["aws.controller",{"_index":1446,"title":{},"body":{"modules/AwsModule.html":{}}}],["aws.s3",{"_index":1491,"title":{},"body":{"injectables/AwsService.html":{}}}],["aws.service",{"_index":1400,"title":{},"body":{"controllers/AwsController.html":{},"modules/AwsModule.html":{}}}],["aws_bucket/aws.controller",{"_index":4411,"title":{},"body":{"controllers/UsersController.html":{}}}],["aws_bucket/aws.module",{"_index":4438,"title":{},"body":{"modules/UsersModule.html":{},"modules/VaultsModule.html":{}}}],["aws_bucket/aws.service",{"_index":2908,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["awscontroller",{"_index":1363,"title":{"controllers/AwsController.html":{}},"body":{"controllers/AwsController.html":{},"modules/AwsModule.html":{}}}],["awsmodule",{"_index":873,"title":{"modules/AwsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AwsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["awsservice",{"_index":1399,"title":{"injectables/AwsService.html":{}},"body":{"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["axios",{"_index":1800,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{},"dependencies.html":{}}}],["axios.get('https://api.coingecko.com/api/v3/simple/price",{"_index":3997,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.baseurl}/token/price",{"_index":4105,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.baseurl}/wallet/portfolio/positions?address=${walletaddress",{"_index":4018,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}/assets/${assetid",{"_index":4052,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}addresses/${walletaddress",{"_index":4056,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}addresses/${walletaddress}/total",{"_index":4059,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.blockfrosttestneturl}assets/${asset.unit",{"_index":4080,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.get(`${this.scannerurl}${endpoint",{"_index":1816,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["axios.isaxioserror(err",{"_index":4015,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["axios.post",{"_index":1820,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["b",{"_index":793,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["b255d78aaf821388e00cbc03e09add05810e346b2b1f2a5db236752aec116a50",{"_index":3664,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["back",{"_index":2198,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["backend",{"_index":2355,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["backers",{"_index":5190,"title":{},"body":{"index.html":{}}}],["backward",{"_index":4143,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["badrequestexception",{"_index":287,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('asset",{"_index":1192,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('assets",{"_index":1161,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('at",{"_index":316,"title":{},"body":{"injectables/AcquireService.html":{}}}],["badrequestexception('cannot",{"_index":2961,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["badrequestexception('claim",{"_index":2418,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["badrequestexception('csv",{"_index":1562,"title":{},"body":{"injectables/AwsService.html":{}}}],["badrequestexception('dex",{"_index":1170,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('draft",{"_index":2945,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["badrequestexception('failed",{"_index":375,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{}}}],["badrequestexception('governance",{"_index":3262,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["badrequestexception('invalid",{"_index":3653,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["badrequestexception('only",{"_index":1195,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('token",{"_index":1167,"title":{},"body":{"injectables/AssetsService.html":{}}}],["badrequestexception('user",{"_index":331,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('vault",{"_index":310,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{}}}],["badrequestexception(`error",{"_index":1566,"title":{},"body":{"injectables/AwsService.html":{}}}],["badrequestexception(`vault",{"_index":1207,"title":{},"body":{"injectables/AssetsService.html":{}}}],["balance",{"_index":2227,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/TaptoolsService.html":{}}}],["balances",{"_index":4060,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["balances.get('lovelace",{"_index":4069,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["balances.get(asset.unit",{"_index":4068,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["balances.set(asset.unit",{"_index":4064,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["banner",{"_index":3888,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["banner_image",{"_index":2930,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["banner_image_id",{"_index":2651,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{}}}],["bannerimage",{"_index":1350,"title":{},"body":{"injectables/AuthService.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{}}}],["bannerimage'})@onetoone(undefined)@joincolumn({name",{"_index":4353,"title":{},"body":{"entities/User.html":{}}}],["bannerimg",{"_index":2977,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["bannerimgkey",{"_index":2975,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["base",{"_index":798,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["base_address_preprod",{"_index":4866,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["baseallocation",{"_index":4612,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["based",{"_index":2164,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["baseurl",{"_index":783,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["basic",{"_index":3716,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/UsersService.html":{}}}],["batch",{"_index":4084,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["batches",{"_index":4075,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["batchresults",{"_index":4082,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["batchsize",{"_index":4078,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["bearer",{"_index":1273,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BlockchainScannerService.html":{}}}],["because...'})@isstring",{"_index":4798,"title":{},"body":{"classes/VoteReq.html":{}}}],["before",{"_index":1568,"title":{},"body":{"injectables/AwsService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/LifecycleService.html":{}}}],["beforeinsert",{"_index":445,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["beforeupdate",{"_index":446,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["being",{"_index":1833,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["between",{"_index":2711,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["bigint",{"_index":683,"title":{},"body":{"interfaces/Amount.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["bignum",{"_index":678,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{}}}],["bignum.from_str(string(asset.quantity",{"_index":708,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["binary",{"_index":4347,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["blaze",{"_index":5011,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":639,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ContributionService.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["block_height",{"_index":1600,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["block_time",{"_index":1601,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockchain",{"_index":1617,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["blockchain.controller",{"_index":1747,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["blockchain.service",{"_index":1748,"title":{},"body":{"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["blockchain/addresses/${address}/transactions",{"_index":1850,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["blockchain/database",{"_index":3272,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["blockchainaddressresponse",{"_index":1594,"title":{"interfaces/BlockchainAddressResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaincontractresponse",{"_index":1610,"title":{"interfaces/BlockchainContractResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaincontroller",{"_index":1615,"title":{"controllers/BlockchainController.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{}}}],["blockchainmodule",{"_index":874,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainscanner",{"_index":2062,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["blockchainscannerservice",{"_index":1741,"title":{"injectables/BlockchainScannerService.html":{}},"body":{"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"overview.html":{}}}],["blockchainservice",{"_index":1742,"title":{"injectables/BlockchainService.html":{}},"body":{"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"overview.html":{}}}],["blockchaintokenresponse",{"_index":1613,"title":{"interfaces/BlockchainTokenResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaintransactionlistitem",{"_index":1598,"title":{"interfaces/BlockchainTransactionListItem.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"injectables/ContributionService.html":{}}}],["blockchaintransactionlistresponse",{"_index":1602,"title":{"interfaces/BlockchainTransactionListResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaintransactionresponse",{"_index":1603,"title":{"interfaces/BlockchainTransactionResponse.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchaintxhash",{"_index":2443,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["blockchaintxs",{"_index":2511,"title":{},"body":{"injectables/ContributionService.html":{}}}],["blockchainutxo",{"_index":1597,"title":{"interfaces/BlockchainUtxo.html":{}},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["blockchainwebhookdto",{"_index":1635,"title":{"classes/BlockchainWebhookDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["blockfrost",{"_index":717,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["blockfrost.addressesutxosall(address.to_bech32",{"_index":719,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["blockfrost.assetstransactions(unit",{"_index":745,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrost.txsutxos(assets[0].tx_hash",{"_index":750,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrost/blockfrost",{"_index":669,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"dependencies.html":{}}}],["blockfrostamount",{"_index":1928,"title":{"classes/BlockfrostAmount.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrostapi",{"_index":2045,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["blockfrostservererror",{"_index":668,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrostservererror).status_code",{"_index":758,"title":{},"body":{"interfaces/Amount.html":{}}}],["blockfrosttestneturl",{"_index":3947,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["blockfrosttransaction",{"_index":1940,"title":{"classes/BlockfrostTransaction.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrosttransactionevent",{"_index":1915,"title":{"classes/BlockfrostTransactionEvent.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrosttransaction})@isobject()@validatenested()@type(undefined)@expose",{"_index":1997,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["blockfrosttxinput",{"_index":1930,"title":{"classes/BlockfrostTxInput.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockfrosttxoutput",{"_index":1938,"title":{"classes/BlockfrostTxOutput.html":{}},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["blockheight",{"_index":1726,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["blueprint",{"_index":2056,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["blueprint.validators.find(v",{"_index":2092,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["board",{"_index":5183,"title":{},"body":{"index.html":{}}}],["body",{"_index":178,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AuthController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"dependencies.html":{}}}],["body.middleware.ts",{"_index":3798,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["body.middleware.ts:7",{"_index":3803,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["body.middleware.ts:9",{"_index":3801,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["body.signedtx",{"_index":2327,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["boolean",{"_index":583,"title":{},"body":{"classes/AddedDelete1747838327085.html":{},"entities/Asset.html":{},"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/CreatePoolDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["bootstrap",{"_index":227,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2357,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{}}}],["bound_type",{"_index":2761,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["browse",{"_index":5202,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":5200,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1372,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{}}}],["bucketkey",{"_index":1473,"title":{},"body":{"injectables/AwsService.html":{}}}],["bucketname",{"_index":1457,"title":{},"body":{"injectables/AwsService.html":{}}}],["buffer",{"_index":666,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["buffer.from(details.asset_name",{"_index":4088,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["buffer.from(headermap.header(label.new_text('address')).to_bytes",{"_index":1309,"title":{},"body":{"injectables/AuthService.html":{}}}],["buffer.from(payload).tostring('utf8",{"_index":1326,"title":{},"body":{"injectables/AuthService.html":{}}}],["buffer.from(str).tostring('hex",{"_index":762,"title":{},"body":{"interfaces/Amount.html":{}}}],["buffer.isbuffer(req.body",{"_index":1697,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["build",{"_index":1624,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["build/:id",{"_index":4711,"title":{},"body":{"controllers/VaultsController.html":{}}}],["buildclaimtransaction",{"_index":2341,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["buildclaimtransaction(claimid",{"_index":2351,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["building",{"_index":1888,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"index.html":{}}}],["buildresponse",{"_index":1882,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["buildresponse.complete",{"_index":1885,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["buildresponse.data",{"_index":4920,"title":{},"body":{"injectables/VyfiService.html":{}}}],["builds",{"_index":1862,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["buildtransaction",{"_index":832,"title":{},"body":{"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"injectables/VaultInsertingService.html":{}}}],["buildtransaction(@body",{"_index":1676,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["buildtransaction(params",{"_index":826,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["buildtransaction(txdata",{"_index":1860,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["buildtransactiondto",{"_index":1622,"title":{"classes/BuildTransactionDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["buildtransactionoutput",{"_index":2042,"title":{"interfaces/BuildTransactionOutput.html":{}},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["buildtransactionparams",{"_index":774,"title":{"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["built",{"_index":1626,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"injectables/ClaimsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["bullmodule",{"_index":883,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{}}}],["bullmodule.forroot",{"_index":911,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":3293,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["bullmq",{"_index":3306,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"dependencies.html":{}}}],["burn",{"_index":105,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["burnconfig",{"_index":4602,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["burnconfig.assetvaultname",{"_index":4570,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["burnconfig.customeraddress",{"_index":4571,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["burndto",{"_index":3620,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burned",{"_index":755,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{}}}],["burning",{"_index":2221,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["burnlp",{"_index":2732,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["burnlptokens",{"_index":3611,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burnlptokens(burndto",{"_index":3617,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burnlptokensparams",{"_index":2217,"title":{"interfaces/BurnLpTokensParams.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["burnpublishatempt",{"_index":4696,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burnpublishatempt(id",{"_index":4704,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burns",{"_index":3619,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["burntx",{"_index":3495,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["burntx.presignedtx",{"_index":3505,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["burnvault",{"_index":1618,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["burnvault(@request",{"_index":1678,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["burnvault(req",{"_index":1629,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["burnvaultattempt",{"_index":4697,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burnvaultattempt(@param('id",{"_index":4779,"title":{},"body":{"controllers/VaultsController.html":{}}}],["burnvaultattempt(id",{"_index":4710,"title":{},"body":{"controllers/VaultsController.html":{}}}],["business",{"_index":2788,"title":{},"body":{"injectables/DistributionService.html":{}}}],["button",{"_index":2354,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["by'})@expose",{"_index":3187,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["bypass",{"_index":320,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["bytes",{"_index":1953,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e",{"_index":2455,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75",{"_index":1934,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75'})@isstring()@expose",{"_index":2006,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["cache",{"_index":3948,"title":{},"body":{"injectables/TaptoolsService.html":{},"dependencies.html":{}}}],["cached",{"_index":4010,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["cachedprice",{"_index":3995,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["cachekey",{"_index":3993,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["calculate",{"_index":3405,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"injectables/UsersService.html":{}}}],["calculateacquirerexample",{"_index":2804,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculateacquirerexample(params",{"_index":2812,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatecontributorexample",{"_index":2805,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatecontributorexample(params",{"_index":2814,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatelpada",{"_index":2806,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatelpada(adasent",{"_index":2816,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculates",{"_index":3937,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["calculatetotalvalueretained",{"_index":2807,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatetotalvalueretained(netada",{"_index":2820,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatevaultassetsvalue",{"_index":3950,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["calculatevaultassetsvalue(vaultid",{"_index":3958,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["calculatevtprice",{"_index":2808,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculatevtprice(adasent",{"_index":2826,"title":{},"body":{"injectables/DistributionService.html":{}}}],["calculating",{"_index":2790,"title":{},"body":{"injectables/DistributionService.html":{}}}],["call",{"_index":2361,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["callanvilapi",{"_index":795,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["callanvilapi(undefined",{"_index":837,"title":{},"body":{"injectables/AnvilApiService.html":{}}}],["can't",{"_index":4145,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["canactivate",{"_index":1251,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":1256,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancelada",{"_index":2741,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["cancelasset",{"_index":2740,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["cardano",{"_index":1548,"title":{},"body":{"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["cardano/uplc",{"_index":5012,"title":{},"body":{"dependencies.html":{}}}],["cardanoaddressregex",{"_index":1535,"title":{},"body":{"injectables/AwsService.html":{}}}],["cardanoaddressregex.test(address",{"_index":1546,"title":{},"body":{"injectables/AwsService.html":{}}}],["cascade",{"_index":81,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/LinkEntity.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["cascade'})@joincolumn({name",{"_index":439,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{}}}],["case",{"_index":3314,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/TaptoolsService.html":{}}}],["catch",{"_index":370,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["category",{"_index":1014,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["cbor",{"_index":779,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{},"dependencies.html":{}}}],["cd153e0a",{"_index":1909,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["certificate_index",{"_index":2757,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["cf68eb9c",{"_index":1920,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["chain",{"_index":760,"title":{},"body":{"interfaces/Amount.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["change",{"_index":2015,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["change_output_index",{"_index":2739,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["changeaddress",{"_index":775,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["changeassetsownertype.ts",{"_index":2235,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype.ts:32",{"_index":2237,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype.ts:4",{"_index":2236,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype.ts:6",{"_index":2238,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeassetsownertype1743678745097",{"_index":2233,"title":{"classes/ChangeAssetsOwnerType1743678745097.html":{}},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["changeintervaltobigint.ts",{"_index":2246,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint.ts:23",{"_index":2248,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint.ts:4",{"_index":2247,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint.ts:6",{"_index":2249,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changeintervaltobigint1742311345554",{"_index":2244,"title":{"classes/ChangeIntervalToBigint1742311345554.html":{}},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["changes",{"_index":5115,"title":{},"body":{"index.html":{}}}],["channel",{"_index":5161,"title":{},"body":{"index.html":{}}}],["character",{"_index":52,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFields1746536544579.html":{},"classes/SocialLink.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["characters",{"_index":1557,"title":{},"body":{"injectables/AwsService.html":{}}}],["check",{"_index":322,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"index.html":{}}}],["checkmonitoringaddress",{"_index":1753,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["checkmonitoringaddress(vaultaddress",{"_index":1766,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["checkpool",{"_index":4802,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["checkpool(networkid",{"_index":4805,"title":{},"body":{"controllers/VyfiController.html":{}}}],["checkpool(params",{"_index":4851,"title":{},"body":{"injectables/VyfiService.html":{}}}],["chk_9d2496e0bc2b30a41372df4bd4",{"_index":2710,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["cip25",{"_index":2120,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["claim",{"_index":486,"title":{"entities/Claim.html":{}},"body":{"classes/AddMetadataToTransaction1751453522246.html":{},"entities/Claim.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/GetClaimsDto.html":{},"injectables/LpTokensService.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["claim.amount",{"_index":2429,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claim.dto",{"_index":2389,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claim.dto.ts",{"_index":2575,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["claim.dto.ts:11",{"_index":2576,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["claim.dto.ts:15",{"_index":2578,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["claim.dto.ts:18",{"_index":2579,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["claim.dto.ts:5",{"_index":2581,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["claim.dto.ts:8",{"_index":2580,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["claim.entity",{"_index":4380,"title":{},"body":{"entities/User.html":{}}}],["claim.id",{"_index":2424,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claim.status",{"_index":2417,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claim.tx_hash",{"_index":2416,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claim.user",{"_index":2430,"title":{},"body":{"injectables/ClaimsService.html":{},"entities/User.html":{}}}],["claim.user.address",{"_index":2421,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claim.user.id",{"_index":2432,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claimed",{"_index":2277,"title":{},"body":{"entities/Claim.html":{},"injectables/ClaimsService.html":{},"classes/GetClaimsDto.html":{},"miscellaneous/enumerations.html":{}}}],["claimid",{"_index":2366,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claimrepository",{"_index":2348,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claimresponsedto",{"_index":2278,"title":{"classes/ClaimResponseDto.html":{}},"body":{"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{}}}],["claims",{"_index":47,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"entities/User.html":{}}}],["claims.controller",{"_index":2337,"title":{},"body":{"modules/ClaimsModule.html":{}}}],["claims.dto",{"_index":2315,"title":{},"body":{"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{}}}],["claims.dto.ts",{"_index":3159,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["claims.dto.ts:13",{"_index":3167,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["claims.dto.ts:22",{"_index":3165,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["claims.service",{"_index":2311,"title":{},"body":{"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{}}}],["claimscontroller",{"_index":2290,"title":{"controllers/ClaimsController.html":{}},"body":{"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{}}}],["claimsmodule",{"_index":875,"title":{"modules/ClaimsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClaimsModule.html":{},"modules.html":{},"overview.html":{}}}],["claimsservice",{"_index":2310,"title":{"injectables/ClaimsService.html":{}},"body":{"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"overview.html":{}}}],["claimstate",{"_index":3160,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["claimstatus",{"_index":2263,"title":{},"body":{"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"injectables/ClaimsService.html":{},"classes/GetClaimsDto.html":{},"miscellaneous/enumerations.html":{}}}],["claimstatus.claimed",{"_index":2404,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["claimstatus.disabled",{"_index":2276,"title":{},"body":{"entities/Claim.html":{},"injectables/ClaimsService.html":{}}}],["claimstatus.pending",{"_index":2407,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["class",{"_index":0,"title":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ClaimResponseDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"classes/VoteReq.html":{},"classes/WalletSummaryDto.html":{}},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ClaimResponseDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"classes/VoteReq.html":{},"classes/WalletSummaryDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":1390,"title":{},"body":{"controllers/AwsController.html":{}}}],["classtoplain",{"_index":1153,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["classtoplain(asset",{"_index":1177,"title":{},"body":{"injectables/AssetsService.html":{}}}],["classtoplain(selecteduser",{"_index":4504,"title":{},"body":{"injectables/UsersService.html":{}}}],["classtoplain(user",{"_index":4479,"title":{},"body":{"injectables/UsersService.html":{}}}],["classtoplain(usersource",{"_index":4472,"title":{},"body":{"injectables/UsersService.html":{}}}],["classtoplain(vault",{"_index":2942,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["clicks",{"_index":5146,"title":{},"body":{"index.html":{}}}],["closing",{"_index":2678,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"miscellaneous/enumerations.html":{}}}],["cloud",{"_index":5133,"title":{},"body":{"index.html":{}}}],["cluster_acquiremodule",{"_index":230,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_acquiremodule_exports",{"_index":231,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_acquiremodule_imports",{"_index":232,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_acquiremodule_providers",{"_index":233,"title":{},"body":{"modules/AcquireModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":868,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":870,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":869,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_assetsmodule",{"_index":1117,"title":{},"body":{"modules/AssetsModule.html":{},"overview.html":{}}}],["cluster_assetsmodule_exports",{"_index":1119,"title":{},"body":{"modules/AssetsModule.html":{},"overview.html":{}}}],["cluster_assetsmodule_providers",{"_index":1118,"title":{},"body":{"modules/AssetsModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1274,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1276,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":1275,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":1277,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_awsmodule",{"_index":1437,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_exports",{"_index":1438,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_providers",{"_index":1439,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule",{"_index":1737,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_exports",{"_index":1739,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":1738,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["cluster_blockchainmodule_providers",{"_index":1740,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_claimsmodule",{"_index":2330,"title":{},"body":{"modules/ClaimsModule.html":{},"overview.html":{}}}],["cluster_claimsmodule_exports",{"_index":2333,"title":{},"body":{"modules/ClaimsModule.html":{},"overview.html":{}}}],["cluster_claimsmodule_imports",{"_index":2332,"title":{},"body":{"modules/ClaimsModule.html":{}}}],["cluster_claimsmodule_providers",{"_index":2331,"title":{},"body":{"modules/ClaimsModule.html":{},"overview.html":{}}}],["cluster_contributionmodule",{"_index":2489,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_exports",{"_index":2491,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_contributionmodule_imports",{"_index":2490,"title":{},"body":{"modules/ContributionModule.html":{}}}],["cluster_contributionmodule_providers",{"_index":2492,"title":{},"body":{"modules/ContributionModule.html":{},"overview.html":{}}}],["cluster_distributionmodule",{"_index":2778,"title":{},"body":{"modules/DistributionModule.html":{},"overview.html":{}}}],["cluster_distributionmodule_exports",{"_index":2780,"title":{},"body":{"modules/DistributionModule.html":{},"overview.html":{}}}],["cluster_distributionmodule_providers",{"_index":2779,"title":{},"body":{"modules/DistributionModule.html":{},"overview.html":{}}}],["cluster_governancemodule",{"_index":3248,"title":{},"body":{"modules/GovernanceModule.html":{},"overview.html":{}}}],["cluster_governancemodule_exports",{"_index":3249,"title":{},"body":{"modules/GovernanceModule.html":{},"overview.html":{}}}],["cluster_governancemodule_providers",{"_index":3250,"title":{},"body":{"modules/GovernanceModule.html":{},"overview.html":{}}}],["cluster_jwtglobalmodule",{"_index":3275,"title":{},"body":{"modules/JwtGlobalModule.html":{},"overview.html":{}}}],["cluster_jwtglobalmodule_exports",{"_index":3277,"title":{},"body":{"modules/JwtGlobalModule.html":{},"overview.html":{}}}],["cluster_jwtglobalmodule_imports",{"_index":3276,"title":{},"body":{"modules/JwtGlobalModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule",{"_index":3282,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule_exports",{"_index":3283,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule_imports",{"_index":3285,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["cluster_lifecyclemodule_providers",{"_index":3284,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lptokensmodule",{"_index":3600,"title":{},"body":{"modules/LpTokensModule.html":{},"overview.html":{}}}],["cluster_lptokensmodule_exports",{"_index":3602,"title":{},"body":{"modules/LpTokensModule.html":{},"overview.html":{}}}],["cluster_lptokensmodule_imports",{"_index":3603,"title":{},"body":{"modules/LpTokensModule.html":{}}}],["cluster_lptokensmodule_providers",{"_index":3601,"title":{},"body":{"modules/LpTokensModule.html":{},"overview.html":{}}}],["cluster_taptoolsmodule",{"_index":3941,"title":{},"body":{"modules/TaptoolsModule.html":{},"overview.html":{}}}],["cluster_taptoolsmodule_exports",{"_index":3942,"title":{},"body":{"modules/TaptoolsModule.html":{},"overview.html":{}}}],["cluster_taptoolsmodule_providers",{"_index":3943,"title":{},"body":{"modules/TaptoolsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule",{"_index":4242,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_exports",{"_index":4244,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_providers",{"_index":4243,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":4433,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":4436,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":4434,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":4435,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_vaultsmodule",{"_index":4783,"title":{},"body":{"modules/VaultsModule.html":{},"overview.html":{}}}],["cluster_vaultsmodule_exports",{"_index":4786,"title":{},"body":{"modules/VaultsModule.html":{},"overview.html":{}}}],["cluster_vaultsmodule_imports",{"_index":4785,"title":{},"body":{"modules/VaultsModule.html":{}}}],["cluster_vaultsmodule_providers",{"_index":4784,"title":{},"body":{"modules/VaultsModule.html":{},"overview.html":{}}}],["cluster_vyfimodule",{"_index":4839,"title":{},"body":{"modules/VyfiModule.html":{},"overview.html":{}}}],["cluster_vyfimodule_exports",{"_index":4840,"title":{},"body":{"modules/VyfiModule.html":{},"overview.html":{}}}],["cluster_vyfimodule_providers",{"_index":4841,"title":{},"body":{"modules/VyfiModule.html":{},"overview.html":{}}}],["cnt",{"_index":357,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["collateral",{"_index":1937,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["collector",{"_index":3885,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["column",{"_index":113,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"entities/User.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["column({name",{"_index":955,"title":{},"body":{"entities/Asset.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":4162,"title":{},"body":{"entities/Transaction.html":{}}}],["column({type",{"_index":970,"title":{},"body":{"entities/Asset.html":{},"entities/Transaction.html":{}}}],["column({unique",{"_index":3909,"title":{},"body":{"entities/TagEntity.html":{}}}],["columns",{"_index":525,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"injectables/AwsService.html":{}}}],["combined",{"_index":2032,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["come",{"_index":5153,"title":{},"body":{"index.html":{}}}],["comment",{"_index":562,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{}}}],["compare",{"_index":5004,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["comparing",{"_index":2504,"title":{},"body":{"injectables/ContributionService.html":{}}}],["compatibility",{"_index":4144,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["complete",{"_index":778,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["components",{"_index":4978,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["compute",{"_index":4985,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["computed",{"_index":4991,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["config",{"_index":4538,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["configmodule",{"_index":885,"title":{},"body":{"modules/AppModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LpTokensModule.html":{},"modules/VyfiModule.html":{}}}],["configmodule.forroot",{"_index":909,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["configservice",{"_index":770,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"guards/AuthGuard.html":{},"modules/AwsModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"modules/JwtGlobalModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('jwt_secret",{"_index":1451,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["configuration",{"_index":3393,"title":{},"body":{"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["configured",{"_index":799,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["confirmed",{"_index":651,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["connect",{"_index":2356,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["connection",{"_index":912,"title":{},"body":{"modules/AppModule.html":{}}}],["consistent",{"_index":3468,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["console.error('anvil",{"_index":825,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.error('error",{"_index":1338,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/TaptoolsService.html":{}}}],["console.error('webhook",{"_index":1721,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["console.error(`error",{"_index":4055,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["console.error(error",{"_index":3106,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["console.log('base",{"_index":809,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('body",{"_index":812,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('endpoint",{"_index":815,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('error",{"_index":1884,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["console.log('headers",{"_index":811,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('method",{"_index":810,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["console.log('received",{"_index":1709,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["console.log('transaction",{"_index":2206,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["console.log(json.stringify(inputwithnopreloaded",{"_index":3697,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["console.log(json.stringify(output",{"_index":3686,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["console.warn(`could",{"_index":4090,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["const",{"_index":209,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":4868,"title":{},"body":{"injectables/VyfiService.html":{}}}],["constraint",{"_index":42,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["constrplutusdata",{"_index":682,"title":{},"body":{"interfaces/Amount.html":{}}}],["construct",{"_index":4909,"title":{},"body":{"injectables/VyfiService.html":{}}}],["constructor",{"_index":201,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/SocialLink.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TagDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["constructor(assetsrepository",{"_index":1132,"title":{},"body":{"injectables/AssetsService.html":{}}}],["constructor(configservice",{"_index":834,"title":{},"body":{"injectables/AnvilApiService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["constructor(filerepository",{"_index":1467,"title":{},"body":{"injectables/AwsService.html":{}}}],["constructor(httpservice",{"_index":4849,"title":{},"body":{"injectables/VyfiService.html":{}}}],["constructor(jwtservice",{"_index":1253,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(partial",{"_index":386,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{}}}],["constructor(phasetransitionqueue",{"_index":3337,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["constructor(private",{"_index":785,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ClaimsController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VyfiController.html":{},"injectables/WebhookVerificationService.html":{}}}],["constructor(transactionrepository",{"_index":2347,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["constructor(transactionsservice",{"_index":3615,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["constructor(usersrepository",{"_index":4443,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":1284,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(vaultrepository",{"_index":272,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/TaptoolsService.html":{}}}],["constructor(vaultsrepository",{"_index":2810,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/VaultInsertingService.html":{}}}],["containing",{"_index":1554,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["contains",{"_index":1563,"title":{},"body":{"injectables/AwsService.html":{}}}],["content",{"_index":803,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["contenttype",{"_index":1477,"title":{},"body":{"injectables/AwsService.html":{}}}],["context",{"_index":1259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1265,"title":{},"body":{"guards/AuthGuard.html":{}}}],["continue",{"_index":2200,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["contract",{"_index":1959,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ContributionService.html":{},"classes/VaultShortResponse.html":{}}}],["contract_address",{"_index":464,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{},"entities/Asset.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["contract_type",{"_index":2758,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["contractaddress",{"_index":997,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/BlockchainScannerService.html":{},"classes/CreateAssetDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["contractaddress'})@column({name",{"_index":953,"title":{},"body":{"entities/Asset.html":{}}}],["contractdeployed",{"_index":1879,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["contractdeployed.json",{"_index":1883,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["contracts",{"_index":2746,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["contracttype",{"_index":4523,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["contribute",{"_index":102,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AcquireReq.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"classes/GetVaultTransactionsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"injectables/TaptoolsService.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["contribute'})@isarray()@validatenested({each",{"_index":256,"title":{},"body":{"classes/AcquireReq.html":{},"classes/ContributeReq.html":{}}}],["contribute(@req",{"_index":2485,"title":{},"body":{"controllers/ContributionController.html":{}}}],["contribute(req",{"_index":2476,"title":{},"body":{"controllers/ContributionController.html":{}}}],["contribute(vaultid",{"_index":2499,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contribute.contribute",{"_index":2094,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["contributed",{"_index":544,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["contributed_assets",{"_index":2729,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["contributereq",{"_index":2447,"title":{"classes/ContributeReq.html":{}},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["contributereq.assets.filter(asset",{"_index":2537,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contributereq.assets.length",{"_index":2535,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contributereq.assets.map(async",{"_index":2548,"title":{},"body":{"injectables/ContributionService.html":{}}}],["contribution",{"_index":131,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"classes/GetVaultsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["contribution.controller",{"_index":2494,"title":{},"body":{"modules/ContributionModule.html":{}}}],["contribution.service",{"_index":2481,"title":{},"body":{"controllers/ContributionController.html":{},"modules/ContributionModule.html":{}}}],["contribution/acquire",{"_index":3266,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["contribution/contribution.module",{"_index":3290,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["contribution/contribution.service",{"_index":3369,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contribution/dto/contribute.req",{"_index":265,"title":{},"body":{"classes/AcquireReq.html":{}}}],["contribution/dto/txupdate.req",{"_index":195,"title":{},"body":{"controllers/AcquireController.html":{}}}],["contribution_duration",{"_index":627,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["contribution_open_window_time",{"_index":2685,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["contribution_open_window_type",{"_index":2684,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum",{"_index":3116,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum_old",{"_index":3118,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["contribution_phase_start",{"_index":528,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"injectables/LifecycleService.html":{}}}],["contributionasset",{"_index":252,"title":{"classes/ContributionAsset.html":{}},"body":{"classes/AcquireReq.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["contributioncontroller",{"_index":2473,"title":{"controllers/ContributionController.html":{}},"body":{"controllers/ContributionController.html":{},"modules/ContributionModule.html":{}}}],["contributionduration",{"_index":4660,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributiondurationms",{"_index":3489,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionend",{"_index":3356,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionmodule",{"_index":876,"title":{"modules/ContributionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/LifecycleModule.html":{},"modules.html":{},"overview.html":{}}}],["contributionopenwindowtime",{"_index":4665,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributionopenwindowtype",{"_index":4664,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributionphasestart",{"_index":4686,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["contributionservice",{"_index":2480,"title":{"injectables/ContributionService.html":{}},"body":{"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"overview.html":{}}}],["contributionstart",{"_index":3487,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionvaults",{"_index":3483,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionwindowtype",{"_index":3365,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["contributionwindowtype.custom",{"_index":3480,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributionwindowtype.uponvaultlaunch",{"_index":3477,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributor",{"_index":2546,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["contributor/acquirer",{"_index":2800,"title":{},"body":{"injectables/DistributionService.html":{}}}],["contributor_whitelist",{"_index":573,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["contributoritems",{"_index":3100,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["contributors",{"_index":2792,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["contributorshare",{"_index":2839,"title":{},"body":{"injectables/DistributionService.html":{}}}],["contributorvaluemap",{"_index":3423,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributorvaluemap[userid",{"_index":3445,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["contributorwhitelist",{"_index":413,"title":{"classes/ContributorWhitelist.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/VaultShortResponse.html":{}}}],["contributorwhitelistentity",{"_index":2554,"title":{"entities/ContributorWhitelistEntity.html":{}},"body":{"entities/ContributorWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["contributorwhitelistrepository",{"_index":2893,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["control",{"_index":1420,"title":{},"body":{"controllers/AwsController.html":{}}}],["controller",{"_index":141,"title":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}},"body":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["controller('/info",{"_index":865,"title":{},"body":{"controllers/AppController.html":{}}}],["controller('acquire",{"_index":200,"title":{},"body":{"controllers/AcquireController.html":{}}}],["controller('assets",{"_index":1108,"title":{},"body":{"controllers/AssetsController.html":{}}}],["controller('auth",{"_index":1243,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('blockchain",{"_index":1673,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["controller('claims",{"_index":2317,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["controller('contribute",{"_index":2484,"title":{},"body":{"controllers/ContributionController.html":{}}}],["controller('governance",{"_index":3233,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["controller('lp",{"_index":3592,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["controller('taptools",{"_index":3931,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["controller('transactions",{"_index":4234,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["controller('users",{"_index":4416,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('vaults",{"_index":4750,"title":{},"body":{"controllers/VaultsController.html":{}}}],["controller('vyfi",{"_index":4828,"title":{},"body":{"controllers/VyfiController.html":{}}}],["controllers",{"_index":143,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["convert",{"_index":2204,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["core",{"_index":2787,"title":{},"body":{"injectables/DistributionService.html":{}}}],["corresponding",{"_index":2519,"title":{},"body":{"injectables/ContributionService.html":{}}}],["cosekey",{"_index":1290,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosekey.from_bytes(buffer.from(signature.key",{"_index":1313,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosesign1",{"_index":1289,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosesign1.from_bytes(buffer.from(signature.signature",{"_index":1305,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosigning",{"_index":4683,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["cosigning_threshold",{"_index":2701,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["cosigningthreshold",{"_index":4684,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["cost",{"_index":4650,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["count",{"_index":746,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["count(a.id",{"_index":3516,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["countcapmax",{"_index":412,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["countcapmax'})@column({name",{"_index":1215,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["countcapmin",{"_index":409,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["countcapmin'})@column({name",{"_index":1217,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["courses",{"_index":5167,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":5120,"title":{},"body":{"index.html":{}}}],["create",{"_index":46,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"injectables/AcquireService.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["create(userdata",{"_index":4445,"title":{},"body":{"injectables/UsersService.html":{}}}],["createassetdto",{"_index":1036,"title":{"classes/CreateAssetDto.html":{}},"body":{"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"classes/CreateAssetDto.html":{}}}],["createburntx",{"_index":4596,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["createburntx(burnconfig",{"_index":4568,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["createclaim",{"_index":2342,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["createclaim(createclaimdto",{"_index":2367,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["createclaimdto",{"_index":2368,"title":{"classes/CreateClaimDto.html":{}},"body":{"injectables/ClaimsService.html":{},"classes/CreateClaimDto.html":{}}}],["createclaimdto.userid",{"_index":2410,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["created",{"_index":129,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["created_at",{"_index":64,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"entities/User.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["createdat",{"_index":452,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"injectables/ClaimsService.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"injectables/GovernanceService.html":{},"entities/LinkEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["createdat'})@column({name",{"_index":3144,"title":{},"body":{"entities/FileEntity.html":{}}}],["createdat'})@column({type",{"_index":428,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["createhmac('sha256",{"_index":4988,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["createliquiditypool",{"_index":4803,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["createliquiditypool(@body",{"_index":4833,"title":{},"body":{"controllers/VyfiController.html":{}}}],["createliquiditypool(createpooldto",{"_index":4814,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["createonchainvaulttx",{"_index":4597,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["createonchainvaulttx(vaultconfig",{"_index":4539,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["createparamdecorator((data",{"_index":5252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpooldto",{"_index":2582,"title":{"classes/CreatePoolDto.html":{}},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["createproposal",{"_index":3206,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["createproposal(@req",{"_index":3235,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["createproposal(req",{"_index":3210,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["createproposal(vaultid",{"_index":3255,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["createproposalreq",{"_index":2608,"title":{"classes/CreateProposalReq.html":{}},"body":{"classes/CreateProposalReq.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["createquerybuilder('vault",{"_index":3473,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["creates",{"_index":2370,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["createtransaction",{"_index":4248,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createtransaction(data",{"_index":4259,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createvault",{"_index":4698,"title":{},"body":{"controllers/VaultsController.html":{}}}],["createvault(req",{"_index":4713,"title":{},"body":{"controllers/VaultsController.html":{}}}],["createvaultreq",{"_index":4714,"title":{},"body":{"controllers/VaultsController.html":{}}}],["creating",{"_index":373,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AuthService.html":{}}}],["creation",{"_index":1944,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"classes/VaultShortResponse.html":{},"injectables/VyfiService.html":{}}}],["creation_threshold",{"_index":2697,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["creationthreshold",{"_index":4678,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["creatorid",{"_index":3269,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["credential",{"_index":2047,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["credential.from_scripthash(scripthash.from_hex(policy_id",{"_index":2088,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["credential.from_scripthash(scripthash.from_hex(this.scpolicyid",{"_index":4541,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["credentials",{"_index":1506,"title":{},"body":{"injectables/AwsService.html":{}}}],["cron",{"_index":3363,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["cron(cronexpression.every_minute",{"_index":3353,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["cronexpression",{"_index":3364,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["crypto",{"_index":3884,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["csv",{"_index":1371,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/VaultShortResponse.html":{},"dependencies.html":{}}}],["ctn",{"_index":2666,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["ctx",{"_index":5253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":4106,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["current",{"_index":2071,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"classes/CreateProposalReq.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["current_timestamp",{"_index":430,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["currentbalance",{"_index":4067,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["currenttime",{"_index":4995,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["custom",{"_index":1018,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{},"injectables/LifecycleService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["custom_metadata",{"_index":2772,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["customer",{"_index":3699,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["customer_address",{"_index":2211,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{}}}],["customeraddress",{"_index":3497,"title":{},"body":{"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["custommetadata",{"_index":4524,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["customstartvaults",{"_index":3479,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["customtime",{"_index":3402,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["dao",{"_index":5068,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":1137,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["data')@useguards(authguard)@post('profile/banner')@useinterceptors(undefined",{"_index":4405,"title":{},"body":{"controllers/UsersController.html":{}}}],["data')@useguards(authguard)@post('profile/image')@useinterceptors(undefined",{"_index":4408,"title":{},"body":{"controllers/UsersController.html":{}}}],["data.acquireopenwindowtime",{"_index":3042,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquireopenwindowtype",{"_index":3045,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirereserve",{"_index":3022,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelist",{"_index":3086,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelist.length",{"_index":3087,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelist?.map(item",{"_index":3089,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirerwhitelistcsv?.key",{"_index":2982,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.acquirewindowduration",{"_index":3040,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.amount",{"_index":4290,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["data.assets",{"_index":4289,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["data.assetswhitelist",{"_index":3078,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.assetswhitelist.length",{"_index":3079,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.assetswhitelist.map(whitelistitem",{"_index":3080,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.bannerimage?.split('image/')[1",{"_index":2976,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.contributionduration",{"_index":3038,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.contributionopenwindowtime",{"_index":3047,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.contributionopenwindowtype",{"_index":3050,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.cosigningthreshold",{"_index":3034,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.creationthreshold",{"_index":3026,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.description",{"_index":3010,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.dexprice",{"_index":1169,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.executionthreshold",{"_index":3032,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.floorprice",{"_index":1174,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.fttokendecimals",{"_index":3012,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.fttokenimg?.split('image/')[1",{"_index":2979,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.fttokensupply",{"_index":3014,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.id",{"_index":2959,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.liquiditypoolcontribution",{"_index":3024,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.metadata",{"_index":1175,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.name",{"_index":2999,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.newstatus",{"_index":3321,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["data.phasestartfield",{"_index":3322,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["data.privacy",{"_index":3002,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.quantity",{"_index":1173,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.sociallinks",{"_index":3062,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.sociallinks.length",{"_index":3063,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.sociallinks.map(linkitem",{"_index":3064,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.startthreshold",{"_index":3028,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.tags.map(async",{"_index":3070,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.tags?.length",{"_index":3069,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.terminationtype",{"_index":3016,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.timeelapsedisequaltotime",{"_index":3052,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.tokenid",{"_index":1166,"title":{},"body":{"injectables/AssetsService.html":{}}}],["data.tokensforacquires",{"_index":3020,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.type",{"_index":1164,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/TransactionsService.html":{}}}],["data.valuationamount",{"_index":3008,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.valuationcurrency",{"_index":3006,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.valuemethod",{"_index":3004,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.vault_id",{"_index":4287,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["data.vaultappreciation",{"_index":3036,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.vaultid",{"_index":1157,"title":{},"body":{"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"injectables/LifecycleProcessor.html":{}}}],["data.vaultimage?.split('image/')[1",{"_index":2972,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.vaulttokenticker",{"_index":3018,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.votethreshold",{"_index":3030,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.whitelistcontributors",{"_index":3098,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.whitelistcontributors.length",{"_index":3099,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data.whitelistcontributors.map(item",{"_index":3101,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["data[0",{"_index":1544,"title":{},"body":{"injectables/AwsService.html":{}}}],["data_hash",{"_index":1607,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["database",{"_index":926,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["database/*.entity{.ts,.js",{"_index":931,"title":{},"body":{"modules/AppModule.html":{}}}],["database/acquirerwhitelist.entity",{"_index":2915,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/asset.entity",{"_index":245,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/assetswhitelist.entity",{"_index":2916,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/claim.entity",{"_index":2338,"title":{},"body":{"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{}}}],["database/contributorwhitelist.entity",{"_index":2917,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/core/**/*.entity{.ts,.js",{"_index":930,"title":{},"body":{"modules/AppModule.html":{}}}],["database/file.entity",{"_index":1445,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"classes/PublicProfileRes.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/link.entity",{"_index":2919,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/PublicProfileRes.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/tag.entity",{"_index":2921,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/transaction.entity",{"_index":1122,"title":{},"body":{"modules/AssetsModule.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{}}}],["database/user.entity",{"_index":247,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/AuthModule.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["database/vault.entity",{"_index":248,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"modules/VaultsModule.html":{}}}],["databasestruct.ts",{"_index":2640,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct.ts:4",{"_index":2641,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct.ts:6",{"_index":2643,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct.ts:82",{"_index":2642,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasestruct1741879378411",{"_index":2638,"title":{"classes/DatabaseStruct1741879378411.html":{}},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["databasetxs",{"_index":2510,"title":{},"body":{"injectables/ContributionService.html":{}}}],["date",{"_index":944,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["date().gettime",{"_index":4557,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["date().toisostring",{"_index":455,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"injectables/TaptoolsService.html":{},"entities/User.html":{}}}],["date(acquirestart.gettime",{"_index":3542,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(contributionstart.gettime",{"_index":3491,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(data.acquireopenwindowtime).toisostring",{"_index":3044,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["date(data.contributionopenwindowtime).toisostring",{"_index":3049,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["date(obj.phaseendtime",{"_index":4644,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["date(value).toisostring",{"_index":4640,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["date(vault.acquire_open_window_time",{"_index":3403,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(vault.acquire_phase_start",{"_index":3538,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(vault.contribution_open_window_time",{"_index":3482,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["date(vault.contribution_phase_start",{"_index":3488,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["datum",{"_index":2051,"title":{"interfaces/Datum.html":{}},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["datum1",{"_index":2750,"title":{"interfaces/Datum1.html":{}},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["datum_tag",{"_index":2730,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["datumtag",{"_index":3684,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["db",{"_index":2523,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DistributionService.html":{}}}],["dbtx",{"_index":2520,"title":{},"body":{"injectables/ContributionService.html":{}}}],["dbtx.status",{"_index":2524,"title":{},"body":{"injectables/ContributionService.html":{}}}],["debugging",{"_index":1708,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/WebhookVerificationService.html":{}}}],["decimal",{"_index":958,"title":{},"body":{"entities/Asset.html":{},"entities/Claim.html":{},"injectables/DistributionService.html":{},"entities/User.html":{}}}],["decimals",{"_index":1063,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["declarations",{"_index":226,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["decode",{"_index":4091,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["decoded",{"_index":1304,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.headers().protected().deserialized_headers",{"_index":1307,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.payload",{"_index":1318,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.signed_data().to_bytes",{"_index":1322,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorator",{"_index":5256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":151,"title":{},"body":{"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"controllers/AppController.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{}}}],["decorators/api",{"_index":862,"title":{},"body":{"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/ClaimsController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["decorators/dto",{"_index":3781,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["deeper",{"_index":5163,"title":{},"body":{"index.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"injectables/LpTokensService.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_initial_delay_ms",{"_index":1803,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["default_max_delay_ms",{"_index":1806,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["default_max_retries",{"_index":1802,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["defineshape",{"_index":5079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defineshape(schema",{"_index":5085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["definitions",{"_index":5086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":3375,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["delete",{"_index":80,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["deleted",{"_index":582,"title":{},"body":{"classes/AddedDelete1747838327085.html":{},"entities/Asset.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"entities/User.html":{},"injectables/VaultInsertingService.html":{}}}],["denied",{"_index":1159,"title":{},"body":{"injectables/AssetsService.html":{}}}],["dependencies",{"_index":224,"title":{"dependencies.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":5123,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":5136,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":5130,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":5145,"title":{},"body":{"index.html":{}}}],["deposit",{"_index":1951,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["desc",{"_index":747,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["desc)'})@expose",{"_index":3191,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["description",{"_index":60,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"interfaces/L4VaVault.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["description'})@column({nullable",{"_index":4359,"title":{},"body":{"entities/User.html":{}}}],["description'})@column({type",{"_index":2257,"title":{},"body":{"entities/Claim.html":{}}}],["description/bio",{"_index":3882,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["destination",{"_index":2030,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["detail",{"_index":2362,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["detailed",{"_index":2612,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/TaptoolsService.html":{}}}],["details",{"_index":1691,"title":{},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/GovernanceController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/VaultInsertingService.html":{}}}],["details'})@apiresponse({status",{"_index":3216,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["details.asset_name",{"_index":4087,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.decimals",{"_index":4096,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.fingerprint",{"_index":4095,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.initial_mint_tx_hash",{"_index":4102,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.metadata",{"_index":4086,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.onchain_metadata",{"_index":4085,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.onchain_metadata?.files",{"_index":4100,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.policy_id",{"_index":4094,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.quantity",{"_index":4103,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["details.ticker",{"_index":4093,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["detected",{"_index":1905,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["determine",{"_index":2163,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["dev",{"_index":1576,"title":{},"body":{"injectables/AwsService.html":{}}}],["development",{"_index":5107,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":5173,"title":{},"body":{"index.html":{}}}],["dex_price",{"_index":940,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["dexprice",{"_index":999,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"classes/CreateAssetDto.html":{}}}],["dexprice'})@column({name",{"_index":957,"title":{},"body":{"entities/Asset.html":{}}}],["diff",{"_index":4645,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["digest('hex",{"_index":4990,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["directly",{"_index":1374,"title":{},"body":{"controllers/AwsController.html":{}}}],["disable",{"_index":2393,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["disabled",{"_index":55,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"entities/Claim.html":{},"classes/GetClaimsDto.html":{},"miscellaneous/enumerations.html":{}}}],["discord",{"_index":5160,"title":{},"body":{"index.html":{}}}],["display",{"_index":3879,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["displayname",{"_index":1042,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{}}}],["distribute",{"_index":110,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"miscellaneous/enumerations.html":{}}}],["distributed",{"_index":3715,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["distributelp",{"_index":5073,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["distributelptokens",{"_index":3612,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["distributelptokens(dropdto",{"_index":3621,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["distributelptokensparams",{"_index":2231,"title":{"interfaces/DistributeLpTokensParams.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["distribution.service",{"_index":2783,"title":{},"body":{"modules/DistributionModule.html":{}}}],["distribution/distribution.module",{"_index":3289,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["distribution/distribution.service",{"_index":3367,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["distributionmodule",{"_index":877,"title":{"modules/DistributionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DistributionModule.html":{},"modules/LifecycleModule.html":{},"modules.html":{},"overview.html":{}}}],["distributions",{"_index":2791,"title":{},"body":{"injectables/DistributionService.html":{}}}],["distributionservice",{"_index":2781,"title":{"injectables/DistributionService.html":{}},"body":{"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{},"overview.html":{}}}],["dive",{"_index":5162,"title":{},"body":{"index.html":{}}}],["doc.decorator",{"_index":863,"title":{},"body":{"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/ClaimsController.html":{},"controllers/TaptoolsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["doc.decorator.ts",{"_index":847,"title":{},"body":{"interfaces/ApiDocParams.html":{},"miscellaneous/functions.html":{}}}],["docs",{"_index":4982,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["documentation",{"_index":5131,"title":{},"body":{"index.html":{}}}],["doe",{"_index":3881,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["don't",{"_index":4118,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["down",{"_index":16,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["down(queryrunner",{"_index":25,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["draft",{"_index":3107,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"miscellaneous/enumerations.html":{}}}],["draftvaultsservice",{"_index":2883,"title":{"injectables/DraftVaultsService.html":{}},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"overview.html":{}}}],["drop",{"_index":41,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["dropdto",{"_index":3624,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["dropoldvauleformenum.ts",{"_index":3110,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum.ts:27",{"_index":3112,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum.ts:4",{"_index":3111,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum.ts:6",{"_index":3113,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropoldvauleformenum1742800589634",{"_index":3108,"title":{"classes/DropOldVauleFormEnum1742800589634.html":{}},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["dropping",{"_index":2230,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["drops",{"_index":3623,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["dto",{"_index":1701,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/LpTokensService.html":{}}}],["dto/acquire.req",{"_index":198,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{}}}],["dto/asset",{"_index":3986,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["dto/claim",{"_index":2312,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["dto/contribute.req",{"_index":2482,"title":{},"body":{"controllers/ContributionController.html":{},"injectables/ContributionService.html":{}}}],["dto/create",{"_index":1154,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["dto/createvault.req",{"_index":4744,"title":{},"body":{"controllers/VaultsController.html":{}}}],["dto/extract",{"_index":3586,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["dto/get",{"_index":2314,"title":{},"body":{"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["dto/login.req",{"_index":1241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/paginated",{"_index":2911,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["dto/pagination.dto",{"_index":1104,"title":{},"body":{"controllers/AssetsController.html":{}}}],["dto/public",{"_index":4462,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/publish",{"_index":4746,"title":{},"body":{"controllers/VaultsController.html":{}}}],["dto/savedraft.req",{"_index":2912,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["dto/transaction.dto",{"_index":1665,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["dto/update",{"_index":4412,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/vault.response",{"_index":2914,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["dto/vote.req",{"_index":3229,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["dto/wallet",{"_index":3989,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["dto/webhook.dto",{"_index":1666,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["dtorepresent",{"_index":3123,"title":{},"body":{"interfaces/DtoRepresentsType.html":{},"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/functions.html":{}}}],["dtorepresent(__namedparameters",{"_index":5092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dtorepresentstype",{"_index":3120,"title":{"interfaces/DtoRepresentsType.html":{}},"body":{"interfaces/DtoRepresentsType.html":{},"miscellaneous/functions.html":{}}}],["duplicate",{"_index":2985,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["duration",{"_index":4659,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["during",{"_index":1162,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/WebhookVerificationService.html":{}}}],["e",{"_index":757,"title":{},"body":{"interfaces/Amount.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["e2e",{"_index":5118,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":2021,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["each",{"_index":266,"title":{},"body":{"classes/AcquireReq.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateProposalReq.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{}}}],["ed25519e_sk1eqleq0gr7awjymmkcehm4pza8ffq385fyxkntqe74u384fgfs4w7vncmhdlc2u2l78g4r82ctfw6s36dnuguadxh3lggluy9pwansegfprll7",{"_index":4865,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["ed25519signature",{"_index":1294,"title":{},"body":{"injectables/AuthService.html":{}}}],["ed25519signature.from_bytes(decoded.signature",{"_index":1320,"title":{},"body":{"injectables/AuthService.html":{}}}],["edition",{"_index":1031,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["efficient",{"_index":5098,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":5128,"title":{},"body":{"index.html":{}}}],["elapsed",{"_index":4662,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["empty",{"_index":994,"title":{},"body":{"entities/Asset.html":{},"injectables/AwsService.html":{},"injectables/LifecycleService.html":{},"index.html":{}}}],["emurgo/cardano",{"_index":686,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["encoded",{"_index":2036,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["end",{"_index":2118,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["ended",{"_index":3494,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["endpoint",{"_index":766,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["ends",{"_index":3398,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["endtime",{"_index":4643,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["endtime.gettime",{"_index":4646,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["ensure",{"_index":346,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"index.html":{}}}],["enterprise",{"_index":5176,"title":{},"body":{"index.html":{}}}],["enterpriseaddress",{"_index":2046,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["enterpriseaddress.new(0",{"_index":2087,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["entities",{"_index":424,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"entities/ContributorWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":422,"title":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["entity('assets",{"_index":992,"title":{},"body":{"entities/Asset.html":{}}}],["entity('claims",{"_index":2275,"title":{},"body":{"entities/Claim.html":{}}}],["entity('tags",{"_index":3917,"title":{},"body":{"entities/TagEntity.html":{}}}],["entity('transactions",{"_index":4189,"title":{},"body":{"entities/Transaction.html":{}}}],["entity('users",{"_index":4383,"title":{},"body":{"entities/User.html":{}}}],["entry.wallet_address",{"_index":329,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["enum",{"_index":974,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/BlockchainService.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["enum('created",{"_index":648,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["enum('custom",{"_index":2673,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["enum('dao",{"_index":2680,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('draft",{"_index":128,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["enum('invested",{"_index":542,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{}}}],["enum('lbe",{"_index":2671,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["enum('mint",{"_index":100,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["enum('nft",{"_index":2659,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('pending",{"_index":2661,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('private",{"_index":2668,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["enum('single",{"_index":2664,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["enumerations",{"_index":5053,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3648,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["err",{"_index":1519,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{}}}],["err.message",{"_index":4007,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["err.response?.data?.message",{"_index":4016,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["err.response?.status",{"_index":4017,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["error",{"_index":371,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DraftVaultsService.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["error('admin_key_hash",{"_index":3647,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["error('anvil",{"_index":796,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["error('api",{"_index":800,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["error('blockfrost",{"_index":4971,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["error('blockfrost_api_key",{"_index":4934,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error('blockfrost_webhook_auth_token",{"_index":4967,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["error('contribute",{"_index":2095,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["error('failed",{"_index":1886,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/LpTokensService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["error('invalid",{"_index":4109,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["error('must",{"_index":749,"title":{},"body":{"interfaces/Amount.html":{}}}],["error('no",{"_index":1895,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/LpTokensService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["error('pool",{"_index":4904,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error('transaction",{"_index":2142,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["error('vault",{"_index":754,"title":{},"body":{"interfaces/Amount.html":{}}}],["error('vyfi_api_key",{"_index":4918,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error(`anvil",{"_index":821,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["error(`failed",{"_index":1889,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["error(`transaction",{"_index":2159,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["error.message",{"_index":1362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["error.response?.status",{"_index":4889,"title":{},"body":{"injectables/VyfiService.html":{}}}],["error.stack",{"_index":3707,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["error?.message",{"_index":4771,"title":{},"body":{"controllers/VaultsController.html":{}}}],["errordata",{"_index":819,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["errordata.message",{"_index":823,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["errors",{"_index":1591,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{}}}],["eslint",{"_index":2392,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["eslint/no",{"_index":2397,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["even",{"_index":3509,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["event",{"_index":1640,"title":{},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["event.data.tx",{"_index":2165,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["event.id",{"_index":1711,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["event.payload",{"_index":2189,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["event.payload.map(txevent",{"_index":1724,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["event.type",{"_index":2187,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["event.webhook_id",{"_index":1713,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["eventid",{"_index":1710,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["events",{"_index":1688,"title":{},"body":{"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["events'})@apiresponse({status",{"_index":1639,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["eventtime",{"_index":5002,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["exactly",{"_index":2099,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["example",{"_index":401,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VoteReq.html":{},"index.html":{}}}],["exclude",{"_index":4186,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["exclude()@onetomany(undefined",{"_index":4164,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["excludeextraneousvalues",{"_index":2943,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["excludes",{"_index":4395,"title":{},"body":{"controllers/UsersController.html":{}}}],["execute",{"_index":3383,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executeacquiretogovernancetransition",{"_index":3327,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executeacquiretogovernancetransition(vault",{"_index":3342,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executecontributiontoacquiretransition",{"_index":3328,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executecontributiontoacquiretransition(vault",{"_index":3344,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executed",{"_index":3381,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executephasetransition",{"_index":3329,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executephasetransition(vaultid",{"_index":3346,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["executing",{"_index":3417,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["execution",{"_index":4681,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["execution_threshold",{"_index":2700,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["executioncontext",{"_index":1257,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["executionthreshold",{"_index":4682,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["exist",{"_index":2363,"title":{},"body":{"injectables/ClaimsService.html":{},"classes/RenameFields1746536544579.html":{},"injectables/VyfiService.html":{}}}],["existing",{"_index":4492,"title":{},"body":{"injectables/UsersService.html":{}}}],["existingasset",{"_index":4121,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["existingasset.quantity",{"_index":4124,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["existingvault",{"_index":2958,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.acquirer_whitelist?.length",{"_index":2967,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.assets_whitelist?.length",{"_index":2965,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.contributor_whitelist?.length",{"_index":2969,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.social_links?.length",{"_index":2963,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault.vault_status",{"_index":2960,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.acquirer_whitelist_csv?.file_key",{"_index":2993,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.banner_image?.file_key",{"_index":2989,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.ft_token_img?.file_key",{"_index":2991,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["existingvault?.vault_image?.file_key",{"_index":2987,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["exists",{"_index":347,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["exists'})@apiquery({name",{"_index":4810,"title":{},"body":{"controllers/VyfiController.html":{}}}],["expected",{"_index":5009,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["expectedmessage",{"_index":1327,"title":{},"body":{"injectables/AuthService.html":{}}}],["expectedsignature",{"_index":4987,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["experience",{"_index":5165,"title":{},"body":{"index.html":{}}}],["experienced",{"_index":3883,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["expires",{"_index":1524,"title":{},"body":{"injectables/AwsService.html":{}}}],["expiresin",{"_index":1453,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["explicit",{"_index":2398,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["exports",{"_index":229,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["expose",{"_index":260,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/functions.html":{}}}],["expose()@isnotempty()@isobject()@validatenested()@type(undefined)@apiproperty({description",{"_index":3559,"title":{},"body":{"classes/LoginReq.html":{}}}],["expose()@isnotempty()@isstring()@apiproperty({description",{"_index":3561,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["expose()@onetomany(undefined",{"_index":4355,"title":{},"body":{"entities/User.html":{}}}],["expose(expose",{"_index":3126,"title":{},"body":{"interfaces/DtoRepresentsType.html":{}}}],["expose({name",{"_index":427,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["express",{"_index":1264,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/AwsController.html":{},"injectables/RawBodyMiddleware.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1382,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["extends",{"_index":2039,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleProcessor.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultShortResponse.html":{}}}],["extract",{"_index":108,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["extract'})@isnumber()@isnotempty()@expose",{"_index":3131,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["extractada",{"_index":2735,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["extractasset",{"_index":2736,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["extractdto",{"_index":3584,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extracted",{"_index":3705,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["extracting",{"_index":2228,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["extraction",{"_index":3578,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extractlp",{"_index":3654,"title":{},"body":{"injectables/LpTokensService.html":{},"miscellaneous/enumerations.html":{}}}],["extractlptokens",{"_index":3573,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extractlptokens(@body",{"_index":3597,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["extractlptokens(extractdto",{"_index":3574,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extractlptokensdto",{"_index":3127,"title":{"classes/ExtractLpTokensDto.html":{}},"body":{"classes/ExtractLpTokensDto.html":{},"controllers/LpTokensController.html":{}}}],["extractlptokensparams",{"_index":2229,"title":{"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["extracts",{"_index":3576,"title":{},"body":{"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["extracttokenfromheader",{"_index":1252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":1260,"title":{},"body":{"guards/AuthGuard.html":{}}}],["f]{56",{"_index":1086,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["fa",{"_index":1085,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["factory",{"_index":2594,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["failed",{"_index":134,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["fails",{"_index":3510,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["failure",{"_index":3390,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["fallback",{"_index":1703,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["false",{"_index":408,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddedDelete1747838327085.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"entities/Claim.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"classes/NftAsset.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["false})@dtorepresent({transform",{"_index":3768,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["false})@expose",{"_index":3183,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["false})@isarray()@isoptional()@isobject({each",{"_index":4318,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["false})@isnumber()@isoptional",{"_index":4320,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["false})@isoptional()@expose",{"_index":2002,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["false})@isoptional()@isarray()@isstring({each",{"_index":3892,"title":{},"body":{"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["false})@isoptional()@isenum(transactiontype)@expose",{"_index":3175,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["false})@isoptional()@isnumber()@expose",{"_index":1073,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["false})@isoptional()@isstring()@expose",{"_index":3792,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["false})@isoptional()@isstring({each",{"_index":3787,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["false})@isstring()@isoptional()@expose",{"_index":3133,"title":{},"body":{"classes/ExtractLpTokensDto.html":{},"classes/UpdateProfileDto.html":{}}}],["false})@matches(/^[0",{"_index":1223,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["fast",{"_index":5139,"title":{},"body":{"index.html":{}}}],["fdp",{"_index":2774,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["features",{"_index":5149,"title":{},"body":{"index.html":{}}}],["fee",{"_index":645,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["fees",{"_index":1949,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/VyfiService.html":{}}}],["fetch",{"_index":2837,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/TaptoolsService.html":{}}}],["fetch(`${this.anvilapi}/transactions/build",{"_index":1880,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["fetch(url.tostring",{"_index":817,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["fetching",{"_index":4006,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["few",{"_index":5141,"title":{},"body":{"index.html":{}}}],["field",{"_index":3186,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["fields",{"_index":2996,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{}}}],["file.entity",{"_index":4381,"title":{},"body":{"entities/User.html":{}}}],["file.mimetype",{"_index":1573,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["file.originalname",{"_index":1586,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["file.size",{"_index":4509,"title":{},"body":{"injectables/UsersService.html":{}}}],["file_key",{"_index":1581,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["file_name",{"_index":1585,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["file_type",{"_index":1587,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["file_url",{"_index":1583,"title":{},"body":{"injectables/AwsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"injectables/UsersService.html":{}}}],["fileentity",{"_index":1444,"title":{"entities/FileEntity.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{},"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":1396,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["filename",{"_index":415,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"entities/FileEntity.html":{},"classes/SocialLink.html":{}}}],["filename'})@column({name",{"_index":3148,"title":{},"body":{"entities/FileEntity.html":{}}}],["filerepository",{"_index":1470,"title":{},"body":{"injectables/AwsService.html":{}}}],["files",{"_index":1069,"title":{},"body":{"classes/AssetValueDto.html":{},"controllers/AwsController.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["files\"(\"id",{"_index":2719,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["filesrepository",{"_index":2890,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["filetype",{"_index":416,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"controllers/AwsController.html":{},"classes/ContributorWhitelist.html":{},"entities/FileEntity.html":{},"classes/SocialLink.html":{},"controllers/UsersController.html":{}}}],["filetype'})@column({name",{"_index":3150,"title":{},"body":{"entities/FileEntity.html":{}}}],["filetypevalidator",{"_index":1391,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["filter",{"_index":2514,"title":{},"body":{"injectables/ContributionService.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/TaptoolsService.html":{}}}],["filter(([unit",{"_index":4073,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["filter(tx",{"_index":2517,"title":{},"body":{"injectables/ContributionService.html":{}}}],["filtered",{"_index":4721,"title":{},"body":{"controllers/VaultsController.html":{}}}],["filtering",{"_index":2298,"title":{},"body":{"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{}}}],["find",{"_index":1334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{}}}],["findbyaddress",{"_index":4441,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyaddress(address",{"_index":4448,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":4249,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["findbyid(id",{"_index":4261,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["fingerprint",{"_index":1062,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["first",{"_index":1831,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{}}}],["firstvaluefrom",{"_index":1871,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["firstvaluefrom(this.httpservice.get(`${this.vyfiapiurl}/pool/${poolid",{"_index":4937,"title":{},"body":{"injectables/VyfiService.html":{}}}],["firstvaluefrom(this.httpservice.get(`${url}?${queryparams.tostring",{"_index":4888,"title":{},"body":{"injectables/VyfiService.html":{}}}],["fit",{"_index":4573,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["fixed",{"_index":337,"title":{},"body":{"injectables/AcquireService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fixedtransaction",{"_index":2048,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["fixedtransaction.from_bytes(buffer.from(buildresponse.complete",{"_index":2136,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["fixedtransaction.from_bytes(buffer.from(transaction.complete",{"_index":4921,"title":{},"body":{"injectables/VyfiService.html":{}}}],["fk_1e942f889da974dfccec3b4ecbf",{"_index":2716,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_20094ffc712b516cb4a7444de3b",{"_index":655,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["fk_2b3fd4667b2be7a2d7a329083cc",{"_index":44,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["fk_3e6ff48532fbe552bbb6c4098bd",{"_index":2725,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["fk_4996e41bd51ba848c8f6ac22a03",{"_index":2721,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["fk_657d44500fe38e604f4a6306620",{"_index":2720,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_67ab781bada0c0fd71e38f5d3a4",{"_index":2727,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_6b6d7ad7d8c3982b44194fd542c",{"_index":76,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["fk_6f6b9ff91b18b69d88c11e4f5d8",{"_index":2722,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_969c7c69dd286d6e17dedd27923",{"_index":2242,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["fk_96d6f1aafc327443850f263cd50",{"_index":2718,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_9dcbee9dfaf5bc1d498d568216f",{"_index":2241,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["fk_9f8dea86e48a7216c4f5369c1e4",{"_index":2717,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_a6a3f7811be6df590c8da538d40",{"_index":2724,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_adf9f0b047319be1ec67ac1d1eb",{"_index":43,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["fk_bfa8eb1a193e5e4a9dc4d2b7257",{"_index":2723,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_c15eb8818056ac23754262fdd3a",{"_index":2726,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["fk_c211339d9110a71f1e7b65d87b5",{"_index":3847,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["fk_cba6b5306e74553edd3b94a000a",{"_index":3848,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateTypes1746532933340.html":{}}}],["fk_dad5613b25986784cf01e7fdaae",{"_index":575,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["fk_f93b9856ae3dfe138275ad9d684",{"_index":472,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["floor_price",{"_index":941,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["floorprice",{"_index":998,"title":{},"body":{"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"classes/CreateAssetDto.html":{}}}],["floorprice'})@column({name",{"_index":963,"title":{},"body":{"entities/Asset.html":{}}}],["focus",{"_index":5148,"title":{},"body":{"index.html":{}}}],["follow",{"_index":5179,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":77,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["format",{"_index":1549,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["formatmetadatatext",{"_index":4848,"title":{},"body":{"injectables/VyfiService.html":{}}}],["formatmetadatatext(tokena",{"_index":4854,"title":{},"body":{"injectables/VyfiService.html":{}}}],["formulas",{"_index":2796,"title":{},"body":{"injectables/DistributionService.html":{}}}],["forward",{"_index":1373,"title":{},"body":{"controllers/AwsController.html":{}}}],["found",{"_index":307,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["fractional",{"_index":4648,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["fractionalization",{"_index":2767,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["framework",{"_index":5097,"title":{},"body":{"index.html":{}}}],["from'})@isstring()@isnotempty()@expose",{"_index":3137,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["frontend",{"_index":1375,"title":{},"body":{"controllers/AwsController.html":{},"injectables/ClaimsService.html":{}}}],["ft",{"_index":4028,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["ft.adavalue",{"_index":4034,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.balance",{"_index":4032,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.price",{"_index":4033,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.ticker",{"_index":4031,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft.unit",{"_index":4030,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["ft_acquire_reserve",{"_index":3830,"title":{},"body":{"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["ft_investment_reserve",{"_index":3840,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{}}}],["ft_investment_reverse",{"_index":2689,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameVaultField1742382533813.html":{}}}],["ft_investment_window",{"_index":626,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_decimals",{"_index":2693,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_img",{"_index":2931,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["ft_token_img_id",{"_index":2705,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_supply",{"_index":2691,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["ft_token_ticker",{"_index":3829,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["fttokendecimals",{"_index":4675,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["fttokenimg",{"_index":2980,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["fttokenimgkey",{"_index":2978,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["fttokensupply",{"_index":4673,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["full",{"_index":5175,"title":{},"body":{"index.html":{}}}],["function",{"_index":731,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/ApiDocParams.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/DtoRepresentsType.html":{}}}],["functions",{"_index":5075,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fungible",{"_index":4026,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["g",{"_index":5144,"title":{},"body":{"index.html":{}}}],["gains",{"_index":1360,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{}}}],["gains'})@column({type",{"_index":4361,"title":{},"body":{"entities/User.html":{}}}],["generate",{"_index":1342,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VyfiService.html":{},"index.html":{}}}],["generate_assetname_from_txhash_index",{"_index":4526,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["generate_assetname_from_txhash_index(txhash",{"_index":732,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["generate_tag_from_txhash_index",{"_index":3642,"title":{},"body":{"injectables/LpTokensService.html":{},"miscellaneous/functions.html":{}}}],["generate_tag_from_txhash_index(tx_hash",{"_index":740,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LpTokensService.html":{},"miscellaneous/functions.html":{}}}],["generatemocktransactionhash",{"_index":3613,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["generates",{"_index":3627,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["generateusername",{"_index":1299,"title":{},"body":{"injectables/AuthService.html":{}}}],["generator",{"_index":1300,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["get('/csv/:id",{"_index":1424,"title":{},"body":{"controllers/AwsController.html":{}}}],["get('/image/:id",{"_index":1414,"title":{},"body":{"controllers/AwsController.html":{}}}],["get('/profile/:id",{"_index":4420,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id",{"_index":4768,"title":{},"body":{"controllers/VaultsController.html":{}}}],["get(':id/transactions",{"_index":4775,"title":{},"body":{"controllers/VaultsController.html":{}}}],["get(':txhash",{"_index":4239,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get(':txhash')@apioperation({summary",{"_index":4230,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('acquired/:vaultid",{"_index":1114,"title":{},"body":{"controllers/AssetsController.html":{}}}],["get('check",{"_index":4808,"title":{},"body":{"controllers/VyfiController.html":{}}}],["get('contributed/:vaultid",{"_index":1109,"title":{},"body":{"controllers/AssetsController.html":{}}}],["get('my",{"_index":2318,"title":{},"body":{"controllers/ClaimsController.html":{},"controllers/VaultsController.html":{}}}],["get('my/drafts",{"_index":4765,"title":{},"body":{"controllers/VaultsController.html":{}}}],["get('pool/:poolid",{"_index":4835,"title":{},"body":{"controllers/VyfiController.html":{}}}],["get('pool/:poolid')@apioperation({summary",{"_index":4819,"title":{},"body":{"controllers/VyfiController.html":{}}}],["get('profile",{"_index":4417,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('proposals/:proposalid",{"_index":3244,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get('proposals/:proposalid')@useguards(authguard)@apioperation({summary",{"_index":3215,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get('received",{"_index":4237,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('received')@apioperation({summary",{"_index":4224,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('sent",{"_index":4235,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('sent')@apioperation({summary",{"_index":4227,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('summary",{"_index":3933,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["get('summary')@apidoc({summary",{"_index":3924,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["get('transactions",{"_index":218,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["get('transactions')@apioperation({summary",{"_index":152,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["get('vault/:vaultid/assets/value",{"_index":3936,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["get('vaults/:vaultid/proposals",{"_index":3237,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get('vaults/:vaultid/proposals')@useguards(authguard)@apioperation({summary",{"_index":3220,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["get(endpoint",{"_index":790,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["getacquiredassets",{"_index":1126,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getacquiredassets(userid",{"_index":1139,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getacquiretransactions",{"_index":4250,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getacquiretransactions(vaultid",{"_index":4263,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getadaprice",{"_index":3951,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getaddressbalance",{"_index":1754,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddressbalance(address",{"_index":1770,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddresstransactions",{"_index":1755,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddresstransactions(address",{"_index":1772,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddressutxos",{"_index":1756,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getaddressutxos(address",{"_index":1774,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getassetdetails",{"_index":3952,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getassetdetails(assetid",{"_index":3961,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getassetsgroupedbyuser",{"_index":3330,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["getassetsgroupedbyuser(vaultid",{"_index":3348,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["getassetvalue",{"_index":3953,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getassetvalue(policyid",{"_index":3963,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getclaimsdto",{"_index":2297,"title":{"classes/GetClaimsDto.html":{}},"body":{"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/GetClaimsDto.html":{}}}],["getcontractstate",{"_index":1757,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getcontractstate(contractaddress",{"_index":1776,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["getcontributedassets",{"_index":1093,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getcontributedassets(@request",{"_index":1110,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getcontributedassets(req",{"_index":1095,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getcontributiontransactions",{"_index":2475,"title":{},"body":{"controllers/ContributionController.html":{},"injectables/TransactionsService.html":{}}}],["getcontributiontransactions(@query('vaultid",{"_index":2487,"title":{},"body":{"controllers/ContributionController.html":{}}}],["getcontributiontransactions(vaultid",{"_index":2478,"title":{},"body":{"controllers/ContributionController.html":{},"injectables/TransactionsService.html":{}}}],["getcsv",{"_index":1459,"title":{},"body":{"injectables/AwsService.html":{}}}],["getcsv(bucketkey",{"_index":1471,"title":{},"body":{"injectables/AwsService.html":{}}}],["getcsvfile",{"_index":1365,"title":{},"body":{"controllers/AwsController.html":{}}}],["getcsvfile(@param('id",{"_index":1425,"title":{},"body":{"controllers/AwsController.html":{}}}],["getcsvfile(id",{"_index":1369,"title":{},"body":{"controllers/AwsController.html":{}}}],["getdraftvaultbyid",{"_index":2886,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["getdraftvaultbyid(id",{"_index":2896,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["getimage",{"_index":1460,"title":{},"body":{"injectables/AwsService.html":{}}}],["getimage(bucketkey",{"_index":1474,"title":{},"body":{"injectables/AwsService.html":{}}}],["getimagefile",{"_index":1366,"title":{},"body":{"controllers/AwsController.html":{}}}],["getimagefile(@param('id",{"_index":1415,"title":{},"body":{"controllers/AwsController.html":{}}}],["getimagefile(id",{"_index":1378,"title":{},"body":{"controllers/AwsController.html":{}}}],["getinvestedassets",{"_index":1094,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getinvestedassets(@request",{"_index":1115,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getinvestedassets(req",{"_index":1100,"title":{},"body":{"controllers/AssetsController.html":{}}}],["getinvestmenttransactions",{"_index":147,"title":{},"body":{"controllers/AcquireController.html":{}}}],["getinvestmenttransactions(@query('vaultid",{"_index":219,"title":{},"body":{"controllers/AcquireController.html":{}}}],["getinvestmenttransactions(vaultid",{"_index":150,"title":{},"body":{"controllers/AcquireController.html":{}}}],["getlastvaultupdate",{"_index":4251,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getlastvaultupdate(vaultid",{"_index":4266,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getmainnetwalletsummary",{"_index":3954,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getmainnetwalletsummary(walletaddress",{"_index":3965,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getmany",{"_index":3478,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["getmimetypefromarraybuffer",{"_index":5218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmyclaims",{"_index":2292,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["getmyclaims(@request",{"_index":2319,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["getmyclaims(req",{"_index":2296,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["getmydraftvaults",{"_index":2887,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["getmydraftvaults(@request",{"_index":4766,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmydraftvaults(req",{"_index":4717,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmydraftvaults(userid",{"_index":2898,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["getmyvaults",{"_index":4699,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmyvaults(@request",{"_index":4760,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getmyvaults(req",{"_index":4720,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getpoolinfo",{"_index":4804,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["getpoolinfo(@query('poolid",{"_index":4836,"title":{},"body":{"controllers/VyfiController.html":{}}}],["getpoolinfo(poolid",{"_index":4818,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["getpresignedurl",{"_index":1461,"title":{},"body":{"injectables/AwsService.html":{}}}],["getpresignedurl(bucketname",{"_index":1476,"title":{},"body":{"injectables/AwsService.html":{}}}],["getprofile",{"_index":4386,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getprofile(@request",{"_index":4418,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(req",{"_index":4391,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(userid",{"_index":4450,"title":{},"body":{"injectables/UsersService.html":{}}}],["getproposal",{"_index":3207,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getproposal(@param('proposalid",{"_index":3245,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["getproposal(proposalid",{"_index":3214,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getproposals",{"_index":3208,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getproposals(@param('vaultid",{"_index":3238,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["getproposals(vaultid",{"_index":3219,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["getpublicprofile",{"_index":4387,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getpublicprofile(@param('id",{"_index":4421,"title":{},"body":{"controllers/UsersController.html":{}}}],["getpublicprofile(userid",{"_index":4394,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getreceivedtransactions",{"_index":4221,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gets3",{"_index":1462,"title":{},"body":{"injectables/AwsService.html":{}}}],["getsenttransactions",{"_index":4222,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gettestnetwalletsummary",{"_index":3955,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["gettestnetwalletsummary(walletaddress",{"_index":3968,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["getting",{"_index":3442,"title":{"index.html":{}},"body":{"injectables/LifecycleService.html":{}}}],["gettokeninfo",{"_index":1758,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettokeninfo(policyid",{"_index":1778,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettransaction",{"_index":4223,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["gettransaction(@param('txhash",{"_index":4240,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gettransaction(txhash",{"_index":4229,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["gettransactiondetails",{"_index":1759,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettransactiondetails(txhash",{"_index":1780,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["gettransactionsbyreceiver",{"_index":4252,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbyreceiver(address",{"_index":4271,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbysender",{"_index":4253,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbysender(address",{"_index":4273,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbystatus",{"_index":4254,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionsbystatus(status",{"_index":4275,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getuser",{"_index":5220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getuserclaims",{"_index":2343,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["getuserclaims(userid",{"_index":2372,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["getutxos",{"_index":715,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["getutxos(address",{"_index":4857,"title":{},"body":{"injectables/VyfiService.html":{}}}],["getutxos(address.from_bech32(vaultconfig.customeraddress",{"_index":4542,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["getvaultassets",{"_index":1127,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getvaultassets(userid",{"_index":1143,"title":{},"body":{"injectables/AssetsService.html":{}}}],["getvaultassetsvalue(@param('vaultid",{"_index":3939,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["getvaultbyid",{"_index":4700,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaultbyid(@param('id",{"_index":4769,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaultbyid(id",{"_index":4724,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaults",{"_index":4701,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaults(@query",{"_index":4773,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaults(query",{"_index":4728,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaultsdto",{"_index":3179,"title":{"classes/GetVaultsDto.html":{}},"body":{"classes/GetVaultsDto.html":{},"controllers/VaultsController.html":{}}}],["getvaulttransactions",{"_index":4255,"title":{},"body":{"injectables/TransactionsService.html":{},"controllers/VaultsController.html":{}}}],["getvaulttransactions(@param('id",{"_index":4776,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaulttransactions(id",{"_index":4732,"title":{},"body":{"controllers/VaultsController.html":{}}}],["getvaulttransactions(vaultid",{"_index":4277,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getvaulttransactionsdto",{"_index":3169,"title":{"classes/GetVaultTransactionsDto.html":{}},"body":{"classes/GetVaultTransactionsDto.html":{},"controllers/VaultsController.html":{}}}],["getvaultutxo",{"_index":4527,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["getvaultutxo(policyid",{"_index":744,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["getvaultutxo(this.scpolicyid",{"_index":4569,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["getwalletsummary",{"_index":3922,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["getwalletsummary(@query('address",{"_index":3934,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["getwalletsummary(address",{"_index":3923,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["getwalletsummary(walletaddress",{"_index":3970,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["global",{"_index":1450,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["gold",{"_index":1034,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["governance",{"_index":133,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"miscellaneous/enumerations.html":{}}}],["governance.controller",{"_index":3252,"title":{},"body":{"modules/GovernanceModule.html":{}}}],["governance.service",{"_index":3231,"title":{},"body":{"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{}}}],["governance_phase_start",{"_index":3470,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["governancecontroller",{"_index":3204,"title":{"controllers/GovernanceController.html":{}},"body":{"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{}}}],["governancemodule",{"_index":3247,"title":{"modules/GovernanceModule.html":{}},"body":{"modules/GovernanceModule.html":{},"modules.html":{},"overview.html":{}}}],["governanceservice",{"_index":3230,"title":{"injectables/GovernanceService.html":{}},"body":{"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"overview.html":{}}}],["graph",{"_index":5170,"title":{},"body":{"index.html":{}}}],["group",{"_index":3419,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["grow",{"_index":5186,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1248,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":1249,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handle",{"_index":2186,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{}}}],["handleblockchainevent",{"_index":4584,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["handleblockchainevent(event",{"_index":2185,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["handleburnvault",{"_index":4585,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["handleburnvault(userid",{"_index":2208,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["handlecontributiontoinvestment",{"_index":3331,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlecsvfiles",{"_index":1367,"title":{},"body":{"controllers/AwsController.html":{}}}],["handlecsvfiles(file",{"_index":1381,"title":{},"body":{"controllers/AwsController.html":{}}}],["handleinvestmenttogovernance",{"_index":3332,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlepublishedtocontribution",{"_index":3333,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlescannerevent",{"_index":4586,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["handlescannerevent(event",{"_index":2162,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["handlevaultlifecycletransitions",{"_index":3334,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["handlewebhook",{"_index":1619,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["handlewebhook(@body",{"_index":1693,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["handlewebhook(event",{"_index":1634,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["hands",{"_index":5164,"title":{},"body":{"index.html":{}}}],["handy",{"_index":5154,"title":{},"body":{"index.html":{}}}],["hasacquirerwhitelistcsv",{"_index":2992,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["hasassets",{"_index":3387,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["hasbannerimage",{"_index":2988,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["hasfttokenimage",{"_index":2990,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["hash",{"_index":173,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["hash'})@useguards(authguard)@apiresponse({status",{"_index":172,"title":{},"body":{"controllers/AcquireController.html":{}}}],["hash.to_hex",{"_index":739,"title":{},"body":{"interfaces/Amount.html":{}}}],["hash_plutus_data",{"_index":684,"title":{},"body":{"interfaces/Amount.html":{}}}],["hash_plutus_data(plutusdata",{"_index":738,"title":{},"body":{"interfaces/Amount.html":{}}}],["hasn't",{"_index":3493,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["hasvaultimage",{"_index":2986,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["header",{"_index":4969,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["headermap",{"_index":1306,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers",{"_index":802,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["height",{"_index":2516,"title":{},"body":{"injectables/ContributionService.html":{}}}],["help",{"_index":5168,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":1298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["here",{"_index":341,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/LifecycleService.html":{},"index.html":{}}}],["hex",{"_index":400,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["hex')).to_hex",{"_index":3692,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["hex').tostring('utf8",{"_index":4089,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["hexadecimal",{"_index":1087,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["hmac",{"_index":4986,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["holds",{"_index":2223,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["host",{"_index":913,"title":{},"body":{"modules/AppModule.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["http",{"_index":1577,"title":{},"body":{"injectables/AwsService.html":{}}}],["httpcode",{"_index":1238,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BlockchainController.html":{}}}],["httpcode(200",{"_index":1687,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["httpcode(httpstatus.ok",{"_index":1244,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":3984,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["httpexception('failed",{"_index":4008,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["httpexception('invalid",{"_index":4001,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["httpmodule",{"_index":1441,"title":{},"body":{"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/VyfiModule.html":{}}}],["https",{"_index":1578,"title":{},"body":{"injectables/AwsService.html":{}}}],["https://api.vyfi.io",{"_index":4862,"title":{},"body":{"injectables/VyfiService.html":{}}}],["https://cardano",{"_index":3976,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["https://nestjs.com",{"_index":5197,"title":{},"body":{"index.html":{}}}],["https://openapi.taptools.io/api/v1",{"_index":3974,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["https://preprod.api.ada",{"_index":4859,"title":{},"body":{"injectables/VyfiService.html":{}}}],["https://twitter.com/username",{"_index":3877,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["https://twitter.com/username'})@isstring()@expose",{"_index":3873,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["httpservice",{"_index":1468,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["httpstatus",{"_index":848,"title":{},"body":{"interfaces/ApiDocParams.html":{},"controllers/AuthController.html":{},"controllers/LpTokensController.html":{}}}],["httpstatus.bad_request",{"_index":3595,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["httpstatus.created",{"_index":3594,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["httpstatus.unauthorized",{"_index":3596,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["id",{"_index":48,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"entities/Asset.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["id's",{"_index":1433,"title":{},"body":{"controllers/AwsController.html":{}}}],["id'})@primarygeneratedcolumn('uuid",{"_index":2259,"title":{},"body":{"entities/Claim.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["identifier",{"_index":1908,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"entities/Transaction.html":{},"classes/VaultShortResponse.html":{}}}],["ids",{"_index":3998,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["idx_2b3fd4667b2be7a2d7a329083c",{"_index":623,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["idx_9dcbee9dfaf5bc1d498d568216",{"_index":2243,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["idx_adf9f0b047319be1ec67ac1d1e",{"_index":624,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["idx_f93b9856ae3dfe138275ad9d68",{"_index":471,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["ignore",{"_index":3695,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["igor",{"_index":2459,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["image",{"_index":1064,"title":{},"body":{"classes/AssetValueDto.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/DraftVaultsService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLinkDto.html":{},"injectables/TaptoolsService.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["image.dto.ts",{"_index":4346,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["image.dto.ts:9",{"_index":4348,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["image/banner",{"_index":3889,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["image/jpeg",{"_index":1529,"title":{},"body":{"injectables/AwsService.html":{}}}],["image/png",{"_index":2458,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["image/profile",{"_index":3886,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["imageentity",{"_index":5240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imageentity?.file_url",{"_index":5241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imageurl",{"_index":1015,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["imgkey",{"_index":2971,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["immediate",{"_index":3382,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["immediately",{"_index":3397,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["immediatestartvaults",{"_index":3471,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["implement",{"_index":3267,"title":{},"body":{"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{}}}],["implementation",{"_index":3712,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/WebhookVerificationService.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"guards/AuthGuard.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["imports",{"_index":239,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{}}}],["in([claimstatus.disabled",{"_index":2406,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["include",{"_index":2995,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["included",{"_index":3506,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["includes",{"_index":2795,"title":{},"body":{"injectables/DistributionService.html":{},"controllers/VaultsController.html":{}}}],["including",{"_index":2454,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":3632,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{}}}],["information",{"_index":2364,"title":{},"body":{"injectables/ClaimsService.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/TokenInfo.html":{},"controllers/UsersController.html":{},"controllers/VyfiController.html":{},"index.html":{}}}],["information'})@isobject",{"_index":2599,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["infrastructure",{"_index":5151,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":3195,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["initialdelayms",{"_index":1824,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["initially",{"_index":4955,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["initiated",{"_index":3579,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["inject",{"_index":1455,"title":{},"body":{"modules/AwsModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/JwtGlobalModule.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["inject(blockchainservice",{"_index":2063,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["injectable",{"_index":268,"title":{"injectables/AcquireService.html":{},"injectables/AnvilApiService.html":{},"injectables/AppService.html":{},"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AppService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AnvilApiService.html":{},"injectables/AppService.html":{},"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"overview.html":{}}}],["injectqueue",{"_index":3362,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["injectqueue('phasetransition",{"_index":3370,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["injectrepository",{"_index":288,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{}}}],["injectrepository(acquirerwhitelistentity",{"_index":2924,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(asset",{"_index":299,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["injectrepository(assetswhitelistentity",{"_index":2923,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(claim",{"_index":2391,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["injectrepository(contributorwhitelistentity",{"_index":2925,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(fileentity",{"_index":1499,"title":{},"body":{"injectables/AwsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(linkentity",{"_index":2922,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(tagentity",{"_index":2926,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["injectrepository(transaction",{"_index":2390,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{}}}],["injectrepository(user",{"_index":298,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(vault",{"_index":297,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["inline",{"_index":2111,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["inline_datum",{"_index":1608,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["input",{"_index":1931,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":1605,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["inputs[0]?.address",{"_index":2196,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["inputwithnopreloaded",{"_index":3693,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["inputwithnopreloaded.preloadedscripts",{"_index":3696,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["inserting.service",{"_index":773,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["inserting.service.ts",{"_index":2044,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:277",{"_index":4592,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:330",{"_index":4591,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:358",{"_index":4589,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:449",{"_index":4590,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:69",{"_index":4595,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:70",{"_index":4593,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:71",{"_index":4594,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:72",{"_index":4587,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["inserting.service.ts:89",{"_index":4588,"title":{},"body":{"injectables/VaultInsertingService.html":{}}}],["install",{"_index":5143,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":5105,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1589,"title":{},"body":{"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":4959,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["insufficient",{"_index":2226,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["int",{"_index":1292,"title":{},"body":{"injectables/AuthService.html":{}}}],["integer",{"_index":643,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"entities/User.html":{}}}],["integration",{"_index":3268,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["intended",{"_index":4956,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["interact",{"_index":5171,"title":{},"body":{"index.html":{}}}],["interface",{"_index":661,"title":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"interfaces/ApiDocParams.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/DtoRepresentsType.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{}},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/DtoRepresentsType.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"classes/LpTokenOperationResult.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["interfaces",{"_index":662,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"interfaces/ApiDocParams.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/DtoRepresentsType.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"overview.html":{}}}],["internal",{"_index":2174,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["internalservererrorexception",{"_index":3638,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["internalservererrorexception('failed",{"_index":3708,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["internalstatus",{"_index":2181,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["internaltx",{"_index":2427,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["internaltx.id",{"_index":2435,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["internaltx.metadata.claimid",{"_index":2442,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["internaltx.tx_hash",{"_index":2438,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["interval",{"_index":628,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["invalid",{"_index":1547,"title":{},"body":{"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["invalid_before",{"_index":1955,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["invalid_hereafter",{"_index":1957,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["invalidassets",{"_index":2536,"title":{},"body":{"injectables/ContributionService.html":{}}}],["invalidassets.length",{"_index":2540,"title":{},"body":{"injectables/ContributionService.html":{}}}],["invalidassets.map(a",{"_index":2542,"title":{},"body":{"injectables/ContributionService.html":{}}}],["inversejoincolumn",{"_index":3913,"title":{},"body":{"entities/TagEntity.html":{}}}],["invest",{"_index":148,"title":{},"body":{"controllers/AcquireController.html":{}}}],["invest(@req",{"_index":207,"title":{},"body":{"controllers/AcquireController.html":{}}}],["invest(req",{"_index":159,"title":{},"body":{"controllers/AcquireController.html":{}}}],["invested",{"_index":565,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["investment",{"_index":104,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"miscellaneous/enumerations.html":{}}}],["investment_open_window_time",{"_index":2687,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["investment_open_window_type",{"_index":2686,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["investment_phase_start",{"_index":529,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["investment_window",{"_index":2766,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["investment_window_duration",{"_index":2250,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["investmentwindowtype",{"_index":3366,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["investmentwindowtype.custom",{"_index":3399,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["investmentwindowtype.uponassetwindowclosing",{"_index":3396,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["investor",{"_index":332,"title":{},"body":{"injectables/AcquireService.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["investoritems",{"_index":3094,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["investors_whitelist",{"_index":2656,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/UpdateTypes1746532933340.html":{}}}],["investors_whitelist_csv_id",{"_index":2704,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["ipfs://qmcqzb25hmkanenzs8zqasl6j6jrsh4grn6hzpd5uasarw",{"_index":2457,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["is_inclusive",{"_index":2764,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["isada",{"_index":2101,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["isarray",{"_index":262,"title":{},"body":{"classes/AcquireReq.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateProposalReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isboolean",{"_index":2606,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["isenum",{"_index":1027,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/CreateAssetDto.html":{},"classes/CreateProposalReq.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{}}}],["isenum(assettype",{"_index":1037,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["isenum(assettype)@apiproperty({enum",{"_index":2571,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["isenum(claimstatus",{"_index":3168,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["isenum(proposaltype",{"_index":2634,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["isenum(sortorder",{"_index":3203,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(sortorder)@isoptional()@apiproperty({enum",{"_index":3189,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(transactionstatus",{"_index":3177,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["isenum(transactiontype",{"_index":3178,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["isenum(vaultfilter",{"_index":3201,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(vaultfilter)@isoptional()@apiproperty({enum",{"_index":3182,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(vaultsortfield",{"_index":3202,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isenum(vaultsortfield)@isoptional()@apiproperty({enum",{"_index":3185,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["isfungibletoken",{"_index":1043,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{}}}],["isglobal",{"_index":910,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["isnft",{"_index":1044,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["isnotempty",{"_index":2027,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/VoteReq.html":{}}}],["isnotempty()@expose",{"_index":4306,"title":{},"body":{"classes/TxUpdateReq.html":{}}}],["isnumber",{"_index":391,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/ExtractLpTokensDto.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isnumber()@apiproperty",{"_index":2568,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["isnumber()@isoptional()@apiproperty({required",{"_index":2563,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["isnumber()@isoptional()@min(1)@type(undefined)@apiproperty({required",{"_index":3193,"title":{},"body":{"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["isobject",{"_index":1028,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SignatureData.html":{},"classes/SocialLinkDto.html":{},"classes/TokenInfo.html":{},"classes/UpdateProfileDto.html":{}}}],["isobject()@apiproperty({type",{"_index":1016,"title":{},"body":{"classes/AssetMetadataDto.html":{}}}],["isoptional",{"_index":392,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isoptional()@isstring",{"_index":2577,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["isretryableerror",{"_index":1760,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["isretryableerror(error",{"_index":1782,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["isstring",{"_index":390,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetClaimsDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VoteReq.html":{}}}],["isstring()@apiproperty",{"_index":1023,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":1021,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["istestnetaddress",{"_index":3956,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["istestnetaddress(address",{"_index":3972,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["isurl",{"_index":393,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["isuuid",{"_index":2026,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["isvalid",{"_index":1719,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["isvalidaddress",{"_index":3614,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["isvalidaddress(address",{"_index":3629,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["isverified",{"_index":1329,"title":{},"body":{"injectables/AuthService.html":{}}}],["iswhitelisted",{"_index":327,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["it's",{"_index":3401,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["item",{"_index":4292,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["item.id",{"_index":4294,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["item.policyid",{"_index":3103,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["item.walletaddress",{"_index":3090,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["items",{"_index":1185,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"classes/PaginatedResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["iterate",{"_index":3426,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["job",{"_index":3300,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"index.html":{}}}],["job.data",{"_index":3312,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["job.name",{"_index":3311,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["jobs",{"_index":5182,"title":{},"body":{"index.html":{}}}],["john",{"_index":3880,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["join",{"_index":3528,"title":{},"body":{"injectables/LifecycleService.html":{},"index.html":{}}}],["joincolumn",{"_index":447,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["joined",{"_index":995,"title":{},"body":{"entities/Asset.html":{}}}],["jointable",{"_index":3916,"title":{},"body":{"entities/TagEntity.html":{}}}],["js",{"_index":670,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"dependencies.html":{}}}],["json",{"_index":2125,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["json.parse(rawbody",{"_index":1702,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["json.parse(rawtext",{"_index":3815,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["json.parse(value",{"_index":2463,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["json.stringify(assets",{"_index":3436,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["json.stringify(body",{"_index":813,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["json.stringify(buildresponse",{"_index":1887,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["json.stringify(req.body",{"_index":1706,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["json.stringify(transferdetails",{"_index":2207,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["json.stringify(txdata",{"_index":1881,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["json_agg",{"_index":3518,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["json_build_object",{"_index":3519,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["jsonb",{"_index":63,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"entities/Claim.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["jwt",{"_index":1343,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtglobalmodule",{"_index":878,"title":{"modules/JwtGlobalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JwtGlobalModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtmodule",{"_index":1443,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["jwtmodule.registerasync",{"_index":1448,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["jwtpayload",{"_index":1344,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice",{"_index":1254,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":5194,"title":{},"body":{"index.html":{}}}],["key",{"_index":73,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"classes/LoginReq.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"injectables/VyfiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key'})@column({name",{"_index":3146,"title":{},"body":{"entities/FileEntity.html":{}}}],["key.header(label.new_int(int.new_negative(bignum.from_str('2')))).as_bytes",{"_index":1315,"title":{},"body":{"injectables/AuthService.html":{}}}],["keys",{"_index":3700,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["l4va",{"_index":937,"title":{},"body":{"injectables/AppService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["l4va/vault",{"_index":2748,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["l4vaaudiengine",{"_index":2029,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["l4vaaudiengine'})@isnotempty()@expose",{"_index":2464,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["l4vaaudiengine'})@isstring()@expose",{"_index":3730,"title":{},"body":{"classes/NftAsset.html":{}}}],["l4vafee",{"_index":2861,"title":{},"body":{"injectables/DistributionService.html":{}}}],["l4vavault",{"_index":2749,"title":{"interfaces/L4VaVault.html":{}},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["label",{"_index":1291,"title":{},"body":{"injectables/AuthService.html":{}}}],["last",{"_index":3658,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{}}}],["last_update_tx_hash",{"_index":2096,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["last_update_tx_index",{"_index":2100,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["last_valuation",{"_index":942,"title":{},"body":{"entities/Asset.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["lasterror",{"_index":1827,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["lastupdate",{"_index":1612,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["lastupdated",{"_index":4046,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["lastupdatetx",{"_index":3659,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["lastvaluation",{"_index":1000,"title":{},"body":{"entities/Asset.html":{}}}],["lastvaluation'})@column({name",{"_index":966,"title":{},"body":{"entities/Asset.html":{}}}],["launch",{"_index":3115,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleService.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"miscellaneous/enumerations.html":{}}}],["launched",{"_index":3462,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["lbe",{"_index":4531,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["learn",{"_index":5157,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('vault.assets",{"_index":3536,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["leftjoinandselect('vault.owner",{"_index":3486,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["legend",{"_index":225,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["legendary",{"_index":1030,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["len",{"_index":5236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":1222,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{},"injectables/RawBodyMiddleware.html":{}}}],["lib",{"_index":688,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["license",{"_index":5199,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":5185,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":526,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["lifecycle.service",{"_index":3291,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["lifecyclemodule",{"_index":3281,"title":{"modules/LifecycleModule.html":{}},"body":{"modules/LifecycleModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["lifecycleprocessor",{"_index":3287,"title":{"injectables/LifecycleProcessor.html":{}},"body":{"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"overview.html":{}}}],["lifecycleservice",{"_index":3286,"title":{"injectables/LifecycleService.html":{}},"body":{"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"overview.html":{}}}],["limit",{"_index":1141,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"controllers/VaultsController.html":{}}}],["limited",{"_index":1035,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["limits",{"_index":4077,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["line",{"_index":2395,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["link",{"_index":2957,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/User.html":{}}}],["link.entity",{"_index":4382,"title":{},"body":{"entities/User.html":{}}}],["link.user",{"_index":4369,"title":{},"body":{"entities/User.html":{}}}],["linkdata.name",{"_index":4497,"title":{},"body":{"injectables/UsersService.html":{}}}],["linkdata.url",{"_index":4498,"title":{},"body":{"injectables/UsersService.html":{}}}],["linked",{"_index":1208,"title":{},"body":{"injectables/AssetsService.html":{}}}],["linkedin",{"_index":5180,"title":{},"body":{"index.html":{}}}],["linkentity",{"_index":2918,"title":{"entities/LinkEntity.html":{}},"body":{"injectables/DraftVaultsService.html":{},"entities/LinkEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["linkitem.name",{"_index":3066,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["linkitem.url",{"_index":3067,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["links",{"_index":2645,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/LinkEntity.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["linksrepository",{"_index":2889,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["liquidation_hash",{"_index":590,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["liquidity",{"_index":2797,"title":{},"body":{"injectables/DistributionService.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["liquidity_pool_contribution",{"_index":2690,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["liquiditypool",{"_index":2776,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["liquiditypoolcontribution",{"_index":4671,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["list",{"_index":255,"title":{},"body":{"classes/AcquireReq.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/GovernanceController.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLinkDto.html":{},"injectables/TaptoolsService.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["listofvaults",{"_index":2937,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["listofvaults.map(vault",{"_index":2940,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["literal",{"_index":839,"title":{},"body":{"injectables/AnvilApiService.html":{},"classes/AssetValueDto.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ClaimsController.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"entities/FileEntity.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleProcessor.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/typealiases.html":{}}}],["loaded",{"_index":348,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["local",{"_index":2160,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["lockasset",{"_index":1128,"title":{},"body":{"injectables/AssetsService.html":{}}}],["lockasset(userid",{"_index":1145,"title":{},"body":{"injectables/AssetsService.html":{}}}],["locked",{"_index":132,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/GetVaultsDto.html":{},"injectables/GovernanceService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["locked_at",{"_index":530,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"entities/Asset.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["lockedat",{"_index":1001,"title":{},"body":{"entities/Asset.html":{},"classes/VaultShortResponse.html":{}}}],["lockedat'})@column({name",{"_index":968,"title":{},"body":{"entities/Asset.html":{}}}],["log",{"_index":1707,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["logger",{"_index":271,"title":{},"body":{"injectables/AcquireService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["logger(acquireservice.name",{"_index":285,"title":{},"body":{"injectables/AcquireService.html":{}}}],["logger(awscontroller.name",{"_index":1405,"title":{},"body":{"controllers/AwsController.html":{}}}],["logger(awsservice.name",{"_index":1490,"title":{},"body":{"injectables/AwsService.html":{}}}],["logger(blockchainscannerservice.name",{"_index":1795,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["logger(blockchainservice.name",{"_index":1869,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["logger(claimsservice.name",{"_index":2387,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["logger(contributionservice.name",{"_index":2508,"title":{},"body":{"injectables/ContributionService.html":{}}}],["logger(lifecycleprocessor.name",{"_index":3304,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["logger(lifecycleservice.name",{"_index":3361,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["logger(lptokensservice.name",{"_index":3635,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["logger(rawbodymiddleware.name",{"_index":3802,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["logger(taptoolsservice.name",{"_index":3982,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["logger(usersservice.name",{"_index":4461,"title":{},"body":{"injectables/UsersService.html":{}}}],["logger(vaultinsertingservice.name",{"_index":2059,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["logger(vaultmanagingservice.name",{"_index":4536,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["logger(vaultscontroller.name",{"_index":4751,"title":{},"body":{"controllers/VaultsController.html":{}}}],["logger(webhookverificationservice.name",{"_index":4951,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["logger.error(err",{"_index":1520,"title":{},"body":{"injectables/AwsService.html":{}}}],["logic",{"_index":2789,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LpTokensService.html":{}}}],["login",{"_index":1232,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":1246,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(signaturedata",{"_index":1233,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreq",{"_index":1234,"title":{"classes/LoginReq.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["looking",{"_index":5132,"title":{},"body":{"index.html":{}}}],["loop",{"_index":5178,"title":{},"body":{"index.html":{}}}],["lovelace",{"_index":692,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["lovelace').map(asset",{"_index":697,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["lovelace'})@isstring()@expose",{"_index":1966,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["lower_bound",{"_index":2760,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["lp",{"_index":109,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/enumerations.html":{}}}],["lp_output_index",{"_index":2738,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["lp_percent",{"_index":2817,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpada",{"_index":2822,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpadainitialshare",{"_index":2874,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpadaretained",{"_index":2852,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lps",{"_index":3687,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["lpsunit",{"_index":3676,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["lptokenoperationresult",{"_index":2224,"title":{"classes/LpTokenOperationResult.html":{}},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["lptokenscontroller",{"_index":3571,"title":{"controllers/LpTokensController.html":{}},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["lptokensmodule",{"_index":879,"title":{"modules/LpTokensModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LpTokensModule.html":{},"modules.html":{},"overview.html":{}}}],["lptokensservice",{"_index":3588,"title":{"injectables/LpTokensService.html":{}},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"overview.html":{}}}],["lpvt",{"_index":2847,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtada",{"_index":2823,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtadavalue",{"_index":2876,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtinitialshare",{"_index":2875,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lpvtretained",{"_index":2850,"title":{},"body":{"injectables/DistributionService.html":{}}}],["lts.1",{"_index":5040,"title":{},"body":{"dependencies.html":{}}}],["lunch",{"_index":2675,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["mainnet",{"_index":2425,"title":{},"body":{"injectables/ClaimsService.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/TokenInfo.html":{}}}],["makepostrequest",{"_index":1761,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makepostrequest(endpoint",{"_index":1784,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makerequest",{"_index":1762,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makerequest(endpoint",{"_index":1786,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["makes",{"_index":5137,"title":{},"body":{"index.html":{}}}],["managedupload",{"_index":1496,"title":{},"body":{"injectables/AwsService.html":{}}}],["managedupload.senddata",{"_index":1523,"title":{},"body":{"injectables/AwsService.html":{}}}],["management",{"_index":527,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["management/acquire/acquire.controller.ts",{"_index":145,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.controller.ts:23",{"_index":165,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.controller.ts:32",{"_index":176,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.controller.ts:40",{"_index":155,"title":{},"body":{"controllers/AcquireController.html":{}}}],["management/acquire/acquire.module",{"_index":902,"title":{},"body":{"modules/AppModule.html":{}}}],["management/acquire/acquire.module.ts",{"_index":238,"title":{},"body":{"modules/AcquireModule.html":{}}}],["management/acquire/acquire.service.ts",{"_index":270,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/acquire.service.ts:115",{"_index":282,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/acquire.service.ts:18",{"_index":276,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/acquire.service.ts:30",{"_index":279,"title":{},"body":{"injectables/AcquireService.html":{}}}],["management/acquire/dto/acquire.req.ts",{"_index":250,"title":{},"body":{"classes/AcquireReq.html":{}}}],["management/acquire/dto/acquire.req.ts:16",{"_index":258,"title":{},"body":{"classes/AcquireReq.html":{}}}],["management/contribution/contribution.controller.ts",{"_index":2474,"title":{},"body":{"controllers/ContributionController.html":{}}}],["management/contribution/contribution.controller.ts:22",{"_index":2477,"title":{},"body":{"controllers/ContributionController.html":{}}}],["management/contribution/contribution.controller.ts:31",{"_index":2479,"title":{},"body":{"controllers/ContributionController.html":{}}}],["management/contribution/contribution.module",{"_index":903,"title":{},"body":{"modules/AppModule.html":{}}}],["management/contribution/contribution.module.ts",{"_index":2493,"title":{},"body":{"modules/ContributionModule.html":{}}}],["management/contribution/contribution.service.ts",{"_index":2495,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:122",{"_index":2500,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:21",{"_index":2498,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:217",{"_index":2507,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/contribution.service.ts:42",{"_index":2502,"title":{},"body":{"injectables/ContributionService.html":{}}}],["management/contribution/dto/contribute.req.ts",{"_index":2448,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:12",{"_index":3728,"title":{},"body":{"classes/MetadataFile.html":{}}}],["management/contribution/dto/contribute.req.ts:120",{"_index":2468,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:132",{"_index":2449,"title":{},"body":{"classes/ContributeReq.html":{}}}],["management/contribution/dto/contribute.req.ts:16",{"_index":3727,"title":{},"body":{"classes/MetadataFile.html":{}}}],["management/contribution/dto/contribute.req.ts:22",{"_index":3740,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:26",{"_index":3737,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:30",{"_index":3738,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:34",{"_index":3741,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:38",{"_index":3739,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:42",{"_index":3735,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["management/contribution/dto/contribute.req.ts:52",{"_index":2470,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:60",{"_index":2465,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:68",{"_index":2472,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["management/contribution/dto/contribute.req.ts:8",{"_index":3729,"title":{},"body":{"classes/MetadataFile.html":{}}}],["management/contribution/dto/txupdate.req.ts",{"_index":4305,"title":{},"body":{"classes/TxUpdateReq.html":{}}}],["management/contribution/dto/txupdate.req.ts:7",{"_index":4307,"title":{},"body":{"classes/TxUpdateReq.html":{}}}],["management/governance/dto/create",{"_index":2609,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["management/governance/dto/vote.req.ts",{"_index":4791,"title":{},"body":{"classes/VoteReq.html":{}}}],["management/governance/dto/vote.req.ts:11",{"_index":4796,"title":{},"body":{"classes/VoteReq.html":{}}}],["management/governance/dto/vote.req.ts:19",{"_index":4799,"title":{},"body":{"classes/VoteReq.html":{}}}],["management/governance/governance.controller.ts",{"_index":3205,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:19",{"_index":3213,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:28",{"_index":3222,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:36",{"_index":3227,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.controller.ts:45",{"_index":3217,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["management/governance/governance.module.ts",{"_index":3251,"title":{},"body":{"modules/GovernanceModule.html":{}}}],["management/governance/governance.service.ts",{"_index":3253,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:12",{"_index":3254,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:18",{"_index":3256,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:49",{"_index":3258,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:65",{"_index":3260,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/governance/governance.service.ts:80",{"_index":3257,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["management/lifecycle/lifecycle.module",{"_index":4788,"title":{},"body":{"modules/VaultsModule.html":{}}}],["management/lifecycle/lifecycle.module.ts",{"_index":3288,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["management/lifecycle/lifecycle.processor",{"_index":3292,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["management/lifecycle/lifecycle.processor.ts",{"_index":3295,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["management/lifecycle/lifecycle.processor.ts:12",{"_index":3298,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["management/lifecycle/lifecycle.processor.ts:21",{"_index":3301,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["management/lifecycle/lifecycle.processor.ts:32",{"_index":3303,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["management/lifecycle/lifecycle.service.ts",{"_index":3326,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:122",{"_index":3357,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:154",{"_index":3345,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:19",{"_index":3340,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:209",{"_index":3343,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:326",{"_index":3352,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:34",{"_index":3354,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:352",{"_index":3350,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:420",{"_index":3349,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:45",{"_index":3360,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:470",{"_index":3351,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["management/lifecycle/lifecycle.service.ts:89",{"_index":3347,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["managing",{"_index":5150,"title":{},"body":{"index.html":{}}}],["managing.service",{"_index":1669,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{}}}],["managing.service.ts",{"_index":4519,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["managing.service.ts:239",{"_index":4601,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:290",{"_index":4605,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:367",{"_index":4604,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:61",{"_index":4608,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:62",{"_index":4609,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:63",{"_index":4610,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:64",{"_index":4606,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:65",{"_index":4607,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:66",{"_index":4600,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["managing.service.ts:86",{"_index":4603,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["manual",{"_index":657,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["manualacquirer",{"_index":3088,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["manytomany",{"_index":3915,"title":{},"body":{"entities/TagEntity.html":{}}}],["manytoone",{"_index":448,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/Transaction.html":{}}}],["manytoone(undefined",{"_index":436,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":4182,"title":{},"body":{"entities/Transaction.html":{}}}],["map",{"_index":2172,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["map(([unit",{"_index":4074,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["map(async",{"_index":2518,"title":{},"body":{"injectables/ContributionService.html":{}}}],["maps",{"_index":3162,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["mark",{"_index":2216,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["marked",{"_index":2446,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["market",{"_index":2616,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["marks",{"_index":2385,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["match",{"_index":4119,"title":{},"body":{"injectables/TaptoolsService.html":{},"injectables/WebhookVerificationService.html":{}}}],["matches",{"_index":1089,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["matches(/^[0",{"_index":1090,"title":{},"body":{"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{}}}],["matching",{"_index":90,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(currenttime",{"_index":4998,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["math.ceil(total",{"_index":1188,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{}}}],["math.floor(date.now",{"_index":4996,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["math.random().tostring(16).substr(2",{"_index":3724,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["math.round(amount",{"_index":2832,"title":{},"body":{"injectables/DistributionService.html":{}}}],["math.round(vtreceived",{"_index":2882,"title":{},"body":{"injectables/DistributionService.html":{}}}],["math.round(vtretained",{"_index":2858,"title":{},"body":{"injectables/DistributionService.html":{}}}],["mau",{"_index":5134,"title":{},"body":{"index.html":{}}}],["max",{"_index":1421,"title":{},"body":{"controllers/AwsController.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["max_contribute_assets",{"_index":597,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["maxage",{"_index":5003,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["maxcontributeassets",{"_index":4655,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["maxdelayms",{"_index":1825,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["maxeventage",{"_index":4945,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["maxfilesizevalidator",{"_index":1392,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["maximum",{"_index":410,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["maxretries",{"_index":1823,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["maxsize",{"_index":1409,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["maybe",{"_index":2365,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["mbmultiplication",{"_index":1401,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":3891,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["mediatype",{"_index":1068,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["meet",{"_index":3464,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["meets",{"_index":3449,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["meetsthreshold",{"_index":3447,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["message",{"_index":377,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/GovernanceService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["messagematches",{"_index":1331,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":62,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"injectables/AcquireService.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["metadata'})@apiresponse({status",{"_index":1660,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["metadata'})@column({name",{"_index":3155,"title":{},"body":{"entities/FileEntity.html":{}}}],["metadata'})@column({type",{"_index":2261,"title":{},"body":{"entities/Claim.html":{}}}],["metadata.attributes",{"_index":4101,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.description",{"_index":4097,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.image",{"_index":4098,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.mediatype",{"_index":4099,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata.name",{"_index":4092,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["metadata_label",{"_index":4881,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["metadatafile",{"_index":2452,"title":{"classes/MetadataFile.html":{}},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["metadatatext",{"_index":4906,"title":{},"body":{"injectables/VyfiService.html":{}}}],["method",{"_index":767,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/LifecycleService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TransactionModelFix1743089378621.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["metrics",{"_index":2803,"title":{},"body":{"injectables/DistributionService.html":{}}}],["migration",{"_index":5112,"title":{},"body":{"index.html":{}}}],["migration:create",{"_index":5113,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":5116,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["milliseconds",{"_index":4630,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["min",{"_index":716,"title":{},"body":{"interfaces/Amount.html":{},"classes/PaginationDto.html":{},"miscellaneous/variables.html":{}}}],["min(1",{"_index":3751,"title":{},"body":{"classes/PaginationDto.html":{}}}],["min_pool_ada",{"_index":4873,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["min_return_ada",{"_index":4875,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":404,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"classes/ContributorWhitelist.html":{},"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{},"classes/SocialLink.html":{}}}],["minpoolada",{"_index":4928,"title":{},"body":{"injectables/VyfiService.html":{}}}],["minreturnada",{"_index":4930,"title":{},"body":{"injectables/VyfiService.html":{}}}],["mint",{"_index":2109,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{}}}],["mintadapair",{"_index":2731,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["minting_key",{"_index":2777,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["mintquantity",{"_index":1066,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["minttx",{"_index":1065,"title":{},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["minutes",{"_index":4964,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["miscellaneous",{"_index":5052,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":5008,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["missing",{"_index":4970,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["mit",{"_index":5184,"title":{},"body":{"index.html":{}}}],["mock",{"_index":2420,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{}}}],["mode",{"_index":5109,"title":{},"body":{"index.html":{}}}],["model",{"_index":2956,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["modify",{"_index":2962,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["module",{"_index":221,"title":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["modules",{"_index":223,"title":{"modules.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.guard",{"_index":1103,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/BlockchainController.html":{},"controllers/LpTokensController.html":{}}}],["modules/auth/auth.module",{"_index":892,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/aws_bucket/aws.module",{"_index":893,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/claims/claims.module",{"_index":894,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/distribution/distribution.module",{"_index":895,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/globals/jwt_global_module/jwt_global.module",{"_index":896,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/taptools/taptools.module",{"_index":3280,"title":{},"body":{"modules/JwtGlobalModule.html":{}}}],["modules/users/users.module",{"_index":897,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaults/lp",{"_index":898,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaults/phase",{"_index":901,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{}}}],["modules/vaults/processing",{"_index":904,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaults/types",{"_index":3875,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["modules/vaults/vaults.module",{"_index":907,"title":{},"body":{"modules/AppModule.html":{}}}],["monitored",{"_index":1834,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["monitoring",{"_index":1821,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["more",{"_index":3418,"title":{},"body":{"injectables/LifecycleService.html":{},"index.html":{}}}],["multer",{"_index":1398,"title":{},"body":{"controllers/AwsController.html":{},"dependencies.html":{}}}],["multi",{"_index":2665,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["multiasset",{"_index":679,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiasset.insert(scripthash.from_bytes(buffer.from(policy",{"_index":710,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiasset.new",{"_index":691,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiassetsvalue",{"_index":711,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["multiassetsvalue.set_multiasset(multiasset",{"_index":714,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":5195,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["name'})@column",{"_index":4364,"title":{},"body":{"entities/User.html":{}}}],["name'})@column({type",{"_index":3547,"title":{},"body":{"entities/LinkEntity.html":{}}}],["name=migrationname",{"_index":5114,"title":{},"body":{"index.html":{}}}],["naming",{"_index":889,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["namingstrategy",{"_index":933,"title":{},"body":{"modules/AppModule.html":{}}}],["need",{"_index":1431,"title":{},"body":{"controllers/AwsController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["needed",{"_index":335,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{}}}],["needs",{"_index":3466,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["negativeinfinity",{"_index":2762,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["nest",{"_index":5102,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":5198,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":5124,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":1442,"title":{},"body":{"modules/AwsModule.html":{},"injectables/AwsService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"modules/ClaimsModule.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":884,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":184,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":771,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"modules/JwtGlobalModule.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":5021,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":1263,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":5023,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1397,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":887,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":188,"title":{},"body":{"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ClaimsController.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"classes/UpdateProfileDto.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":241,"title":{},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"modules/VaultsModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":3804,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["netada",{"_index":2825,"title":{},"body":{"injectables/DistributionService.html":{}}}],["network",{"_index":1842,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["networkid",{"_index":2585,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["networkid.tostring",{"_index":4887,"title":{},"body":{"injectables/VyfiService.html":{}}}],["new",{"_index":284,"title":{},"body":{"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newfile",{"_index":1579,"title":{},"body":{"injectables/AwsService.html":{}}}],["newly",{"_index":2371,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["newstatus",{"_index":3318,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{}}}],["next",{"_index":2394,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/RawBodyMiddleware.html":{}}}],["nextfunction",{"_index":3800,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["nft",{"_index":1168,"title":{},"body":{"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/enumerations.html":{}}}],["nft'})@isnotempty()@isstring()@expose",{"_index":3906,"title":{},"body":{"classes/TagDto.html":{}}}],["nft.adavalue",{"_index":4041,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.balance",{"_index":4039,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.floorprice",{"_index":4040,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.name",{"_index":4038,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nft.policy",{"_index":4037,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nftasset",{"_index":772,"title":{"classes/NftAsset.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["nfts",{"_index":4035,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["node",{"_index":3985,"title":{},"body":{"injectables/TaptoolsService.html":{},"dependencies.html":{}}}],["node.js",{"_index":5096,"title":{},"body":{"index.html":{}}}],["node:buffer",{"_index":667,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["nodecache",{"_index":3979,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["nodejs",{"_index":689,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["non",{"_index":324,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TaptoolsService.html":{}}}],["nonadaassets",{"_index":4071,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["none",{"_index":4269,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["not_found",{"_index":1874,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":286,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["notfoundexception('claim",{"_index":2415,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["notfoundexception('no",{"_index":3661,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["notfoundexception('proposal",{"_index":3274,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["notfoundexception('transaction",{"_index":381,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{}}}],["notfoundexception('user",{"_index":2411,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{}}}],["notfoundexception('vault",{"_index":306,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{}}}],["notfoundexception(`outchain",{"_index":4297,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["notfoundexception(`vault",{"_index":3657,"title":{},"body":{"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["notfoundexception(error.message",{"_index":2140,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["now",{"_index":68,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["now.gettime",{"_index":3377,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["npm",{"_index":5104,"title":{},"body":{"index.html":{}}}],["npmconfigname1750085776373",{"_index":91,"title":{"classes/$npmConfigName1750085776373.html":{}},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["npmconfigname1750413089611",{"_index":119,"title":{"classes/$npmConfigName1750413089611.html":{}},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["null",{"_index":50,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/PublicProfileRes.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":443,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["numacquirers",{"_index":2859,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["number",{"_index":405,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/GetVaultsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number(amount[0].quantity",{"_index":725,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["number(asset.quantity",{"_index":705,"title":{},"body":{"interfaces/Amount.html":{},"injectables/TaptoolsService.html":{},"miscellaneous/variables.html":{}}}],["number(index",{"_index":3685,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["number(response.data.cardano.usd",{"_index":4004,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["number(response.data.data.ada",{"_index":4110,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["number(response.data.data.usd",{"_index":4112,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["number(value",{"_index":4639,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["number(vault.acquire_window_duration",{"_index":3540,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["number(vault.contribution_duration",{"_index":3490,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["number})@apiquery({name",{"_index":4811,"title":{},"body":{"controllers/VyfiController.html":{}}}],["number})@isnumber()@isoptional()@expose",{"_index":3135,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["number})@isoptional()@isnumber()@expose",{"_index":4215,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["numeric",{"_index":511,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["numeric(10,2",{"_index":2649,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["numeric(20,2",{"_index":2647,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["numeric(20,6",{"_index":57,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["obj",{"_index":4641,"title":{},"body":{"classes/VaultShortResponse.html":{},"miscellaneous/variables.html":{}}}],["obj.map(item",{"_index":5243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.phaseendtime",{"_index":4642,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["object",{"_index":1017,"title":{},"body":{"classes/AssetMetadataDto.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":396,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{}}}],["object.entries(acquireradamap",{"_index":3450,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["object.entries(contributorvaluemap",{"_index":3457,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["object.entries(params).foreach(([key",{"_index":807,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["object.keys(acquireradamap).length",{"_index":3453,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["object.keys(obj).reduce((acc",{"_index":5245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":1901,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["object})@apiresponse({status",{"_index":1642,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["object})@useguards(authguard",{"_index":1661,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["off_assets_offered",{"_index":3828,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["offchain",{"_index":1744,"title":{},"body":{"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["offer",{"_index":5181,"title":{},"body":{"index.html":{}}}],["offered",{"_index":4668,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["official",{"_index":5135,"title":{},"body":{"index.html":{}}}],["old",{"_index":5001,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["on('data",{"_index":1543,"title":{},"body":{"injectables/AwsService.html":{}}}],["on('end",{"_index":1559,"title":{},"body":{"injectables/AwsService.html":{}}}],["on('error",{"_index":1565,"title":{},"body":{"injectables/AwsService.html":{}}}],["onchain",{"_index":2173,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchainmetadata",{"_index":1067,"title":{"classes/OnchainMetadata.html":{}},"body":{"classes/AssetValueDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/TaptoolsService.html":{}}}],["onchaintransactionstatus",{"_index":1873,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["onchaintransactionstatus.confirmed",{"_index":2171,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchaintransactionstatus.failed",{"_index":2170,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchaintransactionstatus.not_found",{"_index":2179,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["onchaintransactionstatus.pending",{"_index":2168,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["ondelete",{"_index":438,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{}}}],["one",{"_index":317,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"injectables/LifecycleService.html":{},"controllers/VaultsController.html":{}}}],["one_day",{"_index":4534,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["one_minute_ms",{"_index":3378,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["onetomany",{"_index":4187,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["onetoone",{"_index":4379,"title":{},"body":{"entities/User.html":{}}}],["open",{"_index":3200,"title":{},"body":{"classes/GetVaultsDto.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["operation",{"_index":1794,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["option",{"_index":4792,"title":{},"body":{"classes/VoteReq.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1792,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"classes/CreateProposalReq.html":{}}}],["opts",{"_index":5090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["order",{"_index":533,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/Amount.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"injectables/TransactionsService.html":{},"injectables/VyfiService.html":{}}}],["ordering",{"_index":4574,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["origin",{"_index":564,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{}}}],["origin_type",{"_index":365,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{}}}],["origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum",{"_index":545,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum_old",{"_index":547,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["original",{"_index":3501,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["origintype",{"_index":1003,"title":{},"body":{"entities/Asset.html":{}}}],["origintype'})@column({name",{"_index":973,"title":{},"body":{"entities/Asset.html":{}}}],["out",{"_index":237,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"index.html":{},"overview.html":{}}}],["outchain",{"_index":2019,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["output",{"_index":1935,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["output.address",{"_index":1733,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["output.amount.find((a",{"_index":3682,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["output.amount.find(amount",{"_index":752,"title":{},"body":{"interfaces/Amount.html":{}}}],["output.amount.map(asset",{"_index":1734,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["output_amount",{"_index":1606,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["output_amount[1].unit",{"_index":3669,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["output_amount[output_amount.length",{"_index":2079,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["output_index",{"_index":723,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/variables.html":{}}}],["outputref",{"_index":2214,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["outputs",{"_index":776,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["over",{"_index":3427,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["overview",{"_index":5203,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":3890,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["owner",{"_index":303,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreatePoolDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["owner_id",{"_index":2702,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["owners",{"_index":325,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["ownership",{"_index":1179,"title":{},"body":{"injectables/AssetsService.html":{}}}],["package",{"_index":5010,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":936,"title":{},"body":{"injectables/AppService.html":{}}}],["page",{"_index":1140,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"controllers/VaultsController.html":{}}}],["pages",{"_index":4729,"title":{},"body":{"controllers/VaultsController.html":{}}}],["paginated",{"_index":1097,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/VaultsController.html":{}}}],["paginatedresponsedto",{"_index":2910,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"injectables/DraftVaultsService.html":{},"classes/PaginatedResponseDto.html":{}}}],["pagination.dto",{"_index":3199,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["paginationdto",{"_index":1096,"title":{"classes/PaginationDto.html":{}},"body":{"controllers/AssetsController.html":{},"classes/GetVaultsDto.html":{},"classes/PaginationDto.html":{}}}],["paginationdto:12",{"_index":3198,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["paginationdto:20",{"_index":3196,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["param",{"_index":179,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"controllers/GovernanceController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{}}}],["param('id",{"_index":4781,"title":{},"body":{"controllers/VaultsController.html":{}}}],["param('proposalid",{"_index":3242,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["param('vaultid",{"_index":208,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{}}}],["parameter_change",{"_index":2632,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["parameterize",{"_index":3673,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["parameterized",{"_index":3674,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["parameterizedscript",{"_index":2084,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parameterizedscript.validator",{"_index":2131,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parameterizedscript.validator.hash",{"_index":2085,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parameterizedscript?.validator?.hash",{"_index":3672,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/ExtractLpTokensParams.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TransactionModelFix1743089378621.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{}}}],["parameters'})@apiresponse({status",{"_index":3581,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["params",{"_index":768,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/DistributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"injectables/VaultInsertingService.html":{},"injectables/VyfiService.html":{}}}],["params.changeaddress",{"_index":2119,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets.map(asset",{"_index":2106,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets[0].assetname",{"_index":2102,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets[0].policyid",{"_index":2104,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.outputs[0].assets[0].quantity",{"_index":2105,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["params.txid",{"_index":827,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["parcing",{"_index":1383,"title":{},"body":{"controllers/AwsController.html":{}}}],["parse",{"_index":1432,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{}}}],["parse(buffer.tostring",{"_index":1540,"title":{},"body":{"injectables/AwsService.html":{}}}],["parsed",{"_index":1705,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/WebhookVerificationService.html":{}}}],["parsedutxos",{"_index":720,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["parsedutxos.add",{"_index":726,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["parsefilepipe",{"_index":1393,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["parseint(asset.quantity",{"_index":2202,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["parseint(process.env.db_port",{"_index":920,"title":{},"body":{"modules/AppModule.html":{}}}],["parseint(timestamp",{"_index":4999,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["parser.raw",{"_index":1698,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["parsing",{"_index":1567,"title":{},"body":{"injectables/AwsService.html":{}}}],["part",{"_index":5174,"title":{},"body":{"index.html":{}}}],["partial",{"_index":387,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"injectables/BlockchainService.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/SocialLink.html":{},"classes/TagDto.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/UsersService.html":{}}}],["passed",{"_index":3511,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["password",{"_index":924,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":180,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/UsersController.html":{}}}],["patch('profile",{"_index":4423,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('transaction/:txid/hash",{"_index":214,"title":{},"body":{"controllers/AcquireController.html":{}}}],["patch('transaction/:txid/hash')@apioperation({summary",{"_index":170,"title":{},"body":{"controllers/AcquireController.html":{}}}],["patch(endpoint",{"_index":794,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["payload",{"_index":1317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["payload.length",{"_index":4980,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["payloadlength",{"_index":4979,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["payment",{"_index":101,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["payment_credential",{"_index":2751,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["payout",{"_index":2423,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["pending",{"_index":649,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AssetsService.html":{},"injectables/BlockchainService.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/GetClaimsDto.html":{},"injectables/LpTokensService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"miscellaneous/enumerations.html":{}}}],["pending'})@isoptional()@isstring",{"_index":3164,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["per",{"_index":4981,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["percentage",{"_index":2768,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DistributionService.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["percentoftotalacquireadasent",{"_index":2864,"title":{},"body":{"injectables/DistributionService.html":{}}}],["percentoftotalvtnetoflp",{"_index":2869,"title":{},"body":{"injectables/DistributionService.html":{}}}],["percentvalueretained",{"_index":2879,"title":{},"body":{"injectables/DistributionService.html":{}}}],["period",{"_index":3492,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["pg",{"_index":5042,"title":{},"body":{"dependencies.html":{}}}],["phase",{"_index":311,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["phaseendtime",{"_index":4613,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["phasestartfield",{"_index":3319,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{}}}],["phasetransition",{"_index":3294,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["phasetransitionqueue",{"_index":3341,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["pk_487a5346fa3693a430b6d6db60c",{"_index":2713,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_61db8d3694e74fd55f37c54a54c",{"_index":574,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["pk_6c16b9093a142e0e7613b04a3d9",{"_index":2644,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_85cf89e7248c7f3f4013e524c84",{"_index":2715,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_8aff9f27f807add95dd73b72f3e",{"_index":2657,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_96c91970c0dcb2f69fdccd0a698",{"_index":71,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["pk_a219afd8dd77ed80f5a862f1db9",{"_index":4205,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":2655,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_b43bcaa347028f52de05c137789",{"_index":622,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["pk_da96729a8b113377cfb6a62439c",{"_index":2662,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["pk_e7dc17249a1148a1970748eda99",{"_index":621,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["pk_ecf17f4a741d3c5ba0b4c5ab4b6",{"_index":2646,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["placeholder",{"_index":3711,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["plain",{"_index":4470,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainedusers",{"_index":4478,"title":{},"body":{"injectables/UsersService.html":{}}}],["plaintoinstance",{"_index":2907,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["plaintoinstance(publicprofileres",{"_index":4480,"title":{},"body":{"injectables/UsersService.html":{}}}],["plaintoinstance(vaultshortresponse",{"_index":2941,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["plainuser",{"_index":4471,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainuser.address",{"_index":4473,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainuser.gains",{"_index":4474,"title":{},"body":{"injectables/UsersService.html":{}}}],["plainuser.vaults",{"_index":4475,"title":{},"body":{"injectables/UsersService.html":{}}}],["platform",{"_index":3869,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"index.html":{}}}],["please",{"_index":5159,"title":{},"body":{"index.html":{}}}],["plutus",{"_index":2121,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["plutusdata",{"_index":681,"title":{},"body":{"interfaces/Amount.html":{},"injectables/LpTokensService.html":{}}}],["plutusdata.new_bytes(buffer.from(\"bar\")).to_hex",{"_index":4560,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["plutusdata.new_bytes(buffer.from(\"foo\")).to_hex",{"_index":4559,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["plutusdata.new_bytes(buffer.from(datumtag",{"_index":3691,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["plutusdata.new_constr_plutus_data(constrplutusdata.new(bignum.zero",{"_index":737,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist",{"_index":685,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_bytes(buffer.from(tx_hash",{"_index":742,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_bytes(buffer.from(txhash",{"_index":735,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_integer(bigint.from_str(string(tx_output_idx",{"_index":743,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.add(plutusdata.new_integer(bigint.from_str(string(txoutputidx",{"_index":736,"title":{},"body":{"interfaces/Amount.html":{}}}],["plutuslist.new",{"_index":734,"title":{},"body":{"interfaces/Amount.html":{}}}],["policies",{"_index":695,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policies.length",{"_index":699,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policy",{"_index":398,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"miscellaneous/variables.html":{}}}],["policy_id",{"_index":358,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/PolicyIdRestore1749727852748.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["policyassets",{"_index":701,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policyassets.foreach(asset",{"_index":704,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["policyid",{"_index":403,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/Amount.html":{},"entities/Asset.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SocialLink.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/functions.html":{}}}],["policyid'})@column({name",{"_index":976,"title":{},"body":{"entities/Asset.html":{}}}],["policyid'})@column({type",{"_index":1221,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["policyid.ts",{"_index":3754,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid.ts:13",{"_index":3756,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid.ts:4",{"_index":3755,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid.ts:6",{"_index":3757,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyid1749726859213",{"_index":3752,"title":{"classes/PolicyId1749726859213.html":{}},"body":{"classes/PolicyId1749726859213.html":{}}}],["policyidrestore.ts",{"_index":3760,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore.ts:14",{"_index":3762,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore.ts:4",{"_index":3761,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore.ts:6",{"_index":3763,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyidrestore1749727852748",{"_index":3758,"title":{"classes/PolicyIdRestore1749727852748.html":{}},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["policyid}.${assetname",{"_index":4113,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["pool",{"_index":2593,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/DistributionService.html":{},"classes/TokenInfo.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["pool')@apioperation({summary",{"_index":4809,"title":{},"body":{"controllers/VyfiController.html":{}}}],["pool'})@apibody({type",{"_index":4816,"title":{},"body":{"controllers/VyfiController.html":{}}}],["pool.dto",{"_index":4824,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["pool.dto.ts",{"_index":2584,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["pool.dto.ts:11",{"_index":4159,"title":{},"body":{"classes/TokenInfo.html":{}}}],["pool.dto.ts:15",{"_index":4157,"title":{},"body":{"classes/TokenInfo.html":{}}}],["pool.dto.ts:21",{"_index":2592,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:25",{"_index":2600,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:29",{"_index":2601,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:34",{"_index":2605,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:38",{"_index":2597,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:42",{"_index":2596,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["pool.dto.ts:7",{"_index":4160,"title":{},"body":{"classes/TokenInfo.html":{}}}],["pool_address",{"_index":4879,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["pooladdress",{"_index":4925,"title":{},"body":{"injectables/VyfiService.html":{}}}],["poolcheck",{"_index":4899,"title":{},"body":{"injectables/VyfiService.html":{}}}],["poolcheck.exists",{"_index":4903,"title":{},"body":{"injectables/VyfiService.html":{}}}],["poolfactoryaddress",{"_index":2586,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["poolid",{"_index":4821,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["poolowner",{"_index":4846,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["poolowneraddress",{"_index":2587,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["port",{"_index":915,"title":{},"body":{"modules/AppModule.html":{}}}],["positiveinfinity",{"_index":2763,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["possible",{"_index":5129,"title":{},"body":{"index.html":{}}}],["post",{"_index":181,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["post('/handle",{"_index":1428,"title":{},"body":{"controllers/AwsController.html":{}}}],["post('/publish",{"_index":4753,"title":{},"body":{"controllers/VaultsController.html":{}}}],["post('/upload",{"_index":1407,"title":{},"body":{"controllers/AwsController.html":{}}}],["post(':id/claim",{"_index":2321,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["post(':id/claim/submit",{"_index":2324,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["post(':id/claim/submit')@useguards(authguard",{"_index":2305,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["post(':vaultid",{"_index":204,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["post(':vaultid')@apioperation({summary",{"_index":161,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["post('burn",{"_index":1630,"title":{},"body":{"controllers/BlockchainController.html":{},"controllers/VaultsController.html":{}}}],["post('create",{"_index":4815,"title":{},"body":{"controllers/VyfiController.html":{}}}],["post('extract",{"_index":3593,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["post('extract')@apioperation({summary",{"_index":3575,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["post('login",{"_index":1245,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('profile/banner",{"_index":4431,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('profile/image",{"_index":4427,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('proposals/:proposalid/vote",{"_index":3240,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post('proposals/:proposalid/vote')@useguards(authguard)@apioperation({summary",{"_index":3225,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post('save",{"_index":4757,"title":{},"body":{"controllers/VaultsController.html":{}}}],["post('scanner",{"_index":1647,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/build",{"_index":1675,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/build')@apioperation({summary",{"_index":1623,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/submit",{"_index":1683,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('transaction/submit')@apioperation({summary",{"_index":1652,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('tx",{"_index":1636,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('vault/update",{"_index":1680,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('vault/update')@apioperation({summary",{"_index":1659,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["post('vaults/:vaultid/proposals",{"_index":3234,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post('vaults/:vaultid/proposals')@useguards(authguard)@apioperation({summary",{"_index":3211,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["post('webhook/tx",{"_index":2308,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["post(endpoint",{"_index":792,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["postgres",{"_index":918,"title":{},"body":{"modules/AppModule.html":{}}}],["power",{"_index":3265,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["preamble",{"_index":5089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":959,"title":{},"body":{"entities/Asset.html":{},"entities/Claim.html":{},"entities/User.html":{}}}],["prefix",{"_index":146,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["preloadedscripts",{"_index":2114,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["prepare",{"_index":3688,"title":{},"body":{"injectables/LpTokensService.html":{},"injectables/WebhookVerificationService.html":{}}}],["preprod",{"_index":2132,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["preprod.blockfrost.io/api/v0",{"_index":3977,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["preprod.blockfrost.io/api/v0/addresses/${address.to_bech32()}/utxos",{"_index":4936,"title":{},"body":{"injectables/VyfiService.html":{}}}],["presigned",{"_index":2359,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["presignedtx",{"_index":2138,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["presignedurl",{"_index":1527,"title":{},"body":{"injectables/AwsService.html":{}}}],["press",{"_index":2353,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["preview",{"_index":3812,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["price",{"_index":1171,"title":{},"body":{"injectables/AssetsService.html":{},"classes/CreateProposalReq.html":{},"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["price...'})@isnotempty()@isstring",{"_index":2617,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["priceada",{"_index":1045,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["prices",{"_index":4653,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["priceusd",{"_index":1046,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{}}}],["pricing",{"_index":2799,"title":{},"body":{"injectables/DistributionService.html":{}}}],["primary",{"_index":72,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["primarygeneratedcolumn",{"_index":449,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":432,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["privacy",{"_index":2682,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/VaultShortResponse.html":{}}}],["private",{"_index":202,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["private/semi",{"_index":2531,"title":{},"body":{"injectables/ContributionService.html":{}}}],["privatekey",{"_index":2049,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["privatekey.from_bech32(customerskey",{"_index":3702,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["process",{"_index":1493,"title":{},"body":{"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{}}}],["process(job",{"_index":3299,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["process.env.aws_access_key_id",{"_index":1508,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.aws_bucket_name",{"_index":1488,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.aws_bucket_url",{"_index":1503,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.aws_secret_access_key",{"_index":1510,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.blockfrost_testnet_api_key",{"_index":4054,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["process.env.db_host",{"_index":919,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":927,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":925,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":923,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":1575,"title":{},"body":{"injectables/AwsService.html":{}}}],["process.env.redis_host",{"_index":914,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.taptools_api_key",{"_index":3991,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processclaim",{"_index":2293,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["processclaim(@param('id",{"_index":2322,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["processclaim(id",{"_index":2301,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["processconfirmedtransaction",{"_index":2344,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["processconfirmedtransaction(txhash",{"_index":2377,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["processed",{"_index":1641,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/ContributionService.html":{}}}],["processedassets",{"_index":4022,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedassets.filter(a",{"_index":4049,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedassets.length",{"_index":4048,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedassets.push",{"_index":4029,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["processedblockchaintxs",{"_index":2513,"title":{},"body":{"injectables/ContributionService.html":{}}}],["processing",{"_index":192,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"controllers/BlockchainController.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"injectables/WebhookVerificationService.html":{}}}],["processing_fee",{"_index":4870,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["processingfee",{"_index":4926,"title":{},"body":{"injectables/VyfiService.html":{}}}],["processor",{"_index":3305,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["processor('phasetransition",{"_index":3307,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["production",{"_index":2426,"title":{},"body":{"injectables/ClaimsService.html":{},"index.html":{}}}],["profile",{"_index":3872,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profile.dto",{"_index":4413,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profile.dto.ts",{"_index":3868,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:13",{"_index":3871,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["profile.dto.ts:21",{"_index":3874,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["profile.dto.ts:33",{"_index":4316,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:43",{"_index":4315,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:53",{"_index":4317,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:63",{"_index":4314,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:72",{"_index":4322,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:81",{"_index":4321,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:92",{"_index":4319,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.res",{"_index":4463,"title":{},"body":{"injectables/UsersService.html":{}}}],["profile.res.ts",{"_index":3766,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:14",{"_index":3774,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:21",{"_index":3775,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:28",{"_index":3773,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:35",{"_index":3769,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:42",{"_index":3776,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:49",{"_index":3770,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:56",{"_index":3777,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:63",{"_index":3779,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:70",{"_index":3778,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:77",{"_index":3772,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile.res.ts:84",{"_index":3780,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["profile_image",{"_index":4350,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["profile_image_id",{"_index":2650,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{}}}],["profileimage",{"_index":1348,"title":{},"body":{"injectables/AuthService.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{}}}],["profileimage'})@onetoone(undefined)@joincolumn({name",{"_index":4366,"title":{},"body":{"entities/User.html":{}}}],["profileimg",{"_index":4486,"title":{},"body":{"injectables/UsersService.html":{}}}],["profileimgkey",{"_index":4484,"title":{},"body":{"injectables/UsersService.html":{}}}],["programmed",{"_index":2681,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"miscellaneous/enumerations.html":{}}}],["progressive",{"_index":5095,"title":{},"body":{"index.html":{}}}],["project",{"_index":2747,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"index.html":{}}}],["project_id",{"_index":4053,"title":{},"body":{"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["projectid",{"_index":2069,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["promise",{"_index":31,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{}}}],["promise((resolve",{"_index":1516,"title":{},"body":{"injectables/AwsService.html":{}}}],["promise.all",{"_index":352,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{}}}],["promise.all(batchpromises",{"_index":4083,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["proper",{"_index":4910,"title":{},"body":{"injectables/VyfiService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"classes/VoteReq.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"properties.html":{}}}],["proposal",{"_index":2613,"title":{},"body":{"classes/CreateProposalReq.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/VoteReq.html":{}}}],["proposal'})@apiresponse({status",{"_index":3212,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["proposal.req",{"_index":3228,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["proposal.req.ts",{"_index":2610,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["proposal.req.ts:18",{"_index":2626,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:26",{"_index":2618,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:34",{"_index":2629,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:42",{"_index":2621,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposal.req.ts:50",{"_index":2624,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["proposalid",{"_index":3218,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["proposals",{"_index":3221,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["proposaltype",{"_index":2627,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["proposaltype.asset_sale",{"_index":2633,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["protocol",{"_index":1574,"title":{},"body":{"injectables/AwsService.html":{}}}],["protocol}${host}/api/v1/csv/${uploadresult.key",{"_index":1584,"title":{},"body":{"injectables/AwsService.html":{}}}],["protocol}${host}/api/v1/image/${uploadresult.key",{"_index":1593,"title":{},"body":{"injectables/AwsService.html":{}}}],["provided",{"_index":2998,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["providers",{"_index":228,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["provides",{"_index":2786,"title":{},"body":{"injectables/DistributionService.html":{}}}],["proxy",{"_index":2529,"title":{},"body":{"injectables/ContributionService.html":{}}}],["pubkeybytes",{"_index":1314,"title":{},"body":{"injectables/AuthService.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/LoginReq.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["public\".\"assets_origin_type_enum",{"_index":540,"title":{},"body":{"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{}}}],["public\".\"assets_origin_type_enum_old",{"_index":546,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["public\".\"assets_status_enum",{"_index":2660,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"assets_type_enum",{"_index":2658,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"idx_2b3fd4667b2be7a2d7a329083c",{"_index":630,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["public\".\"idx_9dcbee9dfaf5bc1d498d568216",{"_index":2239,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"idx_adf9f0b047319be1ec67ac1d1e",{"_index":629,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["public\".\"idx_f93b9856ae3dfe138275ad9d68",{"_index":473,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["public\".\"transactions_status_enum",{"_index":646,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"transactions_status_enum_old",{"_index":654,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["public\".\"transactions_type_enum",{"_index":97,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"transactions_type_enum_old",{"_index":116,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["public\".\"vaults_acquire_open_window_type_enum",{"_index":3842,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["public\".\"vaults_contribution_open_window_type_enum",{"_index":2672,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["public\".\"vaults_contribution_open_window_type_enum_old",{"_index":3117,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["public\".\"vaults_investment_open_window_type_enum",{"_index":2676,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["public\".\"vaults_privacy_enum",{"_index":2667,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"vaults_termination_type_enum",{"_index":2679,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["public\".\"vaults_type_enum",{"_index":2663,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"vaults_type_enum_old",{"_index":4208,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["public\".\"vaults_valuation_type_enum",{"_index":2670,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["public\".\"vaults_value_method_enum",{"_index":3831,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["public\".\"vaults_vault_status_enum",{"_index":125,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["public\".\"vaults_vault_status_enum_old",{"_index":138,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["publication",{"_index":3666,"title":{},"body":{"injectables/LpTokensService.html":{},"classes/VaultShortResponse.html":{}}}],["publication_hash",{"_index":604,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["publicationhash",{"_index":4649,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["publickey",{"_index":1295,"title":{},"body":{"injectables/AuthService.html":{}}}],["publickey.from_bytes(pubkeybytes",{"_index":1316,"title":{},"body":{"injectables/AuthService.html":{}}}],["publickey.verify(signeddata",{"_index":1330,"title":{},"body":{"injectables/AuthService.html":{}}}],["publicprofileres",{"_index":3764,"title":{"classes/PublicProfileRes.html":{}},"body":{"classes/PublicProfileRes.html":{},"injectables/UsersService.html":{}}}],["publish",{"_index":2360,"title":{},"body":{"injectables/ClaimsService.html":{},"controllers/VaultsController.html":{}}}],["publish/:id",{"_index":4708,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishdto",{"_index":4705,"title":{},"body":{"controllers/VaultsController.html":{}}}],["published",{"_index":130,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["publishes",{"_index":4736,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishing",{"_index":4756,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvault",{"_index":4702,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvault(@request",{"_index":4754,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvault(req",{"_index":4735,"title":{},"body":{"controllers/VaultsController.html":{}}}],["publishvaultdto",{"_index":3784,"title":{"classes/PublishVaultDto.html":{}},"body":{"classes/PublishVaultDto.html":{},"controllers/VaultsController.html":{}}}],["purpose",{"_index":2123,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["quantities",{"_index":4116,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["quantity",{"_index":362,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"injectables/AssetsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["query",{"_index":182,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{}}}],["query('networkid",{"_index":4829,"title":{},"body":{"controllers/VyfiController.html":{}}}],["query('tokenaunit",{"_index":4830,"title":{},"body":{"controllers/VyfiController.html":{}}}],["query('tokenbunit",{"_index":4831,"title":{},"body":{"controllers/VyfiController.html":{}}}],["query.filter",{"_index":4762,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query.limit",{"_index":1113,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/VaultsController.html":{}}}],["query.order['created_at",{"_index":2936,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["query.order[sortby",{"_index":2934,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["query.page",{"_index":1112,"title":{},"body":{"controllers/AssetsController.html":{},"controllers/VaultsController.html":{}}}],["query.sortby",{"_index":4763,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query.sortorder",{"_index":4764,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query.status",{"_index":2402,"title":{},"body":{"injectables/ClaimsService.html":{},"controllers/VaultsController.html":{}}}],["query.type",{"_index":4778,"title":{},"body":{"controllers/VaultsController.html":{}}}],["query?.claimstate",{"_index":2403,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["query?.status",{"_index":2400,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["queryparams",{"_index":4885,"title":{},"body":{"injectables/VyfiService.html":{}}}],["queryrunner",{"_index":26,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query",{"_index":45,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query(`alter",{"_index":38,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query(`create",{"_index":127,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedTags1741943808652.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["queryrunner.query(`drop",{"_index":88,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["queryrunner.query(`update",{"_index":566,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["questions",{"_index":5158,"title":{},"body":{"index.html":{}}}],["queue",{"_index":3338,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["queuecontributiontoacquiretransition",{"_index":3335,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["queuecontributiontoacquiretransition(vault",{"_index":3355,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["queuephasetransition",{"_index":3336,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["queuephasetransition(vaultid",{"_index":3358,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["queuing",{"_index":3384,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["r2",{"_index":1504,"title":{},"body":{"injectables/AwsService.html":{}}}],["rarity",{"_index":1029,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["rate",{"_index":4076,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["raw",{"_index":1695,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{},"dependencies.html":{}}}],["raw.tostring().trim",{"_index":3808,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawbody",{"_index":1696,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/RawBodyMiddleware.html":{}}}],["rawbody(req",{"_index":3806,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawbody.length",{"_index":1715,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawbody.substring(0",{"_index":1717,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawbodylength",{"_index":1714,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawbodymiddleware",{"_index":3796,"title":{"injectables/RawBodyMiddleware.html":{}},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawbodypreview",{"_index":1716,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["rawtext",{"_index":3807,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawtext.length",{"_index":3811,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["rawtext.substring(0",{"_index":3813,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["re",{"_index":1590,"title":{},"body":{"injectables/AwsService.html":{},"injectables/RawBodyMiddleware.html":{}}}],["read",{"_index":1515,"title":{},"body":{"injectables/AwsService.html":{},"index.html":{}}}],["readonly",{"_index":203,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"injectables/RawBodyMiddleware.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["ready",{"_index":3461,"title":{},"body":{"injectables/LifecycleService.html":{},"index.html":{}}}],["real",{"_index":5172,"title":{},"body":{"index.html":{}}}],["reason",{"_index":4793,"title":{},"body":{"classes/VoteReq.html":{}}}],["receive",{"_index":2232,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["received",{"_index":1435,"title":{},"body":{"controllers/AwsController.html":{},"controllers/ClaimsController.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["received_sum",{"_index":4061,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["receivedsignature",{"_index":4993,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["receiver",{"_index":638,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["recent",{"_index":4268,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["recipient",{"_index":1732,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["record",{"_index":342,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreateProposalReq.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["recorded",{"_index":3226,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{}}}],["redeemer",{"_index":2124,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/typealiases.html":{}}}],["redeemer1",{"_index":2733,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"miscellaneous/typealiases.html":{}}}],["redeemer2",{"_index":2742,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["redeemer3",{"_index":2744,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":4954,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["reference",{"_index":2441,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["reference_script_hash",{"_index":1609,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["referencedcolumnname",{"_index":3918,"title":{},"body":{"entities/TagEntity.html":{}}}],["referenceinputs",{"_index":2115,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["references",{"_index":78,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["reflect",{"_index":5045,"title":{},"body":{"dependencies.html":{}}}],["refund",{"_index":3465,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["refunded",{"_index":3467,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["region",{"_index":1501,"title":{},"body":{"injectables/AwsService.html":{}}}],["register",{"_index":1839,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["registered",{"_index":1837,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["registertrackingaddress",{"_index":1763,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["registertrackingaddress(vaultaddress",{"_index":1788,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["reject",{"_index":1517,"title":{},"body":{"injectables/AwsService.html":{}}}],["reject(err.message",{"_index":1521,"title":{},"body":{"injectables/AwsService.html":{}}}],["reject(new",{"_index":1561,"title":{},"body":{"injectables/AwsService.html":{}}}],["rel_3e6ff48532fbe552bbb6c4098b",{"_index":2708,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["rel_657d44500fe38e604f4a630662",{"_index":2654,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_96d6f1aafc327443850f263cd5",{"_index":2653,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_a6a3f7811be6df590c8da538d4",{"_index":2707,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_bfa8eb1a193e5e4a9dc4d2b725",{"_index":2706,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["rel_c15eb8818056ac23754262fdd3",{"_index":2709,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["relation",{"_index":4465,"title":{},"body":{"injectables/UsersService.html":{}}}],["relations",{"_index":301,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{}}}],["relationships",{"_index":3054,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["releaseasset",{"_index":1129,"title":{},"body":{"injectables/AssetsService.html":{}}}],["releaseasset(userid",{"_index":1147,"title":{},"body":{"injectables/AssetsService.html":{}}}],["released",{"_index":1198,"title":{},"body":{"injectables/AssetsService.html":{},"classes/DatabaseStruct1741879378411.html":{},"miscellaneous/enumerations.html":{}}}],["released_at",{"_index":943,"title":{},"body":{"entities/Asset.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["releasedat",{"_index":1002,"title":{},"body":{"entities/Asset.html":{}}}],["releasedat'})@column({name",{"_index":979,"title":{},"body":{"entities/Asset.html":{}}}],["remaining",{"_index":4629,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["remove",{"_index":531,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{},"injectables/WebhookVerificationService.html":{}}}],["rename",{"_index":98,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["renamefieldfixenum.ts",{"_index":3818,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum.ts:30",{"_index":3820,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum.ts:4",{"_index":3819,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum.ts:6",{"_index":3821,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefieldfixenum1742800375799",{"_index":3816,"title":{"classes/RenameFieldFixEnum1742800375799.html":{}},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["renamefields.ts",{"_index":3824,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields.ts:28",{"_index":3826,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields.ts:4",{"_index":3825,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields.ts:6",{"_index":3827,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["renamefields1746536544579",{"_index":3822,"title":{"classes/RenameFields1746536544579.html":{}},"body":{"classes/RenameFields1746536544579.html":{}}}],["renameinvestmenttoacquire.ts",{"_index":3836,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire.ts:4",{"_index":3837,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire.ts:59",{"_index":3838,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire.ts:6",{"_index":3839,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renameinvestmenttoacquire1746531791148",{"_index":3834,"title":{"classes/RenameInvestmentToAcquire1746531791148.html":{}},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["renamevaultfield.ts",{"_index":3851,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield.ts:18",{"_index":3853,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield.ts:4",{"_index":3852,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield.ts:6",{"_index":3854,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["renamevaultfield1742382533813",{"_index":3849,"title":{"classes/RenameVaultField1742382533813.html":{}},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["replacelockedstatetogovernance.ts",{"_index":3857,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance.ts:26",{"_index":3859,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance.ts:4",{"_index":3858,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance.ts:6",{"_index":3860,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["replacelockedstatetogovernance1743424803837",{"_index":3855,"title":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["repository",{"_index":273,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["represent",{"_index":4575,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["represents.decorator",{"_index":3782,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["represents.decorator.ts",{"_index":3122,"title":{},"body":{"interfaces/DtoRepresentsType.html":{},"miscellaneous/functions.html":{}}}],["req",{"_index":166,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"injectables/RawBodyMiddleware.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["req.body",{"_index":3814,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["req.body.tostring('utf8",{"_index":1700,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["req.get('host",{"_index":4430,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.headers['blockfrost",{"_index":1694,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["req.readable",{"_index":3805,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["req.user.sub",{"_index":211,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["req?.headers",{"_index":1412,"title":{},"body":{"controllers/AwsController.html":{}}}],["req['rawbody",{"_index":3809,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["request",{"_index":378,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AssetsController.html":{},"guards/AuthGuard.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":1272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":5255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request['user",{"_index":1268,"title":{},"body":{"guards/AuthGuard.html":{}}}],["require('./blueprint.json",{"_index":5230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require_reserved_cost_ada",{"_index":612,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["require_reserved_cost_usd",{"_index":611,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["required",{"_index":318,"title":{},"body":{"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"classes/NftAsset.html":{},"classes/PaginationDto.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{}}}],["required_inputs",{"_index":4547,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["requiredinputs",{"_index":4551,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["requiredsigners",{"_index":2113,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["requiredthresholdada",{"_index":3446,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["requirements",{"_index":1163,"title":{},"body":{"injectables/AssetsService.html":{}}}],["requirereservedcostada",{"_index":4651,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["requirereservedcostusd",{"_index":4656,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["requiring",{"_index":5140,"title":{},"body":{"index.html":{}}}],["res",{"_index":1370,"title":{},"body":{"controllers/AwsController.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{}}}],["res.data",{"_index":4021,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.data.adavalue",{"_index":4024,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.data.positionsft",{"_index":4027,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.data.positionsnft",{"_index":4036,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["res.setheader('cache",{"_index":1419,"title":{},"body":{"controllers/AwsController.html":{}}}],["res.setheader('content",{"_index":1417,"title":{},"body":{"controllers/AwsController.html":{}}}],["reserve",{"_index":2775,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["reset",{"_index":236,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}],["resolve",{"_index":1564,"title":{},"body":{"injectables/AwsService.html":{}}}],["resolve(data",{"_index":1522,"title":{},"body":{"injectables/AwsService.html":{}}}],["resources",{"_index":5152,"title":{},"body":{"index.html":{}}}],["response",{"_index":816,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AwsController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/GovernanceService.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["response.data",{"_index":1818,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{},"injectables/VyfiService.html":{}}}],["response.data.pipe(res",{"_index":1423,"title":{},"body":{"controllers/AwsController.html":{}}}],["response.data.txhash",{"_index":1894,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["response.data?.cardano?.usd",{"_index":4000,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["response.data?.data",{"_index":4108,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["response.dto",{"_index":2313,"title":{},"body":{"controllers/ClaimsController.html":{},"injectables/DraftVaultsService.html":{}}}],["response.dto.ts",{"_index":2280,"title":{},"body":{"classes/ClaimResponseDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:10",{"_index":2288,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:11",{"_index":3745,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:13",{"_index":2286,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:14",{"_index":3744,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:16",{"_index":2281,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:17",{"_index":3747,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:19",{"_index":2287,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:22",{"_index":2283,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:25",{"_index":2285,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:28",{"_index":2282,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:31",{"_index":2289,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:5",{"_index":3743,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:7",{"_index":2284,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["response.dto.ts:8",{"_index":3746,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.headers['content",{"_index":1418,"title":{},"body":{"controllers/AwsController.html":{}}}],["response.json",{"_index":824,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response.json().catch",{"_index":820,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response.ok",{"_index":818,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response.status",{"_index":822,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["response?.transactions",{"_index":1851,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["responsetype",{"_index":1531,"title":{},"body":{"injectables/AwsService.html":{}}}],["result",{"_index":2144,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["result.transactionid",{"_index":3599,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["result.txhash",{"_index":2147,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["results",{"_index":89,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retention",{"_index":2802,"title":{},"body":{"injectables/DistributionService.html":{}}}],["retries",{"_index":1847,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["retrieval",{"_index":3271,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["retrieve",{"_index":2376,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["retrieved",{"_index":3938,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["retrieves",{"_index":2374,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["retry",{"_index":1830,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["return",{"_index":212,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":857,"title":{},"body":{"controllers/AppController.html":{},"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AnvilApiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["reverse",{"_index":532,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["review",{"_index":658,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["rewardaddress",{"_index":1296,"title":{},"body":{"injectables/AuthService.html":{}}}],["rewardaddress.from_address(address).to_address().to_bech32",{"_index":1324,"title":{},"body":{"injectables/AuthService.html":{}}}],["round6",{"_index":2809,"title":{},"body":{"injectables/DistributionService.html":{}}}],["round6(amount",{"_index":2830,"title":{},"body":{"injectables/DistributionService.html":{}}}],["run",{"_index":5106,"title":{},"body":{"index.html":{}}}],["runs",{"_index":5127,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1872,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["s3",{"_index":1458,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["s3.getsignedurlpromise('getobject",{"_index":1526,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3.upload(params",{"_index":1518,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3forcepathstyle",{"_index":1511,"title":{},"body":{"injectables/AwsService.html":{}}}],["satisfies",{"_index":3690,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["save",{"_index":351,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["saved",{"_index":4740,"title":{},"body":{"controllers/VaultsController.html":{}}}],["savedasset",{"_index":2549,"title":{},"body":{"injectables/ContributionService.html":{}}}],["savedasset.id",{"_index":2551,"title":{},"body":{"injectables/ContributionService.html":{}}}],["savedraft",{"_index":4703,"title":{},"body":{"controllers/VaultsController.html":{}}}],["savedraft(req",{"_index":4739,"title":{},"body":{"controllers/VaultsController.html":{}}}],["savedraftreq",{"_index":2905,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["savedraftvault",{"_index":2888,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["savedraftvault(userid",{"_index":2904,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["savedtransaction",{"_index":349,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["savedtransaction.id",{"_index":2552,"title":{},"body":{"injectables/ContributionService.html":{}}}],["sc",{"_index":5227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sc_address",{"_index":2086,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["scaddress",{"_index":4537,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["scalable",{"_index":5099,"title":{},"body":{"index.html":{}}}],["scale",{"_index":961,"title":{},"body":{"entities/Asset.html":{},"entities/Claim.html":{},"entities/User.html":{}}}],["scanner",{"_index":1649,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/ClaimsService.html":{},"injectables/WebhookVerificationService.html":{}}}],["scanner.service",{"_index":1746,"title":{},"body":{"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["scanner.service.ts",{"_index":1750,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"miscellaneous/variables.html":{}}}],["scanner.service.ts:127",{"_index":1783,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:136",{"_index":1768,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:164",{"_index":1771,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:168",{"_index":1773,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:175",{"_index":1781,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:179",{"_index":1775,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:183",{"_index":1777,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:187",{"_index":1779,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:22",{"_index":1796,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:23",{"_index":1797,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:24",{"_index":1765,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:31",{"_index":1787,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:47",{"_index":1785,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:72",{"_index":1789,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scanner.service.ts:81",{"_index":1793,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scannerkey",{"_index":1751,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scannerurl",{"_index":1752,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["scannerwh",{"_index":1620,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["scannerwh(@body",{"_index":1689,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["scannerwh(event",{"_index":1645,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["schedulemodule",{"_index":886,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{}}}],["schedulemodule.forroot",{"_index":908,"title":{},"body":{"modules/AppModule.html":{},"modules/LifecycleModule.html":{}}}],["schema",{"_index":5087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scpolicyid",{"_index":3610,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["script",{"_index":2753,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{}}}],["scripthash",{"_index":680,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["scriptinteractions",{"_index":2110,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["sdk",{"_index":1495,"title":{},"body":{"injectables/AwsService.html":{},"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1497,"title":{},"body":{"injectables/AwsService.html":{}}}],["second",{"_index":1805,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["seconds",{"_index":1809,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/TaptoolsService.html":{}}}],["secret",{"_index":1270,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["secretaccesskey",{"_index":1509,"title":{},"body":{"injectables/AwsService.html":{}}}],["select",{"_index":2150,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{}}}],["selected",{"_index":4794,"title":{},"body":{"classes/VoteReq.html":{}}}],["selecteduser",{"_index":4499,"title":{},"body":{"injectables/UsersService.html":{}}}],["selecteduser.banner_image",{"_index":4500,"title":{},"body":{"injectables/UsersService.html":{}}}],["selecteduser.profile_image",{"_index":4502,"title":{},"body":{"injectables/UsersService.html":{}}}],["selectedutxo",{"_index":4545,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["selectedutxo.input().index",{"_index":4550,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["selectedutxo.input().transaction_id().to_hex",{"_index":4549,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["selectedutxo.to_hex",{"_index":4548,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["sell",{"_index":2614,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["semi",{"_index":2669,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"miscellaneous/enumerations.html":{}}}],["semi_private",{"_index":4530,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["semiprivate",{"_index":5069,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":2014,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ClaimsService.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["sender",{"_index":637,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["sensitive",{"_index":4396,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sent",{"_index":3456,"title":{},"body":{"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{}}}],["sent_sum",{"_index":4062,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["serialization",{"_index":687,"title":{},"body":{"interfaces/Amount.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"dependencies.html":{}}}],["server",{"_index":1843,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"index.html":{}}}],["service",{"_index":2785,"title":{},"body":{"injectables/DistributionService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["services",{"_index":1877,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["services/lp",{"_index":3589,"title":{},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["services/transactions/build",{"_index":828,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["services/transactions/submit",{"_index":831,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["set",{"_index":493,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["set([...manualacquirer",{"_index":3092,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["setaddedat",{"_index":1007,"title":{},"body":{"entities/Asset.html":{}}}],["setdate",{"_index":453,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["settimeout",{"_index":1798,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["setting",{"_index":4625,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["settings",{"_index":334,"title":{},"body":{"injectables/AcquireService.html":{}}}],["setup",{"_index":4576,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{}}}],["shape",{"_index":2112,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["shares",{"_index":2801,"title":{},"body":{"injectables/DistributionService.html":{}}}],["shelley",{"_index":1551,"title":{},"body":{"injectables/AwsService.html":{}}}],["shorta",{"_index":4890,"title":{},"body":{"injectables/VyfiService.html":{}}}],["shorta}/${shortb",{"_index":4898,"title":{},"body":{"injectables/VyfiService.html":{}}}],["shortb",{"_index":4894,"title":{},"body":{"injectables/VyfiService.html":{}}}],["shouldretry",{"_index":1826,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["shows",{"_index":4706,"title":{},"body":{"controllers/VaultsController.html":{}}}],["side",{"_index":5100,"title":{},"body":{"index.html":{}}}],["sig",{"_index":1319,"title":{},"body":{"injectables/AuthService.html":{}}}],["sign",{"_index":2134,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["signature",{"_index":1302,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/LifecycleService.html":{},"classes/LoginReq.html":{},"injectables/LpTokensService.html":{},"classes/SignatureData.html":{},"injectables/WebhookVerificationService.html":{}}}],["signaturearr",{"_index":5238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signaturedata",{"_index":1237,"title":{"classes/SignatureData.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["signatureheader",{"_index":4949,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signatureheader.split",{"_index":4974,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signaturepayload",{"_index":4983,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signatures",{"_index":830,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["signaturevalue",{"_index":4973,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signaturevalue.split('=')[1",{"_index":4976,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["signatureversion",{"_index":1505,"title":{},"body":{"injectables/AwsService.html":{}}}],["signed",{"_index":1654,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signeddata",{"_index":1321,"title":{},"body":{"injectables/AuthService.html":{}}}],["signedtx",{"_index":1867,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signedtx.signatures",{"_index":1893,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signedtx.transaction",{"_index":1892,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["signedtx.txid",{"_index":2141,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["signedtx.vaultid",{"_index":2149,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["signedtxhex",{"_index":2380,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["signerstakeaddrbech32",{"_index":1323,"title":{},"body":{"injectables/AuthService.html":{}}}],["signing",{"_index":1293,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["signoptions",{"_index":1452,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["simple",{"_index":5142,"title":{},"body":{"index.html":{}}}],["single",{"_index":5070,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["size",{"_index":1952,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/UsersService.html":{}}}],["skey",{"_index":4864,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":1183,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["skip_empty_lines",{"_index":1541,"title":{},"body":{"injectables/AwsService.html":{}}}],["slot",{"_index":1946,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["slot_number",{"_index":2755,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["smallest",{"_index":2222,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["smallint",{"_index":2694,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["snakecase(key",{"_index":5247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakekey",{"_index":5246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakenamingstrategy",{"_index":888,"title":{},"body":{"modules/AppModule.html":{}}}],["social",{"_index":3061,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{}}}],["social_links",{"_index":2928,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["sociallink",{"_index":394,"title":{"classes/SocialLink.html":{}},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["sociallinkdto",{"_index":3866,"title":{"classes/SocialLinkDto.html":{}},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["sociallinks",{"_index":3767,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{}}}],["sociallinks'})@onetomany(undefined",{"_index":4368,"title":{},"body":{"entities/User.html":{}}}],["sort",{"_index":2935,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{}}}],["sortby",{"_index":2899,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{}}}],["sorting",{"_index":2932,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["sortorder",{"_index":2901,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.desc",{"_index":2903,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/JwtGlobalModule.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"index.html":{}}}],["special",{"_index":4133,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["specific",{"_index":338,"title":{},"body":{"injectables/AcquireService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{},"classes/GetClaimsDto.html":{}}}],["specified",{"_index":2933,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/LifecycleProcessor.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["spend",{"_index":2129,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["split",{"_index":3428,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["sponsors",{"_index":5188,"title":{},"body":{"index.html":{}}}],["src",{"_index":2453,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{}}}],["src/.../api",{"_index":5076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../apply_params.ts",{"_index":5077,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../asset.types.ts",{"_index":5054,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../aws.controller.ts",{"_index":5222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blockchain",{"_index":5217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blockchain.service.ts",{"_index":5057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../claim.types.ts",{"_index":5055,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../create",{"_index":5060,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../dto",{"_index":5080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../get",{"_index":5061,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":5219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lib.ts",{"_index":5081,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":5078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../transaction",{"_index":5058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transaction.types.ts",{"_index":5062,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type.ts",{"_index":5214,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../typeorm.config.ts",{"_index":5216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../vault",{"_index":5223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../vault.types.ts",{"_index":5056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../vyfi.service.ts",{"_index":5224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":853,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":859,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":882,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":934,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":935,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/decorators/get",{"_index":5251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":5231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/acquirerwhitelist.entity.ts",{"_index":425,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:13",{"_index":444,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:17",{"_index":440,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:21",{"_index":435,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:25",{"_index":431,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/acquirerwhitelist.entity.ts:9",{"_index":433,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["src/database/asset.entity.ts",{"_index":938,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:106",{"_index":975,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:110",{"_index":972,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:115",{"_index":984,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:120",{"_index":950,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:128",{"_index":946,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:13",{"_index":965,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:136",{"_index":987,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:17",{"_index":989,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:23",{"_index":977,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:29",{"_index":952,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:35",{"_index":985,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:39",{"_index":954,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:42",{"_index":978,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:52",{"_index":964,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:62",{"_index":962,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:65",{"_index":956,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:73",{"_index":967,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:80",{"_index":981,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:88",{"_index":969,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/asset.entity.ts:96",{"_index":980,"title":{},"body":{"entities/Asset.html":{}}}],["src/database/assetswhitelist.entity.ts",{"_index":1212,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:10",{"_index":1220,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:17",{"_index":1224,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:25",{"_index":1218,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:33",{"_index":1216,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:37",{"_index":1227,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:41",{"_index":1225,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/assetswhitelist.entity.ts:45",{"_index":1219,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["src/database/claim.entity.ts",{"_index":2252,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:12",{"_index":2260,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:17",{"_index":2273,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:21",{"_index":2269,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:29",{"_index":2265,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:33",{"_index":2255,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:37",{"_index":2267,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:41",{"_index":2258,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:45",{"_index":2262,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:49",{"_index":2256,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/claim.entity.ts:53",{"_index":2270,"title":{},"body":{"entities/Claim.html":{}}}],["src/database/contributorwhitelist.entity.ts",{"_index":2555,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:13",{"_index":2561,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:17",{"_index":2560,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:21",{"_index":2558,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:25",{"_index":2556,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/contributorwhitelist.entity.ts:9",{"_index":2557,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["src/database/file.entity.ts",{"_index":3143,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:11",{"_index":3147,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:15",{"_index":3153,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:19",{"_index":3151,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:23",{"_index":3149,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:27",{"_index":3156,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:31",{"_index":3157,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:35",{"_index":3145,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/file.entity.ts:7",{"_index":3154,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/database/link.entity.ts",{"_index":3544,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:11",{"_index":3546,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:15",{"_index":3551,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:19",{"_index":3548,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:24",{"_index":3557,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:29",{"_index":3554,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:33",{"_index":3549,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/link.entity.ts:37",{"_index":3545,"title":{},"body":{"entities/LinkEntity.html":{}}}],["src/database/migrations/1741879378411",{"_index":2639,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["src/database/migrations/1741943808652",{"_index":614,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["src/database/migrations/1741943808653",{"_index":521,"title":{},"body":{"classes/AddVaultLifecycleFields1741943808653.html":{}}}],["src/database/migrations/1741946649594",{"_index":4309,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["src/database/migrations/1742209228422",{"_index":4324,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["src/database/migrations/1742311345554",{"_index":2245,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{}}}],["src/database/migrations/1742382533813",{"_index":3850,"title":{},"body":{"classes/RenameVaultField1742382533813.html":{}}}],["src/database/migrations/1742484041497",{"_index":568,"title":{},"body":{"classes/AddedContributorWhitelist1742484041497.html":{}}}],["src/database/migrations/1742800375799",{"_index":3817,"title":{},"body":{"classes/RenameFieldFixEnum1742800375799.html":{}}}],["src/database/migrations/1742800589634",{"_index":3109,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{}}}],["src/database/migrations/1742819100112",{"_index":4333,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["src/database/migrations/1743089378621",{"_index":4200,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["src/database/migrations/1743424803837",{"_index":3856,"title":{},"body":{"classes/ReplaceLockedStateToGovernance1743424803837.html":{}}}],["src/database/migrations/1743433439139",{"_index":495,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["src/database/migrations/1743588383672",{"_index":632,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["src/database/migrations/1743678745097",{"_index":2234,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{}}}],["src/database/migrations/1743687086047",{"_index":488,"title":{},"body":{"classes/AddNullableForMetadata1743687086047.html":{}}}],["src/database/migrations/1744024797075",{"_index":466,"title":{},"body":{"classes/AddIndexToTransaction1744024797075.html":{}}}],["src/database/migrations/1744032453542",{"_index":475,"title":{},"body":{"classes/AddInvestmentToTxType1744032453542.html":{}}}],["src/database/migrations/1745573712493",{"_index":4689,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["src/database/migrations/1745583708330",{"_index":599,"title":{},"body":{"classes/AddedPublicationHash1745583708330.html":{}}}],["src/database/migrations/1745662880319",{"_index":459,"title":{},"body":{"classes/AddContractAddressToVault1745662880319.html":{}}}],["src/database/migrations/1745921850315",{"_index":550,"title":{},"body":{"classes/AddedAssetVaultName1745921850315.html":{}}}],["src/database/migrations/1746531791148",{"_index":3835,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["src/database/migrations/1746532933340",{"_index":4339,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["src/database/migrations/1746536544579",{"_index":3823,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["src/database/migrations/1747665618438",{"_index":513,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["src/database/migrations/1747821437539",{"_index":606,"title":{},"body":{"classes/AddedReserveVaule1747821437539.html":{}}}],["src/database/migrations/1747838327085",{"_index":577,"title":{},"body":{"classes/AddedDelete1747838327085.html":{}}}],["src/database/migrations/1747911428750",{"_index":592,"title":{},"body":{"classes/AddedMaxAssetsCount1747911428750.html":{}}}],["src/database/migrations/1748264767365",{"_index":557,"title":{},"body":{"classes/AddedAssetsStatus1748264767365.html":{}}}],["src/database/migrations/1748361017536",{"_index":535,"title":{},"body":{"classes/AddedAauired1748361017536.html":{}}}],["src/database/migrations/1749046550619",{"_index":585,"title":{},"body":{"classes/AddedLiquidationHash1749046550619.html":{}}}],["src/database/migrations/1749726859213",{"_index":3753,"title":{},"body":{"classes/PolicyId1749726859213.html":{}}}],["src/database/migrations/1749727852748",{"_index":3759,"title":{},"body":{"classes/PolicyIdRestore1749727852748.html":{}}}],["src/database/migrations/1750085776373",{"_index":92,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{}}}],["src/database/migrations/1750413089611",{"_index":120,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{}}}],["src/database/migrations/1750670509513",{"_index":505,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["src/database/migrations/1751298845693",{"_index":6,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{}}}],["src/database/migrations/1751453522246",{"_index":481,"title":{},"body":{"classes/AddMetadataToTransaction1751453522246.html":{}}}],["src/database/tag.entity.ts",{"_index":3907,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/tag.entity.ts:12",{"_index":3910,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/tag.entity.ts:27",{"_index":3914,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/tag.entity.ts:9",{"_index":3908,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/database/transaction.entity.ts",{"_index":4161,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:14",{"_index":4169,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:20",{"_index":4177,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:26",{"_index":4179,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:32",{"_index":4181,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:40",{"_index":4175,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:45",{"_index":4163,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:50",{"_index":4167,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:56",{"_index":4174,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:65",{"_index":4172,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:71",{"_index":4170,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:75",{"_index":4166,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:79",{"_index":4183,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/transaction.entity.ts:83",{"_index":4185,"title":{},"body":{"entities/Transaction.html":{}}}],["src/database/user.entity.ts",{"_index":4349,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:22",{"_index":4363,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:26",{"_index":4378,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:30",{"_index":4356,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:34",{"_index":4365,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:38",{"_index":4352,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:42",{"_index":4372,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:46",{"_index":4360,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:51",{"_index":4367,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:56",{"_index":4354,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:60",{"_index":4370,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:64",{"_index":4376,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:68",{"_index":4374,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:72",{"_index":4362,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:75",{"_index":4358,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:79",{"_index":4357,"title":{},"body":{"entities/User.html":{}}}],["src/database/user.entity.ts:83",{"_index":4377,"title":{},"body":{"entities/User.html":{}}}],["src/decorators/api",{"_index":846,"title":{},"body":{"interfaces/ApiDocParams.html":{},"miscellaneous/functions.html":{}}}],["src/decorators/dto",{"_index":3121,"title":{},"body":{"interfaces/DtoRepresentsType.html":{},"miscellaneous/functions.html":{}}}],["src/helpers/index.ts",{"_index":5232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":5091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":1230,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:20",{"_index":1236,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.guard.ts",{"_index":1250,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:13",{"_index":1258,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:29",{"_index":1261,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:7",{"_index":1255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":1278,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":1282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:15",{"_index":1286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:21",{"_index":1288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/login.req.ts",{"_index":3558,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["src/modules/auth/dto/login.req.ts:13",{"_index":3861,"title":{},"body":{"classes/SignatureData.html":{}}}],["src/modules/auth/dto/login.req.ts:23",{"_index":3862,"title":{},"body":{"classes/SignatureData.html":{}}}],["src/modules/auth/dto/login.req.ts:36",{"_index":3560,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/modules/auth/dto/login.req.ts:45",{"_index":3563,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/modules/auth/dto/login.req.ts:54",{"_index":3565,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/modules/aws_bucket/aws.controller.ts",{"_index":1364,"title":{},"body":{"controllers/AwsController.html":{},"miscellaneous/variables.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:45",{"_index":1389,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:67",{"_index":1380,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:80",{"_index":1377,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.controller.ts:95",{"_index":1386,"title":{},"body":{"controllers/AwsController.html":{}}}],["src/modules/aws_bucket/aws.module.ts",{"_index":1440,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/modules/aws_bucket/aws.service.ts",{"_index":1456,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:118",{"_index":1481,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:144",{"_index":1483,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:16",{"_index":1492,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:17",{"_index":1489,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:19",{"_index":1469,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:25",{"_index":1479,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:43",{"_index":1485,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:63",{"_index":1478,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:74",{"_index":1475,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:79",{"_index":1472,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/aws_bucket/aws.service.ts:84",{"_index":1487,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/modules/claims/claims.controller.ts",{"_index":2291,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["src/modules/claims/claims.controller.ts:25",{"_index":2300,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["src/modules/claims/claims.controller.ts:33",{"_index":2303,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["src/modules/claims/claims.controller.ts:39",{"_index":2306,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["src/modules/claims/claims.controller.ts:44",{"_index":2309,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["src/modules/claims/claims.module.ts",{"_index":2334,"title":{},"body":{"modules/ClaimsModule.html":{}}}],["src/modules/claims/claims.service.ts",{"_index":2340,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:100",{"_index":2383,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:131",{"_index":2352,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:197",{"_index":2381,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:23",{"_index":2388,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:24",{"_index":2349,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:246",{"_index":2378,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:47",{"_index":2373,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/claims.service.ts:74",{"_index":2369,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["src/modules/claims/dto/claim",{"_index":2279,"title":{},"body":{"classes/ClaimResponseDto.html":{}}}],["src/modules/claims/dto/create",{"_index":2574,"title":{},"body":{"classes/CreateClaimDto.html":{}}}],["src/modules/claims/dto/get",{"_index":3158,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["src/modules/distribution/distribution.module.ts",{"_index":2782,"title":{},"body":{"modules/DistributionModule.html":{}}}],["src/modules/distribution/distribution.service.ts",{"_index":2784,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:16",{"_index":2811,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:22",{"_index":2831,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:26",{"_index":2829,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:30",{"_index":2824,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:34",{"_index":2818,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:38",{"_index":2815,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/distribution/distribution.service.ts:75",{"_index":2813,"title":{},"body":{"injectables/DistributionService.html":{}}}],["src/modules/globals/jwt_global_module/jwt_global.module.ts",{"_index":3279,"title":{},"body":{"modules/JwtGlobalModule.html":{}}}],["src/modules/taptools/dto/asset",{"_index":1040,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["src/modules/taptools/dto/wallet",{"_index":4938,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["src/modules/taptools/taptools.controller.ts",{"_index":3920,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["src/modules/taptools/taptools.controller.ts:22",{"_index":3926,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["src/modules/taptools/taptools.module.ts",{"_index":3944,"title":{},"body":{"modules/TaptoolsModule.html":{}}}],["src/modules/taptools/taptools.service.ts",{"_index":3946,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:161",{"_index":3962,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:175",{"_index":3969,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:18",{"_index":3983,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:20",{"_index":3975,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:21",{"_index":3978,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:22",{"_index":3981,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:23",{"_index":3957,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:335",{"_index":3964,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:34",{"_index":3973,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:377",{"_index":3959,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:38",{"_index":3960,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:64",{"_index":3971,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/taptools/taptools.service.ts:94",{"_index":3967,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["src/modules/users/dto/public",{"_index":3765,"title":{},"body":{"classes/PublicProfileRes.html":{}}}],["src/modules/users/dto/update",{"_index":3867,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{}}}],["src/modules/users/dto/upload",{"_index":4345,"title":{},"body":{"classes/UploadImageDto.html":{}}}],["src/modules/users/users.controller.ts",{"_index":4385,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:100",{"_index":4406,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:39",{"_index":4393,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:50",{"_index":4398,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:61",{"_index":4402,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:75",{"_index":4409,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":4437,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":4440,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:156",{"_index":4456,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:167",{"_index":4460,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:17",{"_index":4444,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:197",{"_index":4458,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:28",{"_index":4449,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:37",{"_index":4452,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:66",{"_index":4446,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:71",{"_index":4451,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:87",{"_index":4454,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/vaults/draft",{"_index":2884,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts",{"_index":1077,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts:14",{"_index":1088,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts:24",{"_index":1082,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/assetwhitelist.dto.ts:34",{"_index":1080,"title":{},"body":{"classes/AssetWhitelistDto.html":{}}}],["src/modules/vaults/dto/get",{"_index":3170,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/vaults/dto/paginated",{"_index":3742,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/modules/vaults/dto/pagination.dto.ts",{"_index":3748,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/modules/vaults/dto/pagination.dto.ts:12",{"_index":3750,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/modules/vaults/dto/pagination.dto.ts:20",{"_index":3749,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/modules/vaults/dto/publish",{"_index":3785,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["src/modules/vaults/dto/tag.dto.ts",{"_index":3904,"title":{},"body":{"classes/TagDto.html":{}}}],["src/modules/vaults/dto/tag.dto.ts:13",{"_index":3905,"title":{},"body":{"classes/TagDto.html":{}}}],["src/modules/vaults/dto/vault.response.ts",{"_index":4611,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:105",{"_index":4634,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:112",{"_index":4617,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:119",{"_index":4636,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:126",{"_index":4628,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:29",{"_index":4621,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:36",{"_index":4623,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:43",{"_index":4619,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:50",{"_index":4633,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:57",{"_index":4618,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:64",{"_index":4632,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:71",{"_index":4622,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:78",{"_index":4627,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:85",{"_index":4624,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/dto/vault.response.ts:98",{"_index":4631,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["src/modules/vaults/lp",{"_index":2218,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{}}}],["src/modules/vaults/phase",{"_index":144,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"classes/CreateProposalReq.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/TxUpdateReq.html":{},"classes/VoteReq.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/vaults/processing",{"_index":663,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetMetadataDto.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/CreateAssetDto.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"classes/NftAsset.html":{},"injectables/RawBodyMiddleware.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/vaults/types.ts",{"_index":384,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetWhitelist.html":{},"classes/ContributorWhitelist.html":{},"classes/SocialLink.html":{}}}],["src/modules/vaults/types.ts:14",{"_index":3863,"title":{},"body":{"classes/SocialLink.html":{}}}],["src/modules/vaults/types.ts:29",{"_index":1075,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["src/modules/vaults/types.ts:39",{"_index":1074,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["src/modules/vaults/types.ts:49",{"_index":1071,"title":{},"body":{"classes/AssetWhitelist.html":{}}}],["src/modules/vaults/types.ts:60",{"_index":2553,"title":{},"body":{"classes/ContributorWhitelist.html":{}}}],["src/modules/vaults/types.ts:71",{"_index":388,"title":{},"body":{"classes/AcquirerWhitelist.html":{}}}],["src/modules/vaults/types.ts:82",{"_index":417,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:86",{"_index":418,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:9",{"_index":3864,"title":{},"body":{"classes/SocialLink.html":{}}}],["src/modules/vaults/types.ts:90",{"_index":419,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:94",{"_index":420,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/types.ts:98",{"_index":421,"title":{},"body":{"classes/AcquirerWhitelistCsv.html":{}}}],["src/modules/vaults/vaults.controller.ts",{"_index":4695,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:108",{"_index":4727,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:128",{"_index":4731,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:141",{"_index":4734,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:155",{"_index":4712,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:167",{"_index":4709,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:33",{"_index":4716,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:49",{"_index":4738,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:66",{"_index":4742,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:84",{"_index":4723,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.controller.ts:96",{"_index":4719,"title":{},"body":{"controllers/VaultsController.html":{}}}],["src/modules/vaults/vaults.module.ts",{"_index":4787,"title":{},"body":{"modules/VaultsModule.html":{}}}],["src/modules/vyfi/dto/create",{"_index":2583,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["src/modules/vyfi/vyfi.controller.ts",{"_index":4801,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.controller.ts:17",{"_index":4813,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.controller.ts:32",{"_index":4817,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.controller.ts:38",{"_index":4820,"title":{},"body":{"controllers/VyfiController.html":{}}}],["src/modules/vyfi/vyfi.module.ts",{"_index":4842,"title":{},"body":{"modules/VyfiModule.html":{}}}],["src/modules/vyfi/vyfi.service.ts",{"_index":4844,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["src/modules/vyfi/vyfi.service.ts:185",{"_index":4858,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:205",{"_index":4856,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:30",{"_index":4863,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:31",{"_index":4861,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:32",{"_index":4850,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:41",{"_index":4852,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:68",{"_index":4855,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/modules/vyfi/vyfi.service.ts:77",{"_index":4853,"title":{},"body":{"injectables/VyfiService.html":{}}}],["src/types/asset.types",{"_index":4285,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/types/asset.types.ts",{"_index":5063,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/blockchain.types.ts",{"_index":1595,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["src/types/claim.types.ts",{"_index":5064,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/transaction.types",{"_index":4286,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/types/transaction.types.ts",{"_index":5072,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/vault.types.ts",{"_index":5065,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stake",{"_index":107,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/LoginReq.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/SignatureData.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4",{"_index":3562,"title":{},"body":{"classes/LoginReq.html":{},"classes/SignatureData.html":{}}}],["stake_address",{"_index":501,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["stake_credential",{"_index":2754,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["stakeaddress",{"_index":1303,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{},"entities/User.html":{}}}],["stakeaddress'})@column({unique",{"_index":4371,"title":{},"body":{"entities/User.html":{}}}],["start",{"_index":2117,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"index.html":{}}}],["start:dev",{"_index":5110,"title":{},"body":{"index.html":{}}}],["start:prodmigration",{"_index":5111,"title":{},"body":{"index.html":{}}}],["start_threshold",{"_index":2698,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["started",{"_index":5094,"title":{"index.html":{}},"body":{}}],["starter",{"_index":5103,"title":{},"body":{"index.html":{}}}],["starting",{"_index":1552,"title":{},"body":{"injectables/AwsService.html":{}}}],["startthreshold",{"_index":4679,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["state",{"_index":1611,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ClaimsController.html":{},"classes/GetClaimsDto.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["static",{"_index":1513,"title":{},"body":{"injectables/AwsService.html":{}}}],["status",{"_index":54,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"entities/Asset.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"controllers/UsersController.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"miscellaneous/functions.html":{}}}],["status\"::\"text\"::\"public\".\"transactions_status_enum",{"_index":653,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["status\"::\"text\"::\"public\".\"transactions_status_enum_old",{"_index":659,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["status'})@column({name",{"_index":4171,"title":{},"body":{"entities/Transaction.html":{}}}],["status'})@column({type",{"_index":2264,"title":{},"body":{"entities/Claim.html":{}}}],["status'})@isoptional()@isenum(claimstatus",{"_index":3166,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["status.enum",{"_index":1927,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["status.enum.ts",{"_index":5059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuses",{"_index":3163,"title":{},"body":{"classes/GetClaimsDto.html":{}}}],["statusmap",{"_index":2175,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["statusmap[status",{"_index":2182,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["statusupdated",{"_index":2522,"title":{},"body":{"injectables/ContributionService.html":{}}}],["stay",{"_index":5177,"title":{},"body":{"index.html":{}}}],["stdttl",{"_index":3980,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["steps",{"_index":5126,"title":{},"body":{"index.html":{}}}],["still",{"_index":3499,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["stored",{"_index":2505,"title":{},"body":{"injectables/ContributionService.html":{}}}],["str",{"_index":5093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["straightforward",{"_index":5138,"title":{},"body":{"index.html":{}}}],["strategies",{"_index":890,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["stream",{"_index":1532,"title":{},"body":{"injectables/AwsService.html":{},"injectables/RawBodyMiddleware.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(lovelace.quantity",{"_index":713,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["stringifying",{"_index":1704,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["string})@apiquery({name",{"_index":4812,"title":{},"body":{"controllers/VyfiController.html":{}}}],["stripped",{"_index":780,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["stuck",{"_index":652,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":1345,"title":{},"body":{"injectables/AuthService.html":{}}}],["submit",{"_index":1653,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["submitonchainvaulttx",{"_index":4598,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["submitonchainvaulttx(signedtx",{"_index":4581,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["submitresponse",{"_index":2437,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"injectables/VyfiService.html":{}}}],["submitresponse.data",{"_index":4924,"title":{},"body":{"injectables/VyfiService.html":{}}}],["submitresponse.txhash",{"_index":2439,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{}}}],["submits",{"_index":1866,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["submitsignedclaimtransaction",{"_index":2294,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["submitsignedclaimtransaction(@param('id",{"_index":2325,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["submitsignedclaimtransaction(transactionid",{"_index":2304,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["submitsignedtransaction",{"_index":2345,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["submitsignedtransaction(transactionid",{"_index":2379,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["submitted",{"_index":650,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["submitting",{"_index":1897,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransaction",{"_index":833,"title":{},"body":{"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransaction(@body",{"_index":1684,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["submittransaction(params",{"_index":829,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["submittransaction(signedtx",{"_index":1864,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransactiondto",{"_index":1651,"title":{"classes/SubmitTransactionDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["submittransactiondto:115",{"_index":3902,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactiondto:123",{"_index":3901,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactiondto:134",{"_index":3900,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactiondto:146",{"_index":3899,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["submittransactionparams",{"_index":2058,"title":{"interfaces/SubmitTransactionParams.html":{}},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["submitvaulttxdto",{"_index":2038,"title":{"classes/SubmitVaultTxDto.html":{}},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["substring(4",{"_index":1311,"title":{},"body":{"injectables/AuthService.html":{}}}],["subtract",{"_index":4065,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["success",{"_index":376,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/GovernanceService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/VaultShortResponse.html":{}}}],["successful",{"_index":164,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AuthController.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ContributionController.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["successfully",{"_index":175,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"injectables/ClaimsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["successfully'})@apiresponse({status",{"_index":3580,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["sufficient",{"_index":3264,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["sum",{"_index":4123,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["summary",{"_index":205,"title":{},"body":{"controllers/AcquireController.html":{},"interfaces/ApiDocParams.html":{},"controllers/AppController.html":{},"controllers/AssetsController.html":{},"controllers/AuthController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"classes/WalletSummaryDto.html":{},"miscellaneous/functions.html":{}}}],["summary.dto",{"_index":3929,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["summary.dto.ts",{"_index":4511,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:11",{"_index":4516,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:14",{"_index":4514,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:17",{"_index":4515,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:20",{"_index":4513,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:38",{"_index":4512,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{}}}],["summary.dto.ts:4",{"_index":4942,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:5",{"_index":4517,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:6",{"_index":4940,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:7",{"_index":4941,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:8",{"_index":4518,"title":{},"body":{"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["summary.dto.ts:9",{"_index":4939,"title":{},"body":{"classes/WalletSummaryDto.html":{}}}],["super",{"_index":3308,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["supply",{"_index":4672,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["support",{"_index":4797,"title":{},"body":{"classes/VoteReq.html":{},"index.html":{},"modules.html":{}}}],["supports",{"_index":3717,"title":{},"body":{"injectables/LpTokensService.html":{},"controllers/VaultsController.html":{}}}],["svg",{"_index":5201,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":106,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/TransactionModelFix1743089378621.html":{},"miscellaneous/enumerations.html":{}}}],["switch",{"_index":3313,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["sync",{"_index":2506,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{}}}],["synccontributiontransactions",{"_index":2496,"title":{},"body":{"injectables/ContributionService.html":{}}}],["synccontributiontransactions(vaultid",{"_index":2501,"title":{},"body":{"injectables/ContributionService.html":{}}}],["synchronize",{"_index":928,"title":{},"body":{"modules/AppModule.html":{}}}],["syncs",{"_index":2503,"title":{},"body":{"injectables/ContributionService.html":{}}}],["system",{"_index":2794,"title":{},"body":{"injectables/DistributionService.html":{}}}],["t",{"_index":769,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["table",{"_index":39,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["tag",{"_index":3072,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/TagDto.html":{}}}],["tag_id",{"_index":84,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"entities/TagEntity.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["tagdata",{"_index":3071,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["tagdata.name",{"_index":3074,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["tagdto",{"_index":3903,"title":{"classes/TagDto.html":{}},"body":{"classes/TagDto.html":{}}}],["tagentity",{"_index":2920,"title":{"entities/TagEntity.html":{}},"body":{"injectables/DraftVaultsService.html":{},"entities/TagEntity.html":{},"classes/VaultShortResponse.html":{},"modules/VaultsModule.html":{}}}],["tags",{"_index":619,"title":{},"body":{"classes/AddedTags1741943808652.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["tags\"(\"id",{"_index":85,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["tagsrepository",{"_index":2894,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["take",{"_index":1184,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/TransactionsService.html":{},"index.html":{}}}],["taptools",{"_index":3921,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["taptools.controller",{"_index":3945,"title":{},"body":{"modules/TaptoolsModule.html":{}}}],["taptools.service",{"_index":3930,"title":{},"body":{"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{}}}],["taptools/taptools.service",{"_index":3368,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["taptoolsapikey",{"_index":3949,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["taptoolscontroller",{"_index":3919,"title":{"controllers/TaptoolsController.html":{}},"body":{"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{}}}],["taptoolsmodule",{"_index":3278,"title":{"modules/TaptoolsModule.html":{}},"body":{"modules/JwtGlobalModule.html":{},"modules/TaptoolsModule.html":{},"modules.html":{},"overview.html":{}}}],["taptoolsservice",{"_index":3339,"title":{"injectables/TaptoolsService.html":{}},"body":{"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"overview.html":{}}}],["targetprice",{"_index":2636,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["termination",{"_index":2773,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["termination_type",{"_index":2695,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["terminationtype",{"_index":4638,"title":{},"body":{"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["test",{"_index":4131,"title":{},"body":{"injectables/TaptoolsService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":5121,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":5119,"title":{},"body":{"index.html":{}}}],["testing",{"_index":3628,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["testnet",{"_index":2607,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{}}}],["testnet)'})@isnumber",{"_index":2591,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["tests",{"_index":5117,"title":{},"body":{"index.html":{}}}],["text",{"_index":61,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"entities/Claim.html":{}}}],["text/csv",{"_index":1429,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{}}}],["thanks",{"_index":5187,"title":{},"body":{"index.html":{}}}],["there's",{"_index":4115,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.acquirerwhitelistrepository.create",{"_index":3096,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.acquirerwhitelistrepository.remove(existingvault.acquirer_whitelist",{"_index":2968,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.acquirerwhitelistrepository.save(investoritems",{"_index":3097,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.acquireservice.acquire(vaultid",{"_index":213,"title":{},"body":{"controllers/AcquireController.html":{}}}],["this.acquireservice.updatetransactionhash(txid",{"_index":216,"title":{},"body":{"controllers/AcquireController.html":{}}}],["this.adaanvilapiurl}/submit",{"_index":4923,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.added_at",{"_index":1008,"title":{},"body":{"entities/Asset.html":{}}}],["this.adminhash",{"_index":2064,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.adminkeyhash",{"_index":3646,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.adminskey",{"_index":2066,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.anvilapi",{"_index":1876,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.anvilapikey",{"_index":1878,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.anvilapiservice.submittransaction(params",{"_index":2184,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.anvilapi}/transactions/submit",{"_index":1891,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.apikey",{"_index":788,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["this.appservice.apiversion",{"_index":866,"title":{},"body":{"controllers/AppController.html":{}}}],["this.assetrepository.create",{"_index":355,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["this.assetrepository.findby",{"_index":4291,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.assetrepository.findone",{"_index":4293,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.assetrepository.save(asset",{"_index":369,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["this.assetsrepository.create",{"_index":1172,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsrepository.find",{"_index":1206,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/LifecycleService.html":{}}}],["this.assetsrepository.findandcount",{"_index":1181,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsrepository.findone",{"_index":1189,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsrepository.query(query",{"_index":3532,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.assetsrepository.save(asset",{"_index":1176,"title":{},"body":{"injectables/AssetsService.html":{}}}],["this.assetsservice.getacquiredassets(userid",{"_index":1116,"title":{},"body":{"controllers/AssetsController.html":{}}}],["this.assetsservice.getvaultassets(userid",{"_index":1111,"title":{},"body":{"controllers/AssetsController.html":{}}}],["this.assetswhitelistrepository.remove(existingvault.assets_whitelist",{"_index":2966,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.assetswhitelistrepository.save",{"_index":3081,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.authservice.verifysignature(signaturedata",{"_index":1247,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.awsservice.getcsv(id",{"_index":1426,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.awsservice.getimage(id",{"_index":1416,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.awsservice.uploadcsv(file",{"_index":1436,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.awsservice.uploadimage(file",{"_index":1413,"title":{},"body":{"controllers/AwsController.html":{},"injectables/UsersService.html":{}}}],["this.baseurl",{"_index":786,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["this.blockchainscanner.checkmonitoringaddress(vault.contract_address",{"_index":2154,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.blockchainscanner.getaddresstransactions(vault.contract_address",{"_index":2512,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.blockchainscanner.gettransactiondetails(vault.publication_hash",{"_index":2075,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.blockchainservice.buildtransaction(input",{"_index":2133,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.blockchainservice.buildtransaction(transactioninput",{"_index":2433,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.blockchainservice.buildtransaction(txinput",{"_index":3698,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.blockchainservice.submittransaction",{"_index":2145,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.blockfrost",{"_index":2068,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.blockfrost.txsutxos(tx_hash",{"_index":3679,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.cache.get(cachekey",{"_index":3996,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.cache.set(cachekey",{"_index":4005,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.callanvilapi",{"_index":791,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["this.checkpool",{"_index":4900,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.claimrepository.create",{"_index":2412,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimrepository.find",{"_index":2408,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimrepository.findone",{"_index":2414,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimrepository.save(claim",{"_index":2413,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.claimsservice.buildclaimtransaction(id",{"_index":2323,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["this.claimsservice.getuserclaims(userid",{"_index":2320,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["this.claimsservice.processconfirmedtransaction(body.txhash",{"_index":2329,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["this.claimsservice.submitsignedtransaction(transactionid",{"_index":2326,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["this.configservice.get('admin_key_hash",{"_index":2065,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('admin_s_key",{"_index":2067,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('anvil_api_key",{"_index":789,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.configservice.get('anvil_api_url",{"_index":787,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.configservice.get('blockfrost_api_key",{"_index":4933,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.configservice.get('blockfrost_testnet_api_key",{"_index":2070,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('blockfrost_webhook_auth_token",{"_index":4961,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":1271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.configservice.get('sc_policy_id",{"_index":3651,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.configservice.get('scanner_key",{"_index":1813,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.configservice.get('scanner_url",{"_index":1811,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.configservice.get('vyfi_api_key",{"_index":4917,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.contributionservice.contribute(vaultid",{"_index":2486,"title":{},"body":{"controllers/ContributionController.html":{}}}],["this.contributionservice.synccontributiontransactions(vault.id",{"_index":3385,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.contributorwhitelistrepository.create",{"_index":3102,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.contributorwhitelistrepository.remove(existingvault.contributor_whitelist",{"_index":2970,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.contributorwhitelistrepository.save(contributoritems",{"_index":3104,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.created_at",{"_index":454,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["this.distributionservice.calculateacquirerexample",{"_index":3452,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.distributionservice.calculatecontributorexample",{"_index":3458,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.draftvaultsservice.getdraftvaultbyid(id",{"_index":4770,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.draftvaultsservice.getmydraftvaults(userid",{"_index":4767,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.draftvaultsservice.savedraftvault(userid",{"_index":4759,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.executeacquiretogovernancetransition(vault",{"_index":3543,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.executecontributiontoacquiretransition(vault",{"_index":3512,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.executephasetransition(vault.id",{"_index":3416,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.extracttokenfromheader(request",{"_index":1267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.filerepository.create",{"_index":1580,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.filerepository.save(newfile",{"_index":1588,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.filesrepository.create",{"_index":4506,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.filesrepository.findone",{"_index":2974,"title":{},"body":{"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["this.filesrepository.save(fileentity",{"_index":4510,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findbyid(id",{"_index":4298,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.formatmetadatatext(tokena",{"_index":4907,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.generatemocktransactionhash",{"_index":3713,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.getadaprice",{"_index":4011,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getassetsgroupedbyuser(vault.id",{"_index":3421,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.getassetvalue(asset.policyid",{"_index":4138,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getdraftvaultbyid(vault.id",{"_index":3105,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.getmainnetwalletsummary(walletaddress",{"_index":4014,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getpresignedurl(this.bucketname",{"_index":1528,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.gets3",{"_index":1512,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.gettestnetwalletsummary(walletaddress",{"_index":4013,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.getutxos(address.from_bech32(customer_address",{"_index":4908,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.governanceservice.createproposal(vaultid",{"_index":3236,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.governanceservice.getproposal(proposalid",{"_index":3246,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.governanceservice.getproposals(vaultid",{"_index":3239,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.governanceservice.vote(proposalid",{"_index":3243,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["this.handlecontributiontoinvestment",{"_index":3373,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.handleinvestmenttogovernance",{"_index":3374,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.handlepublishedtocontribution",{"_index":3371,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.httpservice.get(`https://cardano",{"_index":4935,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.httpservice.get(presignedurl",{"_index":1530,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.httpservice.post",{"_index":1890,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{}}}],["this.httpservice.post(`${this.adaanvilapiurl}/build",{"_index":4919,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.isretryableerror(err",{"_index":1844,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.istestnetaddress(walletaddress",{"_index":4012,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.isvalidaddress(walletaddress",{"_index":3652,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.jwtservice.signasync(jwtpayload",{"_index":1354,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":1269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.linksrepository.create",{"_index":3065,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.linksrepository.remove(existingvault.social_links",{"_index":2964,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.linksrepository.remove(user.social_links",{"_index":4494,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.linksrepository.save",{"_index":4496,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.linksrepository.save(links",{"_index":3068,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.logger.debug",{"_index":3454,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.debug('computed",{"_index":4992,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.debug('parsed",{"_index":4977,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.debug('raw",{"_index":3810,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["this.logger.debug(`user",{"_index":3438,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.error",{"_index":2157,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.error('blockfrost",{"_index":4968,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('blockfrost_webhook_auth_token",{"_index":4966,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('error",{"_index":1592,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('failed",{"_index":4567,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.logger.error('signature",{"_index":5007,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error('webhook",{"_index":5000,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.error(`error",{"_index":372,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/LifecycleService.html":{}}}],["this.logger.error(`failed",{"_index":1846,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{}}}],["this.logger.error(`scanner",{"_index":1819,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.logger.error(`vault",{"_index":3320,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{}}}],["this.logger.log",{"_index":3325,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{}}}],["this.logger.log('applying",{"_index":3671,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log('csv",{"_index":1434,"title":{},"body":{"controllers/AwsController.html":{}}}],["this.logger.log('drfat",{"_index":4758,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.logger.log('error",{"_index":4057,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.logger.log('transaction",{"_index":2434,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.logger.log('user",{"_index":4464,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.log('webhook",{"_index":5005,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.logger.log(`address",{"_index":1836,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.logger.log(`building",{"_index":2419,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.logger.log(`burning",{"_index":3709,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`claim",{"_index":2445,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.logger.log(`created",{"_index":2550,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{}}}],["this.logger.log(`dropping",{"_index":3714,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`extracted",{"_index":3670,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`extracting",{"_index":3656,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`getting",{"_index":3665,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(`processing",{"_index":3309,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["this.logger.log(`run",{"_index":2209,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`scanner",{"_index":1814,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.logger.log(`submitting",{"_index":2143,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`successfully",{"_index":1845,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`transaction",{"_index":1896,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["this.logger.log(`updated",{"_index":2526,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.logger.log(`updating",{"_index":2146,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.log(`vault",{"_index":3460,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.log(json.stringify(output_amount[1].unit",{"_index":3668,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.logger.log(json.stringify(output_amount[output_amount.length",{"_index":2076,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.logger.warn",{"_index":3463,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.logger.warn(`no",{"_index":2444,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.logger.warn(`unknown",{"_index":3317,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["this.logger.warn(`vault",{"_index":2151,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.lptokensservice.extractlptokens(extractdto",{"_index":3598,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["this.makepostrequest(`/monitoring/addresses",{"_index":1822,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest",{"_index":1849,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/addresses/${address}/balance",{"_index":1848,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/addresses/${address}/utxos",{"_index":1853,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/contracts/${contractaddress}/state",{"_index":1854,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/tokens/${policyid}/${assetname",{"_index":1855,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/blockchain/transactions/${txhash",{"_index":1852,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.makerequest(`/monitoring/addresses/${vaultaddress",{"_index":1835,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.maxeventage",{"_index":4962,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.poolowner",{"_index":4883,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.poolowner.base_address_preprod",{"_index":4905,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.queuephasetransition(vault.id",{"_index":3391,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.registertrackingaddress(vaultaddress",{"_index":1841,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.round6(adasent",{"_index":2865,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lp_percent",{"_index":2867,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lpada",{"_index":2853,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lpvt",{"_index":2851,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(lpvtinitialshare",{"_index":2877,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(netada",{"_index":2834,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(percentoftotalvtnetoflp",{"_index":2871,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatelpada(valuecontributed",{"_index":2846,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatetotalvalueretained(0",{"_index":2857,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatevtprice(totalacquiredvalueada",{"_index":2866,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(this.calculatevtprice(valuecontributed",{"_index":2845,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(totalvalueinadaretained",{"_index":2880,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(vt_supply",{"_index":2848,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(vtreceived",{"_index":2873,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.round6(vtretained",{"_index":2855,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.s3",{"_index":1500,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.scaddress",{"_index":4540,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.scannerkey",{"_index":1812,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.scannerurl",{"_index":1810,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.scannerurl}${endpoint",{"_index":1815,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["this.scpolicyid",{"_index":3650,"title":{},"body":{"injectables/LpTokensService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["this.tagsrepository.findone",{"_index":3073,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.tagsrepository.save",{"_index":3075,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.taptoolsapikey",{"_index":3990,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["this.taptoolsservice.calculatevaultassetsvalue(vault.id",{"_index":3406,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.taptoolsservice.calculatevaultassetsvalue(vaultid",{"_index":3940,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["this.taptoolsservice.getassetvalue(asset.policy_id",{"_index":3440,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.taptoolsservice.getwalletsummary(address",{"_index":3935,"title":{},"body":{"controllers/TaptoolsController.html":{}}}],["this.transactionrepository.find",{"_index":2527,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["this.transactionrepository.findone",{"_index":2436,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["this.transactionrepository.findoneorfail",{"_index":2547,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.transactionrepository.save",{"_index":2428,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/TransactionsService.html":{}}}],["this.transactionrepository.save(internaltx",{"_index":2440,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["this.transactionrepository.save(transaction",{"_index":4296,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionservice.buildtransaction(params",{"_index":1677,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.handleblockchainevent(event",{"_index":1723,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.handleburnvault(userid",{"_index":1679,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.handlescannerevent(event",{"_index":1690,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionservice.submittransaction(params",{"_index":1685,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.transactionsservice.createtransaction",{"_index":343,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{}}}],["this.transactionsservice.findbyid(transaction.id",{"_index":350,"title":{},"body":{"injectables/AcquireService.html":{}}}],["this.transactionsservice.findbyid(transactionid",{"_index":380,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["this.transactionsservice.getacquiretransactions(vaultid",{"_index":220,"title":{},"body":{"controllers/AcquireController.html":{}}}],["this.transactionsservice.getcontributiontransactions(vaultid",{"_index":2488,"title":{},"body":{"controllers/ContributionController.html":{}}}],["this.transactionsservice.getlastvaultupdate(vaultid",{"_index":3660,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.transactionsservice.gettransaction(submitresponse.txhash",{"_index":3706,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.transactionsservice.gettransaction(txhash",{"_index":4241,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.gettransactionsbyreceiver(address",{"_index":4238,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.gettransactionsbysender(address",{"_index":4236,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.getvaulttransactions(id",{"_index":4777,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.transactionsservice.updatetransactionhash(signedtx.txid",{"_index":2148,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.transactionsservice.updatetransactionhash(transaction.id",{"_index":3704,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["this.transactionsservice.updatetransactionhash(transactionid",{"_index":382,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["this.transactionsservice.updatetransactionstatus(tx.hash",{"_index":2183,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.transactionsservice.updatetransactionstatus(tx.tx_hash",{"_index":2525,"title":{},"body":{"injectables/ContributionService.html":{}}}],["this.transactionsservice.validatetransactionexists(params.txid",{"_index":2072,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.updated_at",{"_index":457,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["this.updatevaultstatus(job.data",{"_index":3316,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["this.uploads3(file.buffer",{"_index":1572,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.userrepository.findone",{"_index":304,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{}}}],["this.usersrepository.create(userdata",{"_index":4476,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":2530,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":4477,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update",{"_index":4505,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":1337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyaddress(stakeaddress",{"_index":1336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getprofile(userid",{"_index":4419,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getpublicprofile(userid",{"_index":4422,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateprofile(userid",{"_index":4425,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuseraddress(user.id",{"_index":1341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.uploadbannerimage(userid",{"_index":4432,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.uploadprofileimage(userid",{"_index":4429,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validatecsvaddresses(file.buffer",{"_index":1570,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.vaultcontractservice.createburntx",{"_index":3496,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.vaultcontractservice.submitonchainvaulttx",{"_index":3504,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.vaultmanagingservice.updatevaultmetadatatx(params",{"_index":1682,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.vaultrepository",{"_index":3472,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["this.vaultrepository.findone",{"_index":300,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["this.vaultrepository.save(vault",{"_index":3324,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{}}}],["this.vaultsrepository.findandcount(query",{"_index":2938,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsrepository.findone",{"_index":1156,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["this.vaultsrepository.findonebyorfail",{"_index":2838,"title":{},"body":{"injectables/DistributionService.html":{}}}],["this.vaultsrepository.save",{"_index":3059,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsrepository.save(vault",{"_index":3077,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsrepository.save(vaultdata",{"_index":3060,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["this.vaultsservice.burnvaultattempt(id",{"_index":4780,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.burnvaultpublishtx(id",{"_index":4782,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.createvault(userid",{"_index":4752,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.getmyvaults(userid",{"_index":4761,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.getvaultbyid(id",{"_index":4772,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.getvaults(userid",{"_index":4774,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vaultsservice.publishvault(userid",{"_index":4755,"title":{},"body":{"controllers/VaultsController.html":{}}}],["this.vyfiapiurl}/lp",{"_index":4884,"title":{},"body":{"injectables/VyfiService.html":{}}}],["this.vyfiservice.checkpool",{"_index":4832,"title":{},"body":{"controllers/VyfiController.html":{}}}],["this.vyfiservice.createliquiditypool(createpooldto",{"_index":4834,"title":{},"body":{"controllers/VyfiController.html":{}}}],["this.vyfiservice.getpoolinfo(poolid",{"_index":4837,"title":{},"body":{"controllers/VyfiController.html":{}}}],["this.webhookauthtoken",{"_index":4960,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["this.webhookverificationservice.verifysignature(rawbody",{"_index":1720,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["this.withretry",{"_index":1840,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["threshold",{"_index":3412,"title":{},"body":{"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["throw",{"_index":305,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["throws",{"_index":2409,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["ticker",{"_index":1047,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["time",{"_index":66,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/UpdateFieldsType1741946649594.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"index.html":{}}}],["time_elapsed_is_equal_to_time",{"_index":2251,"title":{},"body":{"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["timediff",{"_index":4997,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["timeelapsedisequaltotime",{"_index":4663,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["timeout",{"_index":4019,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["timeremaining",{"_index":4614,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["timers/promises",{"_index":1799,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["timestamp",{"_index":65,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/GovernanceService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["timestampheader",{"_index":4972,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["timestampheader.split('=')[1",{"_index":4975,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["timestamptz",{"_index":429,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["timestamp}.${payload",{"_index":4984,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["title",{"_index":2611,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["to'})@isstring()@isnotempty()@expose",{"_index":3139,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["to_address",{"_index":2089,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["to_bech32",{"_index":2090,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["todo",{"_index":1430,"title":{},"body":{"controllers/AwsController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"injectables/WebhookVerificationService.html":{}}}],["tohex",{"_index":4528,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["tohex('bar",{"_index":4562,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tohex('foo",{"_index":4561,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tohex('vaultid",{"_index":4563,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tohex(str",{"_index":761,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["tohex(vaultconfig.vaultid",{"_index":4564,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["token",{"_index":1266,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/CreatePoolDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{}}}],["token'})@isnumber",{"_index":4156,"title":{},"body":{"classes/TokenInfo.html":{}}}],["token'})@isstring",{"_index":4158,"title":{},"body":{"classes/TokenInfo.html":{}}}],["token.interface.ts",{"_index":2220,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["token.interface.ts:11",{"_index":3569,"title":{},"body":{"classes/LpTokenOperationResult.html":{}}}],["token.interface.ts:18",{"_index":3570,"title":{},"body":{"classes/LpTokenOperationResult.html":{}}}],["token.interface.ts:25",{"_index":3568,"title":{},"body":{"classes/LpTokenOperationResult.html":{}}}],["token.types",{"_index":3645,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["token.types.ts",{"_index":3142,"title":{},"body":{"interfaces/ExtractLpTokensParams-1.html":{}}}],["token_decimals",{"_index":2770,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["token_id",{"_index":2240,"title":{},"body":{"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["token_policy",{"_index":2771,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["token_supply",{"_index":2769,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tokena",{"_index":2588,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["tokena.amount",{"_index":4913,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.assetname",{"_index":4912,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.policyid",{"_index":4891,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.policyid.substring(0",{"_index":4892,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokena.policyid}${tokena.assetname",{"_index":4901,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenaunit",{"_index":4806,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["tokenb",{"_index":2589,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["tokenb.amount",{"_index":4915,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.assetname",{"_index":4914,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.policyid",{"_index":4895,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.policyid.substring(0",{"_index":4896,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenb.policyid}${tokenb.assetname",{"_index":4902,"title":{},"body":{"injectables/VyfiService.html":{}}}],["tokenbunit",{"_index":4807,"title":{},"body":{"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["tokenid",{"_index":1038,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/CreateAssetDto.html":{},"injectables/TaptoolsService.html":{}}}],["tokeninfo",{"_index":2598,"title":{"classes/TokenInfo.html":{}},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{}}}],["tokens",{"_index":2210,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"classes/WalletSummaryDto.html":{}}}],["tokens.controller",{"_index":3605,"title":{},"body":{"modules/LpTokensModule.html":{}}}],["tokens.controller.ts",{"_index":3572,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["tokens.controller.ts:32",{"_index":3583,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["tokens.dto",{"_index":3587,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["tokens.dto.ts",{"_index":3129,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:10",{"_index":3138,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:16",{"_index":3140,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:22",{"_index":3132,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:31",{"_index":3134,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.dto.ts:41",{"_index":3136,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens.module",{"_index":900,"title":{},"body":{"modules/AppModule.html":{}}}],["tokens.module.ts",{"_index":3604,"title":{},"body":{"modules/LpTokensModule.html":{}}}],["tokens.service",{"_index":3590,"title":{},"body":{"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["tokens.service.ts",{"_index":3608,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:299",{"_index":3618,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:31",{"_index":3634,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:32",{"_index":3637,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:33",{"_index":3633,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:34",{"_index":3616,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:341",{"_index":3622,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:372",{"_index":3630,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:388",{"_index":3626,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:56",{"_index":3636,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens.service.ts:75",{"_index":3625,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens/dto/extract",{"_index":3128,"title":{},"body":{"classes/ExtractLpTokensDto.html":{}}}],["tokens/interfaces/lp",{"_index":2219,"title":{},"body":{"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{}}}],["tokens/lp",{"_index":899,"title":{},"body":{"modules/AppModule.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{}}}],["tokens/services/lp",{"_index":3607,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tokens/types/lp",{"_index":3141,"title":{},"body":{"interfaces/ExtractLpTokensParams-1.html":{}}}],["tokens_for_acquires",{"_index":2688,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["tokensforacquires",{"_index":4669,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["tolerance",{"_index":4994,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["topreloadedscript",{"_index":2054,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/functions.html":{}}}],["topreloadedscript(__namedparameters",{"_index":5088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["topreloadedscript(blueprint",{"_index":2130,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["topromise",{"_index":1533,"title":{},"body":{"injectables/AwsService.html":{}}}],["tostring('hex",{"_index":1310,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1180,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"classes/PaginatedResponseDto.html":{},"classes/SocialLinkDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/UpdateProfileDto.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{}}}],["total_acquired_value_ada",{"_index":510,"title":{},"body":{"classes/AddTotalAcquiredValueInAda1750670509513.html":{}}}],["total_assets",{"_index":3517,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["total_assets_cost_ada",{"_index":519,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["total_assets_cost_usd",{"_index":518,"title":{},"body":{"classes/AddTotalAssetsCost1747665618438.html":{}}}],["total_required_ada",{"_index":4876,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["total_vaults",{"_index":2648,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["totalacquiredada",{"_index":3424,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["totalacquiredvalueada",{"_index":2860,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["totalada",{"_index":4023,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalada.tofixed(4",{"_index":4043,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totaladavalue",{"_index":4134,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalassets",{"_index":4047,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["totalassetvalueada",{"_index":4141,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalassetvalueusd",{"_index":4142,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalcontributedvalueada",{"_index":3425,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["totalpages",{"_index":1187,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"classes/PaginatedResponseDto.html":{}}}],["totalrequiredada",{"_index":4932,"title":{},"body":{"injectables/VyfiService.html":{}}}],["totalretainedvalue",{"_index":2856,"title":{},"body":{"injectables/DistributionService.html":{}}}],["totalsupply",{"_index":1614,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["totaltvl",{"_index":2836,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["totalusd",{"_index":4025,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalusd.tofixed(4",{"_index":4045,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalvalueada",{"_index":4042,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["totalvalueada.tofixed(6",{"_index":4148,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalvalueinadaretained",{"_index":2878,"title":{},"body":{"injectables/DistributionService.html":{}}}],["totalvalueusd",{"_index":4044,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/WalletSummaryDto.html":{}}}],["totalvalueusd.tofixed(2",{"_index":4149,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["totalvaults",{"_index":1358,"title":{},"body":{"injectables/AuthService.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{}}}],["totalvaults'})@column({type",{"_index":4373,"title":{},"body":{"entities/User.html":{}}}],["touch",{"_index":5192,"title":{},"body":{"index.html":{}}}],["track",{"_index":3500,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["traits",{"_index":1033,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["transaction",{"_index":171,"title":{"entities/Transaction.html":{}},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LifecycleService.html":{},"classes/LpTokenOperationResult.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{}}}],["transaction'})@apiresponse({status",{"_index":1625,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transaction'})@isstring()@expose",{"_index":1918,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["transaction'})@manytoone(undefined",{"_index":982,"title":{},"body":{"entities/Asset.html":{}}}],["transaction'})@primarygeneratedcolumn('uuid",{"_index":4168,"title":{},"body":{"entities/Transaction.html":{}}}],["transaction.entity",{"_index":990,"title":{},"body":{"entities/Asset.html":{}}}],["transaction.id",{"_index":374,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{}}}],["transaction.id)@joincolumn({name",{"_index":983,"title":{},"body":{"entities/Asset.html":{}}}],["transaction.status",{"_index":4295,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transaction.tx_hash",{"_index":4299,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transaction.vault_id",{"_index":2073,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["transaction_id",{"_index":644,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{}}}],["transaction_index",{"_index":2756,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["transactionbuildresponse",{"_index":777,"title":{"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{}},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionbuildresponsedto",{"_index":1663,"title":{"classes/TransactionBuildResponseDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["transactionbuildresponsedto})@useguards(authguard",{"_index":1627,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transactionhash",{"_index":674,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{}}}],["transactionid",{"_index":283,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{}}}],["transactioninput",{"_index":672,"title":{},"body":{"interfaces/Amount.html":{},"injectables/ClaimsService.html":{}}}],["transactioninput.new(transactionhash.from_hex(tx_hash",{"_index":728,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transactionmodelfix.ts",{"_index":4201,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix.ts:32",{"_index":4203,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix.ts:4",{"_index":4202,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix.ts:6",{"_index":4204,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionmodelfix1743089378621",{"_index":4199,"title":{"classes/TransactionModelFix1743089378621.html":{}},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["transactionoutput",{"_index":673,"title":{"classes/TransactionOutput.html":{}},"body":{"interfaces/Amount.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["transactionoutput.new(address",{"_index":729,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transactionrepository",{"_index":2350,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"injectables/TransactionsService.html":{}}}],["transactions",{"_index":112,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"controllers/AcquireController.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["transactions\"(\"id",{"_index":656,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["transactions'})@useguards(authguard)@apiresponse({status",{"_index":153,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["transactions.controller",{"_index":4246,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["transactions.dto",{"_index":4745,"title":{},"body":{"controllers/VaultsController.html":{}}}],["transactions.dto.ts",{"_index":3171,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["transactions.dto.ts:16",{"_index":3174,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["transactions.dto.ts:26",{"_index":3176,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["transactions.length",{"_index":4303,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions.service",{"_index":4232,"title":{},"body":{"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{}}}],["transactions[0",{"_index":4304,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactions_status_enum",{"_index":660,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["transactions_status_enum_old",{"_index":647,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{}}}],["transactions_type_enum",{"_index":118,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["transactions_type_enum_old",{"_index":99,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["transactionscontroller",{"_index":4219,"title":{"controllers/TransactionsController.html":{}},"body":{"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{}}}],["transactionservice",{"_index":1674,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transactionsmodule",{"_index":234,"title":{"modules/TransactionsModule.html":{}},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/LpTokensModule.html":{},"modules/TransactionsModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionsservice",{"_index":191,"title":{"injectables/TransactionsService.html":{}},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{},"overview.html":{}}}],["transactionstatus",{"_index":2050,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{},"miscellaneous/enumerations.html":{}}}],["transactionstatus.confirmed",{"_index":2177,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/GetVaultTransactionsDto.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionstatus.created",{"_index":4288,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactionstatus.failed",{"_index":2178,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionstatus.pending",{"_index":2176,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionstatus.stuck",{"_index":2180,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionsubmitresponse",{"_index":1875,"title":{"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{}},"body":{"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transactionsubmitresponsedto",{"_index":1664,"title":{"classes/TransactionSubmitResponseDto.html":{}},"body":{"controllers/BlockchainController.html":{},"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["transactionsubmitresponsedto})@useguards(authguard",{"_index":1655,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["transactiontype",{"_index":293,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/LpTokensService.html":{},"entities/Transaction.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["transactiontype.acquire",{"_index":344,"title":{},"body":{"injectables/AcquireService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/TransactionsService.html":{}}}],["transactiontype.claim",{"_index":2431,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["transactiontype.contribute",{"_index":2528,"title":{},"body":{"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/TransactionsService.html":{}}}],["transactiontype.extractlp",{"_index":3655,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["transactionunspentoutput",{"_index":675,"title":{},"body":{"interfaces/Amount.html":{}}}],["transactionunspentoutput.new",{"_index":727,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transactionunspentoutputs",{"_index":676,"title":{},"body":{"interfaces/Amount.html":{}}}],["transactionunspentoutputs.new",{"_index":721,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["transfer",{"_index":2191,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transferdetails",{"_index":2192,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transferdetails.sender",{"_index":2199,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transferdetails.transfers.push",{"_index":2201,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transfers",{"_index":1730,"title":{},"body":{"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["transform",{"_index":2451,"title":{},"body":{"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"injectables/UsersService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/functions.html":{}}}],["transform(transform",{"_index":3125,"title":{},"body":{"interfaces/DtoRepresentsType.html":{}}}],["transformeditems",{"_index":2939,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformer",{"_index":261,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"injectables/DraftVaultsService.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"entities/FileEntity.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["transformimagetourl",{"_index":1297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["transformimagetourl(selecteduser.banner_image",{"_index":4501,"title":{},"body":{"injectables/UsersService.html":{}}}],["transformimagetourl(selecteduser.profile_image",{"_index":4503,"title":{},"body":{"injectables/UsersService.html":{}}}],["transformimagetourl(user.banner_image",{"_index":1351,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformimagetourl(user.profile_image",{"_index":1349,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformimagetourl(vault.banner_image",{"_index":2950,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformimagetourl(vault.ft_token_img",{"_index":2952,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformimagetourl(vault.vault_image",{"_index":2948,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["transformtosnakecase",{"_index":5225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformtosnakecase(item",{"_index":5244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformtosnakecase(obj[key",{"_index":5249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition",{"_index":3310,"title":{},"body":{"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{}}}],["transitionphase",{"_index":3315,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["transitions",{"_index":3372,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["transitiontime",{"_index":3359,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["transitiontime.gettime",{"_index":3376,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["trim",{"_index":1542,"title":{},"body":{"injectables/AwsService.html":{}}}],["true",{"_index":267,"title":{},"body":{"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"entities/AssetsWhitelistEntity.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/AwsModule.html":{},"injectables/AwsService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"entities/Claim.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DraftVaultsService.html":{},"interfaces/ExtractLpTokensParams.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["true})@dtorepresent({transform",{"_index":4616,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["true})@expose",{"_index":3788,"title":{},"body":{"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/UpdateProfileDto.html":{}}}],["true})@expose({name",{"_index":971,"title":{},"body":{"entities/Asset.html":{}}}],["true})@index",{"_index":4184,"title":{},"body":{"entities/Transaction.html":{}}}],["true})@isnotempty()@isstring()@expose",{"_index":3898,"title":{},"body":{"classes/SubmitVaultTxDto.html":{}}}],["true})@isoptional()@expose",{"_index":1993,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["true})@isoptional()@isboolean",{"_index":2604,"title":{},"body":{"classes/CreatePoolDto.html":{}}}],["true})@isstring()@isnotempty()@expose",{"_index":3895,"title":{},"body":{"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{}}}],["true})@joincolumn({name",{"_index":3553,"title":{},"body":{"entities/LinkEntity.html":{}}}],["true})@type(undefined)@expose",{"_index":257,"title":{},"body":{"classes/AcquireReq.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/TransactionOutput.html":{}}}],["trxnreservefee",{"_index":2863,"title":{},"body":{"injectables/DistributionService.html":{}}}],["try",{"_index":345,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/RawBodyMiddleware.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{}}}],["ts",{"_index":3694,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tuple",{"_index":4565,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["tvl",{"_index":1356,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/PublicProfileRes.html":{},"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{}}}],["tvl'})@column({type",{"_index":4375,"title":{},"body":{"entities/User.html":{}}}],["twitter",{"_index":3876,"title":{},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"index.html":{}}}],["twitter'})@isstring()@expose",{"_index":3870,"title":{},"body":{"classes/SocialLinkDto.html":{}}}],["tx",{"_index":1960,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{}}}],["tx.block",{"_index":2166,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.block_height",{"_index":2167,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.block_time",{"_index":2194,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.fees",{"_index":2195,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.hash",{"_index":2193,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx.tx_hash",{"_index":2521,"title":{},"body":{"injectables/ContributionService.html":{}}}],["tx.valid_contract",{"_index":2169,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["tx/assets/assets.controller.ts",{"_index":1092,"title":{},"body":{"controllers/AssetsController.html":{}}}],["tx/assets/assets.controller.ts:22",{"_index":1099,"title":{},"body":{"controllers/AssetsController.html":{}}}],["tx/assets/assets.controller.ts:34",{"_index":1102,"title":{},"body":{"controllers/AssetsController.html":{}}}],["tx/assets/assets.module",{"_index":905,"title":{},"body":{"modules/AppModule.html":{}}}],["tx/assets/assets.module.ts",{"_index":1120,"title":{},"body":{"modules/AssetsModule.html":{}}}],["tx/assets/assets.service.ts",{"_index":1124,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:109",{"_index":1142,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:14",{"_index":1134,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:144",{"_index":1146,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:169",{"_index":1148,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:194",{"_index":1150,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:221",{"_index":1152,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:24",{"_index":1138,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/assets.service.ts:75",{"_index":1144,"title":{},"body":{"injectables/AssetsService.html":{}}}],["tx/assets/dto/create",{"_index":1011,"title":{},"body":{"classes/AssetMetadataDto.html":{},"classes/CreateAssetDto.html":{}}}],["tx/dto/vault",{"_index":3928,"title":{},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["tx/offchain",{"_index":193,"title":{},"body":{"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"modules/AppModule.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{}}}],["tx/onchain/anvil",{"_index":764,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["tx/onchain/blockchain",{"_index":1749,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/blockchain.controller.ts",{"_index":1616,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:115",{"_index":1644,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:34",{"_index":1628,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:45",{"_index":1633,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:58",{"_index":1662,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:70",{"_index":1656,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.controller.ts:86",{"_index":1650,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["tx/onchain/blockchain.module",{"_index":906,"title":{},"body":{"modules/AppModule.html":{},"modules/ContributionModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/VaultsModule.html":{}}}],["tx/onchain/blockchain.module.ts",{"_index":1743,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["tx/onchain/blockchain.service",{"_index":2336,"title":{},"body":{"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{}}}],["tx/onchain/blockchain.service.ts",{"_index":1856,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"miscellaneous/enumerations.html":{}}}],["tx/onchain/blockchain.service.ts:24",{"_index":1870,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:25",{"_index":1868,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:26",{"_index":1859,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:41",{"_index":1861,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/blockchain.service.ts:75",{"_index":1865,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["tx/onchain/dto/transaction.dto.ts",{"_index":2013,"title":{},"body":{"classes/BuildTransactionDto.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:105",{"_index":3897,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:115",{"_index":3896,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:12",{"_index":3733,"title":{},"body":{"classes/NftAsset.html":{}}}],["tx/onchain/dto/transaction.dto.ts:123",{"_index":3894,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:134",{"_index":3893,"title":{},"body":{"classes/SubmitTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:155",{"_index":4196,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:162",{"_index":4194,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:169",{"_index":4197,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:176",{"_index":4198,"title":{},"body":{"classes/TransactionBuildResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:185",{"_index":4218,"title":{},"body":{"classes/TransactionSubmitResponseDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:20",{"_index":3731,"title":{},"body":{"classes/NftAsset.html":{}}}],["tx/onchain/dto/transaction.dto.ts:28",{"_index":3734,"title":{},"body":{"classes/NftAsset.html":{}}}],["tx/onchain/dto/transaction.dto.ts:37",{"_index":4212,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["tx/onchain/dto/transaction.dto.ts:48",{"_index":4216,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["tx/onchain/dto/transaction.dto.ts:67",{"_index":4214,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["tx/onchain/dto/transaction.dto.ts:77",{"_index":2017,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:85",{"_index":2025,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["tx/onchain/dto/transaction.dto.ts:95",{"_index":2018,"title":{},"body":{"classes/BuildTransactionDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts",{"_index":1898,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:102",{"_index":2012,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:110",{"_index":2011,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:120",{"_index":1979,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:128",{"_index":1969,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:136",{"_index":1971,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:14",{"_index":1967,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["tx/onchain/dto/webhook.dto.ts:144",{"_index":1973,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:152",{"_index":1990,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:160",{"_index":1981,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:170",{"_index":1986,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:178",{"_index":1977,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:186",{"_index":1975,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:194",{"_index":1988,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:202",{"_index":1983,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:210",{"_index":1985,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:218",{"_index":1992,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:22",{"_index":1965,"title":{},"body":{"classes/BlockfrostAmount.html":{}}}],["tx/onchain/dto/webhook.dto.ts:226",{"_index":1994,"title":{},"body":{"classes/BlockfrostTransaction.html":{}}}],["tx/onchain/dto/webhook.dto.ts:238",{"_index":1998,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["tx/onchain/dto/webhook.dto.ts:248",{"_index":1995,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["tx/onchain/dto/webhook.dto.ts:258",{"_index":1996,"title":{},"body":{"classes/BlockfrostTransactionEvent.html":{}}}],["tx/onchain/dto/webhook.dto.ts:268",{"_index":1914,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:276",{"_index":1925,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:284",{"_index":1907,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:292",{"_index":1903,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:300",{"_index":1919,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:310",{"_index":1917,"title":{},"body":{"classes/BlockchainWebhookDto.html":{}}}],["tx/onchain/dto/webhook.dto.ts:32",{"_index":2000,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:42",{"_index":2001,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:50",{"_index":2007,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:58",{"_index":2005,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:66",{"_index":2003,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:74",{"_index":2004,"title":{},"body":{"classes/BlockfrostTxInput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:84",{"_index":2009,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/dto/webhook.dto.ts:94",{"_index":2010,"title":{},"body":{"classes/BlockfrostTxOutput.html":{}}}],["tx/onchain/raw",{"_index":3797,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["tx/onchain/types/transaction",{"_index":5071,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tx/onchain/types/type",{"_index":3639,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/types/type.ts",{"_index":2728,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"miscellaneous/typealiases.html":{}}}],["tx/onchain/types/vault",{"_index":5257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tx/onchain/utils/apply_params",{"_index":3640,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/utils/apply_params.ts",{"_index":5083,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/utils/blueprint.json",{"_index":3641,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/utils/lib",{"_index":3643,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx/onchain/utils/lib.ts",{"_index":664,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/vault",{"_index":2043,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["tx/onchain/webhook",{"_index":4943,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["tx/transactions.controller.ts",{"_index":4220,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.controller.ts:17",{"_index":4228,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.controller.ts:24",{"_index":4226,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.controller.ts:31",{"_index":4231,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["tx/transactions.module",{"_index":242,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/LpTokensModule.html":{},"modules/VaultsModule.html":{}}}],["tx/transactions.module.ts",{"_index":4245,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["tx/transactions.service",{"_index":194,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{}}}],["tx/transactions.service.ts",{"_index":4247,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:101",{"_index":4272,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:108",{"_index":4262,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:114",{"_index":4280,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:12",{"_index":4258,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:125",{"_index":4270,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:131",{"_index":4265,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:144",{"_index":4264,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:157",{"_index":4278,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:182",{"_index":4267,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:22",{"_index":4260,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:37",{"_index":4282,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:74",{"_index":4274,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:81",{"_index":4284,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx/transactions.service.ts:93",{"_index":4276,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["tx_hash",{"_index":59,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"entities/Transaction.html":{},"classes/TransactionModelFix1743089378621.html":{},"injectables/TransactionsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tx_hash_index_with_lps_to_collect",{"_index":3662,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx_hash_index_with_lps_to_collect.split",{"_index":3677,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["tx_index",{"_index":1599,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{}}}],["tx_output_idx",{"_index":741,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["txdata",{"_index":1863,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{}}}],["txdetail",{"_index":2074,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["txevent",{"_index":2188,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["txevent.outputs.map(output",{"_index":1731,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.block_height",{"_index":1727,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.block_time",{"_index":1728,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.hash",{"_index":1725,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txevent.tx.valid_contract",{"_index":1729,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txhash",{"_index":281,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/functions.html":{}}}],["txhash'})@column({nullable",{"_index":4173,"title":{},"body":{"entities/Transaction.html":{}}}],["txhash'})@column({type",{"_index":2266,"title":{},"body":{"entities/Claim.html":{}}}],["txid",{"_index":177,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["txindex",{"_index":3130,"title":{},"body":{"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"injectables/LpTokensService.html":{}}}],["txinput",{"_index":3689,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["txoutputidx",{"_index":733,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/functions.html":{}}}],["txsummary",{"_index":1692,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["txtosubmitonchain",{"_index":2135,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["txtosubmitonchain.sign_and_add_vkey_signature",{"_index":3701,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["txtosubmitonchain.sign_and_add_vkey_signature(privatekey.from_bech32(this.adminskey",{"_index":2137,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["txtosubmitonchain.sign_and_add_vkey_signature(privatekey.from_bech32(this.poolowner.skey",{"_index":4922,"title":{},"body":{"injectables/VyfiService.html":{}}}],["txtosubmitonchain.to_hex",{"_index":2139,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["txupdate",{"_index":168,"title":{},"body":{"controllers/AcquireController.html":{}}}],["txupdate.txhash",{"_index":217,"title":{},"body":{"controllers/AcquireController.html":{}}}],["txupdatereq",{"_index":169,"title":{"classes/TxUpdateReq.html":{}},"body":{"controllers/AcquireController.html":{},"classes/TxUpdateReq.html":{}}}],["txutxos",{"_index":3678,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["txutxos.outputs[index",{"_index":3680,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AcquireReq.html":{},"injectables/AcquireService.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/ApiDocParams.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetValueDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"interfaces/DtoRepresentsType.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"entities/FileEntity.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/TokenInfo.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/UploadImageDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{},"classes/VoteReq.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"classes/WalletSummaryDto.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type\"::\"text\"::\"public\".\"transactions_type_enum",{"_index":115,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["type\"::\"text\"::\"public\".\"transactions_type_enum_old",{"_index":117,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["type\"::\"text\"::\"public\".\"vaults_type_enum",{"_index":4207,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["type\"::\"text\"::\"public\".\"vaults_type_enum_old",{"_index":4209,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["type'})@column({type",{"_index":2268,"title":{},"body":{"entities/Claim.html":{}}}],["type.ts",{"_index":5228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5212,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1545,"title":{},"body":{"injectables/AwsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":35,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"modules/AppModule.html":{},"entities/Asset.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"entities/Claim.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/FileEntity.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":240,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{}}}],["typeormmodule.forfeature",{"_index":4790,"title":{},"body":{"modules/VaultsModule.html":{}}}],["typeormmodule.forfeature([asset",{"_index":1123,"title":{},"body":{"modules/AssetsModule.html":{}}}],["typeormmodule.forfeature([claim",{"_index":2339,"title":{},"body":{"modules/ClaimsModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":1447,"title":{},"body":{"modules/AwsModule.html":{}}}],["typeormmodule.forfeature([transaction",{"_index":3606,"title":{},"body":{"modules/LpTokensModule.html":{},"modules/TransactionsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1281,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([vault",{"_index":249,"title":{},"body":{"modules/AcquireModule.html":{},"modules/BlockchainModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/LifecycleModule.html":{},"modules/TaptoolsModule.html":{}}}],["typeormmodule.forroot",{"_index":917,"title":{},"body":{"modules/AppModule.html":{}}}],["types/asset.types",{"_index":292,"title":{},"body":{"injectables/AcquireService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{}}}],["types/blockchain.types",{"_index":1801,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"injectables/ContributionService.html":{}}}],["types/cbor",{"_index":5029,"title":{},"body":{"dependencies.html":{}}}],["types/claim.types",{"_index":2274,"title":{},"body":{"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"injectables/ClaimsService.html":{},"classes/GetClaimsDto.html":{}}}],["types/lp",{"_index":3644,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["types/transaction",{"_index":1926,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["types/transaction.types",{"_index":294,"title":{},"body":{"injectables/AcquireService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/GetVaultTransactionsDto.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["types/type",{"_index":2052,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["types/vault.types",{"_index":296,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{}}}],["typescript",{"_index":2396,"title":{},"body":{"injectables/ClaimsService.html":{},"index.html":{}}}],["u",{"_index":3529,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["u.address",{"_index":3514,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["u.id",{"_index":3513,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["uint8arr",{"_index":5234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uint8arr.length",{"_index":5237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uint8array(arraybuffer",{"_index":5235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":3582,"title":{},"body":{"controllers/LpTokensController.html":{}}}],["unauthorizedexception",{"_index":1262,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/BlockchainController.html":{}}}],["unauthorizedexception('invalid",{"_index":1722,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["unclaimed",{"_index":2405,"title":{},"body":{"injectables/ClaimsService.html":{},"classes/GetClaimsDto.html":{}}}],["undefined",{"_index":254,"title":{},"body":{"classes/AcquireReq.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"classes/AssetMetadataDto.html":{},"injectables/AssetsService.html":{},"guards/AuthGuard.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"controllers/ClaimsController.html":{},"classes/ContributeReq.html":{},"injectables/DraftVaultsService.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"controllers/LpTokensController.html":{},"classes/PublicProfileRes.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{}}}],["undefined})@expose()@isoptional()@transform",{"_index":2467,"title":{},"body":{"classes/ContributionAsset.html":{}}}],["undefined})@isarray()@isstring({each",{"_index":2623,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["undefined})@isarray()@validatenested({each",{"_index":1916,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{}}}],["undefined})@isenum(proposaltype",{"_index":2628,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["undefined})@isoptional",{"_index":2620,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["undefined})@isoptional()@expose",{"_index":1982,"title":{},"body":{"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":4213,"title":{},"body":{"classes/TransactionOutput.html":{}}}],["undefined})@isoptional()@isenum(transactionstatus)@expose",{"_index":3173,"title":{},"body":{"classes/GetVaultTransactionsDto.html":{}}}],["undefined})@type(undefined",{"_index":3736,"title":{},"body":{"classes/OnchainMetadata.html":{}}}],["understand",{"_index":2098,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["unique",{"_index":503,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedTags1741943808652.html":{},"injectables/AuthService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"dependencies.html":{}}}],["unit",{"_index":665,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"controllers/BlockchainController.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"index.html":{}}}],["unix",{"_index":1904,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["unknown",{"_index":158,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"controllers/LpTokensController.html":{},"injectables/RawBodyMiddleware.html":{},"controllers/TaptoolsController.html":{},"interfaces/TransactionBuildResponse.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"injectables/VaultManagingService.html":{},"controllers/VaultsController.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":5211,"title":{},"body":{"properties.html":{}}}],["unparameterizedscript",{"_index":2091,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["up",{"_index":17,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["up(queryrunner",{"_index":32,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["update",{"_index":82,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"controllers/AcquireController.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"miscellaneous/enumerations.html":{}}}],["update(signaturepayload",{"_index":4989,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["updateassetvaluation",{"_index":1130,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updateassetvaluation(userid",{"_index":1149,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updateclaimtxhash",{"_index":2346,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["updateclaimtxhash(claimid",{"_index":2382,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["updated",{"_index":174,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleProcessor.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updated_at",{"_index":69,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"entities/User.html":{},"controllers/VaultsController.html":{},"miscellaneous/enumerations.html":{}}}],["updatedat",{"_index":451,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"classes/ClaimResponseDto.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"classes/GetVaultsDto.html":{},"entities/LinkEntity.html":{},"classes/PublicProfileRes.html":{},"entities/User.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["updatedat'})@column({name",{"_index":986,"title":{},"body":{"entities/Asset.html":{},"entities/FileEntity.html":{}}}],["updatedat'})@column({type",{"_index":434,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["updatedata",{"_index":4400,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedata.bannerimage",{"_index":4488,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.bannerimage.split('image/')[1",{"_index":4489,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.description",{"_index":4482,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.name",{"_index":4481,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.profileimage",{"_index":4483,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.profileimage.split('image/')[1",{"_index":4485,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.sociallinks",{"_index":4491,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedata.sociallinks.map(linkdata",{"_index":4495,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedate",{"_index":456,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"entities/User.html":{}}}],["updateerror",{"_index":2156,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updateerror.message",{"_index":2161,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updateerror.stack",{"_index":2158,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["updatefieldstype.ts",{"_index":4310,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype.ts:21",{"_index":4312,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype.ts:4",{"_index":4311,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype.ts:6",{"_index":4313,"title":{},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updatefieldstype1741946649594",{"_index":4308,"title":{"classes/UpdateFieldsType1741946649594.html":{}},"body":{"classes/UpdateFieldsType1741946649594.html":{}}}],["updateprofile",{"_index":4388,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateprofile(@request",{"_index":4424,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateprofile(req",{"_index":4399,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateprofile(userid",{"_index":4453,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateprofiledto",{"_index":3878,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/SocialLinkDto.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updaterelationto.ts",{"_index":4325,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto.ts:21",{"_index":4327,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto.ts:4",{"_index":4326,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto.ts:6",{"_index":4328,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updaterelationto1742209228422",{"_index":4323,"title":{"classes/UpdateRelationto1742209228422.html":{}},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["updates",{"_index":2384,"title":{},"body":{"injectables/ClaimsService.html":{},"index.html":{}}}],["updatetimestamp",{"_index":1009,"title":{},"body":{"entities/Asset.html":{}}}],["updatetransactionassets",{"_index":1131,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updatetransactionassets(transactionid",{"_index":1151,"title":{},"body":{"injectables/AssetsService.html":{}}}],["updatetransactionhash",{"_index":149,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/TransactionsService.html":{}}}],["updatetransactionhash(@param('txid",{"_index":215,"title":{},"body":{"controllers/AcquireController.html":{}}}],["updatetransactionhash(id",{"_index":4279,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetransactionhash(transactionid",{"_index":280,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["updatetransactionhash(txid",{"_index":167,"title":{},"body":{"controllers/AcquireController.html":{}}}],["updatetransactionstatus",{"_index":4256,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetransactionstatus(txhash",{"_index":4281,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetype.ts",{"_index":4334,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype.ts:17",{"_index":4336,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype.ts:4",{"_index":4335,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype.ts:6",{"_index":4337,"title":{},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetype1742819100112",{"_index":4332,"title":{"classes/UpdateType1742819100112.html":{}},"body":{"classes/UpdateType1742819100112.html":{}}}],["updatetypes.ts",{"_index":4340,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes.ts:21",{"_index":4342,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes.ts:4",{"_index":4341,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes.ts:6",{"_index":4343,"title":{},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updatetypes1746532933340",{"_index":4338,"title":{"classes/UpdateTypes1746532933340.html":{}},"body":{"classes/UpdateTypes1746532933340.html":{}}}],["updateuseraddress",{"_index":4442,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuseraddress(userid",{"_index":4455,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatevault",{"_index":5074,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updatevaultmetadata",{"_index":1621,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["updatevaultmetadata(@body",{"_index":1681,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["updatevaultmetadata(params",{"_index":1657,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["updatevaultmetadatatx",{"_index":4599,"title":{},"body":{"injectables/VaultManagingService.html":{}}}],["updatevaultmetadatatx(vaultconfig",{"_index":4572,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["updatevaultstatus",{"_index":3297,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["updatevaultstatus(data",{"_index":3302,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["updating",{"_index":2152,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["upload",{"_index":1384,"title":{},"body":{"controllers/AwsController.html":{},"injectables/AwsService.html":{},"classes/UploadImageDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["uploadbannerimage",{"_index":4389,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["uploadbannerimage(req",{"_index":4403,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadbannerimage(userid",{"_index":4457,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadcsv",{"_index":1463,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadcsv(file",{"_index":1480,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadedfile",{"_index":1394,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["uploadfile",{"_index":1368,"title":{},"body":{"controllers/AwsController.html":{}}}],["uploadfile(file",{"_index":1387,"title":{},"body":{"controllers/AwsController.html":{}}}],["uploadimage",{"_index":1464,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadimage(file",{"_index":1482,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadimagedto",{"_index":4344,"title":{"classes/UploadImageDto.html":{}},"body":{"classes/UploadImageDto.html":{}}}],["uploading",{"_index":1569,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploadprofileimage",{"_index":4390,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["uploadprofileimage(req",{"_index":4407,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadprofileimage(userid",{"_index":4459,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadresult",{"_index":1571,"title":{},"body":{"injectables/AwsService.html":{},"injectables/UsersService.html":{}}}],["uploadresult.file_key",{"_index":4507,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadresult.file_url",{"_index":4508,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadresult.key",{"_index":1582,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploads3",{"_index":1465,"title":{},"body":{"injectables/AwsService.html":{}}}],["uploads3(file",{"_index":1484,"title":{},"body":{"injectables/AwsService.html":{}}}],["upon",{"_index":2674,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"miscellaneous/enumerations.html":{}}}],["uponassetwindowclosing",{"_index":5067,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uponvaultlaunch",{"_index":5066,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["upper_bound",{"_index":2765,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["uq_b0ec0293d53a1385955f9834d5c",{"_index":2652,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["uq_c211339d9110a71f1e7b65d87b5",{"_index":3846,"title":{},"body":{"classes/RenameInvestmentToAcquire1746531791148.html":{}}}],["uq_d3b7b875fa01abc44af7ece2cec",{"_index":502,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{}}}],["uq_d90243459a697eadb8ad56e9092",{"_index":620,"title":{},"body":{"classes/AddedTags1741943808652.html":{}}}],["url",{"_index":395,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/AssetWhitelist.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"interfaces/BuildTransactionParams.html":{},"classes/ContributorWhitelist.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"interfaces/TransactionBuildResponse.html":{},"classes/UpdateProfileDto.html":{},"injectables/UsersService.html":{},"injectables/VyfiService.html":{}}}],["url'})@column({name",{"_index":3152,"title":{},"body":{"entities/FileEntity.html":{}}}],["url'})@column({type",{"_index":3550,"title":{},"body":{"entities/LinkEntity.html":{}}}],["url(`${this.baseurl}/${endpoint",{"_index":806,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["url.searchparams.append(key",{"_index":808,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/TransactionBuildResponse.html":{}}}],["urls",{"_index":2946,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["urlsearchparams",{"_index":4886,"title":{},"body":{"injectables/VyfiService.html":{}}}],["usd",{"_index":3409,"title":{},"body":{"injectables/LifecycleService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{}}}],["usd,ada",{"_index":4107,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["use",{"_index":2602,"title":{},"body":{"classes/CreatePoolDto.html":{},"injectables/LifecycleService.html":{},"injectables/RawBodyMiddleware.html":{},"classes/TokenInfo.html":{}}}],["use(req",{"_index":3799,"title":{},"body":{"injectables/RawBodyMiddleware.html":{}}}],["used",{"_index":1699,"title":{},"body":{"controllers/BlockchainController.html":{},"injectables/WebhookVerificationService.html":{}}}],["usefactory",{"_index":1449,"title":{},"body":{"modules/AwsModule.html":{},"modules/JwtGlobalModule.html":{}}}],["useguards",{"_index":183,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["useguards(authguard",{"_index":206,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/AssetsController.html":{},"controllers/AwsController.html":{},"controllers/BlockchainController.html":{},"controllers/ClaimsController.html":{},"controllers/ContributionController.html":{},"controllers/GovernanceController.html":{},"controllers/LpTokensController.html":{},"controllers/TaptoolsController.html":{},"controllers/TransactionsController.html":{},"controllers/UsersController.html":{},"controllers/VaultsController.html":{}}}],["useguards(authguard)@post(':id/claim')@apioperation({summary",{"_index":2302,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["useinterceptors",{"_index":1395,"title":{},"body":{"controllers/AwsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":1404,"title":{},"body":{"controllers/AwsController.html":{}}}],["useinterceptors(fileinterceptor('csv",{"_index":1427,"title":{},"body":{"controllers/AwsController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":4428,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(fileinterceptor('image",{"_index":1406,"title":{},"body":{"controllers/AwsController.html":{}}}],["user",{"_index":246,"title":{"entities/User.html":{}},"body":{"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"entities/Asset.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"controllers/ClaimsController.html":{},"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/TransactionsController.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":2422,"title":{},"body":{"injectables/ClaimsService.html":{},"injectables/LifecycleService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.address",{"_index":330,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AuthService.html":{},"injectables/ContributionService.html":{}}}],["user.banner_image",{"_index":4490,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.banner_image.file_url",{"_index":4468,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.claims",{"_index":2272,"title":{},"body":{"entities/Claim.html":{}}}],["user.decorator.ts",{"_index":5221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.description",{"_index":1355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.entity",{"_index":991,"title":{},"body":{"entities/Asset.html":{},"entities/Claim.html":{},"entities/LinkEntity.html":{}}}],["user.gains",{"_index":1361,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":1346,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":1347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.profile_image",{"_index":4487,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.profile_image.file_url",{"_index":4469,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.social_links",{"_index":3552,"title":{},"body":{"entities/LinkEntity.html":{}}}],["user.social_links?.length",{"_index":4493,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.total_vaults",{"_index":1359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.tvl",{"_index":1357,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.vaults?.length",{"_index":4466,"title":{},"body":{"injectables/UsersService.html":{}}}],["user?.address",{"_index":1339,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.address?.includes('stake1",{"_index":1340,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":70,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"entities/Claim.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{}}}],["user_wallet",{"_index":3515,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["useracquiredada",{"_index":3432,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets",{"_index":3429,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.assets",{"_index":3431,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.total_assets",{"_index":3435,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.user_id",{"_index":3430,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userassets.user_wallet",{"_index":3434,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["usercontributedvalueada",{"_index":3433,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["userdata",{"_index":4447,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":210,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"controllers/BlockchainController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"entities/Claim.html":{},"controllers/ClaimsController.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/CreateClaimDto.html":{},"injectables/DraftVaultsService.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"controllers/VaultsController.html":{}}}],["userid'})@manytoone(undefined",{"_index":2271,"title":{},"body":{"entities/Claim.html":{},"entities/LinkEntity.html":{}}}],["username",{"_index":922,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["userrepository",{"_index":274,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{}}}],["users",{"_index":500,"title":{},"body":{"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedDelete1747838327085.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"controllers/UsersController.html":{}}}],["users\"(\"id",{"_index":79,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{}}}],["users.controller",{"_index":4439,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":4414,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":1279,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.service",{"_index":1301,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscontroller",{"_index":4384,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["usersmodule",{"_index":880,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersource",{"_index":4467,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersrepository",{"_index":2497,"title":{},"body":{"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":1285,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["uses",{"_index":4725,"title":{},"body":{"controllers/VaultsController.html":{}}}],["using",{"_index":114,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"controllers/BlockchainController.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/ContributionService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/LifecycleService.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"index.html":{}}}],["usually",{"_index":2197,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["utf8payload",{"_index":1325,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilize",{"_index":4957,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["utils/apply_params",{"_index":2055,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["utils/blueprint.json",{"_index":2057,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["utils/lib",{"_index":4529,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["utxo",{"_index":724,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/variables.html":{}}}],["utxo.hash",{"_index":756,"title":{},"body":{"interfaces/Amount.html":{}}}],["utxo.outputs.findindex(output",{"_index":751,"title":{},"body":{"interfaces/Amount.html":{}}}],["utxo_count",{"_index":1596,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["utxo_input",{"_index":640,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["utxo_output",{"_index":641,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["utxo_ref",{"_index":642,"title":{},"body":{"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Transaction.html":{}}}],["utxoinput",{"_index":4190,"title":{},"body":{"entities/Transaction.html":{}}}],["utxoinput'})@column({nullable",{"_index":4176,"title":{},"body":{"entities/Transaction.html":{}}}],["utxooutput",{"_index":4191,"title":{},"body":{"entities/Transaction.html":{}}}],["utxooutput'})@column({nullable",{"_index":4178,"title":{},"body":{"entities/Transaction.html":{}}}],["utxoref",{"_index":4192,"title":{},"body":{"entities/Transaction.html":{}}}],["utxoref'})@column({nullable",{"_index":4180,"title":{},"body":{"entities/Transaction.html":{}}}],["utxos",{"_index":718,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["utxos.foreach((utxo",{"_index":722,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["utxos.get(0",{"_index":4546,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["utxos.len",{"_index":4544,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"injectables/VyfiService.html":{}}}],["uuid",{"_index":49,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"injectables/AwsService.html":{},"classes/BuildTransactionDto.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/NftAsset.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{},"dependencies.html":{}}}],["uuid_generate_v4",{"_index":51,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/TransactionModelFix1743089378621.html":{}}}],["v.title",{"_index":2093,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["v2",{"_index":2590,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"injectables/VyfiService.html":{}}}],["v4",{"_index":1498,"title":{},"body":{"injectables/AwsService.html":{}}}],["valid",{"_index":1550,"title":{},"body":{"injectables/AwsService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{}}}],["valid_contract",{"_index":1604,"title":{},"body":{"interfaces/BlockchainAddressResponse.html":{},"interfaces/BlockchainContractResponse.html":{},"interfaces/BlockchainTokenResponse.html":{},"interfaces/BlockchainTransactionListItem.html":{},"interfaces/BlockchainTransactionListResponse.html":{},"interfaces/BlockchainTransactionResponse.html":{},"interfaces/BlockchainUtxo.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["validate",{"_index":312,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"controllers/AwsController.html":{},"injectables/AwsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["validatecsvaddresses",{"_index":1466,"title":{},"body":{"injectables/AwsService.html":{}}}],["validatecsvaddresses(buffer",{"_index":1486,"title":{},"body":{"injectables/AwsService.html":{}}}],["validatenested",{"_index":263,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AssetMetadataDto.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/CreateAssetDto.html":{},"classes/LoginReq.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/SignatureData.html":{},"classes/SubmitTransactionDto.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"classes/TransactionSubmitResponseDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":2566,"title":{},"body":{"classes/CreateAssetDto.html":{}}}],["validates",{"_index":3631,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["validatetransactionexists",{"_index":4257,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["validatetransactionexists(id",{"_index":4283,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["validation",{"_index":339,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AwsService.html":{},"injectables/LpTokensService.html":{}}}],["validator",{"_index":264,"title":{},"body":{"classes/AcquireReq.html":{},"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"classes/AssetMetadataDto.html":{},"classes/AssetWhitelist.html":{},"classes/AssetWhitelistDto.html":{},"entities/AssetsWhitelistEntity.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/ContributorWhitelist.html":{},"classes/CreateAssetDto.html":{},"classes/CreateClaimDto.html":{},"classes/CreatePoolDto.html":{},"classes/CreateProposalReq.html":{},"classes/ExtractLpTokensDto.html":{},"classes/GetClaimsDto.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"classes/LoginReq.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/NftAsset.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PublishVaultDto.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"classes/SocialLinkDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"classes/TagDto.html":{},"classes/TokenInfo.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"classes/TxUpdateReq.html":{},"classes/UpdateProfileDto.html":{},"injectables/VaultInsertingService.html":{},"classes/VoteReq.html":{},"dependencies.html":{}}}],["validatorhash",{"_index":2128,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["validators",{"_index":1408,"title":{},"body":{"controllers/AwsController.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"controllers/UsersController.html":{},"injectables/VaultInsertingService.html":{}}}],["validityinterval",{"_index":2116,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ClaimsService.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["valuation",{"_index":340,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultShortResponse.html":{}}}],["valuation_amount",{"_index":4330,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["valuation_currency",{"_index":4329,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["valuation_sc_type",{"_index":5226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valuation_type",{"_index":2683,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"classes/RenameFields1746536544579.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["valuationamount",{"_index":4658,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["valuationcurrency",{"_index":4657,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["valuations",{"_index":1201,"title":{},"body":{"injectables/AssetsService.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/AssetsService.html":{},"injectables/AwsService.html":{},"injectables/BlockchainScannerService.html":{},"injectables/BlockchainService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ClaimsService.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/GetVaultTransactionsDto.html":{},"classes/GetVaultsDto.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"classes/PaginationDto.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/PublicProfileRes.html":{},"injectables/RawBodyMiddleware.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/UsersService.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"injectables/VyfiService.html":{},"injectables/WebhookVerificationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.dto",{"_index":3987,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["value.dto.ts",{"_index":1041,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:10",{"_index":1056,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:11",{"_index":1060,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:12",{"_index":1061,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:13",{"_index":1053,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:2",{"_index":1059,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:3",{"_index":1054,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:4",{"_index":1050,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:5",{"_index":1058,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:6",{"_index":1057,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:7",{"_index":1052,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:8",{"_index":1051,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.dto.ts:9",{"_index":1055,"title":{},"body":{"classes/AssetValueDto.html":{}}}],["value.new(bignum.from_str(lovelace",{"_index":712,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["value.new(bignum.from_str(string(number(lovelace.quantity",{"_index":700,"title":{},"body":{"interfaces/Amount.html":{},"miscellaneous/variables.html":{}}}],["value.url",{"_index":3783,"title":{},"body":{"classes/PublicProfileRes.html":{},"classes/VaultShortResponse.html":{}}}],["value_method",{"_index":3832,"title":{},"body":{"classes/RenameFields1746536544579.html":{}}}],["valueada",{"_index":1048,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/LifecycleService.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["valuecontributed",{"_index":2835,"title":{},"body":{"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{}}}],["valued",{"_index":4146,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["valueinadaretainednetoffees",{"_index":2881,"title":{},"body":{"injectables/DistributionService.html":{}}}],["valuemethod",{"_index":4525,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":4114,"title":{},"body":{"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{},"classes/VaultShortResponse.html":{},"injectables/WebhookVerificationService.html":{}}}],["valueusd",{"_index":1049,"title":{},"body":{"classes/AssetValueDto.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["varchar",{"_index":442,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/Claim.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/FileEntity.html":{},"entities/LinkEntity.html":{}}}],["variable",{"_index":3649,"title":{},"body":{"injectables/LpTokensService.html":{}}}],["variables",{"_index":5215,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":53,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFields1746536544579.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateRelationto1742209228422.html":{}}}],["varying(56",{"_index":2714,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["vault",{"_index":111,"title":{},"body":{"classes/$npmConfigName1750085776373.html":{},"controllers/AcquireController.html":{},"modules/AcquireModule.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"interfaces/Amount.html":{},"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"entities/Asset.html":{},"controllers/AssetsController.html":{},"modules/AssetsModule.html":{},"injectables/AssetsService.html":{},"entities/AssetsWhitelistEntity.html":{},"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainScannerService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ContributionController.html":{},"modules/ContributionModule.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/DistributeLpTokensParams.html":{},"modules/DistributionModule.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/GetVaultTransactionsDto.html":{},"controllers/GovernanceController.html":{},"modules/GovernanceModule.html":{},"injectables/GovernanceService.html":{},"interfaces/L4VaVault.html":{},"modules/LifecycleModule.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"modules/LpTokensModule.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"entities/TagEntity.html":{},"controllers/TaptoolsController.html":{},"modules/TaptoolsModule.html":{},"injectables/TaptoolsService.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"entities/User.html":{},"classes/VaultAssetsSummaryDto.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"classes/VaultShortResponse.html":{},"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"miscellaneous/enumerations.html":{}}}],["vault')@apioperation({summary",{"_index":1631,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["vault's",{"_index":2541,"title":{},"body":{"injectables/ContributionService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vault'})@apiresponse({status",{"_index":1632,"title":{},"body":{"controllers/BlockchainController.html":{},"controllers/GovernanceController.html":{}}}],["vault'})@dtorepresent({transform",{"_index":4620,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vault'})@useguards(authguard)@apiresponse({status",{"_index":162,"title":{},"body":{"controllers/AcquireController.html":{},"controllers/ContributionController.html":{}}}],["vault.acquire_open_window_time",{"_index":3400,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.acquire_open_window_type",{"_index":3395,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.acquire_phase_start",{"_index":2954,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.acquire_reserve",{"_index":3414,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.acquirer_whitelist",{"_index":437,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{}}}],["vault.acquirer_whitelist.some(entry",{"_index":328,"title":{},"body":{"injectables/AcquireService.html":{}}}],["vault.acquirer_whitelist?.length",{"_index":326,"title":{},"body":{"injectables/AcquireService.html":{}}}],["vault.asset_vault_name",{"_index":3503,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.assets",{"_index":993,"title":{},"body":{"entities/Asset.html":{},"injectables/TaptoolsService.html":{}}}],["vault.assets)@joincolumn({name",{"_index":988,"title":{},"body":{"entities/Asset.html":{}}}],["vault.assets_whitelist",{"_index":1226,"title":{},"body":{"entities/AssetsWhitelistEntity.html":{}}}],["vault.assets_whitelist?.some(whitelistedasset",{"_index":2538,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.banner_image",{"_index":2949,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.contract_address",{"_index":2153,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/ContributionService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault.contribution_phase_start",{"_index":2953,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.contributor_whitelist",{"_index":2559,"title":{},"body":{"entities/ContributorWhitelistEntity.html":{}}}],["vault.contributor_whitelist.some(entry",{"_index":2545,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.contributor_whitelist?.length",{"_index":2544,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.deleted",{"_index":3507,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.dto",{"_index":4747,"title":{},"body":{"controllers/VaultsController.html":{}}}],["vault.dto.ts",{"_index":3786,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:13",{"_index":3795,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:21",{"_index":3791,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:31",{"_index":3789,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.dto.ts:41",{"_index":3793,"title":{},"body":{"classes/PublishVaultDto.html":{}}}],["vault.entity",{"_index":450,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{},"entities/LinkEntity.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["vault.ft_token_img",{"_index":2951,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.ft_token_supply",{"_index":2840,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vault.id",{"_index":3386,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.liquidation_hash",{"_index":3508,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.liquidity_pool_contribution",{"_index":2843,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vault.locked_at",{"_index":2955,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.name",{"_index":2155,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault.owner",{"_index":1190,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/DraftVaultsService.html":{},"entities/User.html":{}}}],["vault.owner.address",{"_index":3498,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.owner.id",{"_index":323,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{}}}],["vault.privacy",{"_index":2532,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vault.publication_hash",{"_index":2097,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault.require_reserved_cost_ada",{"_index":3413,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.require_reserved_cost_usd",{"_index":3415,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.social_links",{"_index":3556,"title":{},"body":{"entities/LinkEntity.html":{}}}],["vault.tags",{"_index":3076,"title":{},"body":{"injectables/DraftVaultsService.html":{},"entities/TagEntity.html":{}}}],["vault.tags)@jointable({name",{"_index":3912,"title":{},"body":{"entities/TagEntity.html":{}}}],["vault.tokens_for_acquires",{"_index":2841,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vault.total_acquired_value_ada",{"_index":3448,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.total_assets_cost_ada",{"_index":3410,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.total_assets_cost_usd",{"_index":3411,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vault.value_method",{"_index":336,"title":{},"body":{"injectables/AcquireService.html":{}}}],["vault.vault_image",{"_index":2947,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault.vault_status",{"_index":308,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{}}}],["vault_appreciation",{"_index":4331,"title":{},"body":{"classes/UpdateRelationto1742209228422.html":{}}}],["vault_id",{"_index":86,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"injectables/AcquireService.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"entities/Asset.html":{},"entities/AssetsWhitelistEntity.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"entities/LinkEntity.html":{},"injectables/LpTokensService.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/TagEntity.html":{},"entities/Transaction.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/TransactionsService.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_image",{"_index":2929,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vault_image_id",{"_index":2703,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["vault_policy_id",{"_index":2080,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vault_sc_privacy",{"_index":5229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vault_status",{"_index":136,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum",{"_index":137,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old",{"_index":139,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_strategy",{"_index":2631,"title":{},"body":{"classes/CreateProposalReq.html":{},"miscellaneous/enumerations.html":{}}}],["vault_tags",{"_index":40,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"entities/TagEntity.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vault_token_index",{"_index":2743,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vault_token_ticker",{"_index":2692,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"classes/RenameFields1746536544579.html":{}}}],["vaultaddress",{"_index":1769,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["vaultappreciation",{"_index":4677,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultassetname",{"_index":4566,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultassetssummarydto",{"_index":3927,"title":{"classes/VaultAssetsSummaryDto.html":{}},"body":{"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/VaultAssetsSummaryDto.html":{}}}],["vaultburn",{"_index":2215,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"miscellaneous/typealiases.html":{}}}],["vaultconfig",{"_index":1658,"title":{"interfaces/VaultConfig.html":{}},"body":{"controllers/BlockchainController.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.acquirewindow",{"_index":4579,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.allowedcontributors",{"_index":4556,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.allowedpolicies",{"_index":4555,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.assetwindow",{"_index":4577,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.contracttype",{"_index":4554,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.customeraddress",{"_index":4552,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.custommetadata",{"_index":4580,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.valuemethod",{"_index":4558,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultconfig.vaultname",{"_index":4553,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultcreateconfig",{"_index":4532,"title":{"interfaces/VaultCreateConfig.html":{}},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultdata",{"_index":2994,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_open_window_time",{"_index":3043,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_open_window_type",{"_index":3046,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_reserve",{"_index":3023,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquire_window_duration",{"_index":3041,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.acquirer_whitelist_csv",{"_index":3058,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.banner_image",{"_index":3056,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.contribution_duration",{"_index":3039,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.contribution_open_window_time",{"_index":3048,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.contribution_open_window_type",{"_index":3051,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.cosigning_threshold",{"_index":3035,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.creation_threshold",{"_index":3027,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.description",{"_index":3011,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.execution_threshold",{"_index":3033,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.ft_token_decimals",{"_index":3013,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.ft_token_img",{"_index":3057,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.ft_token_supply",{"_index":3015,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.liquidity_pool_contribution",{"_index":3025,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.name",{"_index":3000,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.privacy",{"_index":3003,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.start_threshold",{"_index":3029,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.termination_type",{"_index":3017,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.time_elapsed_is_equal_to_time",{"_index":3053,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.tokens_for_acquires",{"_index":3021,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.type",{"_index":3001,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.valuation_amount",{"_index":3009,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.valuation_currency",{"_index":3007,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.value_method",{"_index":3005,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vault_appreciation",{"_index":3037,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vault_image",{"_index":3055,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vault_token_ticker",{"_index":3019,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultdata.vote_threshold",{"_index":3031,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultfilter",{"_index":3181,"title":{},"body":{"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["vaultfullresponse",{"_index":4647,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultid",{"_index":156,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AcquireService.html":{},"classes/AssetMetadataDto.html":{},"controllers/AssetsController.html":{},"injectables/AssetsService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/BurnLpTokensParams.html":{},"controllers/ContributionController.html":{},"injectables/ContributionService.html":{},"classes/CreateAssetDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DistributionService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"entities/LinkEntity.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/NftAsset.html":{},"classes/PublishVaultDto.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/TransactionsService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["vaultid'})@manytoone(undefined",{"_index":3555,"title":{},"body":{"entities/LinkEntity.html":{}}}],["vaultimage",{"_index":4615,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultimg",{"_index":2973,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultinsertingservice",{"_index":1667,"title":{"injectables/VaultInsertingService.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{},"overview.html":{}}}],["vaultmanagingservice",{"_index":1668,"title":{"injectables/VaultManagingService.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{},"overview.html":{}}}],["vaultname",{"_index":1767,"title":{},"body":{"injectables/BlockchainScannerService.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["vaultpolicyplusname",{"_index":2078,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultpolicyplusname.length",{"_index":2083,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultpolicyplusname.slice(0",{"_index":2081,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultpolicyplusname.slice(56",{"_index":2082,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/LpTokensService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultprivacy",{"_index":2509,"title":{},"body":{"injectables/ContributionService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["vaultprivacy.private",{"_index":2533,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vaultprivacy.semiprivate",{"_index":2534,"title":{},"body":{"injectables/ContributionService.html":{}}}],["vaultprivacy})@dtorepresent({transform",{"_index":4626,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaultrepository",{"_index":277,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/ContributionService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"injectables/LpTokensService.html":{},"injectables/TaptoolsService.html":{},"injectables/TransactionsService.html":{}}}],["vaults",{"_index":135,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddVaultLifecycleFields1741943808653.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"injectables/ContributionService.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleService.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/SocialLinkDto.html":{},"interfaces/SubmitTransactionParams.html":{},"entities/TagEntity.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionModelFix1743089378621.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRelationto1742209228422.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"injectables/VaultInsertingService.html":{},"classes/VaultStatusUpdate1745573712493.html":{},"controllers/VaultsController.html":{}}}],["vaults\"(\"id",{"_index":87,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/$npmConfigName1750085776373.html":{},"classes/$npmConfigName1750413089611.html":{},"classes/AddContractAddressToVault1745662880319.html":{},"classes/AddIndexToTransaction1744024797075.html":{},"classes/AddInvestmentToTxType1744032453542.html":{},"classes/AddMetadataToTransaction1751453522246.html":{},"classes/AddNullableForMetadata1743687086047.html":{},"classes/AddStakeAndWalletAddress1743433439139.html":{},"classes/AddTotalAcquiredValueInAda1750670509513.html":{},"classes/AddTotalAssetsCost1747665618438.html":{},"classes/AddedAauired1748361017536.html":{},"classes/AddedAssetVaultName1745921850315.html":{},"classes/AddedAssetsStatus1748264767365.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedDelete1747838327085.html":{},"classes/AddedLiquidationHash1749046550619.html":{},"classes/AddedMaxAssetsCount1747911428750.html":{},"classes/AddedPublicationHash1745583708330.html":{},"classes/AddedReserveVaule1747821437539.html":{},"classes/AddedTags1741943808652.html":{},"classes/AddedTransactionModelAndRelations1743588383672.html":{},"classes/ChangeAssetsOwnerType1743678745097.html":{},"classes/ChangeIntervalToBigint1742311345554.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/PolicyId1749726859213.html":{},"classes/PolicyIdRestore1749727852748.html":{},"classes/RenameFieldFixEnum1742800375799.html":{},"classes/RenameFields1746536544579.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/RenameVaultField1742382533813.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/TransactionModelFix1743089378621.html":{},"classes/UpdateFieldsType1741946649594.html":{},"classes/UpdateRelationto1742209228422.html":{},"classes/UpdateType1742819100112.html":{},"classes/UpdateTypes1746532933340.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaults'})@manytomany(undefined",{"_index":3911,"title":{},"body":{"entities/TagEntity.html":{}}}],["vaults.controller",{"_index":4789,"title":{},"body":{"modules/VaultsModule.html":{}}}],["vaults.dto",{"_index":2909,"title":{},"body":{"injectables/DraftVaultsService.html":{},"controllers/VaultsController.html":{}}}],["vaults.dto.ts",{"_index":3180,"title":{},"body":{"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["vaults.dto.ts:31",{"_index":3184,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["vaults.dto.ts:41",{"_index":3188,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["vaults.dto.ts:52",{"_index":3192,"title":{},"body":{"classes/GetVaultsDto.html":{}}}],["vaults.service",{"_index":4743,"title":{},"body":{"controllers/VaultsController.html":{},"modules/VaultsModule.html":{}}}],["vaults.service.ts",{"_index":2885,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:123",{"_index":2906,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:25",{"_index":2895,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:46",{"_index":2902,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults.service.ts:86",{"_index":2897,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaults/processing",{"_index":2335,"title":{},"body":{"modules/ClaimsModule.html":{},"injectables/ClaimsService.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{}}}],["vaults_contribution_open_window_type_enum",{"_index":3119,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["vaults_contribution_open_window_type_enum_old",{"_index":3114,"title":{},"body":{"classes/DropOldVauleFormEnum1742800589634.html":{},"classes/RenameFieldFixEnum1742800375799.html":{}}}],["vaults_type_enum",{"_index":4210,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["vaults_type_enum_old",{"_index":4206,"title":{},"body":{"classes/TransactionModelFix1743089378621.html":{}}}],["vaults_vault_status_enum",{"_index":140,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaults_vault_status_enum_old",{"_index":126,"title":{},"body":{"classes/$npmConfigName1750413089611.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultscontroller",{"_index":4694,"title":{"controllers/VaultsController.html":{}},"body":{"controllers/VaultsController.html":{},"modules/VaultsModule.html":{}}}],["vaultshortresponse",{"_index":2913,"title":{"classes/VaultShortResponse.html":{}},"body":{"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["vaultsmodule",{"_index":881,"title":{"modules/VaultsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaultsModule.html":{},"modules.html":{},"overview.html":{}}}],["vaultsortfield",{"_index":2900,"title":{},"body":{"injectables/DraftVaultsService.html":{},"classes/GetVaultsDto.html":{},"miscellaneous/enumerations.html":{}}}],["vaultsrepository",{"_index":1133,"title":{},"body":{"injectables/AssetsService.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"injectables/DraftVaultsService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vaultsservice",{"_index":4748,"title":{},"body":{"controllers/VaultsController.html":{},"modules/VaultsModule.html":{},"overview.html":{}}}],["vaultstatus",{"_index":295,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"injectables/GovernanceService.html":{},"injectables/LifecycleProcessor.html":{},"injectables/LifecycleService.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["vaultstatus.acquire",{"_index":309,"title":{},"body":{"injectables/AcquireService.html":{},"injectables/LifecycleService.html":{}}}],["vaultstatus.contribution",{"_index":1160,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/ContributionService.html":{},"injectables/LifecycleService.html":{}}}],["vaultstatus.draft",{"_index":2927,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["vaultstatus.failed",{"_index":3392,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vaultstatus.governance",{"_index":3469,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vaultstatus.locked",{"_index":3261,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["vaultstatus.published",{"_index":3475,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vaultstatusupdate.ts",{"_index":4690,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate.ts:25",{"_index":4692,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate.ts:4",{"_index":4691,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate.ts:6",{"_index":4693,"title":{},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatusupdate1745573712493",{"_index":4688,"title":{"classes/VaultStatusUpdate1745573712493.html":{}},"body":{"classes/VaultStatusUpdate1745573712493.html":{}}}],["vaultstatus})@dtorepresent({transform",{"_index":4635,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaulttokenticker",{"_index":4674,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["vaulttype",{"_index":4637,"title":{},"body":{"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["vaultutxo",{"_index":2212,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{}}}],["verification",{"_index":1333,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"classes/LoginReq.html":{},"classes/SignatureData.html":{},"injectables/WebhookVerificationService.html":{}}}],["verification.service",{"_index":1671,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{}}}],["verification.service.ts",{"_index":4944,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:12",{"_index":4952,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:13",{"_index":4953,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:14",{"_index":4947,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verification.service.ts:21",{"_index":4950,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verificationkey",{"_index":2752,"title":{},"body":{"interfaces/Datum.html":{},"interfaces/Datum1.html":{},"interfaces/L4VaVault.html":{}}}],["verified",{"_index":5006,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verify",{"_index":1178,"title":{},"body":{"injectables/AssetsService.html":{},"injectables/AuthService.html":{},"controllers/BlockchainController.html":{},"injectables/TaptoolsService.html":{},"controllers/VaultsController.html":{},"injectables/WebhookVerificationService.html":{}}}],["verifysignature",{"_index":1283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebhookVerificationService.html":{}}}],["verifysignature(payload",{"_index":4948,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["verifysignature(signaturedata",{"_index":1287,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":856,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultInsertingService.html":{},"injectables/VaultManagingService.html":{},"properties.html":{}}}],["video",{"_index":5166,"title":{},"body":{"index.html":{}}}],["visit",{"_index":5156,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":5169,"title":{},"body":{"index.html":{}}}],["void",{"_index":1791,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["vote",{"_index":3209,"title":{},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/VaultShortResponse.html":{},"classes/VoteReq.html":{}}}],["vote(@req",{"_index":3241,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["vote(proposalid",{"_index":3259,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["vote(req",{"_index":3223,"title":{},"body":{"controllers/GovernanceController.html":{}}}],["vote_threshold",{"_index":2699,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{}}}],["votereq",{"_index":3224,"title":{"classes/VoteReq.html":{}},"body":{"controllers/GovernanceController.html":{},"injectables/GovernanceService.html":{},"classes/VoteReq.html":{}}}],["voterid",{"_index":3273,"title":{},"body":{"injectables/GovernanceService.html":{}}}],["votethreshold",{"_index":4680,"title":{},"body":{"classes/VaultShortResponse.html":{}}}],["voting",{"_index":2622,"title":{},"body":{"classes/CreateProposalReq.html":{},"injectables/GovernanceService.html":{},"classes/VoteReq.html":{}}}],["vs_currencies",{"_index":3999,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["vt",{"_index":2122,"title":{},"body":{"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"injectables/DistributionService.html":{},"injectables/LifecycleService.html":{},"interfaces/SubmitTransactionParams.html":{},"interfaces/TransactionBuildResponse-2.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"injectables/VaultInsertingService.html":{}}}],["vt_supply",{"_index":2827,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtada",{"_index":2821,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtadavalue",{"_index":2854,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtavailabletoacquirers",{"_index":2868,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtprice",{"_index":2844,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtreceived",{"_index":2870,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtresult",{"_index":3451,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vtresult.vtreceived",{"_index":3455,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vtresult.vtretained",{"_index":3459,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["vtretained",{"_index":2849,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vtvalueinada",{"_index":2872,"title":{},"body":{"injectables/DistributionService.html":{}}}],["vyfi",{"_index":2603,"title":{},"body":{"classes/CreatePoolDto.html":{},"classes/TokenInfo.html":{},"controllers/VyfiController.html":{},"injectables/VyfiService.html":{}}}],["vyfi.controller",{"_index":4843,"title":{},"body":{"modules/VyfiModule.html":{}}}],["vyfi.service",{"_index":4826,"title":{},"body":{"controllers/VyfiController.html":{},"modules/VyfiModule.html":{}}}],["vyfi_constants",{"_index":4869,"title":{},"body":{"injectables/VyfiService.html":{},"miscellaneous/variables.html":{}}}],["vyfi_constants.metadata_label",{"_index":4897,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.min_pool_ada",{"_index":4929,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.min_return_ada",{"_index":4931,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.pool_address",{"_index":4911,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.processing_fee",{"_index":4927,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfi_constants.total_required_ada",{"_index":4916,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyfiapiurl",{"_index":4847,"title":{},"body":{"injectables/VyfiService.html":{}}}],["vyficontroller",{"_index":4800,"title":{"controllers/VyfiController.html":{}},"body":{"controllers/VyfiController.html":{},"modules/VyfiModule.html":{}}}],["vyfimodule",{"_index":4838,"title":{"modules/VyfiModule.html":{}},"body":{"modules/VyfiModule.html":{},"modules.html":{},"overview.html":{}}}],["vyfiservice",{"_index":4825,"title":{"injectables/VyfiService.html":{}},"body":{"controllers/VyfiController.html":{},"modules/VyfiModule.html":{},"injectables/VyfiService.html":{},"overview.html":{}}}],["wallet",{"_index":1335,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BurnLpTokensParams.html":{},"injectables/ClaimsService.html":{},"interfaces/DistributeLpTokensParams.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"injectables/LifecycleService.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"controllers/LpTokensController.html":{},"injectables/LpTokensService.html":{},"classes/SignatureData.html":{},"controllers/TaptoolsController.html":{},"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["wallet_address",{"_index":426,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"entities/ContributorWhitelistEntity.html":{},"classes/DatabaseStruct1741879378411.html":{},"injectables/DraftVaultsService.html":{}}}],["wallet_summary_${walletaddress",{"_index":4009,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["walletaddress",{"_index":385,"title":{},"body":{"classes/AcquirerWhitelist.html":{},"classes/AcquirerWhitelistCsv.html":{},"entities/AcquirerWhitelistEntity.html":{},"classes/AssetWhitelist.html":{},"injectables/AuthService.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/ContributorWhitelist.html":{},"entities/ContributorWhitelistEntity.html":{},"interfaces/DistributeLpTokensParams.html":{},"injectables/DraftVaultsService.html":{},"classes/ExtractLpTokensDto.html":{},"interfaces/ExtractLpTokensParams.html":{},"interfaces/ExtractLpTokensParams-1.html":{},"classes/LoginReq.html":{},"classes/LpTokenOperationResult.html":{},"injectables/LpTokensService.html":{},"classes/SignatureData.html":{},"classes/SocialLink.html":{},"injectables/TaptoolsService.html":{}}}],["walletaddress'})@column({type",{"_index":441,"title":{},"body":{"entities/AcquirerWhitelistEntity.html":{},"entities/ContributorWhitelistEntity.html":{}}}],["walletsummarydto",{"_index":3988,"title":{"classes/WalletSummaryDto.html":{}},"body":{"injectables/TaptoolsService.html":{},"classes/WalletSummaryDto.html":{}}}],["watch",{"_index":5108,"title":{},"body":{"index.html":{}}}],["webhook",{"_index":1638,"title":{},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"injectables/ClaimsService.html":{},"injectables/RawBodyMiddleware.html":{},"injectables/WebhookVerificationService.html":{}}}],["webhook')@httpcode(200)@apioperation({summary",{"_index":1637,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["webhook_id",{"_index":1900,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{}}}],["webhookauthtoken",{"_index":4946,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["webhookid",{"_index":1712,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["webhooks",{"_index":4958,"title":{},"body":{"injectables/WebhookVerificationService.html":{}}}],["webhooktxconfirmed",{"_index":2295,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["webhooktxconfirmed(@body",{"_index":2328,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["webhooktxconfirmed(body",{"_index":2307,"title":{},"body":{"controllers/ClaimsController.html":{}}}],["webhookverificationservice",{"_index":1670,"title":{"injectables/WebhookVerificationService.html":{}},"body":{"controllers/BlockchainController.html":{},"modules/BlockchainModule.html":{},"injectables/WebhookVerificationService.html":{},"overview.html":{}}}],["website",{"_index":5196,"title":{},"body":{"index.html":{}}}],["wh",{"_index":1686,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["wh')@httpcode(200)@apioperation({summary",{"_index":1648,"title":{},"body":{"controllers/BlockchainController.html":{}}}],["where('vault.vault_status",{"_index":3474,"title":{},"body":{"injectables/LifecycleService.html":{}}}],["where.status",{"_index":4301,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["where.type",{"_index":4302,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["where.vault_id",{"_index":4300,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["whereconditions",{"_index":2399,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["whereconditions.status",{"_index":2401,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["whether",{"_index":1936,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"interfaces/BurnLpTokensParams.html":{},"classes/CreatePoolDto.html":{},"interfaces/DistributeLpTokensParams.html":{},"interfaces/ExtractLpTokensParams.html":{},"classes/LpTokenOperationResult.html":{},"classes/TokenInfo.html":{}}}],["whitelist",{"_index":321,"title":{},"body":{"injectables/AcquireService.html":{},"controllers/AwsController.html":{},"injectables/ContributionService.html":{},"injectables/DraftVaultsService.html":{},"classes/VaultShortResponse.html":{}}}],["whitelistedasset.policy_id",{"_index":2539,"title":{},"body":{"injectables/ContributionService.html":{}}}],["whitelistitem.policyid",{"_index":3082,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["whitelistitem?.countcapmax",{"_index":3084,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["whitelistitem?.countcapmin",{"_index":3083,"title":{},"body":{"injectables/DraftVaultsService.html":{}}}],["whose",{"_index":2375,"title":{},"body":{"injectables/ClaimsService.html":{}}}],["window",{"_index":2677,"title":{},"body":{"classes/DatabaseStruct1741879378411.html":{},"injectables/LifecycleService.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/VaultShortResponse.html":{},"miscellaneous/enumerations.html":{}}}],["within",{"_index":1948,"title":{},"body":{"classes/BlockchainWebhookDto.html":{},"classes/BlockfrostAmount.html":{},"classes/BlockfrostTransaction.html":{},"classes/BlockfrostTransactionEvent.html":{},"classes/BlockfrostTxInput.html":{},"classes/BlockfrostTxOutput.html":{},"classes/ContributeReq.html":{},"classes/ContributionAsset.html":{},"classes/MetadataFile.html":{},"classes/OnchainMetadata.html":{},"injectables/WebhookVerificationService.html":{}}}],["without",{"_index":2515,"title":{},"body":{"injectables/ContributionService.html":{}}}],["withretry",{"_index":1764,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["withretry(operation",{"_index":1790,"title":{},"body":{"injectables/BlockchainScannerService.html":{}}}],["witness",{"_index":2041,"title":{},"body":{"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["witnessset",{"_index":781,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"classes/BuildTransactionDto.html":{},"interfaces/BuildTransactionOutput.html":{},"interfaces/BuildTransactionParams.html":{},"interfaces/BuildTransactionParams-1.html":{},"classes/NftAsset.html":{},"classes/SubmitTransactionDto.html":{},"interfaces/SubmitTransactionParams.html":{},"classes/SubmitVaultTxDto.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-2.html":{},"classes/TransactionBuildResponseDto.html":{},"classes/TransactionOutput.html":{},"interfaces/TransactionSubmitResponse-1.html":{},"classes/TransactionSubmitResponseDto.html":{},"injectables/VaultInsertingService.html":{}}}],["workerhost",{"_index":3296,"title":{},"body":{"injectables/LifecycleProcessor.html":{}}}],["working",{"_index":5155,"title":{},"body":{"index.html":{}}}],["works",{"_index":4543,"title":{},"body":{"interfaces/VaultConfig.html":{},"interfaces/VaultCreateConfig.html":{},"injectables/VaultManagingService.html":{}}}],["x",{"_index":805,"title":{},"body":{"interfaces/AnvilApiConfig.html":{},"injectables/AnvilApiService.html":{},"injectables/BlockchainService.html":{},"interfaces/BuildTransactionParams.html":{},"injectables/TaptoolsService.html":{},"interfaces/TransactionBuildResponse.html":{},"interfaces/TransactionBuildResponse-1.html":{},"interfaces/TransactionSubmitResponse.html":{},"injectables/VyfiService.html":{},"index.html":{}}}],["xyz",{"_index":2615,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["xyz'})@isnotempty()@isstring",{"_index":2625,"title":{},"body":{"classes/CreateProposalReq.html":{}}}],["yes",{"_index":157,"title":{},"body":{"controllers/AcquireController.html":{},"injectables/AssetsService.html":{},"injectables/ClaimsService.html":{},"controllers/ContributionController.html":{},"classes/CreateProposalReq.html":{},"injectables/DraftVaultsService.html":{},"injectables/LifecycleService.html":{},"injectables/TransactionsService.html":{},"classes/VoteReq.html":{}}}],["yes'})@isnotempty()@isstring",{"_index":4795,"title":{},"body":{"classes/VoteReq.html":{}}}],["you'd",{"_index":5191,"title":{},"body":{"index.html":{}}}],["you're",{"_index":5122,"title":{},"body":{"index.html":{}}}],["z0",{"_index":1538,"title":{},"body":{"injectables/AwsService.html":{}}}],["za",{"_index":1537,"title":{},"body":{"injectables/AwsService.html":{}}}],["zero",{"_index":4070,"title":{},"body":{"injectables/TaptoolsService.html":{}}}],["zone",{"_index":67,"title":{},"body":{"classes/$AddedClaimEntity1751298845693.html":{},"classes/AddedContributorWhitelist1742484041497.html":{},"classes/AddedTags1741943808652.html":{},"classes/DatabaseStruct1741879378411.html":{},"classes/RenameInvestmentToAcquire1746531791148.html":{},"classes/ReplaceLockedStateToGovernance1743424803837.html":{},"classes/UpdateFieldsType1741946649594.html":{}}}],["zoom",{"_index":235,"title":{},"body":{"modules/AcquireModule.html":{},"modules/AppModule.html":{},"modules/AssetsModule.html":{},"modules/AuthModule.html":{},"modules/AwsModule.html":{},"modules/BlockchainModule.html":{},"modules/ClaimsModule.html":{},"modules/ContributionModule.html":{},"modules/DistributionModule.html":{},"modules/GovernanceModule.html":{},"modules/JwtGlobalModule.html":{},"modules/LifecycleModule.html":{},"modules/LpTokensModule.html":{},"modules/TaptoolsModule.html":{},"modules/TransactionsModule.html":{},"modules/UsersModule.html":{},"modules/VaultsModule.html":{},"modules/VyfiModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/$AddedClaimEntity1751298845693.html":{"url":"classes/$AddedClaimEntity1751298845693.html","title":"class - $AddedClaimEntity1751298845693","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  $AddedClaimEntity1751298845693\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1751298845693-AddedClaimEntity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ' $AddedClaimEntity1751298845693'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1751298845693-AddedClaimEntity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1751298845693-AddedClaimEntity.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1751298845693-AddedClaimEntity.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class $AddedClaimEntity1751298845693 implements MigrationInterface {\n  name = ' $AddedClaimEntity1751298845693';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TABLE \"claims\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"type\" character varying NOT NULL, \"status\" character varying NOT NULL DEFAULT 'disabled', \"amount\" numeric(20,6) NOT NULL DEFAULT '0', \"tx_hash\" character varying, \"description\" text, \"metadata\" jsonb, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"user_id\" uuid, CONSTRAINT \"PK_96c91970c0dcb2f69fdccd0a698\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"claims\" ADD CONSTRAINT \"FK_6b6d7ad7d8c3982b44194fd542c\" FOREIGN KEY (\"user_id\") REFERENCES \"users\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"claims\" DROP CONSTRAINT \"FK_6b6d7ad7d8c3982b44194fd542c\"`);\n    await queryRunner.query(`DROP TABLE \"claims\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/$npmConfigName1750085776373.html":{"url":"classes/$npmConfigName1750085776373.html","title":"class - $npmConfigName1750085776373","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  $npmConfigName1750085776373\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1750085776373-addUpdateTransactionType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ' $npmConfigName1750085776373'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1750085776373-addUpdateTransactionType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750085776373-addUpdateTransactionType.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750085776373-addUpdateTransactionType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class $npmConfigName1750085776373 implements MigrationInterface {\n  name = ' $npmConfigName1750085776373';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum\" RENAME TO \"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'acquire', 'investment', 'burn', 'swap', 'stake', 'extract-lp', 'distribute-lp', 'update-vault')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum_old\" AS ENUM('mint', 'payment', 'contribute', 'acquire', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum_old\" RENAME TO \"transactions_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/$npmConfigName1750413089611.html":{"url":"classes/$npmConfigName1750413089611.html","title":"class - $npmConfigName1750413089611","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  $npmConfigName1750413089611\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1750413089611-AddNewVaultStatus.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ' $npmConfigName1750413089611'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1750413089611-AddNewVaultStatus.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750413089611-AddNewVaultStatus.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750413089611-AddNewVaultStatus.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class  $npmConfigName1750413089611 implements MigrationInterface {\n    name = ' $npmConfigName1750413089611'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n        await queryRunner.query(`CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'created', 'published', 'contribution', 'acquire', 'investment', 'locked', 'governance', 'failed')`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`);\n        await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum_old\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'created', 'published', 'contribution', 'acquire', 'investment', 'locked', 'governance')`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`);\n        await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n        await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AcquireController.html":{"url":"controllers/AcquireController.html","title":"controller - AcquireController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AcquireController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/acquire.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                acquire\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getInvestmentTransactions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                invest\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateTransactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getInvestmentTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInvestmentTransactions(vaultId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('transactions')@ApiOperation({summary: 'Get all acquire transactions'})@UseGuards(AuthGuard)@ApiResponse({status: 200, description: 'Returns all acquire transactions'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        invest\n                        \n                    \n                \n            \n            \n                \n                        \n                    invest(req, vaultId: string, acquireReq: AcquireReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':vaultId')@ApiOperation({summary: 'Acquire in a vault'})@UseGuards(AuthGuard)@ApiResponse({status: 201, description: 'Acquire successful'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                acquireReq\n                                            \n                                                            AcquireReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(txId: string, txUpdate: TxUpdateReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('transaction/:txId/hash')@ApiOperation({summary: 'Update transaction hash'})@UseGuards(AuthGuard)@ApiResponse({status: 200, description: 'Transaction hash updated successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txUpdate\n                                            \n                                                            TxUpdateReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, Query, Req, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\nimport { TxUpdateReq } from '../contribution/dto/txUpdate.req';\n\nimport { AcquireService } from './acquire.service';\nimport { AcquireReq } from './dto/acquire.req';\n\n@ApiTags('Acquire')\n@Controller('acquire')\nexport class AcquireController {\n  constructor(\n    private readonly acquireService: AcquireService,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  @Post(':vaultId')\n  @ApiOperation({ summary: 'Acquire in a vault' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 201, description: 'Acquire successful' })\n  async invest(@Req() req, @Param('vaultId') vaultId: string, @Body() acquireReq: AcquireReq) {\n    const userId = req.user.sub;\n    return this.acquireService.acquire(vaultId, acquireReq, userId);\n  }\n\n  @Patch('transaction/:txId/hash')\n  @ApiOperation({ summary: 'Update transaction hash' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 200, description: 'Transaction hash updated successfully' })\n  async updateTransactionHash(@Param('txId') txId: string, @Body() txUpdate: TxUpdateReq) {\n    return this.acquireService.updateTransactionHash(txId, txUpdate.txHash);\n  }\n\n  @Get('transactions')\n  @ApiOperation({ summary: 'Get all acquire transactions' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 200, description: 'Returns all acquire transactions' })\n  async getInvestmentTransactions(@Query('vaultId') vaultId?: string) {\n    return this.transactionsService.getAcquireTransactions(vaultId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AcquireModule.html":{"url":"modules/AcquireModule.html","title":"module - AcquireModule","body":"\n                   \n\n\n\n\n    Modules\n    AcquireModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AcquireModule\n\n\n\ncluster_AcquireModule_exports\n\n\n\ncluster_AcquireModule_imports\n\n\n\ncluster_AcquireModule_providers\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nAcquireModule\n\nAcquireModule\n\nAcquireModule -->\n\nTransactionsModule->AcquireModule\n\n\n\n\n\nAcquireService \n\nAcquireService \n\nAcquireService  -->\n\nAcquireModule->AcquireService \n\n\n\n\n\nAcquireService\n\nAcquireService\n\nAcquireModule -->\n\nAcquireService->AcquireModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/acquire.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AcquireService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AcquireController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AcquireService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsModule } from '../../processing-tx/offchain-tx/transactions.module';\n\nimport { AcquireController } from './acquire.controller';\nimport { AcquireService } from './acquire.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Vault, User, Asset]), TransactionsModule],\n  controllers: [AcquireController],\n  providers: [AcquireService],\n  exports: [AcquireService],\n})\nexport class AcquireModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcquireReq.html":{"url":"classes/AcquireReq.html","title":"class - AcquireReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcquireReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/dto/acquire.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                assets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContributionAsset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of assets to contribute'})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/acquire/dto/acquire.req.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, ValidateNested } from 'class-validator';\n\nimport { ContributionAsset } from '../../contribution/dto/contribute.req';\n\nexport class AcquireReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AcquireService.html":{"url":"injectables/AcquireService.html","title":"injectable - AcquireService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AcquireService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/acquire/acquire.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                acquire\n                            \n                            \n                                    Async\n                                updateTransactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultRepository: Repository, userRepository: Repository, assetRepository: Repository, transactionsService: TransactionsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        acquire\n                        \n                    \n                \n            \n            \n                \n                        \n                    acquire(vaultId: string, acquireReq: AcquireReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                acquireReq\n                                            \n                                                            AcquireReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(transactionId: string, txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AcquireService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/acquire/acquire.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\n\nimport { AcquireReq } from './dto/acquire.req';\n\nimport { Asset } from '@/database/asset.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { AssetType, AssetStatus, AssetOriginType } from '@/types/asset.types';\nimport { TransactionType } from '@/types/transaction.types';\nimport { VaultStatus } from '@/types/vault.types';\n\n@Injectable()\nexport class AcquireService {\n  private readonly logger = new Logger(AcquireService.name);\n\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  async acquire(vaultId: string, acquireReq: AcquireReq, userId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n      relations: ['acquirer_whitelist', 'owner'],\n    });\n\n    const user = await this.userRepository.findOne({\n      where: { id: userId },\n    });\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    if (vault.vault_status !== VaultStatus.acquire) {\n      throw new BadRequestException('Vault is not in acquire phase');\n    }\n\n    // Validate assets\n    if (!acquireReq.assets || !Array.isArray(acquireReq.assets) || acquireReq.assets.length === 0) {\n      throw new BadRequestException('At least one asset is required');\n    }\n\n    // Allow vault owner to bypass whitelist check\n    if (vault.owner.id !== userId) {\n      // Check whitelist only for non-owners\n      if (vault.acquirer_whitelist?.length > 0) {\n        const isWhitelisted = vault.acquirer_whitelist.some(entry => entry.wallet_address === user.address);\n        if (!isWhitelisted) {\n          throw new BadRequestException('User is not in investor whitelist');\n        }\n      }\n    }\n\n    // Validate assets against vault settings if needed\n    if (vault.value_method === 'fixed') {\n      // Add any specific validation for fixed valuation type here\n    }\n\n    // Create a transaction record for the acquire\n    const transaction = await this.transactionsService.createTransaction({\n      vault_id: vaultId,\n      type: TransactionType.acquire,\n      assets: [],\n    });\n\n    // Create assets for the transaction\n    if (acquireReq.assets.length > 0) {\n      try {\n        // Ensure the transaction exists and is loaded with relations if needed\n        const savedTransaction = await this.transactionsService.findById(transaction.id);\n\n        // Create and save all assets\n        await Promise.all(\n          acquireReq.assets.map(async assetItem => {\n            const asset = this.assetRepository.create({\n              transaction: savedTransaction,\n              type: AssetType.CNT, // Using CNT type for acquire\n              policy_id: assetItem.policyId || '',\n              asset_id: assetItem.assetName,\n              quantity: assetItem.quantity,\n              status: AssetStatus.PENDING,\n              origin_type: AssetOriginType.ACQUIRED,\n              added_by: user,\n              metadata: assetItem?.metadata || {},\n            });\n\n            await this.assetRepository.save(asset);\n          })\n        );\n      } catch (error) {\n        this.logger.error(`Error creating assets for acquire transaction ${transaction.id}:`, error);\n        throw new BadRequestException('Failed to create assets for the transaction');\n      }\n    }\n\n    return {\n      success: true,\n      message: 'Acquire request accepted, transaction created',\n      vaultId,\n      txId: transaction.id,\n      assets: acquireReq.assets,\n    };\n  }\n\n  async updateTransactionHash(transactionId: string, txHash: string) {\n    const transaction = await this.transactionsService.findById(transactionId);\n    if (!transaction) {\n      throw new NotFoundException('Transaction not found');\n    }\n\n    await this.transactionsService.updateTransactionHash(transactionId, txHash);\n    return {\n      success: true,\n      message: 'Transaction hash updated',\n      txId: transactionId,\n      txHash: txHash,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcquirerWhitelist.html":{"url":"classes/AcquirerWhitelist.html","title":"class - AcquirerWhitelist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcquirerWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                walletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        walletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcquirerWhitelistCsv.html":{"url":"classes/AcquirerWhitelistCsv.html","title":"class - AcquirerWhitelistCsv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcquirerWhitelistCsv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                fileName\n                            \n                            \n                                    \n                                    \n                                    \n                                fileType\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AcquirerWhitelistEntity.html":{"url":"entities/AcquirerWhitelistEntity.html","title":"entity - AcquirerWhitelistEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AcquirerWhitelistEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/acquirerWhitelist.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vault\n                            \n                            \n                                    \n                                    \n                                wallet_address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.acquirer_whitelist, {onDelete: 'CASCADE'})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        wallet_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'walletAddress'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/acquirerWhitelist.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'acquirer_whitelist' })\nexport class AcquirerWhitelistEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'walletAddress' })\n  @Column({ type: 'varchar', nullable: false })\n  wallet_address: string;\n\n  @ManyToOne(() => Vault, (vault: Vault) => vault.acquirer_whitelist, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'vault_id' })\n  public vault: Vault;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddContractAddressToVault1745662880319.html":{"url":"classes/AddContractAddressToVault1745662880319.html","title":"class - AddContractAddressToVault1745662880319","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddContractAddressToVault1745662880319\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745662880319-addContractAddressToVault.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddContractAddressToVault1745662880319'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745662880319-addContractAddressToVault.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745662880319-addContractAddressToVault.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745662880319-addContractAddressToVault.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddContractAddressToVault1745662880319 implements MigrationInterface {\n  name = 'AddContractAddressToVault1745662880319';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contract_address\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contract_address\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddIndexToTransaction1744024797075.html":{"url":"classes/AddIndexToTransaction1744024797075.html","title":"class - AddIndexToTransaction1744024797075","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddIndexToTransaction1744024797075\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1744024797075-addIndexToTransaction.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddIndexToTransaction1744024797075'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1744024797075-addIndexToTransaction.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744024797075-addIndexToTransaction.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744024797075-addIndexToTransaction.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddIndexToTransaction1744024797075 implements MigrationInterface {\n  name = 'AddIndexToTransaction1744024797075';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"vault_id\" uuid`);\n    await queryRunner.query(`CREATE INDEX \"IDX_f93b9856ae3dfe138275ad9d68\" ON \"transactions\" (\"vault_id\") `);\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ADD CONSTRAINT \"FK_f93b9856ae3dfe138275ad9d684\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP CONSTRAINT \"FK_f93b9856ae3dfe138275ad9d684\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_f93b9856ae3dfe138275ad9d68\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"vault_id\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddInvestmentToTxType1744032453542.html":{"url":"classes/AddInvestmentToTxType1744032453542.html","title":"class - AddInvestmentToTxType1744032453542","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddInvestmentToTxType1744032453542\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1744032453542-addInvestmentToTxType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddInvestmentToTxType1744032453542'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1744032453542-addInvestmentToTxType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744032453542-addInvestmentToTxType.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1744032453542-addInvestmentToTxType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddInvestmentToTxType1744032453542 implements MigrationInterface {\n  name = 'AddInvestmentToTxType1744032453542';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum\" RENAME TO \"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum_old\" AS ENUM('mint', 'payment', 'contribute', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum_old\" RENAME TO \"transactions_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMetadataToTransaction1751453522246.html":{"url":"classes/AddMetadataToTransaction1751453522246.html","title":"class - AddMetadataToTransaction1751453522246","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMetadataToTransaction1751453522246\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1751453522246-AddMetadataToTransaction.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddMetadataToTransaction1751453522246'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1751453522246-AddMetadataToTransaction.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1751453522246-AddMetadataToTransaction.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1751453522246-AddMetadataToTransaction.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddMetadataToTransaction1751453522246 implements MigrationInterface {\n  name = 'AddMetadataToTransaction1751453522246';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"metadata\" jsonb`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum\" RENAME TO \"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'claim', 'acquire', 'investment', 'burn', 'swap', 'stake', 'extract-lp', 'distribute-lp', 'update-vault')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum_old\" AS ENUM('mint', 'payment', 'contribute', 'acquire', 'investment', 'burn', 'swap', 'stake', 'extract-lp', 'distribute-lp', 'update-vault')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum_old\" RENAME TO \"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"metadata\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNullableForMetadata1743687086047.html":{"url":"classes/AddNullableForMetadata1743687086047.html","title":"class - AddNullableForMetadata1743687086047","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNullableForMetadata1743687086047\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743687086047-addNullableForMetadata.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddNullableForMetadata1743687086047'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743687086047-addNullableForMetadata.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743687086047-addNullableForMetadata.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743687086047-addNullableForMetadata.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddNullableForMetadata1743687086047 implements MigrationInterface {\n  name = 'AddNullableForMetadata1743687086047';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"metadata\" DROP NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"metadata\" SET NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddStakeAndWalletAddress1743433439139.html":{"url":"classes/AddStakeAndWalletAddress1743433439139.html","title":"class - AddStakeAndWalletAddress1743433439139","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddStakeAndWalletAddress1743433439139\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743433439139-addStakeAndWalletAddress.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddStakeAndWalletAddress1743433439139'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743433439139-addStakeAndWalletAddress.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743433439139-addStakeAndWalletAddress.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743433439139-addStakeAndWalletAddress.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddStakeAndWalletAddress1743433439139 implements MigrationInterface {\n  name = 'AddStakeAndWalletAddress1743433439139';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" ADD \"stake_address\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD CONSTRAINT \"UQ_d3b7b875fa01abc44af7ece2cec\" UNIQUE (\"stake_address\")`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP CONSTRAINT \"UQ_d3b7b875fa01abc44af7ece2cec\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP COLUMN \"stake_address\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTotalAcquiredValueInAda1750670509513.html":{"url":"classes/AddTotalAcquiredValueInAda1750670509513.html","title":"class - AddTotalAcquiredValueInAda1750670509513","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTotalAcquiredValueInAda1750670509513\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddTotalAcquiredValueInAda1750670509513'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1750670509513-addTotalAcquiredValueInAda.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddTotalAcquiredValueInAda1750670509513 implements MigrationInterface {\n  name = 'AddTotalAcquiredValueInAda1750670509513';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"total_acquired_value_ada\" numeric DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"total_acquired_value_ada\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTotalAssetsCost1747665618438.html":{"url":"classes/AddTotalAssetsCost1747665618438.html","title":"class - AddTotalAssetsCost1747665618438","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTotalAssetsCost1747665618438\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747665618438-addTotalAssetsCost.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddTotalAssetsCost1747665618438'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747665618438-addTotalAssetsCost.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747665618438-addTotalAssetsCost.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747665618438-addTotalAssetsCost.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddTotalAssetsCost1747665618438 implements MigrationInterface {\n  name = 'AddTotalAssetsCost1747665618438';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"total_assets_cost_usd\" numeric DEFAULT '0'`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"total_assets_cost_ada\" numeric DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"total_assets_cost_ada\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"total_assets_cost_usd\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddVaultLifecycleFields1741943808653.html":{"url":"classes/AddVaultLifecycleFields1741943808653.html","title":"class - AddVaultLifecycleFields1741943808653","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddVaultLifecycleFields1741943808653\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741943808653-AddVaultLifecycleFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808653-AddVaultLifecycleFields.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808653-AddVaultLifecycleFields.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddVaultLifecycleFields1741943808653 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    // Add new columns for vault lifecycle management\n    await queryRunner.query(`\n      ALTER TABLE vaults\n      ADD COLUMN IF NOT EXISTS contribution_phase_start timestamptz,\n      ADD COLUMN IF NOT EXISTS investment_phase_start timestamptz,\n      ADD COLUMN IF NOT EXISTS locked_at timestamptz;\n    `);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    // Remove the columns in reverse order\n    await queryRunner.query(`\n      ALTER TABLE vaults\n      DROP COLUMN IF EXISTS locked_at,\n      DROP COLUMN IF EXISTS investment_phase_start,\n      DROP COLUMN IF EXISTS contribution_phase_start;\n    `);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedAauired1748361017536.html":{"url":"classes/AddedAauired1748361017536.html","title":"class - AddedAauired1748361017536","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedAauired1748361017536\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1748361017536-addedAauired.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedAauired1748361017536'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1748361017536-addedAauired.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748361017536-addedAauired.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748361017536-addedAauired.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedAauired1748361017536 implements MigrationInterface {\n  name = 'AddedAauired1748361017536';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"assets_origin_type_enum\" RENAME TO \"assets_origin_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"assets_origin_type_enum\" AS ENUM('invested', 'acquired', 'contributed')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ALTER COLUMN \"origin_type\" TYPE \"public\".\"assets_origin_type_enum\" USING \"origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_origin_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_origin_type_enum_old\" AS ENUM('invested', 'contributed')`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ALTER COLUMN \"origin_type\" TYPE \"public\".\"assets_origin_type_enum_old\" USING \"origin_type\"::\"text\"::\"public\".\"assets_origin_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_origin_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"assets_origin_type_enum_old\" RENAME TO \"assets_origin_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedAssetVaultName1745921850315.html":{"url":"classes/AddedAssetVaultName1745921850315.html","title":"class - AddedAssetVaultName1745921850315","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedAssetVaultName1745921850315\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745921850315-addedAssetVaultName.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedAssetVaultName1745921850315'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745921850315-addedAssetVaultName.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745921850315-addedAssetVaultName.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745921850315-addedAssetVaultName.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedAssetVaultName1745921850315 implements MigrationInterface {\n  name = 'AddedAssetVaultName1745921850315';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"asset_vault_name\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"asset_vault_name\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedAssetsStatus1748264767365.html":{"url":"classes/AddedAssetsStatus1748264767365.html","title":"class - AddedAssetsStatus1748264767365","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedAssetsStatus1748264767365\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1748264767365-addedAssetsStatus.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedAssetsStatus1748264767365'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1748264767365-addedAssetsStatus.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748264767365-addedAssetsStatus.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1748264767365-addedAssetsStatus.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedAssetsStatus1748264767365 implements MigrationInterface {\n  name = 'AddedAssetsStatus1748264767365';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_origin_type_enum\" AS ENUM('invested', 'contributed')`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"origin_type\" \"public\".\"assets_origin_type_enum\"`);\n    await queryRunner.query(\n      `COMMENT ON COLUMN \"assets\".\"origin_type\" IS 'Source or origin type of the asset (INVESTED, CONTRIBUTED)'`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`UPDATE assets SET origin_type = 'contributed';`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `COMMENT ON COLUMN \"assets\".\"origin_type\" IS 'Source or origin type of the asset (INVESTED, CONTRIBUTED)'`\n    );\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"origin_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_origin_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedContributorWhitelist1742484041497.html":{"url":"classes/AddedContributorWhitelist1742484041497.html","title":"class - AddedContributorWhitelist1742484041497","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedContributorWhitelist1742484041497\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742484041497-AddedContributorWhitelist.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedContributorWhitelist1742484041497'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742484041497-AddedContributorWhitelist.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742484041497-AddedContributorWhitelist.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742484041497-AddedContributorWhitelist.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedContributorWhitelist1742484041497 implements MigrationInterface {\n  name = 'AddedContributorWhitelist1742484041497';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `CREATE TABLE \"contributor_whitelist\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"wallet_address\" character varying NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, CONSTRAINT \"PK_61db8d3694e74fd55f37c54a54c\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"contributor_whitelist\" ADD CONSTRAINT \"FK_dad5613b25986784cf01e7fdaae\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"contributor_whitelist\" DROP CONSTRAINT \"FK_dad5613b25986784cf01e7fdaae\"`);\n    await queryRunner.query(`DROP TABLE \"contributor_whitelist\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedDelete1747838327085.html":{"url":"classes/AddedDelete1747838327085.html","title":"class - AddedDelete1747838327085","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedDelete1747838327085\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747838327085-addedDelete.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedDelete1747838327085'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747838327085-addedDelete.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747838327085-addedDelete.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747838327085-addedDelete.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedDelete1747838327085 implements MigrationInterface {\n  name = 'AddedDelete1747838327085';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" ADD \"deleted\" boolean NOT NULL DEFAULT false`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"deleted\" boolean NOT NULL DEFAULT false`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"deleted\" boolean NOT NULL DEFAULT false`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"deleted\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"deleted\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP COLUMN \"deleted\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedLiquidationHash1749046550619.html":{"url":"classes/AddedLiquidationHash1749046550619.html","title":"class - AddedLiquidationHash1749046550619","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedLiquidationHash1749046550619\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1749046550619-addedLiquidationHash.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedLiquidationHash1749046550619'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1749046550619-addedLiquidationHash.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749046550619-addedLiquidationHash.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749046550619-addedLiquidationHash.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedLiquidationHash1749046550619 implements MigrationInterface {\n  name = 'AddedLiquidationHash1749046550619';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"liquidation_hash\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"liquidation_hash\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedMaxAssetsCount1747911428750.html":{"url":"classes/AddedMaxAssetsCount1747911428750.html","title":"class - AddedMaxAssetsCount1747911428750","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedMaxAssetsCount1747911428750\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747911428750-AddedMaxAssetsCount.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedMaxAssetsCount1747911428750'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747911428750-AddedMaxAssetsCount.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747911428750-AddedMaxAssetsCount.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747911428750-AddedMaxAssetsCount.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedMaxAssetsCount1747911428750 implements MigrationInterface {\n  name = 'AddedMaxAssetsCount1747911428750';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"max_contribute_assets\" numeric NOT NULL DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"max_contribute_assets\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedPublicationHash1745583708330.html":{"url":"classes/AddedPublicationHash1745583708330.html","title":"class - AddedPublicationHash1745583708330","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedPublicationHash1745583708330\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745583708330-AddedPublicationHash.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedPublicationHash1745583708330'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745583708330-AddedPublicationHash.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745583708330-AddedPublicationHash.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745583708330-AddedPublicationHash.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedPublicationHash1745583708330 implements MigrationInterface {\n  name = 'AddedPublicationHash1745583708330';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"publication_hash\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"publication_hash\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedReserveVaule1747821437539.html":{"url":"classes/AddedReserveVaule1747821437539.html","title":"class - AddedReserveVaule1747821437539","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedReserveVaule1747821437539\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747821437539-addedReserveVaule.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedReserveVaule1747821437539'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747821437539-addedReserveVaule.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747821437539-addedReserveVaule.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747821437539-addedReserveVaule.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedReserveVaule1747821437539 implements MigrationInterface {\n  name = 'AddedReserveVaule1747821437539';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"require_reserved_cost_usd\" numeric DEFAULT '0'`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"require_reserved_cost_ada\" numeric DEFAULT '0'`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"require_reserved_cost_ada\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"require_reserved_cost_usd\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedTags1741943808652.html":{"url":"classes/AddedTags1741943808652.html","title":"class - AddedTags1741943808652","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedTags1741943808652\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741943808652-AddedTags.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedTags1741943808652'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1741943808652-AddedTags.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808652-AddedTags.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741943808652-AddedTags.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedTags1741943808652 implements MigrationInterface {\n  name = 'AddedTags1741943808652';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"tags\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" character varying NOT NULL, CONSTRAINT \"UQ_d90243459a697eadb8ad56e9092\" UNIQUE (\"name\"), CONSTRAINT \"PK_e7dc17249a1148a1970748eda99\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"vault_tags\" (\"tag_id\" uuid NOT NULL, \"vault_id\" uuid NOT NULL, CONSTRAINT \"PK_b43bcaa347028f52de05c137789\" PRIMARY KEY (\"tag_id\", \"vault_id\"))`\n    );\n    await queryRunner.query(`CREATE INDEX \"IDX_2b3fd4667b2be7a2d7a329083c\" ON \"vault_tags\" (\"tag_id\") `);\n    await queryRunner.query(`CREATE INDEX \"IDX_adf9f0b047319be1ec67ac1d1e\" ON \"vault_tags\" (\"vault_id\") `);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"asset_window\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_investment_window\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contribution_duration\" interval`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contribution_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_investment_window\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"asset_window\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_adf9f0b047319be1ec67ac1d1e\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_2b3fd4667b2be7a2d7a329083c\"`);\n    await queryRunner.query(`DROP TABLE \"vault_tags\"`);\n    await queryRunner.query(`DROP TABLE \"tags\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddedTransactionModelAndRelations1743588383672.html":{"url":"classes/AddedTransactionModelAndRelations1743588383672.html","title":"class - AddedTransactionModelAndRelations1743588383672","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddedTransactionModelAndRelations1743588383672\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddedTransactionModelAndRelations1743588383672'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743588383672-AddedTransactionModelAndRelations.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddedTransactionModelAndRelations1743588383672 implements MigrationInterface {\n  name = 'AddedTransactionModelAndRelations1743588383672';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"sender\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"receiver\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"block\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"metadata\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"utxo_input\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"utxo_output\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"utxo_ref\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"amount\" integer`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"transaction_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"fee\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"tx_hash\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_status_enum\" RENAME TO \"transactions_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_status_enum\" AS ENUM('created', 'pending', 'submitted', 'confirmed', 'failed', 'stuck')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"status\" TYPE \"public\".\"transactions_status_enum\" USING \"status\"::\"text\"::\"public\".\"transactions_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_20094ffc712b516cb4a7444de3b\" FOREIGN KEY (\"transaction_id\") REFERENCES \"transactions\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_20094ffc712b516cb4a7444de3b\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_status_enum_old\" AS ENUM('created', 'pending', 'submitted', 'confirmed', 'failed', 'manual-review')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"status\" TYPE \"public\".\"transactions_status_enum_old\" USING \"status\"::\"text\"::\"public\".\"transactions_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_status_enum_old\" RENAME TO \"transactions_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"tx_hash\" SET NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ALTER COLUMN \"fee\" SET NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"transaction_id\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"amount\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"utxo_ref\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"utxo_output\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" DROP COLUMN \"utxo_input\"`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"metadata\" jsonb`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"block\" integer NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"receiver\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"transactions\" ADD \"sender\" character varying NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Amount.html":{"url":"interfaces/Amount.html","title":"interface - Amount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Amount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/utils/lib.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            unit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockfrostServerError } from '@blockfrost/blockfrost-js';\nimport {\n  Address,\n  TransactionInput,\n  TransactionOutput,\n  TransactionHash,\n  TransactionUnspentOutput,\n  TransactionUnspentOutputs,\n  AssetName,\n  Assets,\n  BigNum,\n  MultiAsset,\n  ScriptHash,\n  Value,\n  PlutusData,\n  ConstrPlutusData,\n  BigInt,\n  hash_plutus_data,\n  PlutusList,\n} from '@emurgo/cardano-serialization-lib-nodejs';\n\ninterface Amount {\n  unit: string;\n  quantity: string | number;\n}\n\nconst assetsToValue = (assets: Amount[]) => {\n  const multiAsset = MultiAsset.new();\n  const lovelace = assets.find(asset => asset.unit === 'lovelace');\n  const policies = assets.filter(asset => asset.unit !== 'lovelace').map(asset => asset.unit.slice(0, 56));\n\n  if (!policies.length && lovelace) {\n    return Value.new(BigNum.from_str(String(Number(lovelace.quantity)  {\n    const policyAssets = assets.filter(asset => asset.unit.slice(0, 56) === policy);\n    const assetsValue = Assets.new();\n    policyAssets.forEach(asset => {\n      if (Number(asset.quantity) > 0)\n        assetsValue.insert(\n          AssetName.new(Buffer.from(asset.unit.slice(56), 'hex')),\n          BigNum.from_str(String(asset.quantity))\n        );\n    });\n    if (assetsValue.len() > 0) multiAsset.insert(ScriptHash.from_bytes(Buffer.from(policy, 'hex')), assetsValue);\n  });\n\n  const multiAssetsValue = Value.new(BigNum.from_str(lovelace ? String(lovelace.quantity) : '0'));\n  multiAssetsValue.set_multiasset(multiAsset);\n  return multiAssetsValue;\n};\n\nexport const getUtxos = async (address: Address, min = 0, blockfrost) => {\n  const utxos = await blockfrost.addressesUtxosAll(address.to_bech32());\n  const parsedUtxos = TransactionUnspentOutputs.new();\n  utxos.forEach((utxo: any) => {\n    const { tx_hash, output_index, amount } = utxo;\n    if (Number(amount[0].quantity) > min) {\n      parsedUtxos.add(\n        TransactionUnspentOutput.new(\n          TransactionInput.new(TransactionHash.from_hex(tx_hash), output_index),\n          TransactionOutput.new(address, assetsToValue(amount))\n        )\n      );\n    }\n  });\n  return parsedUtxos;\n};\n\nexport function generate_assetname_from_txhash_index(txHash: string, txOutputIdx: number) {\n  const plutusList = PlutusList.new();\n  plutusList.add(PlutusData.new_bytes(Buffer.from(txHash, 'hex')));\n\n  plutusList.add(PlutusData.new_integer(BigInt.from_str(String(txOutputIdx))));\n\n  const plutusData = PlutusData.new_constr_plutus_data(ConstrPlutusData.new(BigNum.zero(), plutusList));\n  const hash = hash_plutus_data(plutusData);\n\n  return hash.to_hex();\n}\n\nexport function generate_tag_from_txhash_index(tx_hash: string, tx_output_idx: number) {\n  const plutusList = PlutusList.new();\n  plutusList.add(PlutusData.new_bytes(Buffer.from(tx_hash, 'hex')));\n\n  plutusList.add(PlutusData.new_integer(BigInt.from_str(String(tx_output_idx))));\n\n  const plutusData = PlutusData.new_constr_plutus_data(ConstrPlutusData.new(BigNum.zero(), plutusList));\n  const hash = hash_plutus_data(plutusData);\n\n  return hash.to_hex();\n}\n\nexport async function getVaultUtxo(policyId: string, assetName: string, blockfrost) {\n  try {\n    const unit = policyId + assetName;\n    const assets = await blockfrost.assetsTransactions(unit, {\n      count: 1,\n      order: 'desc',\n    });\n\n    if (assets.length > 1) {\n      throw new Error('Must be one.');\n    }\n    const utxo = await blockfrost.txsUtxos(assets[0].tx_hash);\n\n    const index = utxo.outputs.findIndex(output => output.amount.find(amount => amount.unit === unit));\n\n    if (index === -1) {\n      throw new Error('Vault not found in transaction, your vault might be burned.');\n    }\n\n    return { txHash: utxo.hash, index: index };\n  } catch (e: unknown) {\n    if ((e as BlockfrostServerError).status_code === 404) {\n      throw new Error('Vault not found on chain.');\n    }\n    throw e;\n  }\n}\n\nexport function toHex(str: string) {\n  return Buffer.from(str).toString('hex');\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnvilApiConfig.html":{"url":"interfaces/AnvilApiConfig.html","title":"interface - AnvilApiConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnvilApiConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            endpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:     \"GET\" | \"POST\" | \"PATCH\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"GET\" | \"POST\" | \"PATCH\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnvilApiService.html":{"url":"injectables/AnvilApiService.html","title":"injectable - AnvilApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnvilApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    Private\n                                    Async\n                                callAnvilApi\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                patch\n                            \n                            \n                                    Async\n                                post\n                            \n                            \n                                    Async\n                                submitTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(params: BuildTransactionParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            BuildTransactionParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        callAnvilApi\n                        \n                    \n                \n            \n            \n                \n                        \n                    callAnvilApi(undefined: AnvilApiConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                                    B\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AnvilApiConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(endpoint: string, undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:40\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(endpoint: string, body: B)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                                    B\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        B\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(endpoint: string, body: B)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                                    B\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        B\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/anvil-api.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiDocParams.html":{"url":"interfaces/ApiDocParams.html","title":"interface - ApiDocParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiDocParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/api-doc.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators, HttpStatus } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\ninterface ApiDocParams {\n  summary: string;\n  description: string;\n  status: HttpStatus;\n}\n\nexport function ApiDoc({ summary, description = '', status = 200 }: ApiDocParams) {\n  return applyDecorators(ApiOperation({ summary }), ApiResponse({ status, description }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /info\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiVersion\n                        \n                    \n                \n            \n            \n                \n                        \n                    apiVersion()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get version of API', description: 'Version has returned', status: 200})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AppService } from './app.service';\nimport { ApiDoc } from './decorators/api-doc.decorator';\n\n@ApiTags('info')\n@Controller('/info')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n\n  @ApiDoc({\n    summary: 'Get version of API',\n    description: 'Version has returned',\n    status: 200,\n  })\n  @Get()\n  apiVersion(): string {\n    return this.appService.apiVersion();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAcquireModule\n\nAcquireModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAcquireModule->AppModule\n\n\n\n\n\nAssetsModule\n\nAssetsModule\n\nAppModule -->\n\nAssetsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAwsModule\n\nAwsModule\n\nAppModule -->\n\nAwsModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nAppModule -->\n\nBlockchainModule->AppModule\n\n\n\n\n\nClaimsModule\n\nClaimsModule\n\nAppModule -->\n\nClaimsModule->AppModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nDistributionModule\n\nDistributionModule\n\nAppModule -->\n\nDistributionModule->AppModule\n\n\n\n\n\nJwtGlobalModule\n\nJwtGlobalModule\n\nAppModule -->\n\nJwtGlobalModule->AppModule\n\n\n\n\n\nLpTokensModule\n\nLpTokensModule\n\nAppModule -->\n\nLpTokensModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVaultsModule\n\nVaultsModule\n\nAppModule -->\n\nVaultsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AcquireModule\n                        \n                        \n                            AssetsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AwsModule\n                        \n                        \n                            BlockchainModule\n                        \n                        \n                            ClaimsModule\n                        \n                        \n                            ContributionModule\n                        \n                        \n                            DistributionModule\n                        \n                        \n                            JwtGlobalModule\n                        \n                        \n                            LpTokensModule\n                        \n                        \n                            TransactionsModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VaultsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BullModule } from '@nestjs/bullmq';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SnakeNamingStrategy } from 'typeorm-naming-strategies';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { AwsModule } from './modules/aws_bucket/aws.module';\nimport { ClaimsModule } from './modules/claims/claims.module';\nimport { DistributionModule } from './modules/distribution/distribution.module';\nimport { JwtGlobalModule } from './modules/globals/jwt_global_module/jwt_global.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { LpTokensModule } from './modules/vaults/lp-tokens/lp-tokens.module';\nimport { AcquireModule } from './modules/vaults/phase-management/acquire/acquire.module';\nimport { ContributionModule } from './modules/vaults/phase-management/contribution/contribution.module';\nimport { AssetsModule } from './modules/vaults/processing-tx/assets/assets.module';\nimport { TransactionsModule } from './modules/vaults/processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from './modules/vaults/processing-tx/onchain/blockchain.module';\nimport { VaultsModule } from './modules/vaults/vaults.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    BullModule.forRoot({\n      connection: {\n        host: process.env.REDIS_HOST,\n        port: 6379,\n      },\n    }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT, 5432),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      synchronize: false,\n      entities: [__dirname + '/database/core/**/*.entity{.ts,.js}', __dirname + '/database/*.entity{.ts,.js}'],\n      autoLoadEntities: true,\n      namingStrategy: new SnakeNamingStrategy(),\n    }),\n    JwtGlobalModule,\n    AuthModule,\n    AssetsModule,\n    BlockchainModule,\n    VaultsModule,\n    UsersModule,\n    AwsModule,\n    ContributionModule,\n    AcquireModule,\n    TransactionsModule,\n    LpTokensModule,\n    DistributionModule,\n    ClaimsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apiVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n            \n                \napiVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { version } from '../package.json';\n\n@Injectable()\nexport class AppService {\n  apiVersion(): string {\n    return `L4va API version: ${version}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Asset.html":{"url":"entities/Asset.html","title":"entity - Asset","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Asset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/asset.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                added_at\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                added_by\n                            \n                            \n                                    \n                                    \n                                asset_id\n                            \n                            \n                                    \n                                    \n                                contract_address\n                            \n                            \n                                    \n                                deleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dex_price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                floor_price\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                last_valuation\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                locked_at\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                origin_type\n                            \n                            \n                                    \n                                    \n                                policy_id\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                released_at\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                transaction\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                vault\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        added_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'addedAt'})@Column({name: 'added_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'addedBy'})@ManyToOne(undefined, addedBy => addedBy.id)@JoinColumn({name: 'added_by'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        asset_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'assetId'})@Column({name: 'asset_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contract_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'contractAddress'})@Column({name: 'contract_address', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'deleted', type: 'boolean', nullable: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dex_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'dexPrice'})@Column({name: 'dex_price', type: 'decimal', precision: 20, scale: 2, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        floor_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'floorPrice'})@Column({name: 'floor_price', type: 'decimal', precision: 20, scale: 2, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        last_valuation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'lastValuation'})@Column({name: 'last_valuation', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        locked_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'lockedAt'})@Column({name: 'locked_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: true})@Expose({name: 'metadata'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        origin_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetOriginType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'originType'})@Column({name: 'origin_type', type: 'enum', enum: AssetOriginType, nullable: true, comment: 'Source or origin type of the asset (INVESTED, CONTRIBUTED)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        policy_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'policyId'})@Column({name: 'policy_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 20, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        released_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'releasedAt'})@Column({name: 'released_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AssetStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'transaction'})@ManyToOne(undefined, transaction => transaction.id)@JoinColumn({name: 'transaction_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AssetType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({name: 'updated_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.assets)@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/asset.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn, BeforeInsert, BeforeUpdate } from 'typeorm';\n\nimport { AssetType, AssetStatus, AssetOriginType } from '../types/asset.types';\n\nimport { Transaction } from './transaction.entity';\nimport { User } from './user.entity';\nimport { Vault } from './vault.entity';\n\n@Entity('assets')\nexport class Asset {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => Vault, vault => vault.assets)\n  @JoinColumn({ name: 'vault_id' })\n  vault: Vault; // nullable empty if joined to transaction\n\n  @Expose({ name: 'policyId' })\n  @Column({\n    name: 'policy_id',\n  })\n  policy_id: string;\n\n  @Expose({ name: 'assetId' })\n  @Column({\n    name: 'asset_id',\n  })\n  asset_id: string;\n\n  @Column({\n    type: 'enum',\n    enum: AssetType,\n  })\n  type: AssetType;\n\n  @Expose({ name: 'contractAddress' })\n  @Column({ name: 'contract_address', nullable: true })\n  contract_address: string;\n\n  @Column({ type: 'decimal', precision: 20, scale: 2, default: 0 })\n  quantity: number;\n\n  @Expose({ name: 'floorPrice' })\n  @Column({\n    name: 'floor_price',\n    type: 'decimal',\n    precision: 20,\n    scale: 2,\n    nullable: true,\n  })\n  floor_price?: number;\n\n  @Expose({ name: 'dexPrice' })\n  @Column({\n    name: 'dex_price',\n    type: 'decimal',\n    precision: 20,\n    scale: 2,\n    nullable: true,\n  })\n  dex_price?: number;\n\n  @Column({ name: 'deleted', type: 'boolean', nullable: false, default: false })\n  deleted: boolean;\n\n  @Expose({ name: 'lastValuation' })\n  @Column({\n    name: 'last_valuation',\n    type: 'timestamptz',\n    nullable: true,\n  })\n  last_valuation?: Date;\n\n  @Column({\n    type: 'enum',\n    enum: AssetStatus,\n    default: AssetStatus.PENDING,\n  })\n  status: AssetStatus;\n\n  @Expose({ name: 'lockedAt' })\n  @Column({\n    name: 'locked_at',\n    type: 'timestamptz',\n    nullable: true,\n  })\n  locked_at?: Date;\n\n  @Expose({ name: 'releasedAt' })\n  @Column({\n    name: 'released_at',\n    type: 'timestamptz',\n    nullable: true,\n  })\n  released_at?: Date;\n\n  @Expose({ name: 'originType' })\n  @Column({\n    name: 'origin_type',\n    type: 'enum',\n    enum: AssetOriginType,\n    nullable: true,\n    comment: 'Source or origin type of the asset (INVESTED, CONTRIBUTED)',\n  })\n  origin_type?: AssetOriginType;\n\n  @Column({ type: 'jsonb', nullable: true })\n  @Expose({ name: 'metadata' })\n  metadata: any;\n\n  @Expose({ name: 'transaction' })\n  @ManyToOne(() => Transaction, (transaction: Transaction) => transaction.id)\n  @JoinColumn({ name: 'transaction_id' })\n  public transaction: Transaction;\n\n  @Expose({ name: 'addedBy' })\n  @ManyToOne(() => User, (addedBy: User) => addedBy.id)\n  @JoinColumn({ name: 'added_by' })\n  public added_by: User; // added user owner\n\n  @Expose({ name: 'addedAt' })\n  @Column({\n    name: 'added_at',\n    type: 'timestamptz',\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  added_at: Date;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({\n    name: 'updated_at',\n    type: 'timestamptz',\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  updated_at: Date;\n\n  @BeforeInsert()\n  setAddedAt() {\n    this.added_at = new Date();\n    this.updated_at = new Date();\n  }\n\n  @BeforeUpdate()\n  updateTimestamp() {\n    this.updated_at = new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetMetadataDto.html":{"url":"classes/AssetMetadataDto.html","title":"class - AssetMetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetMetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty({type: 'object', description: 'Custom attributes for the asset', additionalProperties: true, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEnum, IsNumber, IsOptional, IsObject, ValidateNested } from 'class-validator';\nimport { AssetType } from '@/types/asset.types';\n\nexport class AssetMetadataDto {\n  @IsString()\n  @ApiProperty()\n  name: string;\n\n  @IsString()\n  @ApiProperty()\n  description: string;\n\n  @IsString()\n  @ApiProperty()\n  imageUrl: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  category?: string;\n\n  @IsObject()\n  @ApiProperty({\n    type: 'object',\n    description: 'Custom attributes for the asset',\n    additionalProperties: true,\n    example: {\n      rarity: 'legendary',\n      edition: '1/100',\n      traits: ['gold', 'limited'],\n    },\n  })\n  attributes: Record;\n}\n\nexport class CreateAssetDto {\n  @IsString()\n  @ApiProperty()\n  vaultId: string;\n\n  @IsEnum(AssetType)\n  @ApiProperty({ enum: AssetType })\n  type: AssetType;\n\n  @IsString()\n  @ApiProperty()\n  contractAddress: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  tokenId?: string;\n\n  @IsNumber()\n  @ApiProperty()\n  quantity: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  floorPrice?: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  dexPrice?: number;\n\n  @ValidateNested()\n  @Type(() => AssetMetadataDto)\n  @ApiProperty({ type: AssetMetadataDto })\n  metadata: AssetMetadataDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetValueDto.html":{"url":"classes/AssetValueDto.html","title":"class - AssetValueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetValueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/dto/asset-value.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                displayName\n                            \n                            \n                                isFungibleToken\n                            \n                            \n                                isNft\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                name\n                            \n                            \n                                priceAda\n                            \n                            \n                                priceUsd\n                            \n                            \n                                quantity\n                            \n                            \n                                    Optional\n                                ticker\n                            \n                            \n                                tokenId\n                            \n                            \n                                valueAda\n                            \n                            \n                                valueUsd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFungibleToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ticker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/asset-value.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AssetValueDto {\n  tokenId: string;\n  name: string;\n  displayName?: string;\n  ticker?: string;\n  quantity: number;\n  isNft: boolean;\n  isFungibleToken: boolean;\n  priceAda: number;\n  priceUsd: number;\n  valueAda: number;\n  valueUsd: number;\n  metadata?: {\n    policyId: string;\n    fingerprint: string;\n    decimals: number;\n    description?: string;\n    image?: string;\n    assetName?: string;\n    mintTx?: string;\n    mintQuantity?: string;\n    onchainMetadata?: Record;\n    mediaType?: string;\n    files?: Array;\n    attributes?: Record;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetWhitelist.html":{"url":"classes/AssetWhitelist.html","title":"class - AssetWhitelist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMax\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMin\n                            \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:49\n                        \n                    \n\n            \n                \n                    Maximum number of assets allowed\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:39\n                        \n                    \n\n            \n                \n                    Minimum number of assets allowed\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:29\n                        \n                    \n\n            \n                \n                    Policy ID of the asset (56-character hex string)\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssetWhitelistDto.html":{"url":"classes/AssetWhitelistDto.html","title":"class - AssetWhitelistDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssetWhitelistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/assetWhitelist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMax\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                countCapMin\n                            \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Maximum number of assets allowed', required: false, example: 10})@IsOptional()@IsNumber()@Expose({name: 'countCapMax'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/assetWhitelist.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        countCapMin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Minimum number of assets allowed', required: false, example: 1})@IsOptional()@IsNumber()@Expose({name: 'countCapMin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/assetWhitelist.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the asset (56-character hex string)', example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@IsString()@Matches(/^[0-9a-fA-F]{56}$/, {message: 'Policy ID must be a 56-character hexadecimal string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/assetWhitelist.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, Matches } from 'class-validator';\n\nexport class AssetWhitelistDto {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsString()\n  @Matches(/^[0-9a-fA-F]{56}$/, {\n    message: 'Policy ID must be a 56-character hexadecimal string',\n  })\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Minimum number of assets allowed',\n    required: false,\n    example: 1,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose({ name: 'countCapMin' })\n  countCapMin?: number;\n\n  @ApiProperty({\n    description: 'Maximum number of assets allowed',\n    required: false,\n    example: 10,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose({ name: 'countCapMax' })\n  countCapMax?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AssetsController.html":{"url":"controllers/AssetsController.html","title":"controller - AssetsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AssetsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/assets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                assets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getContributedAssets\n                            \n                            \n                                    \n                                    \n                                    \n                                getInvestedAssets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getContributedAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContributedAssets(req, vaultId: string, query: PaginationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get vault assets', description: 'Get paginated list of assets for a specific vault', status: 200})@UseGuards(AuthGuard)@Get('contributed/:vaultId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getInvestedAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInvestedAssets(req, vaultId: string, query: PaginationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get vault assets', description: 'Get paginated list of assets for a specific vault', status: 200})@UseGuards(AuthGuard)@Get('acquired/:vaultId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            PaginationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Param, Request, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApiDoc } from '@/decorators/api-doc.decorator';\nimport { AuthGuard } from '@/modules/auth/auth.guard';\n\nimport { PaginationDto } from '../../dto/pagination.dto';\n\nimport { AssetsService } from './assets.service';\n\n@ApiTags('assets')\n@Controller('assets')\nexport class AssetsController {\n  constructor(private readonly assetsService: AssetsService) {}\n\n  @ApiDoc({\n    summary: 'Get vault assets',\n    description: 'Get paginated list of assets for a specific vault',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('contributed/:vaultId')\n  getContributedAssets(@Request() req, @Param('vaultId') vaultId: string, @Query() query: PaginationDto) {\n    const userId = req.user.sub;\n    return this.assetsService.getVaultAssets(userId, vaultId, query.page, query.limit);\n  }\n\n  @ApiDoc({\n    summary: 'Get vault assets',\n    description: 'Get paginated list of assets for a specific vault',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('acquired/:vaultId')\n  getInvestedAssets(@Request() req, @Param('vaultId') vaultId: string, @Query() query: PaginationDto) {\n    const userId = req.user.sub;\n    return this.assetsService.getAcquiredAssets(userId, vaultId, query.page, query.limit);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AssetsModule.html":{"url":"modules/AssetsModule.html","title":"module - AssetsModule","body":"\n                   \n\n\n\n\n    Modules\n    AssetsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AssetsModule\n\n\n\ncluster_AssetsModule_providers\n\n\n\ncluster_AssetsModule_exports\n\n\n\n\nAssetsService \n\nAssetsService \n\n\n\nAssetsModule\n\nAssetsModule\n\nAssetsService  -->\n\nAssetsModule->AssetsService \n\n\n\n\n\nAssetsService\n\nAssetsService\n\nAssetsModule -->\n\nAssetsService->AssetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/assets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AssetsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AssetsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssetsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AssetsController } from './assets.controller';\nimport { AssetsService } from './assets.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Asset, Vault, Transaction, User])],\n  controllers: [AssetsController],\n  providers: [AssetsService],\n  exports: [AssetsService],\n})\nexport class AssetsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssetsService.html":{"url":"injectables/AssetsService.html","title":"injectable - AssetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/assets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAssetToVault\n                            \n                            \n                                    Async\n                                getAcquiredAssets\n                            \n                            \n                                    Async\n                                getVaultAssets\n                            \n                            \n                                    Async\n                                lockAsset\n                            \n                            \n                                    Async\n                                releaseAsset\n                            \n                            \n                                    Async\n                                updateAssetValuation\n                            \n                            \n                                    Async\n                                updateTransactionAssets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(assetsRepository: Repository, vaultsRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        assetsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAssetToVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAssetToVault(userId: string, data: CreateAssetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateAssetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAcquiredAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAcquiredAssets(userId: string, vaultId: string, page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getVaultAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultAssets(userId: string, vaultId: string, page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        lockAsset\n                        \n                    \n                \n            \n            \n                \n                        \n                    lockAsset(userId: string, assetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseAsset\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseAsset(userId: string, assetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAssetValuation\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAssetValuation(userId: string, assetId: string, floorPrice?: number, dexPrice?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                floorPrice\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                dexPrice\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionAssets\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionAssets(transactionId: string, vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/assets/assets.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { classToPlain } from 'class-transformer';\nimport { Asset } from '@/database/asset.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { AssetOriginType, AssetStatus, AssetType } from '@/types/asset.types';\nimport { VaultStatus } from '@/types/vault.types';\nimport { Repository } from 'typeorm';\n\nimport { CreateAssetDto } from './dto/create-asset.dto';\n\n@Injectable()\nexport class AssetsService {\n  constructor(\n    @InjectRepository(Asset)\n    private readonly assetsRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    @InjectRepository(User)\n    private readonly userRepository: Repository\n  ) {}\n\n  async addAssetToVault(userId: string, data: CreateAssetDto): Promise {\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id: data.vaultId,\n        owner: { id: userId },\n      },\n    });\n\n    const user = await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Vault not found or access denied');\n    }\n\n    if (!user) {\n      throw new BadRequestException('User not found or access denied');\n    }\n\n    if (vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Assets can only be added during the contribution phase');\n    }\n\n    // Validate asset type-specific requirements\n    if (data.type === AssetType.NFT && !data.tokenId) {\n      throw new BadRequestException('Token ID is required for NFT assets');\n    }\n\n    if (data.type === AssetType.CNT && !data.dexPrice) {\n      throw new BadRequestException('DEX price is required for CNT assets');\n    }\n\n    // Create and save the asset\n    const asset = this.assetsRepository.create({\n      type: data.type,\n      quantity: data.quantity,\n      floor_price: data.floorPrice,\n      dex_price: data.dexPrice,\n      last_valuation: new Date(),\n      status: AssetStatus.PENDING,\n      metadata: data.metadata,\n      added_by: user,\n    });\n\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async getVaultAssets(userId: string, vaultId: string, page: number = 1, limit: number = 10): Promise {\n    // Verify vault ownership\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id: vaultId,\n      },\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Vault not found or access denied');\n    }\n\n    const [assets, total] = await this.assetsRepository.findAndCount({\n      where: {\n        vault: {\n          id: vaultId,\n        },\n        origin_type: AssetOriginType.CONTRIBUTED,\n      },\n      skip: (page - 1) * limit,\n      take: limit,\n      order: {\n        added_at: 'DESC',\n      },\n    });\n\n    return {\n      items: assets.map(asset => classToPlain(asset)),\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n  async getAcquiredAssets(userId: string, vaultId: string, page: number = 1, limit: number = 10): Promise {\n    // Verify vault ownership\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id: vaultId,\n      },\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Vault not found or access denied');\n    }\n\n    const [assets, total] = await this.assetsRepository.findAndCount({\n      where: {\n        vault: {\n          id: vaultId,\n        },\n        origin_type: AssetOriginType.ACQUIRED,\n      },\n      skip: (page - 1) * limit,\n      take: limit,\n      order: {\n        added_at: 'DESC',\n      },\n    });\n\n    return {\n      items: assets.map(asset => classToPlain(asset)),\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n\n  async lockAsset(userId: string, assetId: string): Promise {\n    const asset = await this.assetsRepository.findOne({\n      where: { id: assetId },\n      relations: ['vault', 'vault.owner'],\n    });\n\n    if (!asset || asset.vault.owner.id !== userId) {\n      throw new BadRequestException('Asset not found or access denied');\n    }\n\n    if (asset.vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Assets can only be locked during the contribution phase');\n    }\n\n    if (asset.status !== AssetStatus.PENDING) {\n      throw new BadRequestException('Only pending assets can be locked');\n    }\n\n    asset.status = AssetStatus.LOCKED;\n    asset.locked_at = new Date();\n\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async releaseAsset(userId: string, assetId: string): Promise {\n    const asset = await this.assetsRepository.findOne({\n      where: { id: assetId },\n      relations: ['vault', 'vault.owner'],\n    });\n\n    if (!asset || asset.vault.owner.id !== userId) {\n      throw new BadRequestException('Asset not found or access denied');\n    }\n\n    if (asset.vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Assets can only be released during the contribution phase');\n    }\n\n    if (asset.status !== AssetStatus.LOCKED) {\n      throw new BadRequestException('Only locked assets can be released');\n    }\n\n    asset.status = AssetStatus.RELEASED;\n    asset.released_at = new Date();\n\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async updateAssetValuation(userId: string, assetId: string, floorPrice?: number, dexPrice?: number): Promise {\n    const asset = await this.assetsRepository.findOne({\n      where: { id: assetId },\n      relations: ['vault', 'vault.owner'],\n    });\n\n    if (!asset || asset.vault.owner.id !== userId) {\n      throw new BadRequestException('Asset not found or access denied');\n    }\n\n    if (asset.vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Asset valuations can only be updated during the contribution phase');\n    }\n\n    if (asset.type === AssetType.NFT && floorPrice !== undefined) {\n      asset.floor_price = floorPrice;\n    }\n\n    if (asset.type === AssetType.CNT && dexPrice !== undefined) {\n      asset.dex_price = dexPrice;\n    }\n\n    asset.last_valuation = new Date();\n    await this.assetsRepository.save(asset);\n    return classToPlain(asset);\n  }\n\n  async updateTransactionAssets(transactionId: string, vaultId: string): Promise {\n    const assets = await this.assetsRepository.find({\n      where: {\n        transaction: { id: transactionId },\n      },\n    });\n\n    if (!assets.length) {\n      return;\n    }\n\n    const vault = await this.vaultsRepository.findOne({\n      where: { id: vaultId },\n    });\n\n    if (!vault) {\n      throw new BadRequestException(`Vault with id ${vaultId} not found`);\n    }\n\n    // Update all assets to be linked to the vault\n    await Promise.all(\n      assets.map(async asset => {\n        asset.vault = vault;\n        asset.status = AssetStatus.LOCKED;\n        asset.locked_at = new Date();\n        return this.assetsRepository.save(asset);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AssetsWhitelistEntity.html":{"url":"entities/AssetsWhitelistEntity.html","title":"entity - AssetsWhitelistEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AssetsWhitelistEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/assetsWhitelist.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                asset_count_cap_max\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                asset_count_cap_min\n                            \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                policy_id\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vault\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        asset_count_cap_max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'countCapMax'})@Column({name: 'asset_count_cap_max', type: 'integer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        asset_count_cap_min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'countCapMin'})@Column({name: 'asset_count_cap_min', type: 'integer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policy_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'policyId'})@Column({type: 'varchar', length: 56, nullable: false})@Matches(/^[0-9a-fA-F]{56}$/, {message: 'Policy ID must be a 56-character hexadecimal string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.assets_whitelist, {onDelete: 'CASCADE'})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/assetsWhitelist.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Matches } from 'class-validator';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'assets_whitelist' })\nexport class AssetsWhitelistEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'policyId' })\n  @Column({ type: 'varchar', length: 56, nullable: false })\n  @Matches(/^[0-9a-fA-F]{56}$/, {\n    message: 'Policy ID must be a 56-character hexadecimal string',\n  })\n  policy_id: string;\n\n  @Expose({ name: 'countCapMin' })\n  @Column({\n    name: 'asset_count_cap_min',\n    type: 'integer',\n    nullable: true,\n  })\n  asset_count_cap_min?: number;\n\n  @Expose({ name: 'countCapMax' })\n  @Column({\n    name: 'asset_count_cap_max',\n    type: 'integer',\n    nullable: true,\n  })\n  asset_count_cap_max?: number;\n\n  @ManyToOne(() => Vault, (vault: Vault) => vault.assets_whitelist, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'vault_id' })\n  public vault: Vault;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(signatureData: LoginReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Login user', description: 'User login successful', status: 200})@HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signatureData\n                                            \n                                                            LoginReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApiDoc } from '@/decorators/api-doc.decorator';\n\nimport { AuthService } from './auth.service';\nimport { LoginReq } from './dto/login.req';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @ApiDoc({\n    summary: 'Login user',\n    description: 'User login successful',\n    status: 200,\n  })\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  async login(@Body() signatureData: LoginReq) {\n    return this.authService.verifySignature(signatureData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      request['user'] = await this.jwtService.verifyAsync(token, {\n        secret: this.configService.get('JWT_SECRET'),\n      });\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { User } from '@/database/user.entity';\nimport { UsersModule } from '../users/users.module';\n\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [UsersModule, TypeOrmModule.forFeature([User])],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                verifySignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifySignature\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifySignature(signatureData: LoginReq)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signatureData\n                                            \n                                                            LoginReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'buffer';\n\nimport { COSESign1, COSEKey, Label, Int, BigNum } from '@emurgo/cardano-message-signing-nodejs';\nimport { Ed25519Signature, PublicKey, Address, RewardAddress } from '@emurgo/cardano-serialization-lib-nodejs';\nimport { transformImageToUrl } from '@/helpers';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { generateUsername } from 'unique-username-generator';\n\nimport { UsersService } from '../users/users.service';\n\nimport { LoginReq } from './dto/login.req';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService\n  ) {}\n\n  async verifySignature(signatureData: LoginReq) {\n    try {\n      const { signature, stakeAddress, walletAddress } = signatureData;\n\n      // Verify the signature\n      const decoded = COSESign1.from_bytes(Buffer.from(signature.signature, 'hex'));\n      const headermap = decoded.headers().protected().deserialized_headers();\n      const addressHex = Buffer.from(headermap.header(Label.new_text('address')).to_bytes())\n        .toString('hex')\n        .substring(4);\n      const address = Address.from_bytes(Buffer.from(addressHex, 'hex'));\n\n      const key = COSEKey.from_bytes(Buffer.from(signature.key, 'hex'));\n      const pubKeyBytes = key.header(Label.new_int(Int.new_negative(BigNum.from_str('2')))).as_bytes();\n      const publicKey = PublicKey.from_bytes(pubKeyBytes);\n\n      const payload = decoded.payload();\n      const sig = Ed25519Signature.from_bytes(decoded.signature());\n      const signedData = decoded.signed_data().to_bytes();\n\n      const signerStakeAddrBech32 = RewardAddress.from_address(address).to_address().to_bech32();\n\n      const utf8Payload = Buffer.from(payload).toString('utf8');\n      const expectedMessage = `account: ${signerStakeAddrBech32}`;\n\n      const isVerified = publicKey.verify(signedData, sig);\n      const messageMatches = utf8Payload === expectedMessage;\n      const addressMatches = signerStakeAddrBech32 === stakeAddress;\n\n      if (!isVerified || !messageMatches || !addressMatches) {\n        return {\n          success: false,\n          message: 'Signature verification failed',\n        };\n      }\n\n      // Find user in database by wallet address\n      let user = await this.usersService.findByAddress(stakeAddress);\n\n      if (!user) {\n        try {\n          user = await this.usersService.create({\n            address: walletAddress,\n            stake_address: stakeAddress,\n            name: generateUsername(),\n          });\n        } catch (error) {\n          console.error('Error creating new user:', error);\n          return {\n            success: false,\n            message: 'Failed to create new user',\n          };\n        }\n      }\n      if (!user?.address || user?.address?.includes('stake1')) {\n        await this.usersService.updateUserAddress(user.id, walletAddress);\n      }\n      // Generate JWT token\n      const jwtPayload = {\n        sub: user.id,\n        address: user.address,\n        name: user.name,\n      };\n\n      const profileImage = transformImageToUrl(user.profile_image);\n      const bannerImage = transformImageToUrl(user.banner_image);\n\n      return {\n        success: true,\n        message: '✅ Authentication success!',\n        accessToken: await this.jwtService.signAsync(jwtPayload),\n        user: {\n          id: user.id,\n          name: user.name,\n          address: user.address,\n          description: user.description,\n          tvl: user.tvl,\n          totalVaults: user.total_vaults,\n          gains: user.gains,\n          profileImage: profileImage,\n          bannerImage: bannerImage,\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || 'Authentication failed',\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AwsController.html":{"url":"controllers/AwsController.html","title":"controller - AwsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AwsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/aws_bucket/aws.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getCsvFile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getImageFile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleCsvFiles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getCsvFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCsvFile(id, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get csv from bucket', description: 'Forward csv directly to frontend', status: 200})@Get('/csv/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getImageFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImageFile(id, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get image from bucket', description: 'Forward image directly to frontend', status: 200})@Get('/image/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleCsvFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCsvFiles(file: Express.Multer.File, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Validate and parcing CSV', description: 'Image upload successfully', status: 200})@UseInterceptors(undefined)@UseGuards(AuthGuard)@Post('/handle-csv')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Upload image files', description: 'Image upload successfully', status: 200})@UseInterceptors(undefined)@Post('/upload')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  ClassSerializerInterceptor,\n  Controller,\n  FileTypeValidator,\n  Get,\n  Logger,\n  MaxFileSizeValidator,\n  Param,\n  ParseFilePipe,\n  Post,\n  Req,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Express, Response, Request } from 'express';\nimport { Multer } from 'multer';\n\nimport { AuthGuard } from '../auth/auth.guard';\n\nimport { AwsService } from './aws.service';\n\nimport { ApiDoc } from '@/decorators/api-doc.decorator';\n\nexport const mbMultiplication = 1024 * 1024;\n\n@ApiTags('files')\n@Controller('')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AwsController {\n  private readonly logger = new Logger(AwsController.name);\n  constructor(private readonly awsService: AwsService) {}\n\n  @ApiDoc({\n    summary: 'Upload image files',\n    description: 'Image upload successfully',\n    status: 200,\n  })\n  @UseInterceptors(FileInterceptor('image'))\n  @Post('/upload')\n  @UseGuards(AuthGuard)\n  async uploadFile(\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }), // 5mb\n          new FileTypeValidator({ fileType: 'image/*' }),\n        ],\n      })\n    )\n    file: Express.Multer.File,\n    @Req() req: Request\n  ) {\n    const { host } = req?.headers;\n    return await this.awsService.uploadImage(file, host);\n  }\n\n  @ApiDoc({\n    summary: 'Get image from bucket',\n    description: 'Forward image directly to frontend',\n    status: 200,\n  })\n  @Get('/image/:id')\n  async getImageFile(@Param('id') id, @Res() res: Response) {\n    const response = await this.awsService.getImage(id);\n    res.setHeader('Content-Type', response.headers['content-type']);\n    res.setHeader('Cache-Control', 'public, max-age=3600');\n    response.data.pipe(res);\n  }\n\n  @ApiDoc({\n    summary: 'Get csv from bucket',\n    description: 'Forward csv directly to frontend',\n    status: 200,\n  })\n  @Get('/csv/:id')\n  async getCsvFile(@Param('id') id, @Res() res: Response) {\n    const response = await this.awsService.getCsv(id);\n    res.setHeader('Content-Type', response.headers['content-type']);\n    res.setHeader('Cache-Control', 'public, max-age=3600');\n    response.data.pipe(res);\n  }\n\n  @ApiDoc({\n    summary: 'Validate and parcing CSV',\n    description: 'Image upload successfully',\n    status: 200,\n  })\n  @UseInterceptors(FileInterceptor('csv'))\n  @UseGuards(AuthGuard)\n  @Post('/handle-csv')\n  async handleCsvFiles(\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }),\n          new FileTypeValidator({ fileType: 'text/csv' }),\n        ],\n      })\n    )\n    file: Express.Multer.File,\n    @Req() req: Request\n  ) {\n    // todo need to validate and parse csv and then return list of asset whitelist id's\n    this.logger.log('csv file received', file);\n    const { host } = req?.headers;\n\n    return await this.awsService.uploadCSV(file, host);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AwsModule.html":{"url":"modules/AwsModule.html","title":"module - AwsModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_exports\n\n\n\ncluster_AwsModule_providers\n\n\n\n\nAwsService \n\nAwsService \n\n\n\nAwsModule\n\nAwsModule\n\nAwsService  -->\n\nAwsModule->AwsService \n\n\n\n\n\nAwsService\n\nAwsService\n\nAwsModule -->\n\nAwsService->AwsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/aws_bucket/aws.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AwsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AwsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AwsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { FileEntity } from '@/database/file.entity';\n\nimport { AwsController } from './aws.controller';\nimport { AwsService } from './aws.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([FileEntity]),\n    HttpModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        global: true,\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: '1d' },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AwsController],\n  providers: [AwsService],\n  exports: [AwsService],\n})\nexport class AwsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsService.html":{"url":"injectables/AwsService.html","title":"injectable - AwsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/aws_bucket/aws.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bucketName\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCsv\n                            \n                            \n                                    Async\n                                getImage\n                            \n                            \n                                    Async\n                                getPreSignedURL\n                            \n                            \n                                getS3\n                            \n                            \n                                    Async\n                                uploadCSV\n                            \n                            \n                                    Async\n                                uploadImage\n                            \n                            \n                                    Async\n                                uploadS3\n                            \n                            \n                                    Private\n                                    Async\n                                validateCsvAddresses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/aws_bucket/aws.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCsv\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCsv(bucketKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(bucketKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPreSignedURL\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPreSignedURL(bucketName: string, key: string, contentType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contentType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getS3\n                        \n                    \n                \n            \n            \n                \ngetS3()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadCSV(file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadImage(file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadS3\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadS3(file, name, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateCsvAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCsvAddresses(buffer: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/aws_bucket/aws.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bucketName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.AWS_BUCKET_NAME\n                    \n                \n                    \n                        \n                                Defined in src/modules/aws_bucket/aws.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AwsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/aws_bucket/aws.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AWS.S3\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/aws_bucket/aws.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as process from 'process';\n\nimport { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport AWS, { S3 } from 'aws-sdk';\nimport { ManagedUpload } from 'aws-sdk/clients/s3';\nimport * as csv from 'csv-parse';\nimport { Repository } from 'typeorm';\nimport { v4 as uuid } from 'uuid';\n\nimport { FileEntity } from '@/database/file.entity';\n\n@Injectable()\nexport class AwsService {\n  private s3: AWS.S3;\n  private bucketName = process.env.AWS_BUCKET_NAME;\n\n  private readonly logger = new Logger(AwsService.name);\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n    private readonly httpService: HttpService\n  ) {}\n  getS3() {\n    if (this.s3) {\n      return this.s3;\n    }\n    const s3 = new S3({\n      region: 'auto',\n      endpoint: process.env.AWS_BUCKET_URL, // URL for R2\n      signatureVersion: 'v4',\n      credentials: {\n        accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n        secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n      },\n      s3ForcePathStyle: true,\n    });\n    this.s3 = s3;\n    return s3;\n  }\n\n  async uploadS3(file, name, type): Promise {\n    const s3 = this.getS3();\n    const params = {\n      Bucket: 'static',\n      Key: name,\n      Body: file,\n      ContentType: type,\n      ACL: 'public-read',\n    };\n    return new Promise((resolve, reject) => {\n      s3.upload(params, (err, data) => {\n        if (err) {\n          Logger.error(err);\n          reject(err.message);\n        }\n        resolve(data as ManagedUpload.SendData);\n      });\n    });\n  }\n\n  async getPreSignedURL(bucketName: string, key: string, contentType: string) {\n    const s3 = this.getS3();\n    const params = {\n      Bucket: bucketName,\n      Key: key,\n      Expires: 3600,\n    };\n\n    return s3.getSignedUrlPromise('getObject', params);\n  }\n\n  async getImage(bucketKey: string) {\n    const preSignedUrl = await this.getPreSignedURL(this.bucketName, bucketKey, 'image/jpeg');\n    return this.httpService.get(preSignedUrl, { responseType: 'stream' }).toPromise();\n  }\n\n  async getCsv(bucketKey: string) {\n    const preSignedUrl = await this.getPreSignedURL(this.bucketName, bucketKey, 'text/csv');\n    return this.httpService.get(preSignedUrl, { responseType: 'stream' }).toPromise();\n  }\n\n  private async validateCsvAddresses(buffer: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      const addresses: string[] = [];\n      const cardanoAddressRegex = /^addr1[a-zA-Z0-9]{98}$/;\n\n      csv\n        .parse(buffer.toString(), {\n          columns: false,\n          skip_empty_lines: true,\n          trim: true,\n        })\n        .on('data', data => {\n          const address = data[0];\n          if (!address || typeof address !== 'string' || !cardanoAddressRegex.test(address)) {\n            reject(\n              new BadRequestException(\n                `Invalid Cardano address format found in CSV: ${address}. Address must be a valid Cardano Shelley address starting with 'addr1' and containing 98 alphanumeric characters`\n              )\n            );\n          }\n          addresses.push(address);\n        })\n        .on('end', () => {\n          if (addresses.length === 0) {\n            reject(new BadRequestException('CSV file is empty or contains no valid addresses'));\n          }\n          resolve();\n        })\n        .on('error', error => {\n          reject(new BadRequestException(`Error parsing CSV: ${error.message}`));\n        });\n    });\n  }\n\n  async uploadCSV(file: Express.Multer.File, host: string) {\n    try {\n      // Validate CSV content before uploading\n      await this.validateCsvAddresses(file.buffer);\n\n      const uploadResult = await this.uploadS3(file.buffer, `${uuid()}`, file.mimetype);\n      const protocol = process.env.NODE_ENV === 'dev' ? 'http://' : 'https://';\n      if (uploadResult) {\n        const newFile = this.fileRepository.create({\n          file_key: uploadResult.Key,\n          file_url: `${protocol}${host}/api/v1/csv/${uploadResult.Key}`,\n          file_name: file.originalname,\n          file_type: file.mimetype,\n        });\n        await this.fileRepository.save(newFile);\n        if (newFile) return newFile;\n      }\n    } catch (error) {\n      if (error instanceof BadRequestException) {\n        throw error; // Re-throw validation errors\n      }\n      this.logger.error('Error uploading CSV file:', error);\n      throw new BadRequestException('Failed to upload CSV file');\n    }\n  }\n\n  async uploadImage(file: Express.Multer.File, host: string) {\n    try {\n      const uploadResult = await this.uploadS3(file.buffer, `${uuid()}`, file.mimetype);\n      const protocol = process.env.NODE_ENV === 'dev' ? 'http://' : 'https://';\n      if (uploadResult) {\n        const newFile = this.fileRepository.create({\n          file_key: uploadResult.Key,\n          file_url: `${protocol}${host}/api/v1/image/${uploadResult.Key}`,\n          file_name: file.originalname,\n          file_type: file.mimetype,\n        });\n        await this.fileRepository.save(newFile);\n        if (newFile) return newFile;\n      }\n    } catch (error) {\n      this.logger.error('Error uploading image file:', error);\n      throw new BadRequestException('Failed to upload image file');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainAddressResponse.html":{"url":"interfaces/BlockchainAddressResponse.html","title":"interface - BlockchainAddressResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainAddressResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            utxo_count\n                                        \n                                \n                                \n                                        \n                                            utxos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        utxo_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        utxo_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        utxos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        utxos:         BlockchainUtxo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockchainUtxo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainContractResponse.html":{"url":"interfaces/BlockchainContractResponse.html","title":"interface - BlockchainContractResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainContractResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            lastUpdate\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BlockchainController.html":{"url":"controllers/BlockchainController.html","title":"controller - BlockchainController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BlockchainController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                blockchain\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                burnVault\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleWebhook\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                scannerWh\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                submitTransaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateVaultMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(params: BuildTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('transaction/build')@ApiOperation({summary: 'Build a Cardano transaction'})@ApiResponse({status: 200, description: 'Transaction built successfully', type: TransactionBuildResponseDto})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            BuildTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        burnVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnVault(req, data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('burn-vault')@ApiOperation({summary: 'Build a Cardano transaction for burn vault'})@ApiResponse({status: 200, description: 'Transaction built successfully', type: TransactionBuildResponseDto})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        handleWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleWebhook(event: BlockchainWebhookDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('tx-webhook')@HttpCode(200)@ApiOperation({summary: 'Webhook endpoint for blockchain events'})@ApiResponse({status: 200, description: 'Blockchain event processed successfully', type: Object})@ApiResponse({status: 401, description: 'Invalid webhook signature'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            BlockchainWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        scannerWh\n                        \n                    \n                \n            \n            \n                \n                        \n                    scannerWh(event: any, _req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('scanner-wh')@HttpCode(200)@ApiOperation({summary: 'Webhook endpoint for scanner events'})@ApiResponse({status: 200, description: 'Blockchain event processed successfully', type: Object})@ApiResponse({status: 401, description: 'Invalid webhook signature'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(params: SubmitTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('transaction/submit')@ApiOperation({summary: 'Submit a signed Cardano transaction'})@ApiResponse({status: 200, description: 'Transaction submitted successfully', type: TransactionSubmitResponseDto})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            SubmitTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updateVaultMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateVaultMetadata(params: VaultConfig)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('vault/update')@ApiOperation({summary: 'Update vault metadata'})@ApiResponse({status: 200, description: 'Vault updated successfully', type: Object})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            VaultConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards, HttpCode, Request, UnauthorizedException } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport {\n  BuildTransactionDto,\n  SubmitTransactionDto,\n  TransactionBuildResponseDto,\n  TransactionSubmitResponseDto,\n} from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { VaultInsertingService } from './vault-inserting.service';\nimport { VaultConfig, VaultManagingService } from './vault-managing.service';\nimport { WebhookVerificationService } from './webhook-verification.service';\n\nimport { AuthGuard } from '@/modules/auth/auth.guard';\n\n@ApiTags('blockchain')\n@Controller('blockchain')\nexport class BlockchainController {\n  constructor(\n    private readonly transactionService: VaultInsertingService,\n    private readonly webhookVerificationService: WebhookVerificationService,\n    private readonly vaultManagingService: VaultManagingService\n  ) {}\n\n  @Post('transaction/build')\n  @ApiOperation({ summary: 'Build a Cardano transaction' })\n  @ApiResponse({\n    status: 200,\n    description: 'Transaction built successfully',\n    type: TransactionBuildResponseDto,\n  })\n  @UseGuards(AuthGuard)\n  async buildTransaction(@Body() params: BuildTransactionDto): Promise {\n    return this.transactionService.buildTransaction(params);\n  }\n  @Post('burn-vault')\n  @ApiOperation({ summary: 'Build a Cardano transaction for burn vault' })\n  @ApiResponse({\n    status: 200,\n    description: 'Transaction built successfully',\n    type: TransactionBuildResponseDto,\n  })\n  @UseGuards(AuthGuard)\n  async burnVault(@Request() req, @Body() data: any): Promise {\n    const userId = req.user.sub;\n    return this.transactionService.handleBurnVault(userId, data.vaultId);\n  }\n\n  @Post('vault/update')\n  @ApiOperation({ summary: 'Update vault metadata' })\n  @ApiResponse({\n    status: 200,\n    description: 'Vault updated successfully',\n    type: Object,\n  })\n  @UseGuards(AuthGuard)\n  async updateVaultMetadata(@Body() params: VaultConfig) {\n    return this.vaultManagingService.updateVaultMetadataTx(params);\n  }\n\n  @Post('transaction/submit')\n  @ApiOperation({ summary: 'Submit a signed Cardano transaction' })\n  @ApiResponse({\n    status: 200,\n    description: 'Transaction submitted successfully',\n    type: TransactionSubmitResponseDto,\n  })\n  @UseGuards(AuthGuard)\n  async submitTransaction(@Body() params: SubmitTransactionDto): Promise {\n    return this.transactionService.submitTransaction(params);\n  }\n\n  @Post('scanner-wh')\n  @HttpCode(200)\n  @ApiOperation({ summary: 'Webhook endpoint for scanner events' })\n  @ApiResponse({\n    status: 200,\n    description: 'Blockchain event processed successfully',\n    type: Object,\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Invalid webhook signature',\n  })\n  async scannerWh(@Body() event: any, @Request() _req) {\n    try {\n      await this.transactionService.handleScannerEvent(event);\n\n      return {\n        status: 'success',\n        details: 'txSummary',\n      };\n    } catch (error) {\n      console.error('Error processing webhook:', error);\n      return {\n        status: 'error',\n        details: error.message,\n      };\n    }\n  }\n\n  @Post('tx-webhook')\n  @HttpCode(200)\n  @ApiOperation({ summary: 'Webhook endpoint for blockchain events' })\n  @ApiResponse({\n    status: 200,\n    description: 'Blockchain event processed successfully',\n    type: Object,\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Invalid webhook signature',\n  })\n  async handleWebhook(@Body() event: BlockchainWebhookDto, @Request() req): Promise {\n    const signature = req.headers['blockfrost-signature'];\n\n    // Get raw body from the request\n    let rawBody: string;\n    if (Buffer.isBuffer(req.body)) {\n      // If body-parser.raw() was used\n      rawBody = req.body.toString('utf8');\n      // Parse the raw body into our DTO\n      event = JSON.parse(rawBody);\n    } else {\n      // Fallback to stringifying the parsed body\n      rawBody = JSON.stringify(req.body);\n    }\n\n    // Log headers and event info for debugging\n    console.log('Received webhook event:', {\n      signature,\n      timestamp: req.headers['blockfrost-timestamp'],\n      eventId: event.id,\n      webhookId: event.webhook_id,\n      rawBodyLength: rawBody.length,\n      rawBodyPreview: rawBody.substring(0, 100) + '...',\n    });\n\n    // Verify webhook signature using the raw body\n    const isValid = this.webhookVerificationService.verifySignature(rawBody, signature);\n    if (!isValid) {\n      console.error('Webhook signature verification failed:', {\n        signature,\n        eventId: event.id,\n        webhookId: event.webhook_id,\n        rawBodyPreview: rawBody.substring(0, 100) + '...',\n      });\n      throw new UnauthorizedException('Invalid webhook signature');\n    }\n\n    // Process the event\n    try {\n      await this.transactionService.handleBlockchainEvent(event);\n\n      // Return transaction summary\n      const txSummary = event.payload.map(txEvent => ({\n        txHash: txEvent.tx.hash,\n        blockHeight: txEvent.tx.block_height,\n        timestamp: txEvent.tx.block_time,\n        status: txEvent.tx.valid_contract ? 'confirmed' : 'failed',\n        transfers: txEvent.outputs.map(output => ({\n          recipient: output.address,\n          assets: output.amount.map(asset => ({\n            unit: asset.unit,\n            quantity: asset.quantity,\n            type: asset.unit === 'lovelace' ? 'ADA' : asset.quantity === '1' ? 'NFT' : 'TOKEN',\n          })),\n        })),\n      }));\n\n      return {\n        status: 'success',\n        details: txSummary,\n      };\n    } catch (error) {\n      console.error('Error processing webhook:', error);\n      return {\n        status: 'error',\n        details: error.message,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_BlockchainModule_providers\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTransactionsModule->BlockchainModule\n\n\n\n\n\nBlockchainScannerService \n\nBlockchainScannerService \n\nBlockchainScannerService  -->\n\nBlockchainModule->BlockchainScannerService \n\n\n\n\n\nBlockchainService \n\nBlockchainService \n\nBlockchainService  -->\n\nBlockchainModule->BlockchainService \n\n\n\n\n\nVaultInsertingService \n\nVaultInsertingService \n\nVaultInsertingService  -->\n\nBlockchainModule->VaultInsertingService \n\n\n\n\n\nVaultManagingService \n\nVaultManagingService \n\nVaultManagingService  -->\n\nBlockchainModule->VaultManagingService \n\n\n\n\n\nWebhookVerificationService \n\nWebhookVerificationService \n\nWebhookVerificationService  -->\n\nBlockchainModule->WebhookVerificationService \n\n\n\n\n\nAnvilApiService\n\nAnvilApiService\n\nBlockchainModule -->\n\nAnvilApiService->BlockchainModule\n\n\n\n\n\nBlockchainScannerService\n\nBlockchainScannerService\n\nBlockchainModule -->\n\nBlockchainScannerService->BlockchainModule\n\n\n\n\n\nBlockchainService\n\nBlockchainService\n\nBlockchainModule -->\n\nBlockchainService->BlockchainModule\n\n\n\n\n\nVaultInsertingService\n\nVaultInsertingService\n\nBlockchainModule -->\n\nVaultInsertingService->BlockchainModule\n\n\n\n\n\nVaultManagingService\n\nVaultManagingService\n\nBlockchainModule -->\n\nVaultManagingService->BlockchainModule\n\n\n\n\n\nWebhookVerificationService\n\nWebhookVerificationService\n\nBlockchainModule -->\n\nWebhookVerificationService->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnvilApiService\n                        \n                        \n                            BlockchainScannerService\n                        \n                        \n                            BlockchainService\n                        \n                        \n                            VaultInsertingService\n                        \n                        \n                            VaultManagingService\n                        \n                        \n                            WebhookVerificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BlockchainController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockchainScannerService\n                        \n                        \n                            BlockchainService\n                        \n                        \n                            VaultInsertingService\n                        \n                        \n                            VaultManagingService\n                        \n                        \n                            WebhookVerificationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsModule } from '../offchain-tx/transactions.module';\n\nimport { AnvilApiService } from './anvil-api.service';\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainController } from './blockchain.controller';\nimport { BlockchainService } from './blockchain.service';\nimport { VaultInsertingService } from './vault-inserting.service';\nimport { VaultManagingService } from './vault-managing.service';\nimport { WebhookVerificationService } from './webhook-verification.service';\n\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    HttpModule,\n    TransactionsModule,\n    TypeOrmModule.forFeature([Vault]),\n  ],\n  controllers: [BlockchainController],\n  providers: [\n    AnvilApiService,\n    BlockchainService,\n    VaultInsertingService,\n    BlockchainScannerService,\n    WebhookVerificationService,\n    VaultManagingService,\n  ],\n  exports: [\n    BlockchainService,\n    VaultInsertingService,\n    BlockchainScannerService,\n    WebhookVerificationService,\n    VaultManagingService,\n  ],\n})\nexport class BlockchainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainScannerService.html":{"url":"injectables/BlockchainScannerService.html","title":"injectable - BlockchainScannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainScannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                scannerKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                scannerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkMonitoringAddress\n                            \n                            \n                                    Async\n                                getAddressBalance\n                            \n                            \n                                    Async\n                                getAddressTransactions\n                            \n                            \n                                    Async\n                                getAddressUtxos\n                            \n                            \n                                    Async\n                                getContractState\n                            \n                            \n                                    Async\n                                getTokenInfo\n                            \n                            \n                                    Async\n                                getTransactionDetails\n                            \n                            \n                                    Private\n                                isRetryableError\n                            \n                            \n                                    Private\n                                    Async\n                                makePostRequest\n                            \n                            \n                                    Private\n                                    Async\n                                makeRequest\n                            \n                            \n                                    Async\n                                registerTrackingAddress\n                            \n                            \n                                    Private\n                                    Async\n                                withRetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkMonitoringAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkMonitoringAddress(vaultAddress: string, vaultName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                vaultAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                vaultName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddressBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressBalance(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddressTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressTransactions(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddressUtxos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressUtxos(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getContractState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContractState(contractAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contractAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTokenInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokenInfo(policyId: string, assetName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                policyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionDetails(txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isRetryableError\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRetryableError(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makePostRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    makePostRequest(endpoint: string, payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeRequest(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerTrackingAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTrackingAddress(vaultAddress: string, vaultName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                vaultAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                vaultName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        withRetry\n                        \n                    \n                \n            \n            \n                \n                        \n                    withRetry(operation: () => void, options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:81\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BlockchainScannerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scannerKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scannerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { setTimeout } from 'timers/promises';\n\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport axios from 'axios';\n\nimport {\n  BlockchainTransactionResponse,\n  BlockchainAddressResponse,\n  BlockchainContractResponse,\n  BlockchainTokenResponse,\n  BlockchainTransactionListResponse,\n  BlockchainTransactionListItem,\n} from '../../../../types/blockchain.types';\n\nconst DEFAULT_MAX_RETRIES = 5;\nconst DEFAULT_INITIAL_DELAY_MS = 1000; // 1 second\nconst DEFAULT_MAX_DELAY_MS = 30000; // 30 seconds\n\n@Injectable()\nexport class BlockchainScannerService {\n  private readonly logger = new Logger(BlockchainScannerService.name);\n  private readonly scannerUrl: string;\n  private readonly scannerKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.scannerUrl = this.configService.get('SCANNER_URL');\n    this.scannerKey = this.configService.get('SCANNER_KEY');\n  }\n\n  private async makeRequest(endpoint: string): Promise {\n    this.logger.log(`Scanner URL ${this.scannerUrl}${endpoint}`);\n    this.logger.log(`Scanner KEY ${this.scannerKey}`);\n    try {\n      const response = await axios.get(`${this.scannerUrl}${endpoint}`, {\n        headers: {\n          Authorization: `Bearer ${this.scannerKey}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      this.logger.error(`Scanner request failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  private async makePostRequest(\n    endpoint: string,\n    payload: {\n      address: string;\n    }\n  ): Promise {\n    try {\n      const response = await axios.post(\n        `${this.scannerUrl}${endpoint}`,\n        {\n          ...payload,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.scannerKey}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      this.logger.error(`Scanner request failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  async registerTrackingAddress(vaultAddress: string = '', vaultName: string) {\n    const payload = {\n      address: vaultAddress,\n      name: vaultName,\n      description: 'Monitoring vault address',\n    };\n    return this.makePostRequest(`/monitoring/addresses`, payload);\n  }\n\n  private async withRetry(\n    operation: () => Promise,\n    options: {\n      maxRetries?: number;\n      initialDelayMs?: number;\n      maxDelayMs?: number;\n      shouldRetry?: (error: Error) => boolean;\n    } = {}\n  ): Promise {\n    const {\n      maxRetries = DEFAULT_MAX_RETRIES,\n      initialDelayMs = DEFAULT_INITIAL_DELAY_MS,\n      maxDelayMs = DEFAULT_MAX_DELAY_MS,\n      shouldRetry = () => true,\n    } = options;\n\n    let lastError: Error | null = null;\n\n    for (let attempt = 0; attempt = 500;\n    }\n    return true; // Retry on other errors by default\n  }\n\n  async checkMonitoringAddress(vaultAddress: string = '', vaultName: string = ''): Promise {\n    try {\n      // First, check if the address is already being monitored\n      await this.makeRequest(`/monitoring/addresses/${vaultAddress}`);\n      return true;\n    } catch (error) {\n      if (!vaultName) {\n        return false;\n      }\n\n      this.logger.log(`Address ${vaultAddress} is not registered, attempting to register...`);\n\n      try {\n        await this.withRetry(() => this.registerTrackingAddress(vaultAddress, vaultName), {\n          shouldRetry: err => {\n            // Only retry on network or server errors\n            return this.isRetryableError(err);\n          },\n        });\n        this.logger.log(`Successfully registered address ${vaultAddress} for monitoring`);\n        return true;\n      } catch (error) {\n        this.logger.error(`Failed to register address ${vaultAddress} for monitoring after retries`, error);\n        return false;\n      }\n    }\n  }\n\n  async getAddressBalance(address: string): Promise {\n    return this.makeRequest(`/blockchain/addresses/${address}/balance`);\n  }\n\n  async getAddressTransactions(address: string): Promise {\n    const response = await this.makeRequest(\n      `/blockchain/addresses/${address}/transactions`\n    );\n    return response?.transactions || [];\n  }\n\n  async getTransactionDetails(txHash: string): Promise {\n    return this.makeRequest(`/blockchain/transactions/${txHash}`);\n  }\n\n  async getAddressUtxos(address: string): Promise {\n    return this.makeRequest(`/blockchain/addresses/${address}/utxos`);\n  }\n\n  async getContractState(contractAddress: string): Promise {\n    return this.makeRequest(`/blockchain/contracts/${contractAddress}/state`);\n  }\n\n  async getTokenInfo(policyId: string, assetName: string): Promise {\n    return this.makeRequest(`/blockchain/tokens/${policyId}/${assetName}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                anvilApi\n                            \n                            \n                                    Private\n                                    Readonly\n                                anvilApiKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    Async\n                                submitTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(txData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Builds a transaction using Anvil API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                txData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Transaction data to be built\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Object containing complete and partial transaction CBOR\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(signedTx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Submits a signed transaction to the blockchain\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signedTx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Signed transaction data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Transaction hash\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        anvilApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        anvilApiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BlockchainService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/blockchain.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nexport enum OnchainTransactionStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  FAILED = 'failed',\n  NOT_FOUND = 'not_found',\n}\n\nexport interface TransactionBuildResponse {\n  complete: string;\n  partial: string;\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class BlockchainService {\n  private readonly logger = new Logger(BlockchainService.name);\n  private readonly anvilApi: string;\n  private readonly anvilApiKey: string;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService\n  ) {\n    this.anvilApi = this.configService.get('ANVIL_API_URL') + '/services';\n    this.anvilApiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  /**\n   * Builds a transaction using Anvil API\n   * @param txData Transaction data to be built\n   * @returns Object containing complete and partial transaction CBOR\n   */\n  async buildTransaction(txData: any): Promise {\n    try {\n      const headers = {\n        'x-api-key': this.anvilApiKey,\n        'Content-Type': 'application/json',\n      };\n\n      // Build the transaction\n      const contractDeployed = await fetch(`${this.anvilApi}/transactions/build`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(txData),\n      });\n\n      const buildResponse = await contractDeployed.json();\n\n      console.log('error', buildResponse);\n\n      if (!buildResponse.complete) {\n        throw new Error('Failed to build complete transaction' + JSON.stringify(buildResponse));\n      }\n\n      return buildResponse;\n    } catch (error) {\n      this.logger.error('Error building transaction', error);\n      throw new Error(`Failed to build transaction: ${error.message}`);\n    }\n  }\n\n  /**\n   * Submits a signed transaction to the blockchain\n   * @param signedTx Signed transaction data\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: {\n    transaction: string;\n    signatures?: string[];\n  }): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.httpService.post(\n          `${this.anvilApi}/transactions/submit`,\n          {\n            transaction: signedTx.transaction,\n            signatures: signedTx.signatures || [],\n          },\n          {\n            headers: {\n              'x-api-key': this.anvilApiKey,\n              'Content-Type': 'application/json',\n            },\n          }\n        )\n      );\n\n      if (!response.data.txHash) {\n        throw new Error('No transaction hash returned from blockchain');\n      }\n\n      this.logger.log(`Transaction submitted successfully: ${response.data.txHash}`);\n      return { txHash: response.data.txHash };\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTokenResponse.html":{"url":"interfaces/BlockchainTokenResponse.html","title":"interface - BlockchainTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assetName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            policyId\n                                        \n                                \n                                \n                                        \n                                            totalSupply\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSupply\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSupply:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTransactionListItem.html":{"url":"interfaces/BlockchainTransactionListItem.html","title":"interface - BlockchainTransactionListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTransactionListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            block_time\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTransactionListResponse.html":{"url":"interfaces/BlockchainTransactionListResponse.html","title":"interface - BlockchainTransactionListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTransactionListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            transactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactions:         BlockchainTransactionListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockchainTransactionListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainTransactionResponse.html":{"url":"interfaces/BlockchainTransactionResponse.html","title":"interface - BlockchainTransactionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainTransactionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            block\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            inputs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output_amount\n                                        \n                                \n                                \n                                        \n                                            outputs\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            valid_contract\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputs:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output_amount:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputs:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valid_contract\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valid_contract:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockchainUtxo.html":{"url":"interfaces/BlockchainUtxo.html","title":"interface - BlockchainUtxo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockchainUtxo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/blockchain.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            data_hash\n                                        \n                                \n                                \n                                        \n                                            inline_datum\n                                        \n                                \n                                \n                                        \n                                            output_index\n                                        \n                                \n                                \n                                        \n                                            reference_script_hash\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         Asset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Asset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data_hash:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inline_datum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inline_datum:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_script_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_script_hash:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockchainTransactionListItem {\n  tx_hash: string;\n  tx_index: number;\n  block_height: number;\n  block_time: number;\n}\n\nexport interface BlockchainTransactionListResponse {\n  address: string;\n  page: number;\n  count: number;\n  transactions: BlockchainTransactionListItem[];\n}\n\nexport interface BlockchainTransactionResponse {\n  hash: string;\n  block: string;\n  block_height?: number;\n  valid_contract: boolean;\n  timestamp: string;\n  inputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  outputs: {\n    address: string;\n    amount: string;\n    assets?: Array;\n  }[];\n  output_amount?: { unit: string; quantity: string }[];\n  metadata?: any;\n}\n\nexport interface Asset {\n  unit: string;\n  quantity: string;\n}\n\nexport interface BlockchainUtxo {\n  address: string;\n  tx_hash: string;\n  tx_index: number;\n  output_index: number;\n  amount: Asset[];\n  block: string;\n  data_hash: string | null;\n  inline_datum: string | null;\n  reference_script_hash: string | null;\n}\n\nexport interface BlockchainAddressResponse {\n  address: string;\n  utxo_count: number;\n  utxos: BlockchainUtxo[];\n}\n\nexport interface BlockchainContractResponse {\n  address: string;\n  state: Record;\n  lastUpdate: string;\n}\n\nexport interface BlockchainTokenResponse {\n  policyId: string;\n  assetName: string;\n  totalSupply: string;\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockchainWebhookDto.html":{"url":"classes/BlockchainWebhookDto.html","title":"class - BlockchainWebhookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockchainWebhookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                api_version\n                            \n                            \n                                    \n                                    \n                                    \n                                created\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                payload\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                webhook_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        api_version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Version of Event objects', example: 1})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:292\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unix timestamp when the event was detected', example: 1647611209})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:284\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier of the webhook request', example: 'cd153e0a-2561-4761-9fa1-98b62937438e'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:268\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTransactionEvent[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of transaction events', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:310\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of the event', example: 'transaction'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:300\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        webhook_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Identifier of the Webhook', example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:276\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostAmount.html":{"url":"classes/BlockfrostAmount.html","title":"class - BlockfrostAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The quantity of the unit', example: '1664454750'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unit of the value', example: 'lovelace'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTransaction.html":{"url":"classes/BlockfrostTransaction.html","title":"class - BlockfrostTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                block\n                            \n                            \n                                    \n                                    \n                                    \n                                block_height\n                            \n                            \n                                    \n                                    \n                                    \n                                block_time\n                            \n                            \n                                    \n                                    \n                                    \n                                deposit\n                            \n                            \n                                    \n                                    \n                                    \n                                fees\n                            \n                            \n                                    \n                                    \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                    \n                                index\n                            \n                            \n                                    \n                                    \n                                    \n                                invalid_before\n                            \n                            \n                                    \n                                    \n                                    \n                                invalid_hereafter\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                output_amount\n                            \n                            \n                                    \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                slot\n                            \n                            \n                                    \n                                    \n                                    \n                                utxo_count\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                valid_contract\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        block\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Block hash', example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        block_height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Block number', example: 7012249})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        block_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Block creation time', example: 1647611205})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deposit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Deposit', example: '0'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Fees for the transaction', example: '174345'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:178\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash', example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction index within the block', example: 0})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        invalid_before\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Invalid before slot', example: undefined})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        invalid_hereafter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Invalid after slot', example: 56051594})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        output_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostAmount[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Output amounts', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Size in bytes', example: 426})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        slot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Slot number', example: 56044914})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        utxo_count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Count of UTXOs', example: 4})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:218\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        valid_contract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether the contract is valid', example: true})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:226\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTransactionEvent.html":{"url":"classes/BlockfrostTransactionEvent.html","title":"class - BlockfrostTransactionEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTransactionEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                inputs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                outputs\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                tx\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        inputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTxInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction inputs', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:248\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTxOutput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction outputs', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:258\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        tx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostTransaction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction details', type: BlockfrostTransaction})@IsObject()@ValidateNested()@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:238\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTxInput.html":{"url":"classes/BlockfrostTxInput.html","title":"class - BlockfrostTxInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTxInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                collateral\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                data_hash\n                            \n                            \n                                    \n                                    \n                                    \n                                output_index\n                            \n                            \n                                    \n                                    \n                                    \n                                tx_hash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Input address', example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostAmount[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Input amounts', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        collateral\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether this is a collateral input', example: false})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        data_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The hash of the transaction data', example: undefined})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        output_index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Index of the output', example: 0})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tx_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Hash of the transaction', example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockfrostTxOutput.html":{"url":"classes/BlockfrostTxOutput.html","title":"class - BlockfrostTxOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockfrostTxOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                data_hash\n                            \n                            \n                                    \n                                    \n                                    \n                                output_index\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Output address', example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockfrostAmount[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Output amounts', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        data_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The hash of the transaction data', example: undefined})@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        output_index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Index of the output', example: 0})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/webhook.dto.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsArray, IsEnum, IsNumber, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\n\nimport { OnchainTransactionStatus } from '../types/transaction-status.enum';\n\nclass BlockfrostAmount {\n  @ApiProperty({\n    description: 'The unit of the value',\n    example: 'lovelace',\n  })\n  @IsString()\n  @Expose()\n  unit: string;\n\n  @ApiProperty({\n    description: 'The quantity of the unit',\n    example: '1664454750',\n  })\n  @IsString()\n  @Expose()\n  quantity: string;\n}\n\nclass BlockfrostTxInput {\n  @ApiProperty({\n    description: 'Input address',\n    example: 'addr1q8suxg555ynm66ykapc2999hzyxnmre70xf6p20pa2z269agynrj803a45k5zqg2usxju3wk5gywqjdtd59salr9mpzq9g4r8a',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Input amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Hash of the transaction',\n    example: 'c4ca612037927bb6276a3742ce7ecadbaa18c91f1c756563f63dc10c8d03ef75',\n  })\n  @IsString()\n  @Expose()\n  tx_hash: string;\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'Whether this is a collateral input',\n    example: false,\n  })\n  @IsOptional()\n  @Expose()\n  collateral?: boolean;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTxOutput {\n  @ApiProperty({\n    description: 'Output address',\n    example: 'addr1q9zyjm3lkfjhgt2g6cyqts8kpwppl3l5ud8afpgqxzygrhgv45sex0xp482gdrnnkzdlajwc9zalzx8zvcvum2qvkqzsln7sdv',\n  })\n  @IsString()\n  @Expose()\n  address: string;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Index of the output',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  output_index: number;\n\n  @ApiProperty({\n    description: 'The hash of the transaction data',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  data_hash?: string | null;\n}\n\nclass BlockfrostTransaction {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '9358fccf785f40d5507ed81b38f16b03148baf341e1de4d511689eebb436dd4b',\n  })\n  @IsString()\n  @Expose()\n  hash: string;\n\n  @ApiProperty({\n    description: 'Block hash',\n    example: '3e0f394b2601b99b26761bbceab1063bc7fa29578165cd840c3dee6d286e98be',\n  })\n  @IsString()\n  @Expose()\n  block: string;\n\n  @ApiProperty({\n    description: 'Block number',\n    example: 7012249,\n  })\n  @IsNumber()\n  @Expose()\n  block_height: number;\n\n  @ApiProperty({\n    description: 'Block creation time',\n    example: 1647611205,\n  })\n  @IsNumber()\n  @Expose()\n  block_time: number;\n\n  @ApiProperty({\n    description: 'Slot number',\n    example: 56044914,\n  })\n  @IsNumber()\n  @Expose()\n  slot: number;\n\n  @ApiProperty({\n    description: 'Transaction index within the block',\n    example: 0,\n  })\n  @IsNumber()\n  @Expose()\n  index: number;\n\n  @ApiProperty({\n    description: 'Output amounts',\n    type: [BlockfrostAmount],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostAmount)\n  @Expose()\n  output_amount: BlockfrostAmount[];\n\n  @ApiProperty({\n    description: 'Fees for the transaction',\n    example: '174345',\n  })\n  @IsString()\n  @Expose()\n  fees: string;\n\n  @ApiProperty({\n    description: 'Deposit',\n    example: '0',\n  })\n  @IsString()\n  @Expose()\n  deposit: string;\n\n  @ApiProperty({\n    description: 'Size in bytes',\n    example: 426,\n  })\n  @IsNumber()\n  @Expose()\n  size: number;\n\n  @ApiProperty({\n    description: 'Invalid before slot',\n    example: null,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_before: number | null;\n\n  @ApiProperty({\n    description: 'Invalid after slot',\n    example: 56051594,\n  })\n  @IsOptional()\n  @Expose()\n  invalid_hereafter: number | null;\n\n  @ApiProperty({\n    description: 'Count of UTXOs',\n    example: 4,\n  })\n  @IsNumber()\n  @Expose()\n  utxo_count: number;\n\n  @ApiProperty({\n    description: 'Whether the contract is valid',\n    example: true,\n  })\n  @IsOptional()\n  @Expose()\n  valid_contract?: boolean;\n}\n\nclass BlockfrostTransactionEvent {\n  @ApiProperty({\n    description: 'Transaction details',\n    type: BlockfrostTransaction,\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => BlockfrostTransaction)\n  @Expose()\n  tx: BlockfrostTransaction;\n\n  @ApiProperty({\n    description: 'Transaction inputs',\n    type: [BlockfrostTxInput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxInput)\n  @Expose()\n  inputs: BlockfrostTxInput[];\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [BlockfrostTxOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTxOutput)\n  @Expose()\n  outputs: BlockfrostTxOutput[];\n}\n\nexport class BlockchainWebhookDto {\n  @ApiProperty({\n    description: 'Unique identifier of the webhook request',\n    example: 'cd153e0a-2561-4761-9fa1-98b62937438e',\n  })\n  @IsString()\n  @Expose()\n  id: string;\n\n  @ApiProperty({\n    description: 'Identifier of the Webhook',\n    example: 'cf68eb9c-635f-415e-a5a8-6233638f28d6',\n  })\n  @IsString()\n  @Expose()\n  webhook_id: string;\n\n  @ApiProperty({\n    description: 'Unix timestamp when the event was detected',\n    example: 1647611209,\n  })\n  @IsNumber()\n  @Expose()\n  created: number;\n\n  @ApiProperty({\n    description: 'Version of Event objects',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  api_version: number;\n\n  @ApiProperty({\n    description: 'Type of the event',\n    example: 'transaction',\n  })\n  @IsString()\n  @Expose()\n  type: string;\n\n  @ApiProperty({\n    description: 'Array of transaction events',\n    type: [BlockfrostTransactionEvent],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => BlockfrostTransactionEvent)\n  @Expose()\n  payload: BlockfrostTransactionEvent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuildTransactionDto.html":{"url":"classes/BuildTransactionDto.html","title":"class - BuildTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuildTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                changeAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                outputs\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                txId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        changeAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Address to send change to', example: 'addr1qy2k4r9...'})@IsString()@Expose({name: 'changeAddress'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionOutput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction outputs', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID (UUID)', example: '123e4567-e89b-12d3-a456-426614174000'})@IsUUID()@Expose({name: 'txId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildTransactionOutput.html":{"url":"interfaces/BuildTransactionOutput.html","title":"interface - BuildTransactionOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildTransactionOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assets\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lovelace\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assets:         NftAsset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NftAsset[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lovelace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lovelace:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildTransactionParams.html":{"url":"interfaces/BuildTransactionParams.html","title":"interface - BuildTransactionParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildTransactionParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            changeAddress\n                                        \n                                \n                                \n                                        \n                                            outputs\n                                        \n                                \n                                \n                                        \n                                            txId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        changeAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        changeAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputs:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildTransactionParams-1.html":{"url":"interfaces/BuildTransactionParams-1.html","title":"interface - BuildTransactionParams-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BuildTransactionParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            changeAddress\n                                        \n                                \n                                \n                                        \n                                            outputs\n                                        \n                                \n                                \n                                        \n                                            txId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        changeAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        changeAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputs:         BuildTransactionOutput[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BuildTransactionOutput[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BurnLpTokensParams.html":{"url":"interfaces/BurnLpTokensParams.html","title":"interface - BurnLpTokensParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BurnLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for burning LP tokens\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Amount of LP tokens to burn (in smallest unit as string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wallet address that holds the LP tokens\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeAssetsOwnerType1743678745097.html":{"url":"classes/ChangeAssetsOwnerType1743678745097.html","title":"class - ChangeAssetsOwnerType1743678745097","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeAssetsOwnerType1743678745097\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ChangeAssetsOwnerType1743678745097'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743678745097-ChangeAssetsOwnerType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ChangeAssetsOwnerType1743678745097 implements MigrationInterface {\n  name = 'ChangeAssetsOwnerType1743678745097';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_9dcbee9dfaf5bc1d498d568216\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"token_id\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"policy_id\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"asset_id\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"contract_address\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"vault_id\" DROP NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"added_by\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"added_by\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_969c7c69dd286d6e17dedd27923\" FOREIGN KEY (\"added_by\") REFERENCES \"users\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_969c7c69dd286d6e17dedd27923\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"added_by\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"added_by\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"vault_id\" SET NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ALTER COLUMN \"contract_address\" SET NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"asset_id\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP COLUMN \"policy_id\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" ADD \"token_id\" character varying`);\n    await queryRunner.query(`CREATE INDEX \"IDX_9dcbee9dfaf5bc1d498d568216\" ON \"assets\" (\"vault_id\") `);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeIntervalToBigint1742311345554.html":{"url":"classes/ChangeIntervalToBigint1742311345554.html","title":"class - ChangeIntervalToBigint1742311345554","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeIntervalToBigint1742311345554\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742311345554-changeIntervalToBigint.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ChangeIntervalToBigint1742311345554'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742311345554-changeIntervalToBigint.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742311345554-changeIntervalToBigint.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742311345554-changeIntervalToBigint.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ChangeIntervalToBigint1742311345554 implements MigrationInterface {\n  name = 'ChangeIntervalToBigint1742311345554';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contribution_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contribution_duration\" bigint`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" bigint`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" bigint`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" interval`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" interval`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"contribution_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"contribution_duration\" interval`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Claim.html":{"url":"entities/Claim.html","title":"entity - Claim","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Claim\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/claim.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                tx_hash\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'amount'})@Column({type: 'decimal', precision: 20, scale: 6, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'description'})@Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'id'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'metadata'})@Column({type: 'jsonb', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClaimStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'status'})@Column({type: 'varchar', nullable: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tx_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'txHash'})@Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'type'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'userId'})@ManyToOne(undefined, user => user.claims, {onDelete: 'CASCADE'})@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/claim.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn, BeforeInsert, BeforeUpdate } from 'typeorm';\n\nimport { ClaimStatus } from '../types/claim.types';\n\nimport { User } from './user.entity';\n\n@Entity('claims')\nexport class Claim {\n  @Expose({ name: 'id' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'userId' })\n  @ManyToOne(() => User, (user: User) => user.claims, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'user_id' })\n  user: User;\n\n  @Expose({ name: 'type' })\n  @Column({ type: 'varchar', nullable: false })\n  type: string;\n\n  @Expose({ name: 'status' })\n  @Column({\n    type: 'varchar',\n    nullable: false,\n    default: ClaimStatus.DISABLED, // disabled, pending, claimed\n  })\n  status: ClaimStatus;\n\n  @Expose({ name: 'amount' })\n  @Column({ type: 'decimal', precision: 20, scale: 6, default: 0 })\n  amount: number;\n\n  @Expose({ name: 'txHash' })\n  @Column({ type: 'varchar', nullable: true })\n  tx_hash: string;\n\n  @Expose({ name: 'description' })\n  @Column({ type: 'text', nullable: true })\n  description: string;\n\n  @Expose({ name: 'metadata' })\n  @Column({ type: 'jsonb', nullable: true })\n  metadata: Record;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n    this.updated_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClaimResponseDto.html":{"url":"classes/ClaimResponseDto.html","title":"class - ClaimResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClaimResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/claims/dto/claim-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    Optional\n                                txHash\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClaimStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/claim-response.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\n\nimport { ClaimStatus } from '@/types/claim.types';\n\nexport class ClaimResponseDto {\n  @Expose()\n  id: string;\n\n  @Expose()\n  type: string;\n\n  @Expose()\n  status: ClaimStatus;\n\n  @Expose()\n  amount: number;\n\n  @Expose()\n  txHash?: string;\n\n  @Expose()\n  description?: string;\n\n  @Expose()\n  metadata?: Record;\n\n  @Expose()\n  createdAt: string;\n\n  @Expose()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClaimsController.html":{"url":"controllers/ClaimsController.html","title":"controller - ClaimsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClaimsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/claims/claims.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                claims\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getMyClaims\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                processClaim\n                            \n                            \n                                    \n                                    \n                                    Async\n                                submitSignedClaimTransaction\n                            \n                            \n                                    \n                                    Async\n                                webhookTxConfirmed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getMyClaims\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyClaims(req, query: GetClaimsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get current user claims', description: 'Returns claims for current user with optional filtering by status or claim state', status: 200})@UseGuards(AuthGuard)@Get('my')@ApiResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/claims/claims.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetClaimsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        processClaim\n                        \n                    \n                \n            \n            \n                \n                        \n                    processClaim(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post(':id/claim')@ApiOperation({summary: 'Process claim and build transaction'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/claims/claims.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        submitSignedClaimTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitSignedClaimTransaction(transactionId: string, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/claim/submit')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/claims/claims.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        webhookTxConfirmed\n                        \n                    \n                \n            \n            \n                \n                        \n                    webhookTxConfirmed(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook/tx-confirmed')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/claims/claims.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Param, Body, UseGuards, Query, Request } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../auth/auth.guard';\n\nimport { ClaimsService } from './claims.service';\nimport { ClaimResponseDto } from './dto/claim-response.dto';\nimport { GetClaimsDto } from './dto/get-claims.dto';\n\nimport { ApiDoc } from '@/decorators/api-doc.decorator';\n\n@ApiTags('Claims')\n@Controller('claims')\nexport class ClaimsController {\n  constructor(private readonly claimsService: ClaimsService) {}\n\n  @ApiDoc({\n    summary: 'Get current user claims',\n    description: 'Returns claims for current user with optional filtering by status or claim state',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('my')\n  @ApiResponse({ type: [ClaimResponseDto] })\n  async getMyClaims(@Request() req, @Query() query: GetClaimsDto) {\n    const userId = req.user.sub;\n    return this.claimsService.getUserClaims(userId, query);\n  }\n\n  @UseGuards(AuthGuard)\n  @Post(':id/claim')\n  @ApiOperation({ summary: 'Process claim and build transaction' })\n  async processClaim(@Param('id') id: string) {\n    return this.claimsService.buildClaimTransaction(id);\n  }\n\n  @Post(':id/claim/submit')\n  @UseGuards(AuthGuard)\n  async submitSignedClaimTransaction(@Param('id') transactionId: string, @Body() body: { signedTx: string }) {\n    return this.claimsService.submitSignedTransaction(transactionId, body.signedTx);\n  }\n\n  @Post('webhook/tx-confirmed')\n  async webhookTxConfirmed(@Body() body: { txHash: string }) {\n    await this.claimsService.processConfirmedTransaction(body.txHash);\n    return { received: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClaimsModule.html":{"url":"modules/ClaimsModule.html","title":"module - ClaimsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClaimsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClaimsModule\n\n\n\ncluster_ClaimsModule_providers\n\n\n\ncluster_ClaimsModule_imports\n\n\n\ncluster_ClaimsModule_exports\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nClaimsModule\n\nClaimsModule\n\nClaimsModule -->\n\nTransactionsModule->ClaimsModule\n\n\n\n\n\nClaimsService \n\nClaimsService \n\nClaimsService  -->\n\nClaimsModule->ClaimsService \n\n\n\n\n\nBlockchainService\n\nBlockchainService\n\nClaimsModule -->\n\nBlockchainService->ClaimsModule\n\n\n\n\n\nClaimsService\n\nClaimsService\n\nClaimsModule -->\n\nClaimsService->ClaimsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/claims/claims.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BlockchainService\n                        \n                        \n                            ClaimsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClaimsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClaimsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsModule } from '../vaults/processing-tx/offchain-tx/transactions.module';\nimport { BlockchainService } from '../vaults/processing-tx/onchain/blockchain.service';\n\nimport { ClaimsController } from './claims.controller';\nimport { ClaimsService } from './claims.service';\n\nimport { Claim } from '@/database/claim.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Claim, User, Transaction]), TransactionsModule, HttpModule],\n  controllers: [ClaimsController],\n  providers: [ClaimsService, BlockchainService],\n  exports: [ClaimsService],\n})\nexport class ClaimsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClaimsService.html":{"url":"injectables/ClaimsService.html","title":"injectable - ClaimsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClaimsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/claims/claims.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminSKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buildClaimTransaction\n                            \n                            \n                                    Async\n                                createClaim\n                            \n                            \n                                    Async\n                                getUserClaims\n                            \n                            \n                                    Async\n                                processConfirmedTransaction\n                            \n                            \n                                    Async\n                                submitSignedTransaction\n                            \n                            \n                                    Async\n                                updateClaimTxHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionRepository: Repository, claimRepository: Repository, userRepository: Repository, configService: ConfigService, transactionsService: TransactionsService, blockchainService: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/claims/claims.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        claimRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buildClaimTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildClaimTransaction(claimId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/claims/claims.service.ts:131\n                        \n                    \n\n\n            \n                \n                        User press \"claim\" button\nFrontend send request to build tx of claim\nbackend create internal tx, then backend create blockchain tx and connect both tx by txHash\nthen backend sign blockchain tx with admin wallet, and return presigned tx to user\nthen user sign presigned tx with his own wallet\nthen tx send to backend and publish to blockchain\nthen scanner call webhook with tx detail when tx will exist on chain.\nthen using information txHash we will update internal tx and maybe claim status\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                claimId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createClaim\n                        \n                    \n                \n            \n            \n                \n                        \n                    createClaim(createClaimDto: CreateClaimDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/claims/claims.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Creates a new claim for a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createClaimDto\n                                            \n                                                            CreateClaimDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData Transfer Object containing claim creation details\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise with the newly created Claim entity\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserClaims\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserClaims(userId: string, query?: GetClaimsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/claims/claims.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves claims for a specific user with optional filtering\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user whose claims to retrieve\n\n\n                                            \n                                        \n                                        \n                                                query\n                                            \n                                                            GetClaimsDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional query parameters for filtering claims\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise with an array of Claim entities\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processConfirmedTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    processConfirmedTransaction(txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/claims/claims.service.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitSignedTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitSignedTransaction(transactionId: string, signedTxHex: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/claims/claims.service.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signedTxHex\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateClaimTxHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateClaimTxHash(claimId: string, txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/claims/claims.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Updates the transaction hash for a claim and marks it as claimed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                claimId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the claim to updateв\n\n\n                                            \n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe transaction hash to associate with the claim\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise with the updated Claim entity\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminSKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/claims.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ClaimsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/claims.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { FixedTransaction, PrivateKey } from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Injectable, NotFoundException, Logger, BadRequestException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { In, Repository } from 'typeorm';\n\nimport { TransactionsService } from '../vaults/processing-tx/offchain-tx/transactions.service';\nimport { BlockchainService } from '../vaults/processing-tx/onchain/blockchain.service';\n\nimport { CreateClaimDto } from './dto/create-claim.dto';\nimport { GetClaimsDto } from './dto/get-claims.dto';\n\nimport { Claim } from '@/database/claim.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\nimport { ClaimStatus } from '@/types/claim.types';\nimport { TransactionType } from '@/types/transaction.types';\n\n@Injectable()\nexport class ClaimsService {\n  private readonly logger = new Logger(ClaimsService.name);\n  private readonly adminSKey: string;\n\n  constructor(\n    @InjectRepository(Transaction)\n    private readonly transactionRepository: Repository,\n    @InjectRepository(Claim)\n    private claimRepository: Repository,\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private readonly configService: ConfigService,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n  }\n\n  /**\n   * Retrieves claims for a specific user with optional filtering\n   *\n   * @param userId - The ID of the user whose claims to retrieve\n   * @param query - Optional query parameters for filtering claims\n   * @returns Promise with an array of Claim entities\n   */\n  async getUserClaims(userId: string, query?: GetClaimsDto): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const whereConditions: any = { user: { id: userId } };\n\n    if (query?.status) {\n      whereConditions.status = query.status;\n    }\n\n    if (query?.claimState === 'claimed') {\n      whereConditions.status = ClaimStatus.CLAIMED;\n    } else if (query?.claimState === 'unclaimed') {\n      whereConditions.status = In([ClaimStatus.DISABLED, ClaimStatus.PENDING]);\n    }\n\n    return this.claimRepository.find({\n      where: whereConditions,\n      order: { created_at: 'DESC' },\n    });\n  }\n\n  /**\n   * Creates a new claim for a user\n   *\n   * @param createClaimDto - Data Transfer Object containing claim creation details\n   * @returns Promise with the newly created Claim entity\n   * @throws NotFoundException if the user is not found\n   */\n  async createClaim(createClaimDto: CreateClaimDto): Promise {\n    const user = await this.userRepository.findOne({\n      where: { id: createClaimDto.userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const claim = this.claimRepository.create({\n      ...createClaimDto,\n      user,\n      status: ClaimStatus.DISABLED,\n    });\n\n    return this.claimRepository.save(claim);\n  }\n\n  /**\n   * Updates the transaction hash for a claim and marks it as claimed\n   *\n   * @param claimId - The ID of the claim to updateв\n   * @param txHash - The transaction hash to associate with the claim\n   * @returns Promise with the updated Claim entity\n   * @throws NotFoundException if the claim is not found\n   */\n  async updateClaimTxHash(claimId: string, txHash: string): Promise {\n    const claim = await this.claimRepository.findOne({\n      where: { id: claimId },\n    });\n\n    if (!claim) {\n      throw new NotFoundException('Claim not found');\n    }\n\n    claim.tx_hash = txHash;\n    claim.status = ClaimStatus.CLAIMED;\n    return this.claimRepository.save(claim);\n  }\n\n  /**\n   * User press \"claim\" button\n   *\n   * Frontend send request to build tx of claim\n   *\n   * backend create internal tx, then backend create blockchain tx and connect both tx by txHash\n   *\n   * then backend sign blockchain tx with admin wallet, and return presigned tx to user\n   *\n   * then user sign presigned tx with his own wallet\n   *\n   * then tx send to backend and publish to blockchain\n   *\n   * then scanner call webhook with tx detail when tx will exist on chain.\n   *\n   * then using information txHash we will update internal tx and maybe claim status\n   */\n  async buildClaimTransaction(claimId: string): Promise {\n    const claim = await this.claimRepository.findOne({\n      where: { id: claimId },\n      relations: ['user'],\n    });\n\n    if (!claim) {\n      throw new NotFoundException('Claim not found');\n    }\n\n    if (claim.status !== ClaimStatus.PENDING) {\n      throw new BadRequestException('Claim is not in pending status');\n    }\n\n    try {\n      this.logger.log(`Building claim transaction for claim ${claimId}`);\n\n      // Mock\n      const transactionInput = {\n        changeAddress: claim.user.address, // User's address as change address\n        message: `Claim payout for ${claim.id}`,\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod', // or 'mainnet' for production\n      };\n\n      // Create internal transaction\n      const internalTx = await this.transactionRepository.save({\n        amount: claim.amount,\n        user: claim.user,\n        type: TransactionType.claim,\n        metadata: {\n          claimId: claim.id,\n          createdAt: new Date().toISOString(),\n          transactionType: 'claim',\n          description: `Claim payout for user ${claim.user.id}`,\n        },\n      });\n\n      // Build the transaction\n      const buildResponse = await this.blockchainService.buildTransaction(transactionInput);\n      this.logger.log('Transaction built successfully');\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        success: true,\n        transactionId: internalTx.id,\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  async submitSignedTransaction(\n    transactionId: string,\n    signedTxHex: string\n  ): Promise {\n    // Find the internal transaction\n    const internalTx = await this.transactionRepository.findOne({\n      where: { id: transactionId },\n    });\n\n    if (!internalTx) {\n      throw new NotFoundException('Transaction not found');\n    }\n\n    try {\n      // Submit to blockchain\n      const submitResponse = await this.blockchainService.submitTransaction({\n        transaction: signedTxHex,\n        signatures: [],\n      });\n\n      internalTx.tx_hash = submitResponse.txHash; // Connect offchain and onchain tx\n\n      await this.transactionRepository.save(internalTx);\n\n      // Also update the claim with the tx hash reference\n      const claim = await this.claimRepository.findOne({\n        where: { id: internalTx.metadata.claimId },\n      });\n      if (claim) {\n        claim.status = ClaimStatus.CLAIMED;\n        claim.tx_hash = submitResponse.txHash;\n        await this.claimRepository.save(claim);\n      }\n\n      return {\n        success: true,\n        transactionId: internalTx.id,\n        blockchainTxHash: submitResponse.txHash,\n      };\n    } catch (error) {\n      await this.transactionRepository.save(internalTx);\n      throw error;\n    }\n  }\n\n  async processConfirmedTransaction(txHash: string): Promise {\n    // Find the internal transaction by blockchain hash\n    const internalTx = await this.transactionRepository.findOne({\n      where: { tx_hash: txHash },\n    });\n\n    if (!internalTx) {\n      this.logger.warn(`No internal transaction found for blockchain hash: ${txHash}`);\n      return;\n    }\n\n    // Update the claim status\n    const claim = await this.claimRepository.findOne({\n      where: { id: internalTx.metadata.claimId },\n    });\n\n    if (claim) {\n      claim.status = ClaimStatus.CLAIMED;\n      await this.claimRepository.save(claim);\n      this.logger.log(`Claim ${claim.id} marked as CLAIMED with tx ${txHash}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributeReq.html":{"url":"classes/ContributeReq.html","title":"class - ContributeReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributeReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                assets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContributionAsset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of assets to contribute'})@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:132\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributionAsset.html":{"url":"classes/ContributionAsset.html","title":"class - ContributionAsset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributionAsset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                assetName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        assetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Asset name within the policy', example: 'l4vaaudiEngine'})@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Asset metadata including on-chain details', type: 'object', additionalProperties: true, example: undefined})@Expose()@IsOptional()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the asset (56-character hex string)', example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'})@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Quantity of assets to contribute', example: 1})@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContributionController.html":{"url":"controllers/ContributionController.html","title":"controller - ContributionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContributionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/contribution.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contribute\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                contribute\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getContributionTransactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        contribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    contribute(req, vaultId: string, contributeReq: ContributeReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':vaultId')@ApiOperation({summary: 'Contribute to a vault'})@UseGuards(AuthGuard)@ApiResponse({status: 201, description: 'Contribution successful'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contributeReq\n                                            \n                                                            ContributeReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getContributionTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContributionTransactions(vaultId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('transactions')@ApiOperation({summary: 'Get all contribution transactions'})@UseGuards(AuthGuard)@ApiResponse({status: 200, description: 'Returns all contribution transactions'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Query, Req, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\n\nimport { ContributionService } from './contribution.service';\nimport { ContributeReq } from './dto/contribute.req';\n\n@ApiTags('Contributions')\n@Controller('contribute')\nexport class ContributionController {\n  constructor(\n    private readonly contributionService: ContributionService,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  @Post(':vaultId')\n  @ApiOperation({ summary: 'Contribute to a vault' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 201, description: 'Contribution successful' })\n  async contribute(@Req() req, @Param('vaultId') vaultId: string, @Body() contributeReq: ContributeReq) {\n    const userId = req.user.sub;\n    return this.contributionService.contribute(vaultId, contributeReq, userId);\n  }\n\n  @Get('transactions')\n  @ApiOperation({ summary: 'Get all contribution transactions' })\n  @UseGuards(AuthGuard)\n  @ApiResponse({ status: 200, description: 'Returns all contribution transactions' })\n  async getContributionTransactions(@Query('vaultId') vaultId?: string) {\n    return this.transactionsService.getContributionTransactions(vaultId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContributionModule.html":{"url":"modules/ContributionModule.html","title":"module - ContributionModule","body":"\n                   \n\n\n\n\n    Modules\n    ContributionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_imports\n\n\n\ncluster_ContributionModule_exports\n\n\n\ncluster_ContributionModule_providers\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nContributionModule\n\nContributionModule\n\nContributionModule -->\n\nBlockchainModule->ContributionModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nContributionModule -->\n\nTransactionsModule->ContributionModule\n\n\n\n\n\nContributionService \n\nContributionService \n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/contribution.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContributionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContributionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContributionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\nimport { TransactionsModule } from '../../processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from '../../processing-tx/onchain/blockchain.module';\n\nimport { ContributionController } from './contribution.controller';\nimport { ContributionService } from './contribution.service';\n\n@Module({\n  imports: [BlockchainModule, TypeOrmModule.forFeature([Vault, User, Asset, Transaction]), TransactionsModule],\n  controllers: [ContributionController],\n  providers: [ContributionService],\n  exports: [ContributionService],\n})\nexport class ContributionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContributionService.html":{"url":"injectables/ContributionService.html","title":"injectable - ContributionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContributionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/contribution.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                contribute\n                            \n                            \n                                    Async\n                                syncContributionTransactions\n                            \n                            \n                                    Async\n                                updateTransactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionRepository: Repository, vaultRepository: Repository, usersRepository: Repository, assetRepository: Repository, transactionsService: TransactionsService, blockchainScanner: BlockchainScannerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainScanner\n                                                  \n                                                        \n                                                                        BlockchainScannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        contribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    contribute(vaultId: string, contributeReq: ContributeReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contributeReq\n                                            \n                                                            ContributeReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncContributionTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncContributionTransactions(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Syncs contribution transactions for a vault by comparing on-chain transactions\nwith the transactions stored in the database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the vault to sync transactions for\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing processed blockchain transactions and database transactions\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(transactionId: string, txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ContributionService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/contribution.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { AssetStatus, AssetType, AssetOriginType } from '../../../../types/asset.types';\nimport { BlockchainTransactionListItem } from '../../../../types/blockchain.types';\nimport { TransactionStatus, TransactionType } from '../../../../types/transaction.types';\nimport { VaultPrivacy, VaultStatus } from '../../../../types/vault.types';\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\nimport { BlockchainScannerService } from '../../processing-tx/onchain/blockchain-scanner.service';\n\nimport { ContributeReq } from './dto/contribute.req';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class ContributionService {\n  private readonly logger = new Logger(ContributionService.name);\n\n  constructor(\n    @InjectRepository(Transaction)\n    private readonly transactionRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService\n  ) {}\n\n  /**\n   * Syncs contribution transactions for a vault by comparing on-chain transactions\n   * with the transactions stored in the database\n   * @param vaultId - The ID of the vault to sync transactions for\n   * @returns An object containing processed blockchain transactions and database transactions\n   */\n  async syncContributionTransactions(vaultId: string): Promise;\n    databaseTxs: Transaction[];\n  }> {\n    try {\n      // Get the vault with contract address\n      const vault = await this.vaultRepository.findOne({\n        where: { id: vaultId },\n        select: ['id', 'contract_address'],\n      });\n\n      if (!vault) {\n        throw new NotFoundException('Vault not found');\n      }\n\n      if (!vault.contract_address) {\n        throw new BadRequestException('Vault does not have a contract address');\n      }\n\n      // Get transactions from blockchain and process them\n      const blockchainTxs = await this.blockchainScanner.getAddressTransactions(vault.contract_address);\n\n      // Process blockchain transactions\n      const processedBlockchainTxs = await Promise.all(\n        blockchainTxs\n          // Filter out transactions without block height\n          .filter(tx => tx.block_height != null)\n          // Process each transaction\n          .map(async tx => {\n            // Find corresponding transaction in database\n            const dbTx = await this.transactionRepository.findOne({\n              where: { tx_hash: tx.tx_hash },\n            });\n\n            let statusUpdated = false;\n\n            // If transaction exists in DB and status is not confirmed, update it\n            if (dbTx && dbTx.status !== 'confirmed') {\n              try {\n                await this.transactionsService.updateTransactionStatus(tx.tx_hash, 'confirmed' as TransactionStatus);\n                statusUpdated = true;\n                this.logger.log(`Updated transaction ${tx.tx_hash} status to confirmed`);\n              } catch (updateError) {\n                this.logger.error(`Failed to update transaction ${tx.tx_hash} status`, updateError);\n              }\n            }\n\n            return {\n              tx,\n              dbTx: dbTx || null,\n              statusUpdated,\n            };\n          })\n      );\n\n      // Get all transactions from database for this vault\n      const databaseTxs = await this.transactionRepository.find({\n        where: {\n          vault_id: vaultId,\n          type: TransactionType.contribute,\n        },\n        order: {\n          id: 'DESC' as const, // Using id as a proxy for creation order\n        },\n      });\n\n      return {\n        processedBlockchainTxs,\n        databaseTxs,\n      };\n    } catch (error) {\n      this.logger.error(`Failed to sync contribution transactions for vault ${vaultId}`, error);\n      throw error;\n    }\n  }\n\n  async contribute(vaultId: string, contributeReq: ContributeReq, userId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n      relations: ['contributor_whitelist', 'owner', 'assets_whitelist'],\n    });\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    if (vault.vault_status !== VaultStatus.contribution) {\n      throw new BadRequestException('Vault is not in contribution phase');\n    }\n\n    // For private/semi-private vaults, validate assets against whitelist\n    if (\n      (vault.privacy === VaultPrivacy.private || vault.privacy === VaultPrivacy.semiPrivate) &&\n      contributeReq.assets.length > 0\n    ) {\n      const invalidAssets = contributeReq.assets.filter(asset => {\n        return !vault.assets_whitelist?.some(whitelistedAsset => whitelistedAsset.policy_id === asset.policyId);\n      });\n\n      if (invalidAssets.length > 0) {\n        throw new BadRequestException(\n          `Some assets are not in the vault's whitelist: ${invalidAssets.map(a => a.policyId).join(', ')}`\n        );\n      }\n    }\n\n    // Allow vault owner to bypass whitelist check\n    if (vault.owner.id !== userId) {\n      // Check whitelist only for non-owners\n      if (vault.contributor_whitelist?.length > 0) {\n        const isWhitelisted = vault.contributor_whitelist.some(entry => entry.wallet_address === user.address);\n        if (!isWhitelisted) {\n          throw new BadRequestException('User is not in contributor whitelist');\n        }\n      }\n    }\n    const transaction = await this.transactionsService.createTransaction({\n      vault_id: vaultId,\n      type: TransactionType.contribute,\n      assets: [],\n    });\n    if (contributeReq.assets.length > 0) {\n      try {\n        // First, ensure the transaction exists and is loaded with relations if needed\n        const savedTransaction = await this.transactionRepository.findOneOrFail({\n          where: { id: transaction.id },\n          relations: ['assets'],\n        });\n\n        // Create and save all assets\n        const assets = await Promise.all(\n          contributeReq.assets.map(async assetItem => {\n            const asset = this.assetRepository.create({\n              transaction: savedTransaction,\n              type: AssetType.NFT,\n              policy_id: assetItem.policyId || '',\n              asset_id: assetItem.assetName,\n              quantity: assetItem.quantity,\n              status: AssetStatus.PENDING,\n              origin_type: AssetOriginType.CONTRIBUTED,\n              added_by: user,\n              metadata: assetItem?.metadata || {},\n            });\n\n            const savedAsset = await this.assetRepository.save(asset);\n            this.logger.log(`Created asset ${savedAsset.id} for transaction ${savedTransaction.id}`);\n            return savedAsset;\n          })\n        );\n\n        this.logger.log(`Successfully created ${assets.length} assets for transaction ${savedTransaction.id}`);\n      } catch (error) {\n        this.logger.error(`Failed to save assets for transaction ${transaction.id}`, error);\n        throw new Error(`Failed to save contribution assets: ${error.message}`);\n      }\n    }\n    return {\n      success: true,\n      message: 'Contribution request accepted, transaction created',\n      vaultId,\n      txId: transaction.id,\n    };\n  }\n\n  async updateTransactionHash(transactionId: string, txHash: string) {\n    const transaction = await this.transactionsService.findById(transactionId);\n    if (!transaction) {\n      throw new NotFoundException('Transaction not found');\n    }\n\n    await this.transactionsService.updateTransactionHash(transactionId, txHash);\n    return {\n      success: true,\n      message: 'Transaction hash updated',\n      txId: transactionId,\n      txHash: txHash,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContributorWhitelist.html":{"url":"classes/ContributorWhitelist.html","title":"class - ContributorWhitelist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContributorWhitelist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ContributorWhitelistEntity.html":{"url":"entities/ContributorWhitelistEntity.html","title":"entity - ContributorWhitelistEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ContributorWhitelistEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/contributorWhitelist.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vault\n                            \n                            \n                                    \n                                    \n                                wallet_address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vault => vault.contributor_whitelist, {onDelete: 'CASCADE'})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        wallet_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'walletAddress'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/contributorWhitelist.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'contributor_whitelist' })\nexport class ContributorWhitelistEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'walletAddress' })\n  @Column({ type: 'varchar', nullable: false })\n  wallet_address: string;\n\n  @ManyToOne(() => Vault, (vault: Vault) => vault.contributor_whitelist, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'vault_id' })\n  public vault: Vault;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAssetDto.html":{"url":"classes/CreateAssetDto.html","title":"class - CreateAssetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAssetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                contractAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                dexPrice\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                floorPrice\n                            \n                            \n                                    \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tokenId\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                vaultId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contractAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        dexPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        floorPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetMetadataDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: AssetMetadataDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tokenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(AssetType)@ApiProperty({enum: AssetType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/assets/dto/create-asset.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEnum, IsNumber, IsOptional, IsObject, ValidateNested } from 'class-validator';\nimport { AssetType } from '@/types/asset.types';\n\nexport class AssetMetadataDto {\n  @IsString()\n  @ApiProperty()\n  name: string;\n\n  @IsString()\n  @ApiProperty()\n  description: string;\n\n  @IsString()\n  @ApiProperty()\n  imageUrl: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  category?: string;\n\n  @IsObject()\n  @ApiProperty({\n    type: 'object',\n    description: 'Custom attributes for the asset',\n    additionalProperties: true,\n    example: {\n      rarity: 'legendary',\n      edition: '1/100',\n      traits: ['gold', 'limited'],\n    },\n  })\n  attributes: Record;\n}\n\nexport class CreateAssetDto {\n  @IsString()\n  @ApiProperty()\n  vaultId: string;\n\n  @IsEnum(AssetType)\n  @ApiProperty({ enum: AssetType })\n  type: AssetType;\n\n  @IsString()\n  @ApiProperty()\n  contractAddress: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  tokenId?: string;\n\n  @IsNumber()\n  @ApiProperty()\n  quantity: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  floorPrice?: number;\n\n  @IsNumber()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  dexPrice?: number;\n\n  @ValidateNested()\n  @Type(() => AssetMetadataDto)\n  @ApiProperty({ type: AssetMetadataDto })\n  metadata: AssetMetadataDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClaimDto.html":{"url":"classes/CreateClaimDto.html","title":"class - CreateClaimDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClaimDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/claims/dto/create-claim.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/create-claim.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/create-claim.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/create-claim.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/create-claim.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/create-claim.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNumber, IsOptional } from 'class-validator';\n\nexport class CreateClaimDto {\n  @IsString()\n  userId: string;\n\n  @IsString()\n  type: string;\n\n  @IsNumber()\n  amount: number;\n\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @IsOptional()\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePoolDto.html":{"url":"classes/CreatePoolDto.html","title":"class - CreatePoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/dto/create-pool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                networkId\n                            \n                            \n                                    \n                                    \n                                poolFactoryAddress\n                            \n                            \n                                    \n                                    \n                                poolOwnerAddress\n                            \n                            \n                                    \n                                    \n                                tokenA\n                            \n                            \n                                    \n                                    \n                                tokenB\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                v2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        networkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Network ID (1 for mainnet, 0 for testnet)'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        poolFactoryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pool factory address'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        poolOwnerAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pool owner address'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tokenA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token A information'})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tokenB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token B information'})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        v2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether to use VyFi v2', required: false, default: true})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsOptional, IsBoolean, IsObject } from 'class-validator';\n\nexport class TokenInfo {\n  @ApiProperty({ description: 'Policy ID of the token' })\n  @IsString()\n  policyId: string;\n\n  @ApiProperty({ description: 'Asset name of the token' })\n  @IsString()\n  assetName: string;\n\n  @ApiProperty({ description: 'Amount of the token' })\n  @IsNumber()\n  amount: number;\n}\n\nexport class CreatePoolDto {\n  @ApiProperty({ description: 'Network ID (1 for mainnet, 0 for testnet)' })\n  @IsNumber()\n  networkId: number;\n\n  @ApiProperty({ description: 'Token A information' })\n  @IsObject()\n  tokenA: TokenInfo;\n\n  @ApiProperty({ description: 'Token B information' })\n  @IsObject()\n  tokenB: TokenInfo;\n\n  @ApiProperty({ description: 'Whether to use VyFi v2', required: false, default: true })\n  @IsOptional()\n  @IsBoolean()\n  v2?: boolean;\n\n  @ApiProperty({ description: 'Pool owner address' })\n  @IsString()\n  poolOwnerAddress: string;\n\n  @ApiProperty({ description: 'Pool factory address' })\n  @IsString()\n  poolFactoryAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProposalReq.html":{"url":"classes/CreateProposalReq.html","title":"class - CreateProposalReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProposalReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    \n                                    \n                                options\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Detailed description of the proposal', example: 'Proposal to sell Asset XYZ at current market price...'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Additional metadata for the proposal', required: false, example: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Voting options', example: undefined})@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the proposal', example: 'Sell Asset XYZ'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProposalType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of proposal', enum: ProposalType, example: undefined})@IsEnum(ProposalType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsEnum, IsOptional, IsArray } from 'class-validator';\n\nexport enum ProposalType {\n  ASSET_SALE = 'asset_sale',\n  VAULT_STRATEGY = 'vault_strategy',\n  PARAMETER_CHANGE = 'parameter_change',\n  OTHER = 'other',\n}\n\nexport class CreateProposalReq {\n  @ApiProperty({\n    description: 'Title of the proposal',\n    example: 'Sell Asset XYZ',\n  })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    description: 'Detailed description of the proposal',\n    example: 'Proposal to sell Asset XYZ at current market price...',\n  })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: 'Type of proposal',\n    enum: ProposalType,\n    example: ProposalType.ASSET_SALE,\n  })\n  @IsEnum(ProposalType)\n  type: ProposalType;\n\n  @ApiProperty({\n    description: 'Additional metadata for the proposal',\n    required: false,\n    example: { assetId: 'xyz-123', targetPrice: '1000' },\n  })\n  @IsOptional()\n  metadata?: Record;\n\n  @ApiProperty({\n    description: 'Voting options',\n    example: ['Yes', 'No', 'Abstain'],\n  })\n  @IsArray()\n  @IsString({ each: true })\n  options: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseStruct1741879378411.html":{"url":"classes/DatabaseStruct1741879378411.html","title":"class - DatabaseStruct1741879378411","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseStruct1741879378411\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741879378411-databaseStruct.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DatabaseStruct1741879378411'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1741879378411-databaseStruct.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741879378411-databaseStruct.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741879378411-databaseStruct.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class DatabaseStruct1741879378411 implements MigrationInterface {\n  name = 'DatabaseStruct1741879378411';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"files\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"file_key\" character varying NOT NULL, \"file_url\" character varying NOT NULL, \"file_type\" character varying NOT NULL, \"file_name\" character varying NOT NULL, \"metadata\" jsonb, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT \"PK_6c16b9093a142e0e7613b04a3d9\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"links\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"url\" character varying NOT NULL, \"name\" character varying NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, \"user_id\" uuid, CONSTRAINT \"PK_ecf17f4a741d3c5ba0b4c5ab4b6\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" character varying NOT NULL, \"address\" character varying NOT NULL, \"description\" character varying, \"tvl\" numeric(20,2) NOT NULL DEFAULT '0', \"total_vaults\" integer NOT NULL DEFAULT '0', \"gains\" numeric(10,2) NOT NULL DEFAULT '0', \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"profile_image_id\" uuid, \"banner_image_id\" uuid, CONSTRAINT \"UQ_b0ec0293d53a1385955f9834d5c\" UNIQUE (\"address\"), CONSTRAINT \"REL_96d6f1aafc327443850f263cd5\" UNIQUE (\"profile_image_id\"), CONSTRAINT \"REL_657d44500fe38e604f4a630662\" UNIQUE (\"banner_image_id\"), CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"investors_whitelist\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"wallet_address\" character varying NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, CONSTRAINT \"PK_8aff9f27f807add95dd73b72f3e\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_type_enum\" AS ENUM('nft', 'cnt')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"assets_status_enum\" AS ENUM('pending', 'locked', 'released')`);\n    await queryRunner.query(\n      `CREATE TABLE \"assets\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"vault_id\" uuid NOT NULL, \"type\" \"public\".\"assets_type_enum\" NOT NULL, \"contract_address\" character varying NOT NULL, \"token_id\" character varying, \"quantity\" numeric(20,2) NOT NULL DEFAULT '0', \"floor_price\" numeric(20,2), \"dex_price\" numeric(20,2), \"last_valuation\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"assets_status_enum\" NOT NULL DEFAULT 'pending', \"locked_at\" TIMESTAMP WITH TIME ZONE, \"released_at\" TIMESTAMP WITH TIME ZONE, \"metadata\" jsonb NOT NULL, \"added_by\" character varying NOT NULL, \"added_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT \"PK_da96729a8b113377cfb6a62439c\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(`CREATE INDEX \"IDX_9dcbee9dfaf5bc1d498d568216\" ON \"assets\" (\"vault_id\") `);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_type_enum\" AS ENUM('single', 'multi', 'ctn')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_privacy_enum\" AS ENUM('private', 'public', 'semi-private')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_valuation_type_enum\" AS ENUM('lbe', 'fixed')`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum\" AS ENUM('custom', 'upon-vault-lunch')`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_investment_open_window_type_enum\" AS ENUM('custom', 'upon-asset-window-closing')`\n    );\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_termination_type_enum\" AS ENUM('dao', 'programmed')`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked')`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"vaults\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" character varying NOT NULL, \"type\" \"public\".\"vaults_type_enum\", \"privacy\" \"public\".\"vaults_privacy_enum\", \"description\" character varying, \"valuation_type\" \"public\".\"vaults_valuation_type_enum\", \"contribution_open_window_type\" \"public\".\"vaults_contribution_open_window_type_enum\", \"contribution_open_window_time\" TIMESTAMP WITH TIME ZONE, \"asset_window\" TIMESTAMP WITH TIME ZONE, \"investment_window_duration\" TIMESTAMP WITH TIME ZONE, \"investment_open_window_type\" \"public\".\"vaults_investment_open_window_type_enum\", \"investment_open_window_time\" TIMESTAMP WITH TIME ZONE, \"tokens_for_acquires\" numeric, \"ft_investment_window\" TIMESTAMP WITH TIME ZONE, \"ft_investment_reverse\" numeric, \"liquidity_pool_contribution\" numeric, \"ft_token_supply\" numeric, \"vault_token_ticker\" character varying, \"ft_token_decimals\" smallint DEFAULT '1', \"termination_type\" \"public\".\"vaults_termination_type_enum\", \"time_elapsed_is_equal_to_time\" TIMESTAMP WITH TIME ZONE, \"asset_appreciation\" numeric, \"creation_threshold\" numeric, \"start_threshold\" numeric, \"vote_threshold\" numeric, \"execution_threshold\" numeric, \"cosigning_threshold\" numeric, \"vault_status\" \"public\".\"vaults_vault_status_enum\", \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"owner_id\" uuid, \"vault_image_id\" uuid, \"banner_image_id\" uuid, \"investors_whitelist_csv_id\" uuid, \"ft_token_img_id\" uuid, CONSTRAINT \"REL_bfa8eb1a193e5e4a9dc4d2b725\" UNIQUE (\"vault_image_id\"), CONSTRAINT \"REL_a6a3f7811be6df590c8da538d4\" UNIQUE (\"banner_image_id\"), CONSTRAINT \"REL_3e6ff48532fbe552bbb6c4098b\" UNIQUE (\"investors_whitelist_csv_id\"), CONSTRAINT \"REL_c15eb8818056ac23754262fdd3\" UNIQUE (\"ft_token_img_id\"), CONSTRAINT \"CHK_9d2496e0bc2b30a41372df4bd4\" CHECK (\"ft_token_decimals\" BETWEEN 1 AND 9), CONSTRAINT \"PK_487a5346fa3693a430b6d6db60c\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"assets_whitelist\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"policy_id\" character varying(56) NOT NULL, \"asset_count_cap_min\" integer, \"asset_count_cap_max\" integer, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"vault_id\" uuid, CONSTRAINT \"PK_85cf89e7248c7f3f4013e524c84\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"links\" ADD CONSTRAINT \"FK_1e942f889da974dfccec3b4ecbf\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"links\" ADD CONSTRAINT \"FK_9f8dea86e48a7216c4f5369c1e4\" FOREIGN KEY (\"user_id\") REFERENCES \"users\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD CONSTRAINT \"FK_96d6f1aafc327443850f263cd50\" FOREIGN KEY (\"profile_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD CONSTRAINT \"FK_657d44500fe38e604f4a6306620\" FOREIGN KEY (\"banner_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"investors_whitelist\" ADD CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets\" ADD CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_6f6b9ff91b18b69d88c11e4f5d8\" FOREIGN KEY (\"owner_id\") REFERENCES \"users\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_bfa8eb1a193e5e4a9dc4d2b7257\" FOREIGN KEY (\"vault_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_a6a3f7811be6df590c8da538d40\" FOREIGN KEY (\"banner_image_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_3e6ff48532fbe552bbb6c4098bd\" FOREIGN KEY (\"investors_whitelist_csv_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_c15eb8818056ac23754262fdd3a\" FOREIGN KEY (\"ft_token_img_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"assets_whitelist\" ADD CONSTRAINT \"FK_67ab781bada0c0fd71e38f5d3a4\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"assets_whitelist\" DROP CONSTRAINT \"FK_67ab781bada0c0fd71e38f5d3a4\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_c15eb8818056ac23754262fdd3a\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_3e6ff48532fbe552bbb6c4098bd\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_a6a3f7811be6df590c8da538d40\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_bfa8eb1a193e5e4a9dc4d2b7257\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_6f6b9ff91b18b69d88c11e4f5d8\"`);\n    await queryRunner.query(`ALTER TABLE \"assets\" DROP CONSTRAINT \"FK_9dcbee9dfaf5bc1d498d568216f\"`);\n    await queryRunner.query(`ALTER TABLE \"investors_whitelist\" DROP CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP CONSTRAINT \"FK_657d44500fe38e604f4a6306620\"`);\n    await queryRunner.query(`ALTER TABLE \"users\" DROP CONSTRAINT \"FK_96d6f1aafc327443850f263cd50\"`);\n    await queryRunner.query(`ALTER TABLE \"links\" DROP CONSTRAINT \"FK_9f8dea86e48a7216c4f5369c1e4\"`);\n    await queryRunner.query(`ALTER TABLE \"links\" DROP CONSTRAINT \"FK_1e942f889da974dfccec3b4ecbf\"`);\n    await queryRunner.query(`DROP TABLE \"assets_whitelist\"`);\n    await queryRunner.query(`DROP TABLE \"vaults\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_termination_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_investment_open_window_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_valuation_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_privacy_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_type_enum\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_9dcbee9dfaf5bc1d498d568216\"`);\n    await queryRunner.query(`DROP TABLE \"assets\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"assets_type_enum\"`);\n    await queryRunner.query(`DROP TABLE \"investors_whitelist\"`);\n    await queryRunner.query(`DROP TABLE \"users\"`);\n    await queryRunner.query(`DROP TABLE \"links\"`);\n    await queryRunner.query(`DROP TABLE \"files\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Datum.html":{"url":"interfaces/Datum.html","title":"interface - Datum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Datum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/types/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            asset_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contributed_assets\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            datum_tag\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            policy_id\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asset_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contributed_assets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributed_assets:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datum_tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datum_tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policy_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Redeemer =\n  | {\n      quantity: number;\n      output_index: number;\n      contribution: 'Lovelace' | 'Asset';\n    }\n  | 'MintAdaPair'\n  | 'BurnLp';\nexport type Redeemer1 =\n  | {\n      __variant: 'ExtractAda' | 'ExtractAsset';\n      __data: {\n        lp_output_index?: number;\n      };\n    }\n  | {\n      lp_output_index: number;\n      change_output_index: number;\n    }\n  | 'CancelAsset'\n  | 'CancelAda';\nexport type Redeemer2 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\nexport type Redeemer3 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\n\n/**\n * Aiken contracts for project 'l4va/vault'\n */\nexport interface L4VaVault {\n  contribute: {\n    mint: {\n      redeemer: Redeemer;\n    };\n    spend: {\n      redeemer: Redeemer1;\n      datum: Datum;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n  vault: {\n    mint: {\n      redeemer: Redeemer2;\n    };\n    spend: {\n      redeemer: Redeemer3;\n      datum: Datum1;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n}\nexport interface Datum {\n  policy_id: string;\n  asset_name: string;\n  quantity: number;\n  owner:\n    | string\n    | {\n        payment_credential: {\n          __variant: 'VerificationKey' | 'Script';\n          __data: string;\n        };\n        stake_credential?:\n          | {\n              __variant: 'VerificationKey' | 'Script';\n              __data: string;\n            }\n          | {\n              slot_number: number;\n              transaction_index: number;\n              certificate_index: number;\n            };\n      };\n  datum_tag?: string;\n  contributed_assets?: Array;\n}\nexport interface Datum1 {\n  contract_type: number;\n  asset_whitelist: string[];\n  contributor_whitelist?: string[];\n  asset_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  investment_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  valuation_type: number;\n  fractionalization?: {\n    percentage: number;\n    token_supply: number;\n    token_decimals: number;\n    token_policy: string;\n  };\n  custom_metadata: [string, string, ...string[]][];\n  termination?: {\n    termination_type: number;\n    fdp: number;\n  };\n  investment?: {\n    reserve: number;\n    liquidityPool: number;\n  };\n  admin: string;\n  minting_key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Datum1.html":{"url":"interfaces/Datum1.html","title":"interface - Datum1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Datum1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/types/type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            asset_whitelist\n                                        \n                                \n                                \n                                        \n                                            asset_window\n                                        \n                                \n                                \n                                        \n                                            contract_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contributor_whitelist\n                                        \n                                \n                                \n                                        \n                                            custom_metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fractionalization\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            investment\n                                        \n                                \n                                \n                                        \n                                            investment_window\n                                        \n                                \n                                \n                                        \n                                            minting_key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            termination\n                                        \n                                \n                                \n                                        \n                                            valuation_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        asset_whitelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asset_whitelist:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        asset_window\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asset_window:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contract_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contract_type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contributor_whitelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributor_whitelist:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        custom_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        custom_metadata:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fractionalization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fractionalization:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        investment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        investment:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        investment_window\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        investment_window:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minting_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minting_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        termination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        termination:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valuation_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valuation_type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Redeemer =\n  | {\n      quantity: number;\n      output_index: number;\n      contribution: 'Lovelace' | 'Asset';\n    }\n  | 'MintAdaPair'\n  | 'BurnLp';\nexport type Redeemer1 =\n  | {\n      __variant: 'ExtractAda' | 'ExtractAsset';\n      __data: {\n        lp_output_index?: number;\n      };\n    }\n  | {\n      lp_output_index: number;\n      change_output_index: number;\n    }\n  | 'CancelAsset'\n  | 'CancelAda';\nexport type Redeemer2 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\nexport type Redeemer3 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\n\n/**\n * Aiken contracts for project 'l4va/vault'\n */\nexport interface L4VaVault {\n  contribute: {\n    mint: {\n      redeemer: Redeemer;\n    };\n    spend: {\n      redeemer: Redeemer1;\n      datum: Datum;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n  vault: {\n    mint: {\n      redeemer: Redeemer2;\n    };\n    spend: {\n      redeemer: Redeemer3;\n      datum: Datum1;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n}\nexport interface Datum {\n  policy_id: string;\n  asset_name: string;\n  quantity: number;\n  owner:\n    | string\n    | {\n        payment_credential: {\n          __variant: 'VerificationKey' | 'Script';\n          __data: string;\n        };\n        stake_credential?:\n          | {\n              __variant: 'VerificationKey' | 'Script';\n              __data: string;\n            }\n          | {\n              slot_number: number;\n              transaction_index: number;\n              certificate_index: number;\n            };\n      };\n  datum_tag?: string;\n  contributed_assets?: Array;\n}\nexport interface Datum1 {\n  contract_type: number;\n  asset_whitelist: string[];\n  contributor_whitelist?: string[];\n  asset_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  investment_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  valuation_type: number;\n  fractionalization?: {\n    percentage: number;\n    token_supply: number;\n    token_decimals: number;\n    token_policy: string;\n  };\n  custom_metadata: [string, string, ...string[]][];\n  termination?: {\n    termination_type: number;\n    fdp: number;\n  };\n  investment?: {\n    reserve: number;\n    liquidityPool: number;\n  };\n  admin: string;\n  minting_key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistributeLpTokensParams.html":{"url":"interfaces/DistributeLpTokensParams.html","title":"interface - DistributeLpTokensParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DistributeLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for dropping LP tokens\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Amount of LP tokens to drop (in smallest unit as string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wallet address to receive the LP tokens\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DistributionModule.html":{"url":"modules/DistributionModule.html","title":"module - DistributionModule","body":"\n                   \n\n\n\n\n    Modules\n    DistributionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DistributionModule\n\n\n\ncluster_DistributionModule_providers\n\n\n\ncluster_DistributionModule_exports\n\n\n\n\nDistributionService \n\nDistributionService \n\n\n\nDistributionModule\n\nDistributionModule\n\nDistributionService  -->\n\nDistributionModule->DistributionService \n\n\n\n\n\nDistributionService\n\nDistributionService\n\nDistributionModule -->\n\nDistributionService->DistributionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/distribution/distribution.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DistributionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DistributionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { DistributionService } from './distribution.service';\n\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Vault])],\n  providers: [DistributionService],\n  exports: [DistributionService],\n})\nexport class DistributionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DistributionService.html":{"url":"injectables/DistributionService.html","title":"injectable - DistributionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DistributionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/distribution/distribution.service.ts\n        \n\n\n            \n                Description\n            \n            \n                DistributionService\nThis service provides core business logic for calculating token and ADA distributions\nfor contributors and acquirers in the vault system. It includes formulas for\nliquidity pool allocation, VT token pricing, contributor/acquirer shares, and\nvalue retention metrics.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateAcquirerExample\n                            \n                            \n                                    Async\n                                calculateContributorExample\n                            \n                            \n                                    Private\n                                calculateLpAda\n                            \n                            \n                                    Private\n                                calculateTotalValueRetained\n                            \n                            \n                                    Private\n                                calculateVtPrice\n                            \n                            \n                                    Private\n                                round6\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/distribution/distribution.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateAcquirerExample\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateAcquirerExample(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateContributorExample\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateContributorExample(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateLpAda\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateLpAda(adaSent: number, LP_PERCENT: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                adaSent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                LP_PERCENT\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateTotalValueRetained\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateTotalValueRetained(netAda: number, vtAda: number, lpAda: number, lpVtAda: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                netAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vtAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lpAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lpVtAda\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateVtPrice\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateVtPrice(adaSent: number, VT_SUPPLY: number, ASSETS_OFFERED_PERCENT: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                adaSent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                VT_SUPPLY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ASSETS_OFFERED_PERCENT\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        round6\n                        \n                    \n                \n            \n            \n                \n                        \n                    round6(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/distribution/distribution.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Vault } from '@/database/vault.entity';\n\n/**\n * DistributionService\n *\n * This service provides core business logic for calculating token and ADA distributions\n * for contributors and acquirers in the vault system. It includes formulas for\n * liquidity pool allocation, VT token pricing, contributor/acquirer shares, and\n * value retention metrics.\n */\n@Injectable()\nexport class DistributionService {\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository\n  ) {}\n\n  private round6(amount: number): number {\n    return Math.round(amount * 1e6) / 1e6;\n  }\n\n  private calculateVtPrice(adaSent: number, VT_SUPPLY: number, ASSETS_OFFERED_PERCENT: number): number {\n    return adaSent / ASSETS_OFFERED_PERCENT / VT_SUPPLY;\n  }\n\n  private calculateTotalValueRetained(netAda: number, vtAda: number, lpAda: number, lpVtAda: number): number {\n    return this.round6(netAda + vtAda + lpAda + lpVtAda);\n  }\n\n  private calculateLpAda(adaSent: number, LP_PERCENT: number): number {\n    return adaSent * LP_PERCENT;\n  }\n\n  async calculateContributorExample(params: { vaultId: string; valueContributed: number; totalTvl: number }): Promise {\n    const { vaultId, valueContributed, totalTvl } = params;\n\n    // Fetch vault from DB\n    const vault = await this.vaultsRepository.findOneByOrFail({ id: vaultId });\n\n    const contributorShare = valueContributed / totalTvl;\n\n    const VT_SUPPLY = vault.ft_token_supply;\n    const ASSETS_OFFERED_PERCENT = vault.tokens_for_acquires * 0.01;\n    const LP_PERCENT = vault.liquidity_pool_contribution * 0.01;\n\n    const vtPrice = this.round6(this.calculateVtPrice(valueContributed, VT_SUPPLY, ASSETS_OFFERED_PERCENT));\n\n    const lpAda = this.round6(this.calculateLpAda(valueContributed, LP_PERCENT));\n    const lpVt = this.round6(VT_SUPPLY * ASSETS_OFFERED_PERCENT * LP_PERCENT);\n\n    const vtRetained = this.round6(VT_SUPPLY * (1 - ASSETS_OFFERED_PERCENT) * contributorShare);\n    const lpVtRetained = this.round6(lpVt * LP_PERCENT);\n    const lpAdaRetained = this.round6(lpAda * LP_PERCENT);\n\n    const vtAdaValue = this.round6(vtRetained * vtPrice);\n    const totalRetainedValue = this.round6(this.calculateTotalValueRetained(0, vtAdaValue, lpAdaRetained, 0));\n\n    return {\n      vtRetained: Math.round(vtRetained),\n      lpVtRetained,\n      lpAdaRetained,\n      totalRetainedValue,\n    };\n  }\n\n  async calculateAcquirerExample(params: {\n    vaultId: string;\n    adaSent: number;\n    numAcquirers: number;\n    totalAcquiredValueAda: number;\n  }): Promise {\n    const { vaultId, adaSent, totalAcquiredValueAda } = params;\n\n    // Fetch vault from DB\n    const vault = await this.vaultsRepository.findOneByOrFail({ id: vaultId });\n\n    const VT_SUPPLY = vault.ft_token_supply;\n    const ASSETS_OFFERED_PERCENT = vault.tokens_for_acquires * 0.01; // Convert percentage to decimal\n    const LP_PERCENT = vault.liquidity_pool_contribution * 0.01; // Convert percentage to decimal\n\n    // const l4vaFee = 5.0;\n    // const trxnReserveFee = 5.0;\n\n    const percentOfTotalAcquireAdaSent = this.round6(adaSent / totalAcquiredValueAda);\n\n    const vtPrice = this.round6(this.calculateVtPrice(totalAcquiredValueAda, VT_SUPPLY, ASSETS_OFFERED_PERCENT));\n\n    const lpAda = this.round6(LP_PERCENT * totalAcquiredValueAda);\n    const lpVt = this.round6(VT_SUPPLY * ASSETS_OFFERED_PERCENT * LP_PERCENT);\n\n    const vtAvailableToAcquirers = this.round6(VT_SUPPLY * ASSETS_OFFERED_PERCENT - lpVt);\n\n    const percentOfTotalVtNetOfLp = percentOfTotalAcquireAdaSent;\n\n    const vtReceived = this.round6(percentOfTotalVtNetOfLp * vtAvailableToAcquirers);\n\n    const vtValueInAda = this.round6(vtReceived * vtPrice);\n\n    const lpAdaInitialShare = this.round6(percentOfTotalVtNetOfLp * lpAda);\n\n    const lpVtInitialShare = this.round6(percentOfTotalVtNetOfLp * lpVt);\n\n    const lpVtAdaValue = this.round6(lpVtInitialShare * vtPrice);\n\n    const totalValueInAdaRetained = this.round6(adaSent + vtValueInAda + lpAdaInitialShare + lpVtAdaValue);\n\n    const percentValueRetained = this.round6(totalValueInAdaRetained / adaSent);\n\n    // const valueInAdaRetainedNetOfFees = this.round6(totalValueInAdaRetained - l4vaFee - trxnReserveFee);\n\n    return {\n      adaSent: this.round6(adaSent),\n      percentOfTotalAcquireAdaSent,\n      percentOfTotalVtNetOfLp,\n      vtReceived: Math.round(vtReceived),\n      vtValueInAda,\n      lpAdaInitialShare,\n      lpVtInitialShare,\n      lpVtAdaValue,\n      totalValueInAdaRetained,\n      percentValueRetained,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DraftVaultsService.html":{"url":"injectables/DraftVaultsService.html","title":"injectable - DraftVaultsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DraftVaultsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/draft-vaults.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDraftVaultById\n                            \n                            \n                                    Async\n                                getMyDraftVaults\n                            \n                            \n                                    Async\n                                saveDraftVault\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultsRepository: Repository, usersRepository: Repository, linksRepository: Repository, filesRepository: Repository, assetsWhitelistRepository: Repository, acquirerWhitelistRepository: Repository, contributorWhitelistRepository: Repository, tagsRepository: Repository, awsService: AwsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/draft-vaults.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetsWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        acquirerWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contributorWhitelistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsService\n                                                  \n                                                        \n                                                                        AwsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDraftVaultById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDraftVaultById(id: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/draft-vaults.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMyDraftVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyDraftVaults(userId: string, page: number, limit: number, sortBy?: VaultSortField, sortOrder: SortOrder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/draft-vaults.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                sortBy\n                                            \n                                                            VaultSortField\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                sortOrder\n                                            \n                                                            SortOrder\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    SortOrder.DESC\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveDraftVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDraftVault(userId: string, data: SaveDraftReq)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/draft-vaults.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            SaveDraftReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { classToPlain, plainToInstance } from 'class-transformer';\nimport { Repository } from 'typeorm';\n\nimport { transformImageToUrl } from '../../helpers';\nimport { VaultStatus } from '../../types/vault.types';\nimport { AwsService } from '../aws_bucket/aws.service';\n\nimport { VaultSortField, SortOrder } from './dto/get-vaults.dto';\nimport { PaginatedResponseDto } from './dto/paginated-response.dto';\nimport { SaveDraftReq } from './dto/saveDraft.req';\nimport { VaultShortResponse } from './dto/vault.response';\n\nimport { AcquirerWhitelistEntity } from '@/database/acquirerWhitelist.entity';\nimport { AssetsWhitelistEntity } from '@/database/assetsWhitelist.entity';\nimport { ContributorWhitelistEntity } from '@/database/contributorWhitelist.entity';\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { TagEntity } from '@/database/tag.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class DraftVaultsService {\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    @InjectRepository(User)\n    private readonly usersRepository: Repository,\n    @InjectRepository(LinkEntity)\n    private readonly linksRepository: Repository,\n    @InjectRepository(FileEntity)\n    private readonly filesRepository: Repository,\n    @InjectRepository(AssetsWhitelistEntity)\n    private readonly assetsWhitelistRepository: Repository,\n    @InjectRepository(AcquirerWhitelistEntity)\n    private readonly acquirerWhitelistRepository: Repository,\n    @InjectRepository(ContributorWhitelistEntity)\n    private readonly contributorWhitelistRepository: Repository,\n    @InjectRepository(TagEntity)\n    private readonly tagsRepository: Repository,\n    private readonly awsService: AwsService\n  ) {}\n\n  async getMyDraftVaults(\n    userId: string,\n    page: number = 1,\n    limit: number = 10,\n    sortBy?: VaultSortField,\n    sortOrder: SortOrder = SortOrder.DESC\n  ): Promise> {\n    const query = {\n      where: {\n        owner: { id: userId },\n        vault_status: VaultStatus.draft,\n      },\n      relations: ['social_links', 'vault_image', 'banner_image', 'ft_token_img'],\n      skip: (page - 1) * limit,\n      take: limit,\n      order: {},\n    };\n\n    // Add sorting if specified\n    if (sortBy) {\n      query.order[sortBy] = sortOrder;\n    } else {\n      // Default sort by created_at DESC if no sort specified\n      query.order['created_at'] = SortOrder.DESC;\n    }\n\n    const [listOfVaults, total] = await this.vaultsRepository.findAndCount(query);\n    const transformedItems = listOfVaults.map(vault =>\n      plainToInstance(VaultShortResponse, classToPlain(vault), { excludeExtraneousValues: true })\n    );\n\n    return {\n      items: transformedItems,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n\n  async getDraftVaultById(id: string, userId: string): Promise {\n    const vault = await this.vaultsRepository.findOne({\n      where: {\n        id,\n        vault_status: VaultStatus.draft,\n        owner: { id: userId },\n      },\n      relations: [\n        'owner',\n        'social_links',\n        'assets_whitelist',\n        'acquirer_whitelist',\n        'contributor_whitelist',\n        'vault_image',\n        'banner_image',\n        'ft_token_img',\n        'acquirer_whitelist_csv',\n      ],\n    });\n\n    if (!vault) {\n      throw new BadRequestException('Draft vault not found');\n    }\n\n    // Transform image entities to URLs\n    vault.vault_image = transformImageToUrl(vault.vault_image as FileEntity) as any;\n    vault.banner_image = transformImageToUrl(vault.banner_image as FileEntity) as any;\n    vault.ft_token_img = transformImageToUrl(vault.ft_token_img as FileEntity) as any;\n    delete vault.owner;\n    delete vault.contribution_phase_start;\n    delete vault.acquire_phase_start;\n    delete vault.locked_at;\n\n    // todo need to create additional model for remove owner, and transform image to link\n    return classToPlain(vault);\n  }\n\n  async saveDraftVault(userId: string, data: SaveDraftReq): Promise {\n    let existingVault: Vault | null = null;\n\n    if (data.id) {\n      existingVault = await this.vaultsRepository.findOne({\n        where: {\n          id: data.id,\n          vault_status: VaultStatus.draft,\n          owner: { id: userId },\n        },\n        relations: [\n          'owner',\n          'social_links',\n          'assets_whitelist',\n          'acquirer_whitelist',\n          'acquirer_whitelist_csv',\n          'vault_image',\n          'banner_image',\n          'ft_token_img',\n        ],\n      });\n\n      if (existingVault && existingVault.vault_status !== VaultStatus.draft) {\n        throw new BadRequestException('Cannot modify a published vault');\n      }\n\n      if (existingVault) {\n        if (existingVault.social_links?.length > 0) {\n          await this.linksRepository.remove(existingVault.social_links);\n        }\n        if (existingVault.assets_whitelist?.length > 0) {\n          await this.assetsWhitelistRepository.remove(existingVault.assets_whitelist);\n        }\n        if (existingVault.acquirer_whitelist?.length > 0) {\n          await this.acquirerWhitelistRepository.remove(existingVault.acquirer_whitelist);\n        }\n        if (existingVault.contributor_whitelist?.length > 0) {\n          await this.contributorWhitelistRepository.remove(existingVault.contributor_whitelist);\n        }\n      }\n    }\n\n    try {\n      const owner = await this.usersRepository.findOne({\n        where: { id: userId },\n      });\n\n      // Process image files\n      const imgKey = data.vaultImage?.split('image/')[1];\n      const vaultImg = imgKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: imgKey },\n          })\n        : null;\n\n      const bannerImgKey = data.bannerImage?.split('image/')[1];\n      const bannerImg = bannerImgKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: bannerImgKey },\n          })\n        : null;\n\n      const ftTokenImgKey = data.ftTokenImg?.split('image/')[1];\n      const ftTokenImg = ftTokenImgKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: ftTokenImgKey },\n          })\n        : null;\n\n      const acquirerWhitelistCsvKey = data.acquirerWhitelistCsv?.key;\n      const acquirerWhitelistFile = acquirerWhitelistCsvKey\n        ? await this.filesRepository.findOne({\n            where: { file_key: acquirerWhitelistCsvKey },\n          })\n        : null;\n\n      // Check if the vault already has these files to avoid duplicate relations\n      const hasVaultImage = existingVault?.vault_image?.file_key === imgKey;\n      const hasBannerImage = existingVault?.banner_image?.file_key === bannerImgKey;\n      const hasFtTokenImage = existingVault?.ft_token_img?.file_key === ftTokenImgKey;\n      const hasAcquirerWhitelistCsv = existingVault?.acquirer_whitelist_csv?.file_key === acquirerWhitelistCsvKey;\n\n      const vaultData: any = {\n        owner: owner,\n        vault_status: VaultStatus.draft,\n      };\n\n      // Only include fields that are actually provided\n      if (data.name !== undefined) vaultData.name = data.name;\n      if (data.type !== undefined) vaultData.type = data.type;\n      if (data.privacy !== undefined) vaultData.privacy = data.privacy;\n      if (data.valueMethod !== undefined) vaultData.value_method = data.valueMethod;\n      if (data.valuationCurrency !== undefined) vaultData.valuation_currency = data.valuationCurrency;\n      if (data.valuationAmount !== undefined) vaultData.valuation_amount = data.valuationAmount;\n      if (data.description !== undefined) vaultData.description = data.description;\n      if (data.ftTokenDecimals) vaultData.ft_token_decimals = data.ftTokenDecimals;\n      if (data.ftTokenSupply) vaultData.ft_token_supply = data.ftTokenSupply;\n      if (data.terminationType) vaultData.termination_type = data.terminationType;\n      if (data.vaultTokenTicker) vaultData.vault_token_ticker = data.vaultTokenTicker;\n      if (data.tokensForAcquires) vaultData.tokens_for_acquires = data.tokensForAcquires;\n      if (data.acquireReserve) vaultData.acquire_reserve = data.acquireReserve;\n      if (data.liquidityPoolContribution) vaultData.liquidity_pool_contribution = data.liquidityPoolContribution;\n      if (data.creationThreshold) vaultData.creation_threshold = data.creationThreshold;\n      if (data.startThreshold) vaultData.start_threshold = data.startThreshold;\n      if (data.voteThreshold) vaultData.vote_threshold = data.voteThreshold;\n      if (data.executionThreshold) vaultData.execution_threshold = data.executionThreshold;\n      if (data.cosigningThreshold) vaultData.cosigning_threshold = data.cosigningThreshold;\n      if (data.vaultAppreciation) vaultData.vault_appreciation = data.vaultAppreciation;\n\n      if (data.contributionDuration !== undefined) {\n        vaultData.contribution_duration = data.contributionDuration;\n      }\n      if (data.acquireWindowDuration !== undefined) {\n        vaultData.acquire_window_duration = data.acquireWindowDuration;\n      }\n      if (data.acquireOpenWindowTime !== undefined && data.acquireOpenWindowTime !== null) {\n        vaultData.acquire_open_window_time = new Date(data.acquireOpenWindowTime).toISOString();\n      }\n      if (data.acquireOpenWindowType !== undefined && data.acquireOpenWindowType !== null) {\n        vaultData.acquire_open_window_type = data.acquireOpenWindowType;\n      }\n      if (data.contributionOpenWindowTime !== undefined && data.contributionOpenWindowTime !== null) {\n        vaultData.contribution_open_window_time = new Date(data.contributionOpenWindowTime).toISOString();\n      }\n      if (data.contributionOpenWindowType !== undefined && data.contributionOpenWindowType !== null) {\n        vaultData.contribution_open_window_type = data.contributionOpenWindowType;\n      }\n      if (data.timeElapsedIsEqualToTime !== undefined && data.timeElapsedIsEqualToTime !== null) {\n        vaultData.time_elapsed_is_equal_to_time = data.timeElapsedIsEqualToTime;\n      }\n\n      // Handle file relationships only if provided and not already set\n      if (vaultImg && !hasVaultImage) vaultData.vault_image = vaultImg;\n      if (bannerImg && !hasBannerImage) vaultData.banner_image = bannerImg;\n      if (ftTokenImg && !hasFtTokenImage) vaultData.ft_token_img = ftTokenImg;\n      if (acquirerWhitelistFile && !hasAcquirerWhitelistCsv) vaultData.acquirer_whitelist_csv = acquirerWhitelistFile;\n\n      let vault: Vault;\n      if (existingVault) {\n        vault = (await this.vaultsRepository.save({\n          ...existingVault,\n          ...vaultData,\n        })) as Vault;\n      } else {\n        vault = await this.vaultsRepository.save(vaultData as Vault);\n      }\n\n      // Handle social links only if provided\n      if (data.socialLinks !== undefined && data.socialLinks.length > 0) {\n        const links = data.socialLinks.map(linkItem => {\n          return this.linksRepository.create({\n            vault: vault,\n            name: linkItem.name,\n            url: linkItem.url,\n          });\n        });\n        await this.linksRepository.save(links);\n      }\n\n      // Handle tags if provided\n      if (data.tags?.length > 0) {\n        const tags = await Promise.all(\n          data.tags.map(async tagData => {\n            let tag = await this.tagsRepository.findOne({\n              where: { name: tagData.name },\n            });\n            if (!tag) {\n              tag = await this.tagsRepository.save({\n                name: tagData.name,\n              });\n            }\n            return tag;\n          })\n        );\n        vault.tags = tags;\n        await this.vaultsRepository.save(vault);\n      }\n\n      // Handle assets whitelist only if provided\n      if (data.assetsWhitelist !== undefined && data.assetsWhitelist.length > 0) {\n        await Promise.all(\n          data.assetsWhitelist.map(whitelistItem => {\n            return this.assetsWhitelistRepository.save({\n              vault: vault,\n              policy_id: whitelistItem.policyId,\n              asset_count_cap_min: whitelistItem?.countCapMin,\n              asset_count_cap_max: whitelistItem?.countCapMax,\n            });\n          })\n        );\n      }\n\n      // Handle acquirer whitelist only if provided\n      if (data.acquirerWhitelist !== undefined && data.acquirerWhitelist.length > 0) {\n        const manualAcquirer = data.acquirerWhitelist?.map(item => item.walletAddress) || [];\n        const allAcquirer = new Set([...manualAcquirer]);\n\n        if (allAcquirer.size > 0) {\n          const investorItems = Array.from(allAcquirer).map(walletAddress => {\n            return this.acquirerWhitelistRepository.create({\n              vault: vault,\n              wallet_address: walletAddress,\n            });\n          });\n          await this.acquirerWhitelistRepository.save(investorItems);\n        }\n      }\n\n      // Handle contributor whitelist only if provided and vault is private\n      if (data.whitelistContributors !== undefined && data.whitelistContributors.length > 0) {\n        const contributorItems = data.whitelistContributors.map(item => {\n          return this.contributorWhitelistRepository.create({\n            vault: vault,\n            wallet_address: item.policyId,\n          });\n        });\n        await this.contributorWhitelistRepository.save(contributorItems);\n      }\n\n      return await this.getDraftVaultById(vault.id, userId);\n    } catch (error) {\n      console.error(error);\n      throw new BadRequestException('Failed to save draft vault');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropOldVauleFormEnum1742800589634.html":{"url":"classes/DropOldVauleFormEnum1742800589634.html","title":"class - DropOldVauleFormEnum1742800589634","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropOldVauleFormEnum1742800589634\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742800589634-dropOldVauleFormEnum.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DropOldVauleFormEnum1742800589634'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742800589634-dropOldVauleFormEnum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800589634-dropOldVauleFormEnum.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800589634-dropOldVauleFormEnum.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class DropOldVauleFormEnum1742800589634 implements MigrationInterface {\n  name = 'DropOldVauleFormEnum1742800589634';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum\" RENAME TO \"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum\" AS ENUM('custom', 'upon-vault-launch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" AS ENUM('custom', 'upon-vault-lunch', 'upon-vault-launch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" RENAME TO \"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DtoRepresentsType.html":{"url":"interfaces/DtoRepresentsType.html","title":"interface - DtoRepresentsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DtoRepresentsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/dto-represents.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expose\n                                        \n                                \n                                \n                                        \n                                            transform\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expose:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transform:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport { Expose, Transform } from 'class-transformer';\n\ninterface DtoRepresentsType {\n  transform: any;\n  expose: any;\n}\n\nexport function DtoRepresent({ transform, expose }: DtoRepresentsType) {\n  return applyDecorators(transform ? Transform(transform) : () => {}, expose ? Expose(expose) : () => {});\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExtractLpTokensDto.html":{"url":"classes/ExtractLpTokensDto.html","title":"class - ExtractLpTokensDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExtractLpTokensDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                txHash\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                txIndex\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                walletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The amount of LP tokens to extract'})@IsNumber()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash (optional)', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        txIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction index (optional)', required: false, type: Number})@IsNumber()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the vault to extract tokens from'})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        walletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The wallet address to send the LP tokens to'})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/dto/extract-lp-tokens.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsNotEmpty, IsString, IsNumber, IsOptional } from 'class-validator';\n\nexport class ExtractLpTokensDto {\n  @ApiProperty({ description: 'The ID of the vault to extract tokens from' })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({ description: 'The wallet address to send the LP tokens to' })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  walletAddress: string;\n\n  @ApiProperty({ description: 'The amount of LP tokens to extract' })\n  @IsNumber()\n  @IsNotEmpty()\n  @Expose()\n  amount: number;\n\n  @ApiProperty({\n    description: 'Transaction hash (optional)',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  txHash?: string;\n\n  @ApiProperty({\n    description: 'Transaction index (optional)',\n    required: false,\n    type: Number,\n  })\n  @IsNumber()\n  @IsOptional()\n  @Expose()\n  txIndex?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractLpTokensParams.html":{"url":"interfaces/ExtractLpTokensParams.html","title":"interface - ExtractLpTokensParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for extracting LP tokens\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Amount of LP tokens to extract (in smallest unit as string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the vault to extract tokens from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wallet address to send the tokens to\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractLpTokensParams-1.html":{"url":"interfaces/ExtractLpTokensParams-1.html","title":"interface - ExtractLpTokensParams-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractLpTokensParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/types/lp-token.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txHash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txIndex\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Transaction } from '@/database/transaction.entity';\n\nexport interface LpTokenOperationResult {\n  success: boolean;\n  transactionId?: string;\n  transaction?: Transaction;\n  message?: string;\n  error?: any;\n}\n\nexport interface ExtractLpTokensParams {\n  vaultId: string;\n  walletAddress: string;\n  amount: number;\n  txHash?: string;\n  txIndex?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                    \n                                file_key\n                            \n                            \n                                    \n                                    \n                                file_name\n                            \n                            \n                                    \n                                    \n                                file_type\n                            \n                            \n                                    \n                                    \n                                file_url\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({name: 'created_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'key'})@Column({name: 'file_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'fileName'})@Column({name: 'file_name', type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'fileType'})@Column({name: 'file_type', type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'url'})@Column({name: 'file_url', type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'metadata'})@Column({name: 'metadata', type: 'jsonb', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({name: 'updated_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/file.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({ name: 'files' })\nexport class FileEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'key' })\n  @Column({ name: 'file_key', type: 'varchar', nullable: false })\n  file_key: string;\n\n  @Expose({ name: 'url' })\n  @Column({ name: 'file_url', type: 'varchar', nullable: false })\n  file_url: string;\n\n  @Expose({ name: 'fileType' })\n  @Column({ name: 'file_type', type: 'varchar' })\n  file_type: string;\n\n  @Expose({ name: 'fileName' })\n  @Column({ name: 'file_name', type: 'varchar' })\n  file_name: string;\n\n  @Expose({ name: 'metadata' })\n  @Column({ name: 'metadata', type: 'jsonb', nullable: true })\n  metadata: {};\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ name: 'updated_at', type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ name: 'created_at', type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetClaimsDto.html":{"url":"classes/GetClaimsDto.html","title":"class - GetClaimsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetClaimsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/claims/dto/get-claims.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                claimState\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        claimState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"claimed\" | \"unclaimed\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: undefined, description: 'Filter by claim state: \"claimed\" maps to status CLAIMED, \"unclaimed\" maps to statuses DISABLED and PENDING'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/get-claims.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClaimStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: ClaimStatus, description: 'Filter by specific status'})@IsOptional()@IsEnum(ClaimStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/claims/dto/get-claims.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsOptional, IsString } from 'class-validator';\n\nimport { ClaimStatus } from '@/types/claim.types';\n\nexport class GetClaimsDto {\n  @ApiPropertyOptional({\n    enum: ClaimStatus,\n    description: 'Filter by specific status',\n  })\n  @IsOptional()\n  @IsEnum(ClaimStatus)\n  status?: ClaimStatus;\n\n  @ApiPropertyOptional({\n    enum: ['claimed', 'unclaimed'],\n    description:\n      'Filter by claim state: \"claimed\" maps to status CLAIMED, \"unclaimed\" maps to statuses DISABLED and PENDING',\n  })\n  @IsOptional()\n  @IsString()\n  claimState?: 'claimed' | 'unclaimed';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetVaultTransactionsDto.html":{"url":"classes/GetVaultTransactionsDto.html","title":"class - GetVaultTransactionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetVaultTransactionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/get-vault-transactions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Default value : TransactionStatus.confirmed\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TransactionStatus, description: 'Filter transactions by status', required: false, default: undefined})@IsOptional()@IsEnum(TransactionStatus)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vault-transactions.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined, description: 'Filter transactions by type (contribute or acquire)', required: false})@IsOptional()@IsEnum(TransactionType)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vault-transactions.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsEnum, IsOptional } from 'class-validator';\nimport { TransactionStatus, TransactionType } from '@/types/transaction.types';\n\nexport class GetVaultTransactionsDto {\n  @ApiProperty({\n    enum: TransactionStatus,\n    description: 'Filter transactions by status',\n    required: false,\n    default: TransactionStatus.confirmed,\n  })\n  @IsOptional()\n  @IsEnum(TransactionStatus)\n  @Expose()\n  status?: TransactionStatus = TransactionStatus.confirmed;\n\n  @ApiProperty({\n    enum: [TransactionType.contribute, TransactionType.acquire],\n    description: 'Filter transactions by type (contribute or acquire)',\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(TransactionType)\n  @Expose()\n  type?: TransactionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetVaultsDto.html":{"url":"classes/GetVaultsDto.html","title":"class - GetVaultsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetVaultsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/get-vaults.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PaginationDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sortBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sortOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultFilter\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(VaultFilter)@IsOptional()@ApiProperty({enum: VaultFilter, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vaults.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultSortField\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(VaultSortField)@IsOptional()@ApiProperty({enum: VaultSortField, required: false, description: 'Field to sort by'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vaults.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Default value : SortOrder.DESC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(SortOrder)@IsOptional()@ApiProperty({enum: SortOrder, required: false, default: undefined, description: 'Sort order (ASC or DESC)'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/get-vaults.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 10})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 1})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nimport { PaginationDto } from './pagination.dto';\n\nexport enum VaultFilter {\n  open = 'open',\n  locked = 'locked',\n  contribution = 'contribution',\n  acquire = 'acquire',\n  governance = 'governance',\n}\n\nexport enum VaultSortField {\n  name = 'name',\n  createdAt = 'created_at',\n  updatedAt = 'updated_at',\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport class GetVaultsDto extends PaginationDto {\n  @IsEnum(VaultFilter)\n  @IsOptional()\n  @ApiProperty({ enum: VaultFilter, required: false })\n  @Expose()\n  filter?: VaultFilter;\n\n  @IsEnum(VaultSortField)\n  @IsOptional()\n  @ApiProperty({\n    enum: VaultSortField,\n    required: false,\n    description: 'Field to sort by',\n  })\n  @Expose()\n  sortBy?: VaultSortField;\n\n  @IsEnum(SortOrder)\n  @IsOptional()\n  @ApiProperty({\n    enum: SortOrder,\n    required: false,\n    default: SortOrder.DESC,\n    description: 'Sort order (ASC or DESC)',\n  })\n  @Expose()\n  sortOrder?: SortOrder = SortOrder.DESC;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GovernanceController.html":{"url":"controllers/GovernanceController.html","title":"controller - GovernanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GovernanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/governance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                governance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createProposal\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProposal\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProposals\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                vote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        createProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProposal(req, vaultId: string, createProposalReq: CreateProposalReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('vaults/:vaultId/proposals')@UseGuards(AuthGuard)@ApiOperation({summary: 'Create a new proposal'})@ApiResponse({status: 201, description: 'Proposal created successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createProposalReq\n                                            \n                                                            CreateProposalReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposal(proposalId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('proposals/:proposalId')@UseGuards(AuthGuard)@ApiOperation({summary: 'Get proposal details'})@ApiResponse({status: 200, description: 'Proposal details'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getProposals\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposals(vaultId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('vaults/:vaultId/proposals')@UseGuards(AuthGuard)@ApiOperation({summary: 'Get all proposals for a vault'})@ApiResponse({status: 200, description: 'List of proposals'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        vote\n                        \n                    \n                \n            \n            \n                \n                        \n                    vote(req, proposalId: string, voteReq: VoteReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('proposals/:proposalId/vote')@UseGuards(AuthGuard)@ApiOperation({summary: 'Vote on a proposal'})@ApiResponse({status: 201, description: 'Vote recorded successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                voteReq\n                                            \n                                                            VoteReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Req, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\n\nimport { CreateProposalReq } from './dto/create-proposal.req';\nimport { VoteReq } from './dto/vote.req';\nimport { GovernanceService } from './governance.service';\n\n@ApiTags('Governance')\n@Controller('governance')\nexport class GovernanceController {\n  constructor(private readonly governanceService: GovernanceService) {}\n\n  @Post('vaults/:vaultId/proposals')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Create a new proposal' })\n  @ApiResponse({ status: 201, description: 'Proposal created successfully' })\n  async createProposal(@Req() req, @Param('vaultId') vaultId: string, @Body() createProposalReq: CreateProposalReq) {\n    const userId = req.user.sub;\n    return this.governanceService.createProposal(vaultId, createProposalReq, userId);\n  }\n\n  @Get('vaults/:vaultId/proposals')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Get all proposals for a vault' })\n  @ApiResponse({ status: 200, description: 'List of proposals' })\n  async getProposals(@Param('vaultId') vaultId: string) {\n    return this.governanceService.getProposals(vaultId);\n  }\n\n  @Post('proposals/:proposalId/vote')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Vote on a proposal' })\n  @ApiResponse({ status: 201, description: 'Vote recorded successfully' })\n  async vote(@Req() req, @Param('proposalId') proposalId: string, @Body() voteReq: VoteReq) {\n    const userId = req.user.sub;\n    return this.governanceService.vote(proposalId, voteReq, userId);\n  }\n\n  @Get('proposals/:proposalId')\n  @UseGuards(AuthGuard)\n  @ApiOperation({ summary: 'Get proposal details' })\n  @ApiResponse({ status: 200, description: 'Proposal details' })\n  async getProposal(@Param('proposalId') proposalId: string) {\n    return this.governanceService.getProposal(proposalId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GovernanceModule.html":{"url":"modules/GovernanceModule.html","title":"module - GovernanceModule","body":"\n                   \n\n\n\n\n    Modules\n    GovernanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GovernanceModule\n\n\n\ncluster_GovernanceModule_exports\n\n\n\ncluster_GovernanceModule_providers\n\n\n\n\nGovernanceService \n\nGovernanceService \n\n\n\nGovernanceModule\n\nGovernanceModule\n\nGovernanceService  -->\n\nGovernanceModule->GovernanceService \n\n\n\n\n\nGovernanceService\n\nGovernanceService\n\nGovernanceModule -->\n\nGovernanceService->GovernanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/governance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GovernanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GovernanceController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GovernanceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { GovernanceController } from './governance.controller';\nimport { GovernanceService } from './governance.service';\n\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Vault])],\n  controllers: [GovernanceController],\n  providers: [GovernanceService],\n  exports: [GovernanceService],\n})\nexport class GovernanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GovernanceService.html":{"url":"injectables/GovernanceService.html","title":"injectable - GovernanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GovernanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/governance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProposal\n                            \n                            \n                                    Async\n                                getProposal\n                            \n                            \n                                    Async\n                                getProposals\n                            \n                            \n                                    Async\n                                vote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/governance/governance.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProposal(vaultId: string, createProposalReq: CreateProposalReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createProposalReq\n                                            \n                                                            CreateProposalReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProposal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposal(proposalId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProposals\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProposals(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        vote\n                        \n                    \n                \n            \n            \n                \n                        \n                    vote(proposalId: string, voteReq: VoteReq, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/governance/governance.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                proposalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                voteReq\n                                            \n                                                            VoteReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Vault } from '@/database/vault.entity';\nimport { VaultStatus } from '../../../../types/vault.types';\n\nimport { CreateProposalReq } from './dto/create-proposal.req';\nimport { VoteReq } from './dto/vote.req';\n\n@Injectable()\nexport class GovernanceService {\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository\n  ) {}\n\n  async createProposal(vaultId: string, createProposalReq: CreateProposalReq, userId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n    });\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    if (vault.vault_status !== VaultStatus.locked) {\n      throw new BadRequestException('Governance is only available for locked vaults');\n    }\n\n    // TODO: Check if user has sufficient voting power (based on contribution/acquire)\n\n    // TODO: Implement blockchain integration for proposal creation\n    // For now, return mock response\n    return {\n      success: true,\n      message: 'Proposal created successfully',\n      proposal: {\n        id: 'mock-proposal-id',\n        vaultId,\n        creatorId: userId,\n        ...createProposalReq,\n        status: 'active',\n        createdAt: new Date().toISOString(),\n      },\n    };\n  }\n\n  async getProposals(vaultId: string) {\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n    });\n\n    if (!vault) {\n      throw new NotFoundException('Vault not found');\n    }\n\n    // TODO: Implement proposal retrieval from blockchain/database\n    // For now, return mock data\n    return {\n      proposals: [],\n    };\n  }\n\n  async vote(proposalId: string, voteReq: VoteReq, userId: string) {\n    // TODO: Implement blockchain integration for voting\n    // For now, return mock response\n    return {\n      success: true,\n      message: 'Vote recorded successfully',\n      vote: {\n        proposalId,\n        voterId: userId,\n        ...voteReq,\n        timestamp: new Date().toISOString(),\n      },\n    };\n  }\n\n  async getProposal(proposalId: string) {\n    // TODO: Implement proposal retrieval from blockchain/database\n    // For now, throw not found\n    throw new NotFoundException('Proposal not found');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtGlobalModule.html":{"url":"modules/JwtGlobalModule.html","title":"module - JwtGlobalModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtGlobalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JwtGlobalModule\n\n\n\ncluster_JwtGlobalModule_imports\n\n\n\ncluster_JwtGlobalModule_exports\n\n\n\n\nTaptoolsModule\n\nTaptoolsModule\n\n\n\nJwtGlobalModule\n\nJwtGlobalModule\n\nJwtGlobalModule -->\n\nTaptoolsModule->JwtGlobalModule\n\n\n\n\n\nTaptoolsModule \n\nTaptoolsModule \n\nTaptoolsModule  -->\n\nJwtGlobalModule->TaptoolsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/globals/jwt_global_module/jwt_global.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TaptoolsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TaptoolsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TaptoolsModule } from '@/modules/taptools/taptools.module';\n\n@Global()\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: '1d' },\n      }),\n      inject: [ConfigService],\n    }),\n    TaptoolsModule,\n  ],\n  exports: [JwtModule, TaptoolsModule], // Експортуємо JwtModule, щоб він був доступний у всіх модулях\n})\nexport class JwtGlobalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/L4VaVault.html":{"url":"interfaces/L4VaVault.html","title":"interface - L4VaVault","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  L4VaVault\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/types/type.ts\n        \n\n\n            \n                Description\n            \n            \n                Aiken contracts for project 'l4va/vault'\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contribute\n                                        \n                                \n                                \n                                        \n                                            vault\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contribute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contribute:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Redeemer =\n  | {\n      quantity: number;\n      output_index: number;\n      contribution: 'Lovelace' | 'Asset';\n    }\n  | 'MintAdaPair'\n  | 'BurnLp';\nexport type Redeemer1 =\n  | {\n      __variant: 'ExtractAda' | 'ExtractAsset';\n      __data: {\n        lp_output_index?: number;\n      };\n    }\n  | {\n      lp_output_index: number;\n      change_output_index: number;\n    }\n  | 'CancelAsset'\n  | 'CancelAda';\nexport type Redeemer2 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\nexport type Redeemer3 =\n  | {\n      vault_token_index: number;\n      asset_name: string;\n    }\n  | 'VaultBurn';\n\n/**\n * Aiken contracts for project 'l4va/vault'\n */\nexport interface L4VaVault {\n  contribute: {\n    mint: {\n      redeemer: Redeemer;\n    };\n    spend: {\n      redeemer: Redeemer1;\n      datum: Datum;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n  vault: {\n    mint: {\n      redeemer: Redeemer2;\n    };\n    spend: {\n      redeemer: Redeemer3;\n      datum: Datum1;\n    };\n    else: {\n      redeemer: unknown;\n    };\n  };\n}\nexport interface Datum {\n  policy_id: string;\n  asset_name: string;\n  quantity: number;\n  owner:\n    | string\n    | {\n        payment_credential: {\n          __variant: 'VerificationKey' | 'Script';\n          __data: string;\n        };\n        stake_credential?:\n          | {\n              __variant: 'VerificationKey' | 'Script';\n              __data: string;\n            }\n          | {\n              slot_number: number;\n              transaction_index: number;\n              certificate_index: number;\n            };\n      };\n  datum_tag?: string;\n  contributed_assets?: Array;\n}\nexport interface Datum1 {\n  contract_type: number;\n  asset_whitelist: string[];\n  contributor_whitelist?: string[];\n  asset_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  investment_window: {\n    lower_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n    upper_bound: {\n      bound_type: 'NegativeInfinity' | number | 'PositiveInfinity';\n      is_inclusive: boolean;\n    };\n  };\n  valuation_type: number;\n  fractionalization?: {\n    percentage: number;\n    token_supply: number;\n    token_decimals: number;\n    token_policy: string;\n  };\n  custom_metadata: [string, string, ...string[]][];\n  termination?: {\n    termination_type: number;\n    fdp: number;\n  };\n  investment?: {\n    reserve: number;\n    liquidityPool: number;\n  };\n  admin: string;\n  minting_key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LifecycleModule.html":{"url":"modules/LifecycleModule.html","title":"module - LifecycleModule","body":"\n                   \n\n\n\n\n    Modules\n    LifecycleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LifecycleModule\n\n\n\ncluster_LifecycleModule_exports\n\n\n\ncluster_LifecycleModule_providers\n\n\n\ncluster_LifecycleModule_imports\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nLifecycleModule -->\n\nBlockchainModule->LifecycleModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nLifecycleModule -->\n\nContributionModule->LifecycleModule\n\n\n\n\n\nDistributionModule\n\nDistributionModule\n\nLifecycleModule -->\n\nDistributionModule->LifecycleModule\n\n\n\n\n\nLifecycleService \n\nLifecycleService \n\nLifecycleService  -->\n\nLifecycleModule->LifecycleService \n\n\n\n\n\nLifecycleProcessor\n\nLifecycleProcessor\n\nLifecycleModule -->\n\nLifecycleProcessor->LifecycleModule\n\n\n\n\n\nLifecycleService\n\nLifecycleService\n\nLifecycleModule -->\n\nLifecycleService->LifecycleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/phase-management/lifecycle/lifecycle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LifecycleProcessor\n                        \n                        \n                            LifecycleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            ContributionModule\n                        \n                        \n                            DistributionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LifecycleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { DistributionModule } from '../../../distribution/distribution.module';\nimport { BlockchainModule } from '../../processing-tx/onchain/blockchain.module';\nimport { ContributionModule } from '../contribution/contribution.module';\n\nimport { LifecycleService } from './lifecycle.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\nimport {BullModule} from \"@nestjs/bullmq\";\nimport {LifecycleProcessor} from \"@/modules/vaults/phase-management/lifecycle/lifecycle.processor\";\n\n@Module({\n  imports: [\n    ContributionModule,\n    DistributionModule,\n    TypeOrmModule.forFeature([Vault, Asset]),\n    ScheduleModule.forRoot(),\n    BlockchainModule,\n    BullModule.registerQueue({\n      name: 'phaseTransition',\n    })\n  ],\n  providers: [LifecycleService, LifecycleProcessor],\n  exports: [LifecycleService],\n})\nexport class LifecycleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LifecycleProcessor.html":{"url":"injectables/LifecycleProcessor.html","title":"injectable - LifecycleProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LifecycleProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/lifecycle/lifecycle.processor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        WorkerHost\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                process\n                            \n                            \n                                    Async\n                                updateVaultStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.processor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        process\n                        \n                    \n                \n            \n            \n                \n                        \n                    process(job: Job)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.processor.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                job\n                                            \n                                                        Job\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateVaultStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateVaultStatus(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.processor.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LifecycleProcessor.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.processor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Processor, WorkerHost } from '@nestjs/bullmq';\nimport { Job } from 'bullmq';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { VaultStatus } from '../../../../types/vault.types';\nimport { Vault } from '@/database/vault.entity';\n\n@Processor('phaseTransition')\n@Injectable()\nexport class LifecycleProcessor extends WorkerHost {\n  private readonly logger = new Logger(LifecycleProcessor.name);\n\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n  ) {\n    super();\n  }\n\n  async process(job: Job): Promise {\n    this.logger.log(`Processing phase transition job: ${job.name}`, job.data);\n    \n    switch (job.name) {\n      case 'transitionPhase':\n        return await this.updateVaultStatus(job.data);\n      default:\n        this.logger.warn(`Unknown job name: ${job.name}`);\n    }\n  }\n\n  async updateVaultStatus(data: {\n    vaultId: string;\n    newStatus: VaultStatus;\n    phaseStartField?: string;\n  }): Promise {\n    try {\n      const vault = await this.vaultRepository.findOne({\n        where: { id: data.vaultId }\n      });\n\n      if (!vault) {\n        this.logger.error(`Vault ${data.vaultId} not found`);\n        return;\n      }\n\n      // Update vault status\n      vault.vault_status = data.newStatus;\n      \n      // Set phase start time if specified\n      if (data.phaseStartField) {\n        (vault as any)[data.phaseStartField] = new Date().toISOString();\n      }\n\n      await this.vaultRepository.save(vault);\n      \n      this.logger.log(\n        `Successfully updated vault ${data.vaultId} status to ${data.newStatus}` + \n        (data.phaseStartField ? ` and set ${data.phaseStartField}` : '')\n      );\n    } catch (error) {\n      this.logger.error(`Failed to update vault ${data.vaultId} status:`, error);\n      throw error;\n    }\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LifecycleService.html":{"url":"injectables/LifecycleService.html","title":"injectable - LifecycleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LifecycleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                executeAcquireToGovernanceTransition\n                            \n                            \n                                    Private\n                                    Async\n                                executeContributionToAcquireTransition\n                            \n                            \n                                    Private\n                                    Async\n                                executePhaseTransition\n                            \n                            \n                                    Async\n                                getAssetsGroupedByUser\n                            \n                            \n                                    Private\n                                    Async\n                                handleContributionToInvestment\n                            \n                            \n                                    Private\n                                    Async\n                                handleInvestmentToGovernance\n                            \n                            \n                                    Private\n                                    Async\n                                handlePublishedToContribution\n                            \n                            \n                                    \n                                    Async\n                                handleVaultLifecycleTransitions\n                            \n                            \n                                    Private\n                                    Async\n                                queueContributionToAcquireTransition\n                            \n                            \n                                    Private\n                                    Async\n                                queuePhaseTransition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(phaseTransitionQueue: Queue, assetsRepository: Repository, vaultRepository: Repository, contributionService: ContributionService, distributionService: DistributionService, taptoolsService: TaptoolsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        phaseTransitionQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contributionService\n                                                  \n                                                        \n                                                                        ContributionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        distributionService\n                                                  \n                                                        \n                                                                        DistributionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taptoolsService\n                                                  \n                                                        \n                                                                        TaptoolsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        executeAcquireToGovernanceTransition\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeAcquireToGovernanceTransition(vault: Vault)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vault\n                                            \n                                                            Vault\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        executeContributionToAcquireTransition\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeContributionToAcquireTransition(vault: Vault)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vault\n                                            \n                                                            Vault\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        executePhaseTransition\n                        \n                    \n                \n            \n            \n                \n                        \n                    executePhaseTransition(vaultId: string, newStatus: VaultStatus, phaseStartField?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            VaultStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                phaseStartField\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAssetsGroupedByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssetsGroupedByUser(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:420\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleContributionToInvestment\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleContributionToInvestment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:352\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleInvestmentToGovernance\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleInvestmentToGovernance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:470\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handlePublishedToContribution\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePublishedToContribution()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:326\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleVaultLifecycleTransitions\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleVaultLifecycleTransitions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        queueContributionToAcquireTransition\n                        \n                    \n                \n            \n            \n                \n                        \n                    queueContributionToAcquireTransition(vault: Vault, contributionEnd: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vault\n                                            \n                                                            Vault\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contributionEnd\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        queuePhaseTransition\n                        \n                    \n                \n            \n            \n                \n                        \n                    queuePhaseTransition(vaultId: string, newStatus: VaultStatus, transitionTime: Date, phaseStartField?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            VaultStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                transitionTime\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                phaseStartField\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LifecycleService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/lifecycle/lifecycle.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InjectQueue } from '@nestjs/bullmq';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Queue } from 'bullmq';\nimport { Repository } from 'typeorm';\n\nimport { AssetOriginType } from '../../../../types/asset.types';\nimport { VaultStatus, ContributionWindowType, InvestmentWindowType } from '../../../../types/vault.types';\nimport { DistributionService } from '../../../distribution/distribution.service';\nimport { TaptoolsService } from '../../../taptools/taptools.service';\nimport { ContributionService } from '../contribution/contribution.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class LifecycleService {\n  private readonly logger = new Logger(LifecycleService.name);\n\n  constructor(\n    @InjectQueue('phaseTransition')\n    private phaseTransitionQueue: Queue,\n    @InjectRepository(Asset)\n    private readonly assetsRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    private readonly contributionService: ContributionService,\n    private readonly distributionService: DistributionService,\n    private readonly taptoolsService: TaptoolsService\n  ) {}\n\n  @Cron(CronExpression.EVERY_MINUTE)\n  async handleVaultLifecycleTransitions(): Promise {\n\n    await this.handlePublishedToContribution();\n\n    // Handle contribution -> acquire transitions\n    await this.handleContributionToInvestment();\n\n    // Handle acquire -> governance transitions\n    await this.handleInvestmentToGovernance();\n  }\n\n  private async queuePhaseTransition(\n    vaultId: string,\n    newStatus: VaultStatus,\n    transitionTime: Date,\n    phaseStartField?: string\n  ): Promise {\n    const now = new Date();\n    const delay = transitionTime.getTime() - now.getTime();\n    const ONE_MINUTE_MS = 60 * 1000;\n\n    if (delay  {\n    try {\n      const vault = await this.vaultRepository.findOne({\n        where: { id: vaultId },\n      });\n\n      if (!vault) {\n        this.logger.error(`Vault ${vaultId} not found for phase transition`);\n        return;\n      }\n\n      vault.vault_status = newStatus;\n\n      if (phaseStartField) {\n        (vault as any)[phaseStartField] = new Date().toISOString();\n      }\n\n      await this.vaultRepository.save(vault);\n\n      this.logger.log(\n        `Executed immediate phase transition for vault ${vaultId} to ${newStatus}` +\n          (phaseStartField ? ` and set ${phaseStartField}` : '')\n      );\n    } catch (error) {\n      this.logger.error(`Failed to execute phase transition for vault ${vaultId}:`, error);\n      throw error;\n    }\n  }\n\n  private async queueContributionToAcquireTransition(vault: Vault, contributionEnd: Date): Promise {\n    // Check if vault has assets before queuing transition\n    await this.contributionService.syncContributionTransactions(vault.id);\n    const assets = await this.assetsRepository.find({\n      where: { vault: { id: vault.id }, deleted: false },\n    });\n    const hasAssets = assets?.some(asset => !asset.deleted) || false;\n\n    if (!hasAssets) {\n      // Queue failure transition\n      await this.queuePhaseTransition(vault.id, VaultStatus.failed, contributionEnd);\n      return;\n    }\n\n    // Determine acquire phase start time based on vault configuration\n    let acquireStartTime: Date;\n\n    if (vault.acquire_open_window_type === InvestmentWindowType.uponAssetWindowClosing) {\n      // Start acquire phase immediately when contribution ends\n      acquireStartTime = contributionEnd;\n    } else if (vault.acquire_open_window_type === InvestmentWindowType.custom && vault.acquire_open_window_time) {\n      // Use custom start time, but ensure it's not before contribution ends\n      const customTime = new Date(vault.acquire_open_window_time);\n      acquireStartTime = customTime > contributionEnd ? customTime : contributionEnd;\n    } else {\n      this.logger.warn(`Vault ${vault.id} has invalid acquire window configuration`);\n      return;\n    }\n\n    await this.queuePhaseTransition(vault.id, VaultStatus.acquire, acquireStartTime, 'acquire_phase_start');\n  }\n\n  private async executeContributionToAcquireTransition(vault: Vault): Promise {\n    try {\n      // For immediate acquire start\n      if (vault.acquire_open_window_type === InvestmentWindowType.uponAssetWindowClosing) {\n        // Calculate total value of assets in the vault\n        try {\n          const assetsValue = await this.taptoolsService.calculateVaultAssetsValue(vault.id);\n          this.logger.log(\n            `Vault ${vault.id} total assets value: ${assetsValue.totalValueAda} ADA (${assetsValue.totalValueUsd} USD)`\n          );\n          vault.total_assets_cost_ada = assetsValue.totalValueAda;\n          vault.total_assets_cost_usd = assetsValue.totalValueUsd;\n\n          // Calculate threshold Price\n          vault.require_reserved_cost_ada = assetsValue.totalValueAda * (vault.acquire_reserve * 0.01);\n          vault.require_reserved_cost_usd = assetsValue.totalValueUsd * (vault.acquire_reserve * 0.01);\n        } catch (error) {\n          this.logger.error(`Failed to calculate assets value for vault ${vault.id}:`, error);\n        }\n\n        await this.executePhaseTransition(vault.id, VaultStatus.acquire, 'acquire_phase_start');\n      }\n      // For custom acquire start time\n      else if (vault.acquire_open_window_type === InvestmentWindowType.custom && vault.acquire_open_window_time) {\n        const now = new Date();\n        const customTime = new Date(vault.acquire_open_window_time);\n\n        if (now >= customTime) {\n          // Calculate total value of assets in the vault\n          try {\n            const assetsValue = await this.taptoolsService.calculateVaultAssetsValue(vault.id);\n            this.logger.log(\n              `Vault ${vault.id} total assets value: ${assetsValue.totalValueAda} ADA (${assetsValue.totalValueUsd} USD)`\n            );\n            vault.total_assets_cost_ada = assetsValue.totalValueAda;\n            vault.total_assets_cost_usd = assetsValue.totalValueUsd;\n\n            // Calculate threshold Price\n            vault.require_reserved_cost_ada = assetsValue.totalValueAda * (vault.acquire_reserve * 0.01);\n            vault.require_reserved_cost_usd = assetsValue.totalValueUsd * (vault.acquire_reserve * 0.01);\n          } catch (error) {\n            this.logger.error(`Failed to calculate assets value for vault ${vault.id}:`, error);\n          }\n\n          await this.executePhaseTransition(vault.id, VaultStatus.acquire, 'acquire_phase_start');\n        } else {\n          // Queue for the custom time\n          await this.queuePhaseTransition(vault.id, VaultStatus.acquire, customTime, 'acquire_phase_start');\n        }\n      }\n    } catch (error) {\n      this.logger.error(`Error executing contribution to acquire transition for vault ${vault.id}`, error);\n    }\n  }\n\n  private async executeAcquireToGovernanceTransition(vault: Vault): Promise {\n    try {\n      // Sync transactions one more time\n      await this.contributionService.syncContributionTransactions(vault.id);\n\n      // 1. Group assets by user\n      const assetsByUsers = await this.getAssetsGroupedByUser(vault.id);\n      const acquirerAdaMap: Record = {};\n      const contributorValueMap: Record = {};\n      let totalAcquiredAda = 0;\n      let totalContributedValueAda = 0;\n\n      // 2. Iterate over each user's assets and split by phase\n      for (const userAssets of assetsByUsers) {\n        const userId = userAssets.user_id;\n        const assets = userAssets.assets;\n        let userAcquiredAda = 0;\n        let userContributedValueAda = 0;\n\n        this.logger.log(\n          `User ${userId} (${userAssets.user_wallet}) has ${userAssets.total_assets} assets in vault ${vault.id}: ${JSON.stringify(assets)}`\n        );\n\n        for (const asset of assets) {\n          // Only ADA in acquired assets\n          if (asset.origin_type === AssetOriginType.ACQUIRED) {\n            userAcquiredAda += asset.quantity || 1;\n            this.logger.debug(`User ${userId} asset ${asset.id}: ${asset.quantity} ADA`);\n          }\n          if (asset.origin_type === AssetOriginType.CONTRIBUTED) {\n            try {\n              const { priceAda } = await this.taptoolsService.getAssetValue(asset.policy_id, asset.asset_name);\n              const quantity = asset.quantity || 1;\n              userContributedValueAda += priceAda * quantity;\n            } catch (error) {\n              this.logger.error(\n                `Error getting price for asset ${asset.policy_id}.${asset.asset_name} for user ${userId} in vault ${vault.id}:`,\n                error.message\n              );\n            }\n          }\n\n          if (userAcquiredAda > 0) {\n            acquirerAdaMap[userId] = userAcquiredAda;\n            totalAcquiredAda += userAcquiredAda;\n          }\n          if (userContributedValueAda > 0) {\n            contributorValueMap[userId] = userContributedValueAda;\n            totalContributedValueAda += userContributedValueAda;\n          }\n        }\n      }\n      this.logger.log(\n        `Total acquired ADA across all users in vault ${vault.id}: ${totalAcquiredAda}, ` +\n          `Total contributed value ADA: ${totalContributedValueAda}`\n      );\n\n      const requiredThresholdAda = vault.require_reserved_cost_ada || 0;\n      const meetsThreshold = totalAcquiredAda >= requiredThresholdAda;\n\n      vault.total_acquired_value_ada = totalAcquiredAda;\n      await this.vaultRepository.save(vault);\n\n      this.logger.log(\n        `Vault ${vault.id} meets the threshold: ` +\n          `Total contributed: ${totalAcquiredAda} ADA, ` +\n          `Required: ${requiredThresholdAda} ADA`\n      );\n\n      if (meetsThreshold) {\n        // TODO: Mint tokens and launch the vault\n        // For each user, calculate VT received\n\n        // 3. Calculate VT for acquirers\n        for (const [userId, adaSent] of Object.entries(acquirerAdaMap)) {\n          const vtResult = await this.distributionService.calculateAcquirerExample({\n            vaultId: vault.id,\n            adaSent,\n            numAcquirers: Object.keys(acquirerAdaMap).length,\n            totalAcquiredValueAda: totalAcquiredAda,\n          });\n          this.logger.debug(\n            `--- Acquirer ${userId} will receive VT: ${vtResult.vtReceived} (for ADA sent: ${adaSent})`\n          );\n        }\n\n        // 4. Calculate VT for contributors\n        for (const [userId, valueAda] of Object.entries(contributorValueMap)) {\n          const vtResult = await this.distributionService.calculateContributorExample({\n            vaultId: vault.id,\n            valueContributed: valueAda,\n            totalTvl: totalContributedValueAda,\n          });\n          this.logger.debug(\n            `--- Contributor ${userId} will receive VT: ${vtResult.vtRetained} (for value contributed: ${valueAda})`\n          );\n        }\n\n        this.logger.log(`Vault ${vault.id} is ready to be launched`);\n      } else {\n        this.logger.warn(\n          `Vault ${vault.id} does not meet the threshold: ` +\n            `Total contributed: ${totalAcquiredAda} ADA, ` +\n            `Required: ${requiredThresholdAda} ADA`\n        );\n\n        // TODO: Burn the vault and refund assets\n        this.logger.warn(`Vault ${vault.id} needs to be burned and assets refunded`);\n      }\n\n      // Execute the phase transition using the consistent method\n      await this.executePhaseTransition(vault.id, VaultStatus.governance, 'governance_phase_start');\n    } catch (error) {\n      this.logger.error(`Error executing acquire to governance transition for vault ${vault.id}`, error);\n    }\n  }\n\n  private async handlePublishedToContribution(): Promise {\n    // Handle immediate start vaults\n    const immediateStartVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.published })\n      .andWhere('vault.contribution_open_window_type = :type', { type: ContributionWindowType.uponVaultLaunch })\n      .getMany();\n\n    for (const vault of immediateStartVaults) {\n      await this.executePhaseTransition(vault.id, VaultStatus.contribution, 'contribution_phase_start');\n    }\n\n    // Handle custom start time vaults\n    const customStartVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.published })\n      .andWhere('vault.contribution_open_window_type = :type', { type: ContributionWindowType.custom })\n      .andWhere('vault.contribution_open_window_time IS NOT NULL')\n      .getMany();\n\n    for (const vault of customStartVaults) {\n      const transitionTime = new Date(vault.contribution_open_window_time);\n      await this.queuePhaseTransition(vault.id, VaultStatus.contribution, transitionTime, 'contribution_phase_start');\n    }\n  }\n\n  private async handleContributionToInvestment(): Promise {\n    const now = new Date();\n    const contributionVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.contribution })\n      .andWhere('vault.contribution_phase_start IS NOT NULL')\n      .andWhere('vault.contribution_duration IS NOT NULL')\n      .leftJoinAndSelect('vault.owner', 'owner')\n      .getMany();\n\n    for (const vault of contributionVaults) {\n      const contributionStart = new Date(vault.contribution_phase_start);\n      const contributionDurationMs = Number(vault.contribution_duration);\n      const contributionEnd = new Date(contributionStart.getTime() + contributionDurationMs);\n\n      // If contribution period hasn't ended yet, queue the transition\n      if (now  !asset.deleted) || false;\n\n      // If no assets, burn the vault using admin wallet\n      if (!hasAssets) {\n        try {\n          this.logger.log(`Vault ${vault.id} has no assets and contribution period has ended. Burning vault...`);\n          // Update vault status to failed\n          vault.vault_status = VaultStatus.failed;\n          await this.vaultRepository.save(vault);\n\n          // // Use admin wallet to burn the vault\n          // const burnTx = await this.vaultContractService.createBurnTx({\n          //   customerAddress: vault.owner.address, // Still track the original owner\n          //   assetVaultName: vault.asset_vault_name,\n          // });\n\n          // // Submit the transaction using admin wallet\n          // const { txHash } = await this.vaultContractService.submitOnChainVaultTx({\n          //   transaction: burnTx.presignedTx,\n          //   signatures: [], // Admin signature is already included in presignedTx\n          // });\n\n          // // Update vault status\n          // vault.deleted = true;\n          // vault.liquidation_hash = txHash;\n          // await this.vaultRepository.save(vault);\n\n          // this.logger.log(`Successfully burned empty vault ${vault.id} in transaction ${txHash}`);\n\n          continue;\n        } catch (error) {\n          this.logger.error(`Failed to burn empty vault ${vault.id}:`, error.message);\n          // Continue with other vaults even if one fails\n        }\n        continue;\n      }\n\n      // If we get here, the vault has assets and the contribution period has ended\n      // Execute the transition immediately since the time has passed\n      await this.executeContributionToAcquireTransition(vault);\n    }\n  }\n\n  async getAssetsGroupedByUser(vaultId: string): Promise {\n    const query = `\n      SELECT\n        u.id as user_id,\n        u.address as user_wallet,\n        COUNT(a.id) as total_assets,\n        json_agg(\n          json_build_object(\n            'id', a.id,\n            'type', a.type,\n            'contract_address', a.contract_address,\n            'added_at', a.added_at,\n            'quantity', a.quantity,\n            'origin_type', a.origin_type,\n            'policy_id', a.policy_id,\n            'asset_name', a.asset_id\n          )\n        ) as assets\n      FROM\n        assets a\n      JOIN\n        users u ON u.id = a.added_by\n      WHERE\n        a.vault_id = $1\n      GROUP BY\n        u.id, u.address\n      ORDER BY\n        u.address ASC\n    `;\n\n    const result = await this.assetsRepository.query(query, [vaultId]);\n    return result;\n  }\n\n  private async handleInvestmentToGovernance(): Promise {\n    const acquireVaults = await this.vaultRepository\n      .createQueryBuilder('vault')\n      .where('vault.vault_status = :status', { status: VaultStatus.acquire })\n      .andWhere('vault.acquire_phase_start IS NOT NULL')\n      .andWhere('vault.acquire_window_duration IS NOT NULL')\n      .leftJoinAndSelect('vault.assets', 'assets')\n      .getMany();\n\n    const now = new Date();\n\n    for (const vault of acquireVaults) {\n      const acquireStart = new Date(vault.acquire_phase_start);\n      const acquireDurationMs = Number(vault.acquire_window_duration);\n      const acquireEnd = new Date(acquireStart.getTime() + acquireDurationMs);\n\n      // If acquire period hasn't ended yet, queue the transition\n      if (now = acquireEnd) {\n        // Execute the transition immediately since the time has passed\n        await this.executeAcquireToGovernanceTransition(vault);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LinkEntity.html":{"url":"entities/LinkEntity.html","title":"entity - LinkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LinkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/link.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                            \n                                    \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                vault\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'id'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'name'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'url'})@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'userId'})@ManyToOne(undefined, user => user.social_links, {onDelete: 'CASCADE', nullable: true})@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'vaultId'})@ManyToOne(undefined, vault => vault.social_links, {onDelete: 'CASCADE', nullable: true})@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/link.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { BeforeInsert, BeforeUpdate, Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { User } from './user.entity';\nimport { Vault } from './vault.entity';\n\n@Entity({ name: 'links' })\nexport class LinkEntity {\n  @Expose({ name: 'id' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'url' })\n  @Column({ type: 'varchar', nullable: false })\n  url: string;\n\n  @Expose({ name: 'name' })\n  @Column({ type: 'varchar', nullable: false })\n  name: string;\n\n  @Expose({ name: 'vaultId' })\n  @ManyToOne(() => Vault, (vault: Vault) => vault.social_links, { onDelete: 'CASCADE', nullable: true })\n  @JoinColumn({ name: 'vault_id' })\n  vault: Vault;\n\n  @Expose({ name: 'userId' })\n  @ManyToOne(() => User, (user: User) => user.social_links, { onDelete: 'CASCADE', nullable: true })\n  @JoinColumn({ name: 'user_id' })\n  user: User;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReq.html":{"url":"classes/LoginReq.html","title":"class - LoginReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                signature\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stakeAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                walletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SignatureData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsObject()@ValidateNested()@Type(undefined)@ApiProperty({description: 'Signature data for authentication', type: SignatureData})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stakeAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Stake address for the wallet', example: 'stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        walletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Wallet address for the wallet', example: 'addr1q934ccfkwy292....'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, IsString, IsObject, ValidateNested } from 'class-validator';\n\nexport class SignatureData {\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Public key for signature verification',\n    example: 'a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883',\n  })\n  key: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Signature data',\n    example:\n      '84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e',\n  })\n  signature: string;\n}\n\nexport class LoginReq {\n  @Expose()\n  @IsNotEmpty()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => SignatureData)\n  @ApiProperty({\n    description: 'Signature data for authentication',\n    type: SignatureData,\n  })\n  signature: SignatureData;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Stake address for the wallet',\n    example: 'stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4',\n  })\n  stakeAddress: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Wallet address for the wallet',\n    example: 'addr1q934ccfkwy292....',\n  })\n  walletAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LpTokenOperationResult.html":{"url":"classes/LpTokenOperationResult.html","title":"class - LpTokenOperationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LpTokenOperationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Result of an LP token operation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                error\n                            \n                            \n                                    \n                                success\n                            \n                            \n                                    \n                                    Optional\n                                transactionHash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Error message if the operation failed', example: 'Insufficient balance', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether the operation was successful', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        transactionHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash if the operation was successful', example: '0x123...abc', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/interfaces/lp-token.interface.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Result of an LP token operation\n */\nexport class LpTokenOperationResult {\n  @ApiProperty({\n    description: 'Whether the operation was successful',\n    example: true,\n  })\n  success: boolean;\n\n  @ApiProperty({\n    description: 'Transaction hash if the operation was successful',\n    example: '0x123...abc',\n    required: false,\n  })\n  transactionHash?: string;\n\n  @ApiProperty({\n    description: 'Error message if the operation failed',\n    example: 'Insufficient balance',\n    required: false,\n  })\n  error?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n/**\n * Parameters for extracting LP tokens\n */\nexport interface ExtractLpTokensParams {\n  /**\n   * ID of the vault to extract tokens from\n   */\n  vaultId: string;\n\n  /**\n   * Wallet address to send the tokens to\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to extract (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for burning LP tokens\n */\nexport interface BurnLpTokensParams {\n  /**\n   * Wallet address that holds the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to burn (in smallest unit as string)\n   */\n  amount: string;\n}\n\n/**\n * Parameters for dropping LP tokens\n */\nexport interface DistributeLpTokensParams {\n  /**\n   * Wallet address to receive the LP tokens\n   */\n  walletAddress: string;\n\n  /**\n   * Amount of LP tokens to drop (in smallest unit as string)\n   */\n  amount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LpTokensController.html":{"url":"controllers/LpTokensController.html","title":"controller - LpTokensController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LpTokensController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/lp-tokens.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lp-tokens\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                extractLpTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        extractLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractLpTokens(extractDto: ExtractLpTokensDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('extract')@ApiOperation({summary: 'Extract LP tokens from a vault', description: 'Extracts LP tokens from a specified vault to a wallet address.'})@ApiResponse({status: undefined, description: 'LP tokens extraction initiated successfully'})@ApiResponse({status: undefined, description: 'Invalid input parameters'})@ApiResponse({status: undefined, description: 'Unauthorized'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/lp-tokens.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extractDto\n                                            \n                                                            ExtractLpTokensDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, BadRequestException, HttpStatus } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@/modules/auth/auth.guard';\n\nimport { ExtractLpTokensDto } from './dto/extract-lp-tokens.dto';\nimport { LpTokensService } from './services/lp-tokens.service';\n\n@ApiTags('LP Tokens')\n@Controller('lp-tokens')\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class LpTokensController {\n  constructor(private readonly lpTokensService: LpTokensService) {}\n\n  @Post('extract')\n  @ApiOperation({\n    summary: 'Extract LP tokens from a vault',\n    description: 'Extracts LP tokens from a specified vault to a wallet address.',\n  })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'LP tokens extraction initiated successfully',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Invalid input parameters',\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'Unauthorized',\n  })\n  async extractLpTokens(@Body() extractDto: ExtractLpTokensDto) {\n    try {\n      const result = await this.lpTokensService.extractLpTokens(extractDto);\n      return {\n        success: true,\n        transactionId: result.transactionId,\n        message: 'LP tokens extraction initiated successfully',\n      };\n    } catch (error) {\n      throw new BadRequestException({\n        success: false,\n        message: error.message || 'Failed to extract LP tokens',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LpTokensModule.html":{"url":"modules/LpTokensModule.html","title":"module - LpTokensModule","body":"\n                   \n\n\n\n\n    Modules\n    LpTokensModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LpTokensModule\n\n\n\ncluster_LpTokensModule_providers\n\n\n\ncluster_LpTokensModule_exports\n\n\n\ncluster_LpTokensModule_imports\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nLpTokensModule\n\nLpTokensModule\n\nLpTokensModule -->\n\nBlockchainModule->LpTokensModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nLpTokensModule -->\n\nTransactionsModule->LpTokensModule\n\n\n\n\n\nLpTokensService \n\nLpTokensService \n\nLpTokensService  -->\n\nLpTokensModule->LpTokensService \n\n\n\n\n\nLpTokensService\n\nLpTokensService\n\nLpTokensModule -->\n\nLpTokensService->LpTokensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/lp-tokens.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LpTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LpTokensController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LpTokensService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsModule } from '../processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from '../processing-tx/onchain/blockchain.module';\n\nimport { LpTokensController } from './lp-tokens.controller';\nimport { LpTokensService } from './services/lp-tokens.service';\n\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Transaction, Vault]), TransactionsModule, BlockchainModule, ConfigModule],\n  controllers: [LpTokensController],\n  providers: [LpTokensService],\n  exports: [LpTokensService],\n})\nexport class LpTokensModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LpTokensService.html":{"url":"injectables/LpTokensService.html","title":"injectable - LpTokensService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LpTokensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/lp-tokens/services/lp-tokens.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminKeyHash\n                            \n                            \n                                    Private\n                                    Readonly\n                                adminSKey\n                            \n                            \n                                    Private\n                                blockfrost\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                scPolicyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                burnLpTokens\n                            \n                            \n                                    Async\n                                distributeLpTokens\n                            \n                            \n                                    Async\n                                extractLpTokens\n                            \n                            \n                                    Private\n                                generateMockTransactionHash\n                            \n                            \n                                    Private\n                                isValidAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionsService: TransactionsService, transactionRepository: Repository, vaultRepository: Repository, blockchainService: BlockchainService, configService: ConfigService, blockchainScanner: BlockchainScannerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainScanner\n                                                  \n                                                        \n                                                                        BlockchainScannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        burnLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnLpTokens(burnDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:299\n                        \n                    \n\n\n            \n                \n                        Burns LP tokens from a specified wallet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                burnDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Operation result with success status and transaction hash if successful\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        distributeLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    distributeLpTokens(dropDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:341\n                        \n                    \n\n\n            \n                \n                        Drops LP tokens to a specified wallet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dropDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Operation result with success status and transaction hash if successful\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        extractLpTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractLpTokens(extractDto: ExtractLpTokensParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Extracts LP tokens from a vault to a specified wallet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extractDto\n                                            \n                                                            ExtractLpTokensParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Operation result with success status and transaction hash if successful\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateMockTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateMockTransactionHash()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:388\n                        \n                    \n\n\n            \n                \n                        Generates a mock transaction hash for testing\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A mock transaction hash string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValidAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:372\n                        \n                    \n\n\n            \n                \n                        Validates a Cardano wallet address\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe wallet address to validate\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicating if the address is valid\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminKeyHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminSKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        blockfrost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LpTokensService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scPolicyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/lp-tokens/services/lp-tokens.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport { FixedTransaction, PlutusData, PrivateKey } from '@emurgo/cardano-serialization-lib-nodejs';\nimport {\n  Injectable,\n  Logger,\n  BadRequestException,\n  NotFoundException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionsService } from '../../processing-tx/offchain-tx/transactions.service';\nimport { BlockchainScannerService } from '../../processing-tx/onchain/blockchain-scanner.service';\nimport { BlockchainService } from '../../processing-tx/onchain/blockchain.service';\nimport { Datum, Redeemer1 } from '../../processing-tx/onchain/types/type';\nimport { applyContributeParams, toPreloadedScript } from '../../processing-tx/onchain/utils/apply_params';\nimport blueprint from '../../processing-tx/onchain/utils/blueprint.json';\nimport { generate_tag_from_txhash_index } from '../../processing-tx/onchain/utils/lib';\nimport { LpTokenOperationResult, ExtractLpTokensParams } from '../types/lp-token.types';\n\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { TransactionType } from '@/types/transaction.types';\n\n@Injectable()\nexport class LpTokensService {\n  private readonly adminSKey: string;\n  private readonly scPolicyId: string;\n  private readonly adminKeyHash: string;\n  private blockfrost: any;\n\n  constructor(\n    private readonly transactionsService: TransactionsService,\n    @InjectRepository(Transaction)\n    private readonly transactionRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    private readonly blockchainService: BlockchainService,\n    private readonly configService: ConfigService,\n    private readonly blockchainScanner: BlockchainScannerService\n  ) {\n    this.adminKeyHash = this.configService.get('ADMIN_KEY_HASH');\n    if (!this.adminKeyHash) {\n      throw new Error('ADMIN_KEY_HASH environment variable is not set');\n    }\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n  private readonly logger = new Logger(LpTokensService.name);\n\n  /**\n   * Extracts LP tokens from a vault to a specified wallet\n   * @param vaultId The ID of the vault to extract tokens from\n   * @param walletAddress The wallet address to send the tokens to\n   * @param amount The amount of LP tokens to extract\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Extracts LP tokens from a vault to a specified wallet\n   * @param params Parameters for the extraction operation\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Extracts LP tokens from a vault to a specified wallet\n   * @param extractDto - DTO containing extraction parameters\n   * @returns Operation result with transaction details\n   */\n  async extractLpTokens(extractDto: ExtractLpTokensParams): Promise {\n    const { vaultId, walletAddress, amount, txHash, txIndex } = extractDto;\n\n    if (!this.isValidAddress(walletAddress)) {\n      throw new BadRequestException('Invalid wallet address');\n    }\n\n    // Create internal transaction with type extractLp, status pending and vault id\n    const transaction = await this.transactionsService.createTransaction({\n      vault_id: vaultId,\n      type: TransactionType.extractLp,\n      assets: [], // No assets for LP extraction, just the transaction\n      amount: amount,\n    });\n\n    this.logger.log(`Created extract LP transaction ${transaction.id} for vault ${vaultId}`);\n\n    try {\n      this.logger.log(`Extracting ${amount} LP tokens from vault ${vaultId} to ${walletAddress}`);\n\n      // 1. Get vault details\n      const vault = await this.vaultRepository.findOne({ where: { id: vaultId } });\n      if (!vault) {\n        throw new NotFoundException(`Vault with ID ${vaultId} not found`);\n      }\n\n      // 2. Get the last update transaction details\n      const lastUpdateTx = await this.transactionsService.getLastVaultUpdate(vaultId);\n      if (!lastUpdateTx) {\n        throw new NotFoundException('No update transaction found for this vault');\n      }\n      const LAST_UPDATE_TX_INDEX = 0; // The index off the output in the transaction\n\n      const TX_HASH_INDEX_WITH_LPS_TO_COLLECT = '904bebf8c7f5d9ee343147cf8bbee24ec1beafe1e73c7d0a1c74b83c4f7a0b35#2';\n      const LAST_UPDATE_TX_HASH = 'b255d78aaf821388e00cbc03e09add05810e346b2b1f2a5db236752aec116a50';\n\n      // Get transaction details and extract policy information\n      this.logger.log(`Getting transaction details for publication hash: ${vault.publication_hash}`);\n\n      // Validate output amoun\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[1].unit));\n\n      const vaultPolicyPlusName = output_amount[1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      this.logger.log(`Extracted - Policy ID: ${VAULT_POLICY_ID}, Vault ID: ${VAULT_ID}`);\n\n      let parameterizedScript;\n      try {\n        this.logger.log('Applying parameters to contribute script...');\n        parameterizedScript = applyContributeParams({\n          vault_policy_id: VAULT_POLICY_ID,\n          vault_id: VAULT_ID,\n        });\n\n        if (!parameterizedScript?.validator?.hash) {\n          throw new Error('Failed to parameterize script: Invalid response from applyContributeParams');\n        }\n\n        this.logger.log(`Successfully parameterized script. Hash: ${parameterizedScript.validator.hash}`);\n      } catch (error) {\n        this.logger.error('Error in applyContributeParams:', error);\n        throw new Error(`Failed to apply parameters to script: ${error.message}`);\n      }\n\n      const lpsUnit = parameterizedScript.validator.hash + VAULT_ID;\n\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const [tx_hash, index] = TX_HASH_INDEX_WITH_LPS_TO_COLLECT.split('#');\n      const txUtxos = await this.blockfrost.txsUtxos(tx_hash);\n      const output = txUtxos.outputs[index];\n      if (!output) {\n        throw new Error('No output found');\n      }\n      const amountOfLpsToClaim = output.amount.find((a: { unit: string; quantity: string }) => a.unit === lpsUnit);\n      const datumTag = generate_tag_from_txhash_index(tx_hash, Number(index));\n      if (!amountOfLpsToClaim) {\n        console.log(JSON.stringify(output));\n        throw new Error('No lps to claim.');\n      }\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      // 3. Prepare transaction input for LP token extraction\n      const txInput: {\n        changeAddress: string;\n        message: string;\n        mint?: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets?: object[];\n          lovelace?: number;\n          datum?: { type: 'inline'; value: string | Datum; shape?: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: walletAddress,\n        message: 'Admin extract asset',\n        scriptInteractions: [\n          {\n            purpose: 'spend',\n            hash: POLICY_ID,\n            outputRef: {\n              txHash: tx_hash,\n              index: index,\n            },\n            redeemer: {\n              type: 'json',\n              value: {\n                __variant: 'ExtractAsset',\n                __data: {\n                  lp_output_index: 0,\n                },\n              } satisfies Redeemer1,\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: walletAddress,\n            assets: [\n              {\n                assetName: { name: VAULT_ID, format: 'hex' },\n                policyId: parameterizedScript.validator.hash,\n                quantity: 1000,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: PlutusData.new_bytes(Buffer.from(datumTag, 'hex')).to_hex(),\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminKeyHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      const inputWithNoPreloaded = { ...txInput };\n      //@ts-ignore\n      delete inputWithNoPreloaded.preloadedScripts;\n      console.log(JSON.stringify(inputWithNoPreloaded));\n\n      // 4. Build the transaction\n      const buildResponse = await this.blockchainService.buildTransaction(txInput);\n\n      // 5. Sign the transaction with admin key\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n\n      // Sign with both admin and customer keys if needed\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n      // If customer signature is needed:\n      // txToSubmitOnChain.sign_and_add_vkey_signature(\n      //   PrivateKey.from_bech32(customerSKey),\n      // );\n\n      // 6. Submit the signed transaction\n      const submitResponse = await this.blockchainService.submitTransaction({\n        transaction: txToSubmitOnChain.to_hex(),\n        signatures: [], // Signatures are already added to the transaction\n      });\n\n      // 7. Update the transaction with the hash\n      await this.transactionsService.updateTransactionHash(transaction.id, submitResponse.txHash);\n\n      const result: LpTokenOperationResult = {\n        success: true,\n        transactionId: submitResponse.txHash,\n        message: 'LP tokens extracted successfully',\n        transaction: await this.transactionsService.getTransaction(submitResponse.txHash),\n      };\n      return result;\n    } catch (error) {\n      this.logger.error(`Failed to extract LP tokens: ${error.message}`, error.stack);\n      throw new InternalServerErrorException('Failed to process LP token extraction');\n    }\n  }\n\n  /**\n   * Burns LP tokens from a specified wallet\n   * @param walletAddress The wallet address that holds the LP tokens\n   * @param amount The amount of LP tokens to burn\n   * @returns Operation result with success status and transaction hash if successful\n   * @param params Parameters for the burning operation\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Burns LP tokens from a specified wallet\n   * @param burnDto - DTO containing burn parameters\n   * @returns Operation result with transaction details\n   */\n  async burnLpTokens(burnDto: any): Promise {\n    const { walletAddress, amount } = burnDto;\n\n    if (!this.isValidAddress(walletAddress)) {\n      throw new BadRequestException('Invalid wallet address');\n    }\n\n    try {\n      this.logger.log(`Burning ${amount} LP tokens from wallet ${walletAddress}`);\n\n      // TODO: Implement actual LP token burning logic\n      // This is a placeholder implementation\n      const transactionHash = this.generateMockTransactionHash();\n\n      const result: LpTokenOperationResult = {\n        success: true,\n        transactionId: transactionHash,\n        message: 'LP tokens burned successfully',\n      };\n      return result;\n    } catch (error) {\n      this.logger.error(`Failed to burn LP tokens: ${error.message}`, error.stack);\n      throw new InternalServerErrorException('Failed to process LP token burn');\n    }\n  }\n\n  /**\n   * Drops LP tokens to a specified wallet\n   * @param walletAddress The wallet address to receive the LP tokens\n   * @param amount The amount of LP tokens to drop\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Drops LP tokens to a specified wallet\n   * @param params Parameters for the drop operation\n   * @returns Operation result with success status and transaction hash if successful\n   */\n  /**\n   * Drops LP tokens to a specified wallet\n   * @param dropDto - DTO containing drop parameters\n   * @returns Operation result with transaction details\n   */\n  async distributeLpTokens(dropDto: any): Promise {\n    const { walletAddress, amount } = dropDto;\n\n    if (!this.isValidAddress(walletAddress)) {\n      throw new BadRequestException('Invalid wallet address');\n    }\n\n    try {\n      this.logger.log(`Dropping ${amount} LP tokens to wallet ${walletAddress}`);\n\n      // TODO: Implement actual LP token dropping logic\n      // This is a placeholder implementation\n      const transactionHash = this.generateMockTransactionHash();\n\n      const result: LpTokenOperationResult = {\n        success: true,\n        transactionId: transactionHash,\n        message: 'LP tokens distributed successfully',\n      };\n      return result;\n    } catch (error) {\n      this.logger.error(`Failed to drop LP tokens: ${error.message}`, error.stack);\n      throw new InternalServerErrorException('Failed to process LP token drop');\n    }\n  }\n\n  /**\n   * Validates a Cardano wallet address\n   * @param address - The wallet address to validate\n   * @returns boolean indicating if the address is valid\n   */\n  private isValidAddress(address: string): boolean {\n    // Basic validation for Cardano addresses\n    // Supports both mainnet (addr1) and testnet (addr_test1) addresses\n    return (\n      typeof address === 'string' &&\n      (address.startsWith('addr1') ||\n        address.startsWith('addr_test1') ||\n        address.startsWith('stake1') ||\n        address.startsWith('stake_test1'))\n    );\n  }\n\n  /**\n   * Generates a mock transaction hash for testing\n   * @returns A mock transaction hash string\n   */\n  private generateMockTransactionHash(): string {\n    return '0x' + Math.random().toString(16).substr(2, 64);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataFile.html":{"url":"classes/MetadataFile.html","title":"class - MetadataFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                mediaType\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mediaType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NftAsset.html":{"url":"classes/NftAsset.html","title":"class - NftAsset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NftAsset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                assetName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                policyId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        assetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Asset name', example: 'l4vaaudiEngine'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the NFT', example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Quantity of the asset', example: 1})@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OnchainMetadata.html":{"url":"classes/OnchainMetadata.html","title":"class - OnchainMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OnchainMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/contribute.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                mediaType\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mediaType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/contribute.req.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Expose, Type, Transform } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsOptional, ValidateNested, IsString, IsNumber, IsObject } from 'class-validator';\n\nclass MetadataFile {\n  @ApiProperty()\n  @IsString()\n  src: string;\n\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n}\n\nclass OnchainMetadata {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({ type: [MetadataFile] })\n  @Type(() => MetadataFile)\n  files: MetadataFile[];\n\n  @ApiProperty()\n  @IsString()\n  image: string;\n\n  @ApiProperty()\n  @IsString()\n  owner: string;\n\n  @ApiProperty()\n  @IsString()\n  mediaType: string;\n\n  @ApiProperty()\n  @IsString()\n  description: string;\n}\n\nexport class ContributionAsset {\n  @ApiProperty({\n    description: 'Policy ID of the asset (56-character hex string)',\n    example: '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd',\n  })\n  @IsNotEmpty()\n  @Expose()\n  policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name within the policy',\n    example: 'l4vaaudiEngine',\n  })\n  @IsNotEmpty()\n  @Expose()\n  assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of assets to contribute',\n    example: 1,\n  })\n  @IsNotEmpty()\n  @Expose()\n  quantity: number;\n\n  @ApiPropertyOptional({\n    description: 'Asset metadata including on-chain details',\n    type: 'object',\n    additionalProperties: true,\n    example: {\n      policyId: 'c365b10e9d9400767d234315841c6dd750a1b681d2ae069d4191ed6e',\n      fingerprint: 'asset1tt9r6rl0dnft95w6smsaacg86sylf47hxkaz40',\n      decimals: 0,\n      description: '',\n      image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n      mediaType: 'image/png',\n      files: [\n        {\n          src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n          name: 'Igor 3',\n          mediaType: 'image/png',\n        },\n      ],\n      attributes: {},\n      assetName: '4c34766149676f722033',\n      mintTx: '98ec166ee46a4e56d9cadf28848a99e28ea4703f478c6c3aef4bd1553866667c',\n      mintQuantity: '1',\n      onchainMetadata: {\n        name: 'Igor 3',\n        files: [\n          {\n            src: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n            name: 'Igor 3',\n            mediaType: 'image/png',\n          },\n        ],\n        image: 'ipfs://QmcqzB25HmkAnEnZs8ZQAsL6J6Jrsh4grN6HZPd5UasaRw',\n        owner: 'L4va',\n        mediaType: 'image/png',\n        description: '',\n      },\n    },\n  })\n  @Expose()\n  @IsOptional()\n  @Transform(({ value }) => {\n    if (typeof value === 'string') {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return {};\n      }\n    }\n    return value || {};\n  })\n  metadata?: Record;\n}\n\nexport class ContributeReq {\n  @ApiProperty({\n    type: [ContributionAsset],\n    description: 'List of assets to contribute',\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ContributionAsset)\n  @Expose()\n  assets: ContributionAsset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                limit\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                total\n                            \n                            \n                                    \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/paginated-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginatedResponseDto {\n  @ApiProperty()\n  items: T[];\n\n  @ApiProperty()\n  total: number;\n\n  @ApiProperty()\n  page: number;\n\n  @ApiProperty()\n  limit: number;\n\n  @ApiProperty()\n  totalPages: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 10})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/pagination.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Min(1)@Type(undefined)@ApiProperty({required: false, minimum: 1, default: 1})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/pagination.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsNumber, IsOptional, Min } from 'class-validator';\n\nexport class PaginationDto {\n  @IsNumber()\n  @IsOptional()\n  @Min(1)\n  @Type(() => Number)\n  @ApiProperty({ required: false, minimum: 1, default: 1 })\n  @Expose()\n  page?: number = 1;\n\n  @IsNumber()\n  @IsOptional()\n  @Min(1)\n  @Type(() => Number)\n  @ApiProperty({ required: false, minimum: 1, default: 10 })\n  @Expose()\n  limit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PolicyId1749726859213.html":{"url":"classes/PolicyId1749726859213.html","title":"class - PolicyId1749726859213","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PolicyId1749726859213\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1749726859213-PolicyId.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PolicyId1749726859213'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1749726859213-PolicyId.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749726859213-PolicyId.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749726859213-PolicyId.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class PolicyId1749726859213 implements MigrationInterface {\n    name = 'PolicyId1749726859213'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PolicyIdRestore1749727852748.html":{"url":"classes/PolicyIdRestore1749727852748.html","title":"class - PolicyIdRestore1749727852748","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PolicyIdRestore1749727852748\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1749727852748-policyIdRestore.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PolicyIdRestore1749727852748'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1749727852748-policyIdRestore.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749727852748-policyIdRestore.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1749727852748-policyIdRestore.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class PolicyIdRestore1749727852748 implements MigrationInterface {\n    name = 'PolicyIdRestore1749727852748'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"policy_id\" character varying`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n        await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"policy_id\"`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicProfileRes.html":{"url":"classes/PublicProfileRes.html","title":"class - PublicProfileRes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicProfileRes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/public-profile.res.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                bannerImage\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                profileImage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socialLinks\n                            \n                            \n                                    \n                                    \n                                totalVaults\n                            \n                            \n                                    \n                                    \n                                tvl\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bannerImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@DtoRepresent({transform:  => , expose: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socialLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinkEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalVaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/public-profile.res.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { DtoRepresent } from '../../../decorators/dto-represents.decorator';\n\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\n\nexport class PublicProfileRes {\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  id: string;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  name: string;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  description?: string;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  address: string;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: { name: 'profileImage' },\n  })\n  profileImage?: FileEntity;\n\n  @ApiProperty({ required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  bannerImage?: FileEntity;\n\n  @ApiProperty({ type: [LinkEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  socialLinks?: LinkEntity[];\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  tvl: number;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  totalVaults: number;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  createdAt: string;\n\n  @ApiProperty()\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublishVaultDto.html":{"url":"classes/PublishVaultDto.html","title":"class - PublishVaultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublishVaultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/publish-vault.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                signatures\n                            \n                            \n                                    \n                                    \n                                    \n                                transaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                txId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        signatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of CBOR  encoded signatures', example: undefined, required: false})@IsOptional()@IsString({each: true})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded transaction', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID (optional) ', example: '123e4567-e89b-12d3-a456-426614174000', required: false})@IsOptional()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Vault ID', example: '83a400...'})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/publish-vault.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNotEmpty, IsOptional } from 'class-validator';\n\nexport class PublishVaultDto {\n  @ApiProperty({\n    description: 'Vault ID',\n    example: '83a400...',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR  encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ each: true })\n  @Expose()\n  signatures?: string[];\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (optional) ',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @Expose()\n  txId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RawBodyMiddleware.html":{"url":"injectables/RawBodyMiddleware.html","title":"injectable - RawBodyMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RawBodyMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/raw-body.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/raw-body.middleware.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RawBodyMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/raw-body.middleware.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware, Logger } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport * as rawBody from 'raw-body';\n\n@Injectable()\nexport class RawBodyMiddleware implements NestMiddleware {\n  private readonly logger = new Logger(RawBodyMiddleware.name);\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (!req.readable) {\n      return next();\n    }\n\n    try {\n      const raw = await rawBody(req);\n      const rawText = raw.toString().trim();\n      req['rawBody'] = rawText;\n\n      // Log the raw body for debugging\n      this.logger.debug('Raw webhook body:', {\n        length: rawText.length,\n        preview: rawText.substring(0, 100) + '...',\n      });\n\n      // Re-create the body stream\n      req.body = JSON.parse(rawText);\n    } catch (error) {\n      this.logger.error('Error processing raw body:', error);\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameFieldFixEnum1742800375799.html":{"url":"classes/RenameFieldFixEnum1742800375799.html","title":"class - RenameFieldFixEnum1742800375799","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameFieldFixEnum1742800375799\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742800375799-renameFieldFixEnum.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameFieldFixEnum1742800375799'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742800375799-renameFieldFixEnum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800375799-renameFieldFixEnum.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742800375799-renameFieldFixEnum.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameFieldFixEnum1742800375799 implements MigrationInterface {\n  name = 'RenameFieldFixEnum1742800375799';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum\" RENAME TO \"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum\" AS ENUM('custom', 'upon-vault-lunch', 'upon-vault-launch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `UPDATE vaults SET contribution_open_window_type = 'upon-vault-launch' WHERE contribution_open_window_type = 'upon-vault-lunch';`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" AS ENUM('custom', 'upon-vault-lunch')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"contribution_open_window_type\" TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" USING \"contribution_open_window_type\"::\"text\"::\"public\".\"vaults_contribution_open_window_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_contribution_open_window_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"vaults_contribution_open_window_type_enum_old\" RENAME TO \"vaults_contribution_open_window_type_enum\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `UPDATE vaults SET contribution_open_window_type = 'upon-vault-lunch' WHERE contribution_open_window_type = 'upon-vault-launch';`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameFields1746536544579.html":{"url":"classes/RenameFields1746536544579.html","title":"class - RenameFields1746536544579","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameFields1746536544579\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1746536544579-renameFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameFields1746536544579'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1746536544579-renameFields.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746536544579-renameFields.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746536544579-renameFields.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameFields1746536544579 implements MigrationInterface {\n  name = 'RenameFields1746536544579';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"acquirer_whitelist\" DROP CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"valuation_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_valuation_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXIST \"off_assets_offered\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_token_ticker\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_acquire_reserve\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_value_method_enum\" AS ENUM('lbe', 'fixed')`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"value_method\" \"public\".\"vaults_value_method_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"tokens_for_acquires\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"vault_token_ticker\" character varying`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"vault_token_ticker\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_reserve\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"tokens_for_acquires\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"value_method\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_value_method_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_acquire_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_token_ticker\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"off_assets_offered\" numeric`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_valuation_type_enum\" AS ENUM('lbe', 'fixed')`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"valuation_type\" \"public\".\"vaults_valuation_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"acquirer_whitelist\" ADD CONSTRAINT \"FK_4996e41bd51ba848c8f6ac22a03\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameInvestmentToAcquire1746531791148.html":{"url":"classes/RenameInvestmentToAcquire1746531791148.html","title":"class - RenameInvestmentToAcquire1746531791148","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameInvestmentToAcquire1746531791148\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1746531791148-renameInvestmentToAcquire.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameInvestmentToAcquire1746531791148'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1746531791148-renameInvestmentToAcquire.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746531791148-renameInvestmentToAcquire.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746531791148-renameInvestmentToAcquire.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameInvestmentToAcquire1746531791148 implements MigrationInterface {\n  name = 'RenameInvestmentToAcquire1746531791148';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT IF EXISTS \"FK_3e6ff48532fbe552bbb6c4098bd\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT IF EXISTS \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT IF EXISTS \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_open_window_type\"`);\n    await queryRunner.query(`DROP TYPE IF EXISTS \"public\".\"vaults_investment_open_window_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_open_window_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"ft_investment_reserve\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT IF EXISTS \"REL_3e6ff48532fbe552bbb6c4098b\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investors_whitelist_csv_id\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_phase_start\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN IF EXISTS \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_window_duration\" bigint`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_acquire_open_window_type_enum\" AS ENUM('custom', 'upon-asset-window-closing')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD \"acquire_open_window_type\" \"public\".\"vaults_acquire_open_window_type_enum\"`\n    );\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_open_window_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_acquire_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquire_phase_start\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"acquirer_whitelist_csv_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"UQ_c211339d9110a71f1e7b65d87b5\" UNIQUE (\"acquirer_whitelist_csv_id\")`\n    );\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum\" RENAME TO \"transactions_type_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'acquire', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE IF EXISTS \"public\".\"transactions_type_enum_old\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'created', 'published', 'contribution', 'acquire', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE IF EXISTS \"public\".\"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_c211339d9110a71f1e7b65d87b5\" FOREIGN KEY (\"acquirer_whitelist_csv_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"FK_c211339d9110a71f1e7b65d87b5\"`);\n    await queryRunner.query(`ALTER TABLE \"acquirer_whitelist\" DROP CONSTRAINT \"FK_cba6b5306e74553edd3b94a000a\"`);\n\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'created', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum_old\" AS ENUM('mint', 'payment', 'contribute', 'investment', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE \"public\".\"transactions_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"transactions_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"transactions_type_enum_old\" RENAME TO \"transactions_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP CONSTRAINT \"UQ_c211339d9110a71f1e7b65d87b5\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquirer_whitelist_csv_id\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_phase_start\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"ft_acquire_reserve\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_open_window_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_open_window_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_acquire_open_window_type_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"acquire_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" bigint`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_phase_start\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investors_whitelist_csv_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"REL_3e6ff48532fbe552bbb6c4098b\" UNIQUE (\"investors_whitelist_csv_id\")`\n    );\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"ft_investment_reserve\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_open_window_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_investment_open_window_type_enum\" AS ENUM('custom', 'upon-asset-window-closing')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD \"investment_open_window_type\" \"public\".\"vaults_investment_open_window_type_enum\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ADD CONSTRAINT \"FK_3e6ff48532fbe552bbb6c4098bd\" FOREIGN KEY (\"investors_whitelist_csv_id\") REFERENCES \"files\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameVaultField1742382533813.html":{"url":"classes/RenameVaultField1742382533813.html","title":"class - RenameVaultField1742382533813","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameVaultField1742382533813\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742382533813-RenameVaultField.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameVaultField1742382533813'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742382533813-RenameVaultField.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742382533813-RenameVaultField.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742382533813-RenameVaultField.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameVaultField1742382533813 implements MigrationInterface {\n  name = 'RenameVaultField1742382533813';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" RENAME COLUMN \"ft_investment_reverse\" TO \"ft_investment_reserve\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" RENAME COLUMN \"ft_investment_reserve\" TO \"ft_investment_reverse\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReplaceLockedStateToGovernance1743424803837.html":{"url":"classes/ReplaceLockedStateToGovernance1743424803837.html","title":"class - ReplaceLockedStateToGovernance1743424803837","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReplaceLockedStateToGovernance1743424803837\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ReplaceLockedStateToGovernance1743424803837'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743424803837-replaceLockedStateToGovernance.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ReplaceLockedStateToGovernance1743424803837 implements MigrationInterface {\n  name = 'ReplaceLockedStateToGovernance1743424803837';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"governance_phase_start\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"governance_phase_start\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignatureData.html":{"url":"classes/SignatureData.html","title":"class - SignatureData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignatureData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Public key for signature verification', example: 'a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNotEmpty()@IsString()@ApiProperty({description: 'Signature data', example: '84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.req.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, IsString, IsObject, ValidateNested } from 'class-validator';\n\nexport class SignatureData {\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Public key for signature verification',\n    example: 'a4010103272006215820b1a4728380a82aa00b642a481a8b4bbe972758252e95c49c77b4244a50af8883',\n  })\n  key: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Signature data',\n    example:\n      '84582aa201276761646472657373581de106605a47f78e1d609e4e481f5972858dc6281bda52095ca8803cecbca166686173686564f458446163636f756e743a207374616b653175797278716b6a38373738703663793766657970376b746a736b78757632716d6d6666716a683967737137776530713677617576345840db43ea4a559292bcd731c8db7dce1eb825dc3633e873ca3fd8786a6e105b14e07c7ed281291a076de39ab583d9f112ea581ffd2c3f24318d6127196576ae340e',\n  })\n  signature: string;\n}\n\nexport class LoginReq {\n  @Expose()\n  @IsNotEmpty()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => SignatureData)\n  @ApiProperty({\n    description: 'Signature data for authentication',\n    type: SignatureData,\n  })\n  signature: SignatureData;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Stake address for the wallet',\n    example: 'stake1uyrxqkj8778p6cy7feyp7ktjskxuv2qmmffqjh9gsq7we0q6wauv4',\n  })\n  stakeAddress: string;\n\n  @Expose()\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Wallet address for the wallet',\n    example: 'addr1q934ccfkwy292....',\n  })\n  walletAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialLink.html":{"url":"classes/SocialLink.html","title":"class - SocialLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/types.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUrl()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/types.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsNumber, IsOptional, IsUrl } from 'class-validator';\n\nexport class SocialLink {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty()\n  @IsUrl()\n  @Expose()\n  url: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AssetWhitelist {\n  /**\n   * Policy ID of the asset (56-character hex string)\n   * @example '1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcd'\n   */\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  /**\n   * Minimum number of assets allowed\n   * @example 1\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMin?: number;\n\n  /**\n   * Maximum number of assets allowed\n   * @example 10\n   */\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  countCapMax?: number;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class ContributorWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  policyId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelist {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  walletAddress: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport class AcquirerWhitelistCsv {\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileName: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  fileType: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  id: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  key: string;\n  @ApiProperty()\n  @IsString()\n  @Expose()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialLinkDto.html":{"url":"classes/SocialLinkDto.html","title":"class - SocialLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the social platform', example: 'twitter'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL to the social profile', example: 'https://twitter.com/username'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsOptional, IsArray, IsNumber, IsObject } from 'class-validator';\nimport { SocialLink } from '@/modules/vaults/types';\n\nexport class SocialLinkDto {\n  @ApiProperty({\n    description: 'Name of the social platform',\n    example: 'twitter',\n  })\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: 'URL to the social profile',\n    example: 'https://twitter.com/username',\n  })\n  @IsString()\n  @Expose()\n  url: string;\n}\n\nexport class UpdateProfileDto {\n  @ApiProperty({\n    description: 'User display name',\n    example: 'John Doe',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  name?: string;\n\n  @ApiProperty({\n    description: 'User profile description/bio',\n    example: 'Experienced crypto investor and NFT collector',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  description?: string;\n\n  @ApiProperty({\n    description: 'Profile image file URL (format: image/)',\n    example: 'image/profile-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  profileImage?: string;\n\n  @ApiProperty({\n    description: 'Banner image file URL (format: image/)',\n    example: 'image/banner-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImage?: string;\n\n  @ApiProperty({\n    description: 'Total Value Locked in user vaults',\n    example: 1000000,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  tvl?: number;\n\n  @ApiProperty({\n    description: 'Total number of vaults owned by user',\n    example: 5,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  totalVaults?: number;\n\n  @ApiProperty({\n    description: 'List of social media links',\n    type: [SocialLinkDto],\n    required: false,\n  })\n  @IsArray()\n  @IsOptional()\n  @IsObject({ each: true })\n  @Expose()\n  socialLinks: SocialLink[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitTransactionDto.html":{"url":"classes/SubmitTransactionDto.html","title":"class - SubmitTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                signatures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                transaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                txId\n                            \n                            \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        signatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of CBOR encoded signatures', example: undefined, required: false})@IsOptional()@IsArray()@IsString({each: true})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded transaction', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID', example: '83a400...', required: true})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'vault id ', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:105\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubmitTransactionParams.html":{"url":"interfaces/SubmitTransactionParams.html","title":"interface - SubmitTransactionParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SubmitTransactionParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            signatures\n                                        \n                                \n                                \n                                        \n                                            transaction\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        signatures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signatures:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitVaultTxDto.html":{"url":"classes/SubmitVaultTxDto.html","title":"class - SubmitVaultTxDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitVaultTxDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SubmitTransactionDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                vaultId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                signatures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                transaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                txId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        vaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Vault id', example: undefined, required: true})@IsNotEmpty()@IsString()@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:146\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        signatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of CBOR encoded signatures', example: undefined, required: false})@IsOptional()@IsArray()@IsString({each: true})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:134\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded transaction', example: '83a400...'})@IsString()@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:123\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        txId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Outchain transaction ID', example: '83a400...', required: true})@IsString()@IsNotEmpty()@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SubmitTransactionDto\n\n                            \n                        \n                    \n                        \n                                Defined in         SubmitTransactionDto:115\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagDto.html":{"url":"classes/TagDto.html","title":"class - TagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/tag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/dto/tag.dto.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the tag', example: 'NFT'})@IsNotEmpty()@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/tag.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class TagDto {\n  @ApiProperty({\n    description: 'Name of the tag',\n    example: 'NFT',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  name: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TagEntity.html":{"url":"entities/TagEntity.html","title":"entity - TagEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TagEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/tag.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                vaults\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/tag.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/tag.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        vaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'vaults'})@ManyToMany(undefined, vault => vault.tags)@JoinTable({name: 'vault_tags', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/tag.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToMany, JoinTable } from 'typeorm';\n\nimport { Vault } from './vault.entity';\n\n@Entity('tags')\nexport class TagEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  name: string;\n\n  @Expose({ name: 'vaults' })\n  @ManyToMany(() => Vault, (vault: Vault) => vault.tags)\n  @JoinTable({\n    name: 'vault_tags',\n    joinColumn: {\n      name: 'tag_id',\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'vault_id',\n      referencedColumnName: 'id',\n    },\n  })\n  vaults: Vault[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaptoolsController.html":{"url":"controllers/TaptoolsController.html","title":"controller - TaptoolsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaptoolsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/taptools.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                taptools\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getWalletSummary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletSummary(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('summary')@ApiDoc({summary: 'Get info about price of wallet assets', description: 'Price select successfully', status: 200})@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards, NotFoundException, Query } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\nimport { ApiDoc } from '../../decorators/api-doc.decorator';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { VaultAssetsSummaryDto } from '../vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto';\n\nimport { TaptoolsService } from './taptools.service';\n\n@Controller('taptools')\n@ApiTags('TapTools')\nexport class TaptoolsController {\n  constructor(private readonly taptoolsService: TaptoolsService) {}\n\n  @Get('summary')\n  @ApiDoc({\n    summary: 'Get info about price of wallet assets',\n    description: 'Price select successfully',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  async getWalletSummary(@Query('address') address: string) {\n    return this.taptoolsService.getWalletSummary(address);\n  }\n\n  // @Get('vault/:vaultId/assets/value')\n  // @ApiOperation({\n  //   summary: 'Get the total value of assets in a vault',\n  //   description: 'Calculates the total value of all assets in the specified vault in both ADA and USD.'\n  // })\n  // @ApiResponse({\n  //   status: 200,\n  //   description: 'Successfully retrieved vault assets value',\n  //   type: VaultAssetsSummaryDto\n  // })\n  // @ApiResponse({\n  //   status: 404,\n  //   description: 'Vault not found'\n  // })\n  // @UseGuards(AuthGuard)\n  // async getVaultAssetsValue(@Param('vaultId') vaultId: string): Promise {\n  //   try {\n  //     return await this.taptoolsService.calculateVaultAssetsValue(vaultId);\n  //   } catch (error) {\n  //     if (error instanceof NotFoundException) {\n  //       throw new NotFoundException(`Vault with ID ${vaultId} not found`);\n  //     }\n  //     throw error;\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaptoolsModule.html":{"url":"modules/TaptoolsModule.html","title":"module - TaptoolsModule","body":"\n                   \n\n\n\n\n    Modules\n    TaptoolsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaptoolsModule\n\n\n\ncluster_TaptoolsModule_exports\n\n\n\ncluster_TaptoolsModule_providers\n\n\n\n\nTaptoolsService \n\nTaptoolsService \n\n\n\nTaptoolsModule\n\nTaptoolsModule\n\nTaptoolsService  -->\n\nTaptoolsModule->TaptoolsService \n\n\n\n\n\nTaptoolsService\n\nTaptoolsService\n\nTaptoolsModule -->\n\nTaptoolsService->TaptoolsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/taptools/taptools.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaptoolsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaptoolsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TaptoolsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\n\nimport { TaptoolsController } from './taptools.controller';\nimport { TaptoolsService } from './taptools.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Vault, Asset])],\n  providers: [TaptoolsService],\n  exports: [TaptoolsService],\n  controllers: [TaptoolsController],\n})\nexport class TaptoolsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaptoolsService.html":{"url":"injectables/TaptoolsService.html","title":"injectable - TaptoolsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaptoolsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/taptools.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                blockfrostTestnetUrl\n                            \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                taptoolsApiKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateVaultAssetsValue\n                            \n                            \n                                    Private\n                                    Async\n                                getAdaPrice\n                            \n                            \n                                    Private\n                                    Async\n                                getAssetDetails\n                            \n                            \n                                    Async\n                                getAssetValue\n                            \n                            \n                                    Private\n                                    Async\n                                getMainnetWalletSummary\n                            \n                            \n                                    Private\n                                    Async\n                                getTestnetWalletSummary\n                            \n                            \n                                    Async\n                                getWalletSummary\n                            \n                            \n                                    Private\n                                isTestnetAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultRepository: Repository, assetRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/taptools/taptools.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateVaultAssetsValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateVaultAssetsValue(vaultId: string, phase: \"contribute\" | \"acquire\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:377\n                        \n                    \n\n\n            \n                \n                        Calculate the total value of all assets in a vault\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The ID of the vault\n\n                                            \n                                        \n                                        \n                                                phase\n                                            \n                                                        \"contribute\" | \"acquire\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'contribute'\n                                            \n\n                                            \n                                                    The phase to filter assets by - 'contribute' for contributed assets, 'acquire' for invested assets\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise with the vault assets summary\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getAdaPrice\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAdaPrice()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getAssetDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssetDetails(assetId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                assetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAssetValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssetValue(policyId: string, assetName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:335\n                        \n                    \n\n\n            \n                \n                        Get the value of an asset in ADA and USD\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                policyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The policy ID of the asset\n\n                                            \n                                        \n                                        \n                                                assetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The asset name (hex encoded)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise with the asset value in ADA and USD\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getMainnetWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMainnetWalletSummary(walletAddress: string, adaPriceUsd: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                adaPriceUsd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getTestnetWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTestnetWalletSummary(walletAddress: string, adaPriceUsd: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                adaPriceUsd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWalletSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletSummary(walletAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTestnetAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTestnetAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/taptools/taptools.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://openapi.taptools.io/api/v1'\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        blockfrostTestnetUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://cardano-preprod.blockfrost.io/api/v0/'\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NodeCache({ stdTTL: 60 })\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TaptoolsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        taptoolsApiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/taptools.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport axios from 'axios';\nimport * as NodeCache from 'node-cache';\nimport { Repository } from 'typeorm';\n\nimport { VaultAssetsSummaryDto } from '../vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto';\n\nimport { AssetValueDto } from './dto/asset-value.dto';\nimport { WalletSummaryDto } from './dto/wallet-summary.dto';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Vault } from '@/database/vault.entity';\nimport { AssetOriginType, AssetStatus, AssetType } from '@/types/asset.types';\n\n@Injectable()\nexport class TaptoolsService {\n  private readonly logger = new Logger(TaptoolsService.name);\n\n  private readonly baseUrl = 'https://openapi.taptools.io/api/v1';\n  private readonly blockfrostTestnetUrl = 'https://cardano-preprod.blockfrost.io/api/v0/';\n  private cache = new NodeCache({ stdTTL: 60 }); // cache for 60 seconds\n  private readonly taptoolsApiKey: string;\n\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository\n  ) {\n    this.taptoolsApiKey = process.env.TAPTOOLS_API_KEY || '';\n  }\n\n  private isTestnetAddress(address: string): boolean {\n    return address.startsWith('addr_test');\n  }\n\n  private async getAdaPrice(): Promise {\n    const cacheKey = 'ada_price_usd';\n    const cachedPrice = this.cache.get(cacheKey);\n    if (cachedPrice !== undefined) return cachedPrice;\n\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price', {\n        params: {\n          ids: 'cardano',\n          vs_currencies: 'usd',\n        },\n      });\n\n      if (!response.data?.cardano?.usd) {\n        throw new HttpException('Invalid price data from API', 400);\n      }\n\n      const adaPrice = Number(response.data.cardano.usd);\n      this.cache.set(cacheKey, adaPrice);\n      return adaPrice;\n    } catch (err) {\n      console.error('Error fetching ADA price:', err.message);\n      throw new HttpException('Failed to fetch ADA price', 500);\n    }\n  }\n\n  async getWalletSummary(walletAddress: string): Promise {\n    const cacheKey = `wallet_summary_${walletAddress}`;\n    const cached = this.cache.get(cacheKey);\n    if (cached) return cached;\n\n    try {\n      const adaPriceUsd = await this.getAdaPrice();\n\n      let summary: WalletSummaryDto;\n\n      if (this.isTestnetAddress(walletAddress)) {\n        summary = await this.getTestnetWalletSummary(walletAddress, adaPriceUsd);\n      } else {\n        summary = await this.getMainnetWalletSummary(walletAddress, adaPriceUsd);\n      }\n\n      this.cache.set(cacheKey, summary);\n      return summary;\n    } catch (err) {\n      console.error('Error fetching wallet summary:', err.message);\n      if (axios.isAxiosError(err)) {\n        throw new HttpException(\n          err.response?.data?.message || 'Failed to fetch wallet assets',\n          err.response?.status || 500\n        );\n      }\n      throw new HttpException('Failed to fetch or process wallet assets', 500);\n    }\n  }\n\n  private async getMainnetWalletSummary(walletAddress: string, adaPriceUsd: number): Promise {\n    const res = await axios.get(`${this.baseUrl}/wallet/portfolio/positions?address=${walletAddress}`, {\n      headers: {\n        'x-api-key': process.env.TAPTOOLS_API_KEY,\n      },\n      timeout: 15000,\n    });\n\n    if (!res.data) {\n      throw new HttpException('Invalid response format from API', 400);\n    }\n\n    const processedAssets: AssetValueDto[] = [];\n    const totalAda = res.data.adaValue || 0;\n    const totalUsd = totalAda * adaPriceUsd;\n\n    // Process fungible tokens\n    if (res.data.positionsFt) {\n      for (const ft of res.data.positionsFt) {\n        processedAssets.push({\n          tokenId: ft.unit,\n          name: ft.ticker,\n          displayName: ft.ticker,\n          quantity: ft.balance,\n          isNft: false,\n          isFungibleToken: true,\n          priceAda: ft.price,\n          priceUsd: ft.price * adaPriceUsd,\n          valueAda: ft.adaValue,\n          valueUsd: ft.adaValue * adaPriceUsd,\n        });\n      }\n    }\n\n    // Process NFTs\n    if (res.data.positionsNft) {\n      for (const nft of res.data.positionsNft) {\n        processedAssets.push({\n          tokenId: nft.policy,\n          name: nft.name,\n          displayName: nft.name,\n          quantity: nft.balance,\n          isNft: true,\n          isFungibleToken: false,\n          priceAda: nft.floorPrice,\n          priceUsd: nft.floorPrice * adaPriceUsd,\n          valueAda: nft.adaValue,\n          valueUsd: nft.adaValue * adaPriceUsd,\n        });\n      }\n    }\n\n    return {\n      wallet: walletAddress,\n      assets: processedAssets,\n      totalValueAda: +totalAda.toFixed(4),\n      totalValueUsd: +totalUsd.toFixed(4),\n      lastUpdated: new Date().toISOString(),\n      summary: {\n        totalAssets: processedAssets.length,\n        nfts: processedAssets.filter(a => a.isNft).length,\n        tokens: processedAssets.filter(a => a.isFungibleToken).length,\n        ada: totalAda,\n      },\n    };\n  }\n\n  private async getAssetDetails(assetId: string): Promise {\n    try {\n      const response = await axios.get(`${this.blockfrostTestnetUrl}/assets/${assetId}`, {\n        headers: {\n          project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n        },\n      });\n      return response.data;\n    } catch (err) {\n      console.error(`Error fetching asset details for ${assetId}:`, err.message);\n      return null;\n    }\n  }\n\n  private async getTestnetWalletSummary(walletAddress: string, adaPriceUsd: number): Promise {\n    try {\n      await axios.get(`${this.blockfrostTestnetUrl}addresses/${walletAddress}`, {\n        headers: {\n          project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n        },\n      });\n    } catch (err) {\n      this.logger.log('Error ', err);\n      return {\n        wallet: '',\n        assets: [],\n        totalValueAda: 0,\n        totalValueUsd: 0,\n        lastUpdated: '',\n        summary: {\n          totalAssets: 0,\n          nfts: 0,\n          tokens: 0,\n          ada: 0,\n        },\n      };\n    }\n    try {\n      // Get all assets in the wallet\n      const assetsResponse = await axios.get(`${this.blockfrostTestnetUrl}addresses/${walletAddress}/total`, {\n        headers: {\n          project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n        },\n      });\n\n      const processedAssets: AssetValueDto[] = [];\n\n      // Calculate actual balances from received_sum and sent_sum\n      const balances = new Map();\n\n      // Process received amounts\n      assetsResponse.data.received_sum.forEach(asset => {\n        balances.set(asset.unit, Number(asset.quantity));\n      });\n\n      // Subtract sent amounts\n      assetsResponse.data.sent_sum.forEach(asset => {\n        const currentBalance = balances.get(asset.unit) || 0;\n        balances.set(asset.unit, currentBalance - Number(asset.quantity));\n      });\n\n      // Process ADA amount\n      const totalAda = (balances.get('lovelace') || 0) / 1000000; // Convert lovelace to ADA\n      const totalUsd = totalAda * adaPriceUsd;\n\n      // Get detailed asset list for non-zero balances\n      const nonAdaAssets = Array.from(balances.entries())\n        .filter(([unit, balance]) => unit !== 'lovelace' && balance > 0)\n        .map(([unit, balance]) => ({ unit, quantity: balance }));\n\n      // Get asset details in batches to avoid rate limits\n      const batchSize = 10;\n      for (let i = 0; i  {\n          try {\n            // Get asset details\n            const assetDetails = await axios.get(`${this.blockfrostTestnetUrl}assets/${asset.unit}`, {\n              headers: {\n                project_id: process.env.BLOCKFROST_TESTNET_API_KEY,\n              },\n            });\n\n            return {\n              asset,\n              details: assetDetails.data,\n            };\n          } catch (error) {\n            console.error(`Error fetching details for asset ${asset.unit}:`, error.message);\n            return null;\n          }\n        });\n\n        const batchResults = await Promise.all(batchPromises);\n\n        // Process batch results\n        for (const result of batchResults) {\n          if (!result) continue;\n          const { asset, details } = result;\n          const isNft = Number(asset.quantity) === 1;\n          const metadata = details.onchain_metadata || details.metadata || {};\n\n          let assetName = asset.unit;\n          try {\n            if (details.asset_name) {\n              assetName = Buffer.from(details.asset_name, 'hex').toString('utf8');\n            }\n          } catch (error) {\n            console.warn(`Could not decode asset name for ${asset.unit}`);\n          }\n\n          processedAssets.push({\n            tokenId: asset.unit,\n            name: assetName,\n            displayName: metadata.name || undefined,\n            ticker: details.ticker || undefined,\n            quantity: Number(asset.quantity),\n            isNft,\n            isFungibleToken: !isNft,\n            priceAda: 0,\n            priceUsd: 0,\n            valueAda: 0,\n            valueUsd: 0,\n            metadata: {\n              policyId: details.policy_id,\n              fingerprint: details.fingerprint,\n              decimals: details.decimals || 0,\n              description: metadata.description,\n              image: metadata.image,\n              mediaType: metadata.mediaType,\n              files: details.onchain_metadata?.files || [],\n              attributes: metadata.attributes || {},\n              assetName: details.asset_name,\n              mintTx: details.initial_mint_tx_hash,\n              mintQuantity: details.quantity,\n              onchainMetadata: details.onchain_metadata || {},\n            },\n          });\n        }\n      }\n\n      const summary: WalletSummaryDto = {\n        wallet: walletAddress,\n        assets: processedAssets,\n        totalValueAda: +totalAda.toFixed(4),\n        totalValueUsd: +totalUsd.toFixed(4),\n        lastUpdated: new Date().toISOString(),\n        summary: {\n          totalAssets: processedAssets.length,\n          nfts: processedAssets.filter(a => a.isNft).length,\n          tokens: processedAssets.filter(a => a.isFungibleToken).length,\n          ada: totalAda,\n        },\n      };\n\n      return summary;\n    } catch (err) {\n      console.error('Error fetching testnet wallet summary:', err.message);\n      if (axios.isAxiosError(err)) {\n        throw new HttpException(\n          err.response?.data?.message || 'Failed to fetch testnet wallet assets',\n          err.response?.status || 500\n        );\n      }\n      throw new HttpException('Failed to fetch or process testnet wallet assets', 500);\n    }\n  }\n\n  /**\n   * Get the value of an asset in ADA and USD\n   * @param policyId The policy ID of the asset\n   * @param assetName The asset name (hex encoded)\n   * @returns Promise with the asset value in ADA and USD\n   */\n  async getAssetValue(policyId: string, assetName: string): Promise {\n    const cacheKey = `asset_value_${policyId}_${assetName}`;\n    const cached = this.cache.get(cacheKey);\n\n    if (cached) return cached;\n\n    try {\n      const response = await axios.get(`${this.baseUrl}/token/price`, {\n        headers: {\n          'x-api-key': this.taptoolsApiKey,\n        },\n        params: {\n          policy: policyId,\n          name: assetName,\n          currency: 'usd,ada',\n        },\n      });\n\n      if (!response.data?.data) {\n        throw new Error('Invalid response from TapTools API');\n      }\n\n      const result = {\n        priceAda: Number(response.data.data.ada) || 91,\n        priceUsd: Number(response.data.data.usd) || 123,\n      };\n\n      this.cache.set(cacheKey, result);\n      return result;\n    } catch (error) {\n      console.error(`Error fetching asset value for ${policyId}.${assetName}:`, error.message);\n      // Return zero values if the asset is not found or there's an error\n      return { priceAda: 91, priceUsd: 123 };\n    }\n  }\n\n  /**\n   * Calculate the total value of all assets in a vault\n   * @param vaultId The ID of the vault\n   * @param phase The phase to filter assets by - 'contribute' for contributed assets, 'acquire' for invested assets\n   * @returns Promise with the vault assets summary\n   */\n  async calculateVaultAssetsValue(\n    vaultId: string,\n    phase: 'contribute' | 'acquire' = 'contribute'\n  ): Promise {\n    // Get the vault to verify it exists\n    const vault = await this.vaultRepository.findOne({\n      where: { id: vaultId },\n      relations: ['assets'],\n    });\n\n    if (!vault) {\n      throw new NotFoundException(`Vault with ID ${vaultId} not found`);\n    }\n\n    // Group assets by policyId and assetId to handle quantities\n    const assetMap = new Map;\n      }\n    >();\n\n    // Process each asset in the vault\n    for (const asset of vault.assets) {\n      // Skip assets that are not in a valid status for valuation or don't match the phase\n      if (asset.status !== AssetStatus.PENDING && asset.status !== AssetStatus.LOCKED) {\n        continue;\n      }\n\n      // Filter assets based on phase\n      if (\n        (phase === 'contribute' && asset.origin_type !== AssetOriginType.CONTRIBUTED) ||\n        (phase === 'acquire' && asset.origin_type !== AssetOriginType.ACQUIRED)\n      ) {\n        continue;\n      }\n\n      const key = `${asset.policy_id}_${asset.asset_id}`;\n      const existingAsset = assetMap.get(key);\n\n      if (existingAsset) {\n        // Sum quantities for fungible tokens\n        existingAsset.quantity += 1;\n      } else {\n        assetMap.set(key, {\n          policyId: asset.policy_id,\n          assetId: asset.asset_id,\n          quantity: 1,\n          isNft: asset.type === AssetType.NFT,\n          metadata: asset.metadata || {},\n        });\n      }\n    }\n\n    // Convert map to array for processing\n    const assets = Array.from(assetMap.values());\n\n    // Get asset values from TapTools\n    const assetsWithValues = [];\n    let totalValueAda = 0;\n    let totalValueUsd = 0;\n\n    for (const asset of assets) {\n      try {\n        // TODO: Test this\n        if (asset.assetId === 'lovelace') {\n          // Special case for ADA\n\n          const adaPrice = await this.getAdaPrice();\n          const totalAdaValue = asset.quantity * 1e-6; // Convert lovelace to ADA\n\n          assetsWithValues.push({\n            ...asset,\n            assetName: 'ADA',\n            valueAda: totalAdaValue,\n            valueUsd: totalAdaValue * adaPrice,\n          });\n          totalValueAda += totalAdaValue;\n          totalValueUsd += totalAdaValue * adaPrice;\n          continue;\n        }\n        // Get asset value in ADA\n        const assetValue = await this.getAssetValue(asset.policyId, asset.assetId);\n\n        const valueAda = assetValue?.priceAda || 0;\n        const valueUsd = assetValue?.priceUsd || 0;\n\n        // Calculate total value for this asset\n        const totalAssetValueAda = valueAda * asset.quantity;\n        const totalAssetValueUsd = valueUsd * asset.quantity;\n\n        assetsWithValues.push({\n          ...asset,\n          assetName: asset.assetId, // Using assetId as assetName for backward compatibility\n          valueAda: totalAssetValueAda,\n          valueUsd: totalAssetValueUsd,\n        });\n\n        totalValueAda += totalAssetValueAda;\n        totalValueUsd += totalAssetValueUsd;\n      } catch (error) {\n        // Skip assets that can't be valued\n        console.warn(`Could not value asset ${asset.policyId}.${asset.assetId}:`, error.message);\n      }\n    }\n\n    // Create and return the summary\n    const summary: VaultAssetsSummaryDto = {\n      totalValueAda: +totalValueAda.toFixed(6),\n      totalValueUsd: +totalValueUsd.toFixed(2),\n      totalAssets: assetsWithValues.length,\n      nfts: assetsWithValues.filter(a => a.isNft).length,\n      tokens: assetsWithValues.filter(a => !a.isNft).length,\n      lastUpdated: new Date().toISOString(),\n      assets: assetsWithValues.map(asset => ({\n        policyId: asset.policyId,\n        assetName: asset.assetId, // Using assetId as assetName for backward compatibility\n        quantity: asset.quantity,\n        valueAda: asset.valueAda,\n        valueUsd: asset.valueUsd,\n        isNft: asset.isNft,\n        metadata: asset.metadata,\n      })),\n    };\n\n    return summary;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenInfo.html":{"url":"classes/TokenInfo.html","title":"class - TokenInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/dto/create-pool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                assetName\n                            \n                            \n                                    \n                                    \n                                policyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Amount of the token'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        assetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Asset name of the token'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        policyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Policy ID of the token'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/dto/create-pool.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsOptional, IsBoolean, IsObject } from 'class-validator';\n\nexport class TokenInfo {\n  @ApiProperty({ description: 'Policy ID of the token' })\n  @IsString()\n  policyId: string;\n\n  @ApiProperty({ description: 'Asset name of the token' })\n  @IsString()\n  assetName: string;\n\n  @ApiProperty({ description: 'Amount of the token' })\n  @IsNumber()\n  amount: number;\n}\n\nexport class CreatePoolDto {\n  @ApiProperty({ description: 'Network ID (1 for mainnet, 0 for testnet)' })\n  @IsNumber()\n  networkId: number;\n\n  @ApiProperty({ description: 'Token A information' })\n  @IsObject()\n  tokenA: TokenInfo;\n\n  @ApiProperty({ description: 'Token B information' })\n  @IsObject()\n  tokenB: TokenInfo;\n\n  @ApiProperty({ description: 'Whether to use VyFi v2', required: false, default: true })\n  @IsOptional()\n  @IsBoolean()\n  v2?: boolean;\n\n  @ApiProperty({ description: 'Pool owner address' })\n  @IsString()\n  poolOwnerAddress: string;\n\n  @ApiProperty({ description: 'Pool factory address' })\n  @IsString()\n  poolFactoryAddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Transaction.html":{"url":"entities/Transaction.html","title":"entity - Transaction","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/transaction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    Public\n                                assets\n                            \n                            \n                                    \n                                fee\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                tx_hash\n                            \n                            \n                                    \n                                    Optional\n                                type\n                            \n                            \n                                    \n                                    \n                                utxo_input\n                            \n                            \n                                    \n                                    \n                                utxo_output\n                            \n                            \n                                    \n                                    \n                                utxo_ref\n                            \n                            \n                                    \n                                    \n                                vault\n                            \n                            \n                                    \n                                    \n                                vault_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Asset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@OneToMany(undefined, asset => asset.transaction)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier of the transaction'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'status'})@Column({name: 'status', type: 'enum', enum: TransactionStatus, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tx_hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'txHash'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'type', type: 'enum', enum: TransactionType, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utxo_input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'utxoInput'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utxo_output\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'utxoOutput'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utxo_ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'utxoRef'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vault\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'vault_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vault_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'vault_id', nullable: true})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/transaction.entity.ts:83\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { Column, Entity, JoinColumn, ManyToOne, OneToMany, PrimaryGeneratedColumn, Index } from 'typeorm';\n\nimport { TransactionStatus, TransactionType } from '../types/transaction.types';\n\nimport { Asset } from './asset.entity';\nimport { Vault } from './vault.entity';\n\n@Entity('transactions')\nexport class Transaction {\n  @ApiProperty({ description: 'Unique identifier of the transaction' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Expose({ name: 'utxoInput' })\n  @Column({\n    nullable: true,\n  })\n  utxo_input: string; // sender\n\n  @Expose({ name: 'utxoOutput' })\n  @Column({\n    nullable: true,\n  })\n  utxo_output: string; // receiver\n\n  @Expose({ name: 'utxoRef' })\n  @Column({\n    nullable: true,\n  })\n  utxo_ref: string;\n\n  @Column({\n    name: 'type',\n    type: 'enum',\n    enum: TransactionType,\n    nullable: true,\n  })\n  type?: TransactionType;\n\n  @Column({\n    nullable: true,\n  })\n  amount: number;\n\n  @Column({\n    nullable: true,\n  })\n  fee: number;\n\n  @Expose({ name: 'txHash' })\n  @Column({\n    nullable: true,\n  })\n  tx_hash: string; // 1\n\n  @Expose({ name: 'status' })\n  @Column({\n    name: 'status',\n    type: 'enum',\n    enum: TransactionStatus,\n    nullable: true,\n  })\n  status?: TransactionStatus; //\n\n  @Column({\n    type: 'jsonb',\n    nullable: true,\n  })\n  metadata?: Record;\n\n  @Exclude()\n  @OneToMany(() => Asset, (asset: Asset) => asset.transaction)\n  public assets: Asset[];\n\n  @ManyToOne(() => Vault)\n  @JoinColumn({ name: 'vault_id' })\n  vault: Vault;\n\n  @Column({ name: 'vault_id', nullable: true })\n  @Index()\n  vault_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionBuildResponse.html":{"url":"interfaces/TransactionBuildResponse.html","title":"interface - TransactionBuildResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionBuildResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/anvil-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complete\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            stripped\n                                        \n                                \n                                \n                                        \n                                            witnessSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripped\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stripped:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        witnessSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        witnessSet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { NftAsset } from './vault-inserting.service';\n\ninterface AnvilApiConfig> {\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PATCH';\n  body?: T;\n  params?: Record;\n}\n\ninterface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: {\n    address: string;\n    lovelace?: number;\n    assets?: NftAsset[];\n  }[];\n}\n\ninterface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR\n  stripped: string; // CBOR\n  witnessSet: string; // CBOR\n}\n\n@Injectable()\nexport class AnvilApiService {\n  private readonly baseUrl: string;\n  private readonly apiKey: string;\n\n  constructor(private readonly configService: ConfigService) {\n    this.baseUrl = this.configService.get('ANVIL_API_URL');\n    this.apiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  async get(endpoint: string, { params }: { params?: Record } = {}): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'GET',\n      params,\n    });\n  }\n\n  async post(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'POST',\n      body,\n    });\n  }\n\n  async patch(endpoint: string, body: B): Promise {\n    return this.callAnvilApi({\n      endpoint,\n      method: 'PATCH',\n      body,\n    });\n  }\n\n  private async callAnvilApi>({\n    endpoint,\n    method = 'POST',\n    body,\n    params,\n  }: AnvilApiConfig): Promise {\n    if (!this.baseUrl) {\n      throw new Error('Anvil API base URL is not configured');\n    }\n\n    if (!this.apiKey) {\n      throw new Error('API key is required for Anvil API');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': this.apiKey,\n    };\n\n    try {\n      const url = new URL(`${this.baseUrl}/${endpoint}`);\n      if (params) {\n        Object.entries(params).forEach(([key, value]) => {\n          url.searchParams.append(key, value);\n        });\n      }\n\n      // console.log('Base url ', this.baseUrl);\n      // console.log('Method ', method);\n      // console.log('Headers ', headers);\n      // console.log('body ', JSON.stringify(body, null, 2) );\n      // console.log('endpoint ', endpoint);\n\n      const response = await fetch(url.toString(), {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        throw new Error(`Anvil API Error (${response.status}): ${errorData.message || 'Unknown error'}`);\n      }\n\n      return (await response.json()) as T;\n    } catch (error) {\n      console.error('Anvil API request failed:', error);\n      throw error;\n    }\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    const metadata = {\n      txId: params.txId,\n    };\n\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/build',\n      body: {\n        ...params,\n        metadata,\n      },\n    });\n  }\n\n  async submitTransaction(params: {\n    transaction: string; // CBOR\n    signatures?: string[]; // CBOR\n  }): Promise {\n    return this.callAnvilApi({\n      endpoint: 'services/transactions/submit',\n      body: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionBuildResponse-1.html":{"url":"interfaces/TransactionBuildResponse-1.html","title":"interface - TransactionBuildResponse-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionBuildResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complete\n                                        \n                                \n                                \n                                        \n                                            partial\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partial:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nexport enum OnchainTransactionStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  FAILED = 'failed',\n  NOT_FOUND = 'not_found',\n}\n\nexport interface TransactionBuildResponse {\n  complete: string;\n  partial: string;\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class BlockchainService {\n  private readonly logger = new Logger(BlockchainService.name);\n  private readonly anvilApi: string;\n  private readonly anvilApiKey: string;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService\n  ) {\n    this.anvilApi = this.configService.get('ANVIL_API_URL') + '/services';\n    this.anvilApiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  /**\n   * Builds a transaction using Anvil API\n   * @param txData Transaction data to be built\n   * @returns Object containing complete and partial transaction CBOR\n   */\n  async buildTransaction(txData: any): Promise {\n    try {\n      const headers = {\n        'x-api-key': this.anvilApiKey,\n        'Content-Type': 'application/json',\n      };\n\n      // Build the transaction\n      const contractDeployed = await fetch(`${this.anvilApi}/transactions/build`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(txData),\n      });\n\n      const buildResponse = await contractDeployed.json();\n\n      console.log('error', buildResponse);\n\n      if (!buildResponse.complete) {\n        throw new Error('Failed to build complete transaction' + JSON.stringify(buildResponse));\n      }\n\n      return buildResponse;\n    } catch (error) {\n      this.logger.error('Error building transaction', error);\n      throw new Error(`Failed to build transaction: ${error.message}`);\n    }\n  }\n\n  /**\n   * Submits a signed transaction to the blockchain\n   * @param signedTx Signed transaction data\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: {\n    transaction: string;\n    signatures?: string[];\n  }): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.httpService.post(\n          `${this.anvilApi}/transactions/submit`,\n          {\n            transaction: signedTx.transaction,\n            signatures: signedTx.signatures || [],\n          },\n          {\n            headers: {\n              'x-api-key': this.anvilApiKey,\n              'Content-Type': 'application/json',\n            },\n          }\n        )\n      );\n\n      if (!response.data.txHash) {\n        throw new Error('No transaction hash returned from blockchain');\n      }\n\n      this.logger.log(`Transaction submitted successfully: ${response.data.txHash}`);\n      return { txHash: response.data.txHash };\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionBuildResponse-2.html":{"url":"interfaces/TransactionBuildResponse-2.html","title":"interface - TransactionBuildResponse-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionBuildResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complete\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            stripped\n                                        \n                                \n                                \n                                        \n                                            witnessSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripped\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stripped:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        witnessSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        witnessSet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionBuildResponseDto.html":{"url":"classes/TransactionBuildResponseDto.html","title":"class - TransactionBuildResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionBuildResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                complete\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                hash\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                stripped\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                witnessSet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        complete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded complete transaction', example: '83a400...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash', example: '1234abcd...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        stripped\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded stripped transaction', example: '83a400...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        witnessSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'CBOR encoded witness set', example: '83a400...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:176\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionModelFix1743089378621.html":{"url":"classes/TransactionModelFix1743089378621.html","title":"class - TransactionModelFix1743089378621","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionModelFix1743089378621\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1743089378621-transactionModelFix.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TransactionModelFix1743089378621'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1743089378621-transactionModelFix.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743089378621-transactionModelFix.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1743089378621-transactionModelFix.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class TransactionModelFix1743089378621 implements MigrationInterface {\n  name = 'TransactionModelFix1743089378621';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_type_enum\" AS ENUM('mint', 'payment', 'contribute', 'burn', 'swap', 'stake')`\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"transactions_status_enum\" AS ENUM('created', 'pending', 'submitted', 'confirmed', 'failed', 'manual-review')`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"transactions\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"sender\" character varying NOT NULL, \"receiver\" character varying NOT NULL, \"type\" \"public\".\"transactions_type_enum\", \"fee\" integer NOT NULL, \"tx_hash\" character varying NOT NULL, \"block\" integer NOT NULL, \"status\" \"public\".\"transactions_status_enum\", \"metadata\" jsonb, CONSTRAINT \"PK_a219afd8dd77ed80f5a862f1db9\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_type_enum\" RENAME TO \"vaults_type_enum_old\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_type_enum\" AS ENUM('single', 'multi', 'ctn', 'cnt')`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"type\" TYPE \"public\".\"vaults_type_enum\" USING \"type\"::\"text\"::\"public\".\"vaults_type_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_type_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"vaults_type_enum_old\" AS ENUM('single', 'multi', 'ctn')`);\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"type\" TYPE \"public\".\"vaults_type_enum_old\" USING \"type\"::\"text\"::\"public\".\"vaults_type_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_type_enum_old\" RENAME TO \"vaults_type_enum\"`);\n    await queryRunner.query(`DROP TABLE \"transactions\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"transactions_type_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionOutput.html":{"url":"classes/TransactionOutput.html","title":"class - TransactionOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                assets\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                lovelace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Destination address', example: 'addr1qy2k4r9...'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NftAsset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'NFT assets to send (can be combined with lovelace)', type: undefined, required: false, example: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        lovelace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Amount in lovelace (can be combined with NFT assets)', example: 1000000, required: false, type: Number})@IsOptional()@IsNumber()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionSubmitResponse.html":{"url":"interfaces/TransactionSubmitResponse.html","title":"interface - TransactionSubmitResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionSubmitResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            txHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nexport enum OnchainTransactionStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  FAILED = 'failed',\n  NOT_FOUND = 'not_found',\n}\n\nexport interface TransactionBuildResponse {\n  complete: string;\n  partial: string;\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class BlockchainService {\n  private readonly logger = new Logger(BlockchainService.name);\n  private readonly anvilApi: string;\n  private readonly anvilApiKey: string;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService\n  ) {\n    this.anvilApi = this.configService.get('ANVIL_API_URL') + '/services';\n    this.anvilApiKey = this.configService.get('ANVIL_API_KEY');\n  }\n\n  /**\n   * Builds a transaction using Anvil API\n   * @param txData Transaction data to be built\n   * @returns Object containing complete and partial transaction CBOR\n   */\n  async buildTransaction(txData: any): Promise {\n    try {\n      const headers = {\n        'x-api-key': this.anvilApiKey,\n        'Content-Type': 'application/json',\n      };\n\n      // Build the transaction\n      const contractDeployed = await fetch(`${this.anvilApi}/transactions/build`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(txData),\n      });\n\n      const buildResponse = await contractDeployed.json();\n\n      console.log('error', buildResponse);\n\n      if (!buildResponse.complete) {\n        throw new Error('Failed to build complete transaction' + JSON.stringify(buildResponse));\n      }\n\n      return buildResponse;\n    } catch (error) {\n      this.logger.error('Error building transaction', error);\n      throw new Error(`Failed to build transaction: ${error.message}`);\n    }\n  }\n\n  /**\n   * Submits a signed transaction to the blockchain\n   * @param signedTx Signed transaction data\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: {\n    transaction: string;\n    signatures?: string[];\n  }): Promise {\n    try {\n      const response = await firstValueFrom(\n        this.httpService.post(\n          `${this.anvilApi}/transactions/submit`,\n          {\n            transaction: signedTx.transaction,\n            signatures: signedTx.signatures || [],\n          },\n          {\n            headers: {\n              'x-api-key': this.anvilApiKey,\n              'Content-Type': 'application/json',\n            },\n          }\n        )\n      );\n\n      if (!response.data.txHash) {\n        throw new Error('No transaction hash returned from blockchain');\n      }\n\n      this.logger.log(`Transaction submitted successfully: ${response.data.txHash}`);\n      return { txHash: response.data.txHash };\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionSubmitResponse-1.html":{"url":"interfaces/TransactionSubmitResponse-1.html","title":"interface - TransactionSubmitResponse-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransactionSubmitResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            txHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionSubmitResponseDto.html":{"url":"classes/TransactionSubmitResponseDto.html","title":"class - TransactionSubmitResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionSubmitResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                txHash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Transaction hash', example: '1234abcd...'})@Expose({name: 'txHash'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/dto/transaction.dto.ts:185\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose, Type } from 'class-transformer';\nimport { IsString, IsArray, IsNumber, IsOptional, ValidateNested, IsUUID, IsNotEmpty } from 'class-validator';\n\nexport class NftAsset {\n  @ApiProperty({\n    description: 'Policy ID of the NFT',\n    example: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n  })\n  @IsString()\n  @Expose()\n  readonly policyId: string;\n\n  @ApiProperty({\n    description: 'Asset name',\n    example: 'l4vaaudiEngine',\n  })\n  @IsString()\n  @Expose()\n  readonly assetName: string;\n\n  @ApiProperty({\n    description: 'Quantity of the asset',\n    example: 1,\n  })\n  @IsNumber()\n  @Expose()\n  readonly quantity: number;\n}\n\nexport class TransactionOutput {\n  @ApiProperty({\n    description: 'Destination address',\n    example: 'addr1qy2k4r9...',\n  })\n  @Expose()\n  readonly address?: string;\n\n  @ApiProperty({\n    description: 'Amount in lovelace (can be combined with NFT assets)',\n    example: 1000000,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Expose()\n  readonly lovelace?: number;\n\n  @ApiProperty({\n    description: 'NFT assets to send (can be combined with lovelace)',\n    type: [NftAsset],\n    required: false,\n    example: [\n      {\n        policyId: '47642adf3fb7154f0880b916bc341aafa0fcdf1d49f67eac856987a2',\n        assetName: 'l4vaaudiEngine',\n        quantity: 1,\n      },\n    ],\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => NftAsset)\n  @Expose()\n  readonly assets?: NftAsset[];\n}\n\nexport class BuildTransactionDto {\n  @ApiProperty({\n    description: 'Address to send change to',\n    example: 'addr1qy2k4r9...',\n  })\n  @IsString()\n  @Expose({ name: 'changeAddress' })\n  readonly changeAddress: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID (UUID)',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsUUID()\n  @Expose({ name: 'txId' })\n  readonly txId: string;\n\n  @ApiProperty({\n    description: 'Transaction outputs',\n    type: [TransactionOutput],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => TransactionOutput)\n  @Expose()\n  readonly outputs: TransactionOutput[];\n}\n\nexport class SubmitTransactionDto {\n  @ApiProperty({\n    description: 'vault id ',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  vaultId: string;\n\n  @ApiProperty({\n    description: 'Outchain transaction ID',\n    example: '83a400...',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Expose()\n  txId: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded transaction',\n    example: '83a400...',\n  })\n  @IsString()\n  @Expose()\n  readonly transaction: string;\n\n  @ApiProperty({\n    description: 'Array of CBOR encoded signatures',\n    example: ['84a400...'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @Expose()\n  readonly signatures?: string[];\n}\n\nexport class SubmitVaultTxDto extends SubmitTransactionDto {\n  @ApiProperty({\n    description: 'Vault id',\n    example: ['84a400...'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  vaultId: string;\n}\n\nexport class TransactionBuildResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose()\n  readonly hash: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded complete transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly complete: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded stripped transaction',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly stripped: string;\n\n  @ApiProperty({\n    description: 'CBOR encoded witness set',\n    example: '83a400...',\n  })\n  @Expose()\n  readonly witnessSet: string;\n}\n\nexport class TransactionSubmitResponseDto {\n  @ApiProperty({\n    description: 'Transaction hash',\n    example: '1234abcd...',\n  })\n  @Expose({ name: 'txHash' })\n  readonly txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionsController.html":{"url":"controllers/TransactionsController.html","title":"controller - TransactionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transactions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getReceivedTransactions\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getSentTransactions\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getReceivedTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReceivedTransactions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('received')@ApiOperation({summary: 'Get transactions received by the authenticated user'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getSentTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSentTransactions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sent')@ApiOperation({summary: 'Get transactions sent by the authenticated user'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransaction(txHash: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':txHash')@ApiOperation({summary: 'Get transaction details by transaction hash'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\n\nimport { AuthGuard } from '../../../auth/auth.guard';\n\nimport { TransactionsService } from './transactions.service';\n\n@ApiTags('Transactions')\n@Controller('transactions')\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class TransactionsController {\n  constructor(private readonly transactionsService: TransactionsService) {}\n\n  @Get('sent')\n  @ApiOperation({ summary: 'Get transactions sent by the authenticated user' })\n  async getSentTransactions() {\n    // return this.transactionsService.getTransactionsBySender(address);\n    return null;\n  }\n\n  @Get('received')\n  @ApiOperation({ summary: 'Get transactions received by the authenticated user' })\n  async getReceivedTransactions() {\n    // return this.transactionsService.getTransactionsByReceiver(address);\n    return null;\n  }\n\n  @Get(':txHash')\n  @ApiOperation({ summary: 'Get transaction details by transaction hash' })\n  async getTransaction(@Param('txHash') txHash: string) {\n    //return this.transactionsService.getTransaction(txHash);\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionsModule.html":{"url":"modules/TransactionsModule.html","title":"module - TransactionsModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_TransactionsModule_exports\n\n\n\n\nTransactionsService \n\nTransactionsService \n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/transactions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TransactionsController } from './transactions.controller';\nimport { TransactionsService } from './transactions.service';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Transaction, Asset, Vault])],\n  providers: [TransactionsService],\n  controllers: [TransactionsController],\n  exports: [TransactionsService],\n})\nexport class TransactionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionsService.html":{"url":"injectables/TransactionsService.html","title":"injectable - TransactionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransaction\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getAcquireTransactions\n                            \n                            \n                                    Async\n                                getContributionTransactions\n                            \n                            \n                                    Async\n                                getLastVaultUpdate\n                            \n                            \n                                    Async\n                                getTransaction\n                            \n                            \n                                    Async\n                                getTransactionsByReceiver\n                            \n                            \n                                    Async\n                                getTransactionsBySender\n                            \n                            \n                                    Async\n                                getTransactionsByStatus\n                            \n                            \n                                    Async\n                                getVaultTransactions\n                            \n                            \n                                    Async\n                                updateTransactionHash\n                            \n                            \n                                    Async\n                                updateTransactionStatus\n                            \n                            \n                                    Async\n                                validateTransactionExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionRepository: Repository, vaultRepository: Repository, assetRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaultRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTransaction(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAcquireTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAcquireTransactions(vaultId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getContributionTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContributionTransactions(vaultId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLastVaultUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastVaultUpdate(vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:182\n                        \n                    \n\n\n            \n                \n                        Get the last update transaction for a vault\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the vault\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The most recent update transaction or null if none found\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransaction(txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionsByReceiver\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionsByReceiver(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionsBySender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionsBySender(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTransactionsByStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransactionsByStatus(status: TransactionStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            TransactionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getVaultTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultTransactions(vaultId: string, status?: TransactionStatus, type?: TransactionType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            TransactionStatus\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            TransactionType\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionHash(id: string, txHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTransactionStatus(txHash: string, status: TransactionStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            TransactionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateTransactionExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateTransactionExists(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/offchain-tx/transactions.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AssetStatus } from 'src/types/asset.types';\nimport { TransactionStatus, TransactionType } from 'src/types/transaction.types';\nimport { Repository } from 'typeorm';\n\nimport { Asset } from '@/database/asset.entity';\nimport { Transaction } from '@/database/transaction.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Injectable()\nexport class TransactionsService {\n  constructor(\n    @InjectRepository(Transaction)\n    private readonly transactionRepository: Repository,\n    @InjectRepository(Vault)\n    private readonly vaultRepository: Repository,\n    @InjectRepository(Asset)\n    private readonly assetRepository: Repository\n  ) {}\n\n  async createTransaction(data: {\n    vault_id: string;\n    type: TransactionType;\n    assets: Asset[];\n    amount?: number;\n  }): Promise {\n    return this.transactionRepository.save({\n      vault_id: data.vault_id,\n      type: data.type,\n      status: TransactionStatus.created,\n      assets: data.assets,\n      amount: data.amount,\n    });\n  }\n\n  async updateTransactionStatus(txHash: string, status: TransactionStatus): Promise {\n    const transaction = await this.transactionRepository.findOne({\n      where: { tx_hash: txHash },\n    });\n\n    if (!transaction) {\n      throw new Error(`Transaction with hash ${txHash} not found`);\n    }\n\n    const vault = await this.vaultRepository.findOne({\n      where: {\n        id: transaction.vault_id,\n      },\n    });\n\n    const assets = await this.assetRepository.findBy({\n      transaction: {\n        id: transaction.id,\n      },\n    });\n\n    assets.map(async item => {\n      const asset = await this.assetRepository.findOne({\n        where: {\n          id: item.id,\n        },\n      });\n      asset.vault = vault;\n      asset.status = AssetStatus.LOCKED;\n      await this.assetRepository.save(asset);\n    });\n\n    transaction.status = status;\n\n    return this.transactionRepository.save(transaction);\n  }\n\n  async getTransactionsBySender(address: string): Promise {\n    return this.transactionRepository.find({\n      where: { utxo_input: address },\n      order: { id: 'DESC' },\n    });\n  }\n\n  async validateTransactionExists(id: string): Promise {\n    const transaction = await this.transactionRepository.findOne({\n      where: { id },\n    });\n\n    if (!transaction) {\n      throw new NotFoundException(`Outchain transaction with ID ${id} not found`);\n    }\n\n    return transaction;\n  }\n\n  async getTransactionsByStatus(status: TransactionStatus): Promise {\n    return this.transactionRepository.find({\n      where: { status },\n      order: { id: 'DESC' },\n      relations: ['vault'],\n    });\n  }\n\n  async getTransactionsByReceiver(address: string): Promise {\n    return this.transactionRepository.find({\n      where: { utxo_output: address },\n      order: { id: 'DESC' },\n    });\n  }\n\n  async findById(id: string): Promise {\n    return this.transactionRepository.findOne({\n      where: { id },\n    });\n  }\n\n  async updateTransactionHash(id: string, txHash: string): Promise {\n    const transaction = await this.findById(id);\n    if (!transaction) {\n      throw new Error(`Transaction with id ${id} not found`);\n    }\n\n    transaction.tx_hash = txHash;\n    transaction.status = TransactionStatus.pending;\n    return await this.transactionRepository.save(transaction);\n  }\n\n  async getTransaction(txHash: string): Promise {\n    return this.transactionRepository.findOne({\n      where: { tx_hash: txHash },\n    });\n  }\n\n  async getContributionTransactions(vaultId?: string): Promise {\n    const where: any = { type: TransactionType.contribute };\n    if (vaultId) {\n      where.vault_id = vaultId;\n    }\n\n    return this.transactionRepository.find({\n      where,\n      order: { id: 'DESC' },\n      relations: ['assets'],\n    });\n  }\n\n  async getAcquireTransactions(vaultId?: string): Promise {\n    const where: any = { type: TransactionType.acquire };\n    if (vaultId) {\n      where.vault_id = vaultId;\n    }\n\n    return this.transactionRepository.find({\n      where,\n      order: { id: 'DESC' },\n      relations: ['vault'],\n    });\n  }\n\n  async getVaultTransactions(\n    vaultId: string,\n    status?: TransactionStatus,\n    type?: TransactionType\n  ): Promise {\n    const where: any = { vault_id: vaultId };\n    if (status) {\n      where.status = status;\n    }\n    if (type) {\n      where.type = type;\n    }\n\n    return this.transactionRepository.find({\n      where,\n      order: { id: 'DESC' },\n      relations: ['vault', 'assets'],\n    });\n  }\n\n  /**\n   * Get the last update transaction for a vault\n   * @param vaultId The ID of the vault\n   * @returns The most recent update transaction or null if none found\n   */\n  async getLastVaultUpdate(vaultId: string): Promise {\n    const transactions = await this.transactionRepository.find({\n      where: {\n        vault_id: vaultId,\n      },\n      order: { id: 'DESC' },\n      take: 1,\n    });\n\n    return transactions.length > 0 ? transactions[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TxUpdateReq.html":{"url":"classes/TxUpdateReq.html","title":"class - TxUpdateReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TxUpdateReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/contribution/dto/txUpdate.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                txHash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/contribution/dto/txUpdate.req.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class TxUpdateReq {\n  @IsNotEmpty()\n  @Expose()\n  txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFieldsType1741946649594.html":{"url":"classes/UpdateFieldsType1741946649594.html","title":"class - UpdateFieldsType1741946649594","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFieldsType1741946649594\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1741946649594-updateFieldsType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateFieldsType1741946649594'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1741946649594-updateFieldsType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741946649594-updateFieldsType.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1741946649594-updateFieldsType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateFieldsType1741946649594 implements MigrationInterface {\n  name = 'UpdateFieldsType1741946649594';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" interval`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" interval`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"time_elapsed_is_equal_to_time\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"time_elapsed_is_equal_to_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"investment_window_duration\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"investment_window_duration\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                bannerImage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profileImage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                socialLinks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                totalVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tvl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        bannerImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image file URL (format: image/)', example: 'image/banner-123.jpg', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User profile description/bio', example: 'Experienced crypto investor and NFT collector', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User display name', example: 'John Doe', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Profile image file URL (format: image/)', example: 'image/profile-123.jpg', required: false})@IsString()@IsOptional()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        socialLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialLink[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of social media links', type: undefined, required: false})@IsArray()@IsOptional()@IsObject({each: true})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        totalVaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total number of vaults owned by user', example: 5, required: false})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total Value Locked in user vaults', example: 1000000, required: false})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/update-profile.dto.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsString, IsOptional, IsArray, IsNumber, IsObject } from 'class-validator';\nimport { SocialLink } from '@/modules/vaults/types';\n\nexport class SocialLinkDto {\n  @ApiProperty({\n    description: 'Name of the social platform',\n    example: 'twitter',\n  })\n  @IsString()\n  @Expose()\n  name: string;\n\n  @ApiProperty({\n    description: 'URL to the social profile',\n    example: 'https://twitter.com/username',\n  })\n  @IsString()\n  @Expose()\n  url: string;\n}\n\nexport class UpdateProfileDto {\n  @ApiProperty({\n    description: 'User display name',\n    example: 'John Doe',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  name?: string;\n\n  @ApiProperty({\n    description: 'User profile description/bio',\n    example: 'Experienced crypto investor and NFT collector',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  description?: string;\n\n  @ApiProperty({\n    description: 'Profile image file URL (format: image/)',\n    example: 'image/profile-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  profileImage?: string;\n\n  @ApiProperty({\n    description: 'Banner image file URL (format: image/)',\n    example: 'image/banner-123.jpg',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @Expose()\n  bannerImage?: string;\n\n  @ApiProperty({\n    description: 'Total Value Locked in user vaults',\n    example: 1000000,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  tvl?: number;\n\n  @ApiProperty({\n    description: 'Total number of vaults owned by user',\n    example: 5,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  totalVaults?: number;\n\n  @ApiProperty({\n    description: 'List of social media links',\n    type: [SocialLinkDto],\n    required: false,\n  })\n  @IsArray()\n  @IsOptional()\n  @IsObject({ each: true })\n  @Expose()\n  socialLinks: SocialLink[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRelationto1742209228422.html":{"url":"classes/UpdateRelationto1742209228422.html","title":"class - UpdateRelationto1742209228422","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRelationto1742209228422\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742209228422-updateRelationto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateRelationto1742209228422'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742209228422-updateRelationto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742209228422-updateRelationto.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742209228422-updateRelationto.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateRelationto1742209228422 implements MigrationInterface {\n  name = 'UpdateRelationto1742209228422';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"asset_appreciation\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"valuation_currency\" character varying`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"valuation_amount\" numeric`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"vault_appreciation\" numeric`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"vault_appreciation\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"valuation_amount\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" DROP COLUMN \"valuation_currency\"`);\n    await queryRunner.query(`ALTER TABLE \"vaults\" ADD \"asset_appreciation\" numeric`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateType1742819100112.html":{"url":"classes/UpdateType1742819100112.html","title":"class - UpdateType1742819100112","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateType1742819100112\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1742819100112-UpdateType.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateType1742819100112'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1742819100112-UpdateType.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742819100112-UpdateType.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1742819100112-UpdateType.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateType1742819100112 implements MigrationInterface {\n  name = 'UpdateType1742819100112';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTypes1746532933340.html":{"url":"classes/UpdateTypes1746532933340.html","title":"class - UpdateTypes1746532933340","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTypes1746532933340\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1746532933340-updateTypes.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UpdateTypes1746532933340'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1746532933340-updateTypes.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746532933340-updateTypes.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1746532933340-updateTypes.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UpdateTypes1746532933340 implements MigrationInterface {\n  name = 'UpdateTypes1746532933340';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`ALTER TABLE investors_whitelist RENAME TO acquirer_whitelist;`);\n    await queryRunner.query(\n      `ALTER TABLE \"acquirer_whitelist\" ADD CONSTRAINT \"FK_cba6b5306e74553edd3b94a000a\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(`ALTER TABLE acquirer_whitelist RENAME TO investors_whitelist;`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadImageDto.html":{"url":"classes/UploadImageDto.html","title":"class - UploadImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/upload-image.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Express.Multer.File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', description: 'Image file to upload'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/upload-image.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UploadImageDto {\n  @ApiProperty({\n    type: 'string',\n    format: 'binary',\n    description: 'Image file to upload',\n  })\n  file: Express.Multer.File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                banner_image\n                            \n                            \n                                    \n                                    \n                                claims\n                            \n                            \n                                    \n                                    \n                                created_at\n                            \n                            \n                                    \n                                deleted\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                gains\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                profile_image\n                            \n                            \n                                    \n                                    \n                                social_links\n                            \n                            \n                                    \n                                    \n                                stake_address\n                            \n                            \n                                    \n                                    \n                                total_vaults\n                            \n                            \n                                    \n                                    \n                                tvl\n                            \n                            \n                                    \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Public\n                                vaults\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'address'})@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        banner_image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'bannerImage'})@OneToOne(undefined)@JoinColumn({name: 'banner_image_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        claims\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Claim[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@OneToMany(undefined, claim => claim.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'createdAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'deleted', type: 'boolean', nullable: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'description'})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gains\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'gains'})@Column({type: 'decimal', precision: 10, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'id'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'name'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        profile_image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'profileImage'})@OneToOne(undefined)@JoinColumn({name: 'profile_image_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        social_links\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinkEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'socialLinks'})@OneToMany(undefined, link => link.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stake_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'stakeAddress'})@Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_vaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'totalVaults'})@Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'tvl'})@Column({type: 'decimal', precision: 20, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose({name: 'updatedAt'})@Column({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        vaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vault[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@OneToMany(undefined, vault => vault.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n  OneToOne,\n  BeforeInsert,\n  BeforeUpdate,\n  JoinColumn,\n} from 'typeorm';\n\nimport { Claim } from './claim.entity';\nimport { FileEntity } from './file.entity';\nimport { LinkEntity } from './link.entity';\nimport { Vault } from './vault.entity';\n\n@Entity('users')\nexport class User {\n  @Expose({ name: 'id' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Exclude()\n  @OneToMany(() => Vault, (vault: Vault) => vault.owner)\n  public vaults: Vault[];\n\n  @Expose()\n  @OneToMany(() => Claim, (claim: Claim) => claim.user)\n  claims: Claim[];\n\n  @Expose({ name: 'name' })\n  @Column()\n  name: string;\n\n  @Expose({ name: 'address' })\n  @Column({ unique: true })\n  address: string;\n\n  @Expose({ name: 'stakeAddress' })\n  @Column({ unique: true, nullable: true })\n  stake_address: string;\n\n  @Expose({ name: 'description' })\n  @Column({ nullable: true })\n  description: string;\n\n  @Expose({ name: 'profileImage' })\n  @OneToOne(() => FileEntity)\n  @JoinColumn({ name: 'profile_image_id' })\n  profile_image: FileEntity;\n\n  @Expose({ name: 'bannerImage' })\n  @OneToOne(() => FileEntity)\n  @JoinColumn({ name: 'banner_image_id' })\n  banner_image: FileEntity;\n\n  @Expose({ name: 'socialLinks' })\n  @OneToMany(() => LinkEntity, (link: LinkEntity) => link.user)\n  social_links: LinkEntity[];\n\n  @Expose({ name: 'tvl' })\n  @Column({ type: 'decimal', precision: 20, scale: 2, default: 0 })\n  tvl: number;\n\n  @Expose({ name: 'totalVaults' })\n  @Column({ type: 'integer', default: 0 })\n  total_vaults: number;\n\n  @Expose({ name: 'gains' })\n  @Column({ type: 'decimal', precision: 10, scale: 2, default: 0 })\n  gains: number;\n\n  @Column({ name: 'deleted', type: 'boolean', nullable: false, default: false })\n  deleted: boolean;\n\n  @Expose({ name: 'createdAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: string;\n\n  @Expose({ name: 'updatedAt' })\n  @Column({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: string;\n\n  @BeforeInsert()\n  setDate() {\n    this.created_at = new Date().toISOString();\n  }\n\n  @BeforeUpdate()\n  updateDate() {\n    this.updated_at = new Date().toISOString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getPublicProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadBannerImage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadProfileImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get user profile', description: 'Returns the authenticated user's profile information', status: 200})@UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getPublicProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicProfile(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get public user profile', description: 'Returns a user's public profile information by ID (excludes sensitive data)', status: 200})@Get('/profile/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(req, updateData: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Update user profile', description: 'Update the authenticated user's profile information', status: 200})@UseGuards(AuthGuard)@Patch('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadBannerImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadBannerImage(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Upload banner image', description: 'Upload and update user's banner image', status: 200})@ApiConsumes('multipart/form-data')@UseGuards(AuthGuard)@Post('profile/banner')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadProfileImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProfileImage(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Upload profile image', description: 'Upload and update user's profile image', status: 200})@ApiConsumes('multipart/form-data')@UseGuards(AuthGuard)@Post('profile/image')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Patch,\n  Body,\n  Request,\n  UseGuards,\n  Post,\n  UseInterceptors,\n  UploadedFile,\n  Param,\n  ParseFilePipe,\n  MaxFileSizeValidator,\n  FileTypeValidator,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiTags, ApiConsumes } from '@nestjs/swagger';\nimport { Express } from 'express';\n\nimport { ApiDoc } from '../../decorators/api-doc.decorator';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { mbMultiplication } from '../aws_bucket/aws.controller';\n\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { UsersService } from './users.service';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @ApiDoc({\n    summary: 'Get user profile',\n    description: \"Returns the authenticated user's profile information\",\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async getProfile(@Request() req) {\n    const userId = req.user.sub;\n    return this.usersService.getProfile(userId);\n  }\n\n  @ApiDoc({\n    summary: 'Get public user profile',\n    description: \"Returns a user's public profile information by ID (excludes sensitive data)\",\n    status: 200,\n  })\n  @Get('/profile/:id')\n  async getPublicProfile(@Param('id') userId: string) {\n    return this.usersService.getPublicProfile(userId);\n  }\n\n  @ApiDoc({\n    summary: 'Update user profile',\n    description: \"Update the authenticated user's profile information\",\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Patch('profile')\n  async updateProfile(@Request() req, @Body() updateData: UpdateProfileDto) {\n    const userId = req.user.sub;\n    return this.usersService.updateProfile(userId, updateData);\n  }\n\n  @ApiDoc({\n    summary: 'Upload profile image',\n    description: \"Upload and update user's profile image\",\n    status: 200,\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseGuards(AuthGuard)\n  @Post('profile/image')\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadProfileImage(\n    @Request() req,\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }), // 5mb\n          new FileTypeValidator({ fileType: 'image/*' }),\n        ],\n      })\n    )\n    file: Express.Multer.File\n  ) {\n    const userId = req.user.sub;\n    return this.usersService.uploadProfileImage(userId, file, req.get('host'));\n  }\n\n  @ApiDoc({\n    summary: 'Upload banner image',\n    description: \"Upload and update user's banner image\",\n    status: 200,\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseGuards(AuthGuard)\n  @Post('profile/banner')\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadBannerImage(\n    @Request() req,\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 5 * mbMultiplication }), // 5mb\n          new FileTypeValidator({ fileType: 'image/*' }),\n        ],\n      })\n    )\n    file: Express.Multer.File\n  ) {\n    const userId = req.user.sub;\n    return this.usersService.uploadBannerImage(userId, file, req.get('host'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAwsModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AwsModule } from '../aws_bucket/aws.module';\n\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { User } from '@/database/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, FileEntity, LinkEntity]), AwsModule],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByAddress\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                getPublicProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                updateUserAddress\n                            \n                            \n                                    Async\n                                uploadBannerImage\n                            \n                            \n                                    Async\n                                uploadProfileImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, filesRepository: Repository, linksRepository: Repository, awsService: AwsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsService\n                                                  \n                                                        \n                                                                        AwsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPublicProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicProfile(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(userId: string, updateData: UpdateProfileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserAddress(userId: string, address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadBannerImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadBannerImage(userId: string, file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadProfileImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProfileImage(userId: string, file: Express.Multer.File, host: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { classToPlain, plainToInstance } from 'class-transformer';\nimport { Repository } from 'typeorm';\n\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { User } from '@/database/user.entity';\nimport { transformImageToUrl } from '../../helpers';\nimport { AwsService } from '../aws_bucket/aws.service';\n\nimport { PublicProfileRes } from './dto/public-profile.res';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\n\n@Injectable()\nexport class UsersService {\n  private readonly logger = new Logger(UsersService.name);\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n    @InjectRepository(FileEntity)\n    private filesRepository: Repository,\n    @InjectRepository(LinkEntity)\n    private linksRepository: Repository,\n    private readonly awsService: AwsService\n  ) {}\n\n  async findByAddress(address: string): Promise {\n    return this.usersRepository.findOne({\n      where: {\n        stake_address: address,\n      },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n  }\n\n  async getPublicProfile(userId: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n    this.logger.log('USER', user);\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Calculate total_vaults from the vaults relation\n    user.total_vaults = user.vaults?.length || 0;\n\n    const userSource = {\n      ...user,\n      banner_image: user.banner_image.file_url,\n      profile_image: user.profile_image.file_url,\n    };\n\n    // Transform to plain object and remove sensitive data\n    const plainUser = classToPlain(userSource);\n    delete plainUser.address;\n    delete plainUser.gains;\n    delete plainUser.vaults;\n\n    return plainUser;\n  }\n\n  async create(userData: Partial): Promise {\n    const user = this.usersRepository.create(userData);\n    return this.usersRepository.save(user);\n  }\n\n  async getProfile(userId: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Calculate total_vaults from the vaults relation\n    user.total_vaults = user.vaults?.length || 0;\n    const plainedUsers = classToPlain(user);\n    return plainToInstance(PublicProfileRes, plainedUsers, { excludeExtraneousValues: true });\n  }\n\n  async updateProfile(userId: string, updateData: UpdateProfileDto): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image', 'banner_image', 'social_links'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Update basic profile fields\n    if (updateData.name !== undefined) {\n      user.name = updateData.name;\n    }\n\n    if (updateData.description !== undefined) {\n      user.description = updateData.description;\n    }\n\n    // Process profile image file\n    if (updateData.profileImage) {\n      const profileImgKey = updateData.profileImage.split('image/')[1];\n      if (profileImgKey) {\n        const profileImg = await this.filesRepository.findOne({\n          where: { file_key: profileImgKey },\n        });\n        if (profileImg) {\n          user.profile_image = profileImg;\n        }\n      }\n    }\n\n    // Process banner image file\n    if (updateData.bannerImage) {\n      const bannerImgKey = updateData.bannerImage.split('image/')[1];\n      if (bannerImgKey) {\n        const bannerImg = await this.filesRepository.findOne({\n          where: { file_key: bannerImgKey },\n        });\n        if (bannerImg) {\n          user.banner_image = bannerImg;\n        }\n      }\n    }\n\n    // Handle social links update\n    if (updateData.socialLinks) {\n      // Remove existing social links\n      if (user.social_links?.length > 0) {\n        await this.linksRepository.remove(user.social_links);\n      }\n\n      // Create new social links\n      updateData.socialLinks.map(linkData => {\n        return this.linksRepository.save({\n          user: user,\n          name: linkData.name,\n          url: linkData.url,\n        });\n      });\n    }\n    const selectedUser = await this.usersRepository.save(user);\n\n    selectedUser.banner_image = transformImageToUrl(selectedUser.banner_image as FileEntity) as any;\n    selectedUser.profile_image = transformImageToUrl(selectedUser.profile_image as FileEntity) as any;\n\n    return classToPlain(selectedUser, { excludeExtraneousValues: true }) as User;\n  }\n\n  async updateUserAddress(userId: string, address: string) {\n    await this.usersRepository.update(\n      {\n        id: userId,\n      },\n      {\n        address: address,\n      }\n    );\n  }\n\n  async uploadProfileImage(userId: string, file: Express.Multer.File, host: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['profile_image'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Upload image to S3\n    const uploadResult = await this.awsService.uploadImage(file, host);\n\n    // Create or update file entity\n    const fileEntity = this.filesRepository.create({\n      file_key: uploadResult.file_key,\n      file_url: uploadResult.file_url,\n      file_type: file.mimetype,\n      file_name: file.originalname,\n      metadata: {\n        size: file.size,\n      },\n    });\n    await this.filesRepository.save(fileEntity);\n\n    // Update user's profile image\n    user.profile_image = fileEntity;\n    return this.usersRepository.save(user);\n  }\n\n  async uploadBannerImage(userId: string, file: Express.Multer.File, host: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: { id: userId },\n      relations: ['banner_image'],\n    });\n\n    if (!user) {\n      throw new BadRequestException('User not found');\n    }\n\n    // Upload image to S3\n    const uploadResult = await this.awsService.uploadImage(file, host);\n\n    // Create or update file entity\n    const fileEntity = this.filesRepository.create({\n      file_key: uploadResult.file_key,\n      file_url: uploadResult.file_url,\n      file_type: file.mimetype,\n      file_name: file.originalname,\n      metadata: {\n        size: file.size,\n      },\n    });\n    await this.filesRepository.save(fileEntity);\n\n    // Update user's banner image\n    user.banner_image = fileEntity;\n    return this.usersRepository.save(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VaultAssetsSummaryDto.html":{"url":"classes/VaultAssetsSummaryDto.html","title":"class - VaultAssetsSummaryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VaultAssetsSummaryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                assets\n                            \n                            \n                                    \n                                lastUpdated\n                            \n                            \n                                    \n                                nfts\n                            \n                            \n                                    \n                                tokens\n                            \n                            \n                                    \n                                totalAssets\n                            \n                            \n                                    \n                                totalValueAda\n                            \n                            \n                                    \n                                totalValueUsd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of assets with their values', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp of the last update'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nfts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of NFTs in the vault'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of fungible tokens in the vault'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalAssets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of unique assets in the vault'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalValueAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total value of all assets in ADA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalValueUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total value of all assets in USD'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/offchain-tx/dto/vault-assets-summary.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class VaultAssetsSummaryDto {\n  @ApiProperty({ description: 'Total value of all assets in ADA' })\n  totalValueAda: number;\n\n  @ApiProperty({ description: 'Total value of all assets in USD' })\n  totalValueUsd: number;\n\n  @ApiProperty({ description: 'Number of unique assets in the vault' })\n  totalAssets: number;\n\n  @ApiProperty({ description: 'Number of NFTs in the vault' })\n  nfts: number;\n\n  @ApiProperty({ description: 'Number of fungible tokens in the vault' })\n  tokens: number;\n\n  @ApiProperty({ description: 'Timestamp of the last update' })\n  lastUpdated: string;\n\n  @ApiProperty({\n    description: 'List of assets with their values',\n    type: 'array',\n    items: {\n      type: 'object',\n      properties: {\n        policyId: { type: 'string' },\n        assetName: { type: 'string' },\n        quantity: { type: 'number' },\n        valueAda: { type: 'number' },\n        valueUsd: { type: 'number' },\n        isNft: { type: 'boolean' },\n        metadata: { type: 'object' },\n      },\n    },\n  })\n  assets: Array;\n  }>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VaultConfig.html":{"url":"interfaces/VaultConfig.html","title":"interface - VaultConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VaultConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            acquireWindow\n                                        \n                                \n                                \n                                        \n                                            adminKeyHash\n                                        \n                                \n                                \n                                        \n                                            allowedPolicies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assetWindow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contractType\n                                        \n                                \n                                \n                                        \n                                            customerAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customMetadata\n                                        \n                                \n                                \n                                        \n                                            policyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            valueMethod\n                                        \n                                \n                                \n                                        \n                                            vaultName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acquireWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acquireWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminKeyHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminKeyHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowedPolicies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedPolicies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assetWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assetWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contractType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customMetadata:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueMethod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  Address,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { BlockchainService } from './blockchain.service';\nimport { Datum1 } from './types/type';\nimport { generate_assetname_from_txhash_index, getUtxos, getVaultUtxo, toHex } from './utils/lib';\n\nexport interface VaultConfig {\n  vaultName: string;\n  customerAddress: string;\n  adminKeyHash: string;\n  policyId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nexport interface VaultCreateConfig {\n  vaultName: string;\n  customerAddress: string;\n  vaultId: string;\n  allowedPolicies: string[];\n  allowedContributors: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nconst one_day = 24 * 60 * 60 * 1000;\n\n@Injectable()\nexport class VaultManagingService {\n  private readonly logger = new Logger(VaultManagingService.name);\n  private scAddress: string;\n  private readonly scPolicyId: string;\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private readonly blockfrost: any;\n\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  /**\n   * Create a new vault with the specified configuration\n   * @param config Vault configuration parameters\n   * @returns Transaction hash and vault ID\n   */\n  async createOnChainVaultTx(vaultConfig: VaultCreateConfig): Promise {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const utxos = await getUtxos(Address.from_bech32(vaultConfig.customerAddress), 0, this.blockfrost); // Any UTXO works.\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found.');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n    const assetName = generate_assetname_from_txhash_index(\n      selectedUtxo.input().transaction_id().to_hex(),\n      selectedUtxo.input().index()\n    );\n\n    try {\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          datum: { type: 'inline'; value: Datum1; shape: object };\n        }[];\n        requiredInputs: string[];\n      } = {\n        changeAddress: vaultConfig.customerAddress,\n        message: vaultConfig.vaultName,\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: assetName, format: 'hex' },\n            policyId: this.scPolicyId,\n            type: 'plutus',\n            quantity: 1,\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: this.scPolicyId,\n            redeemer: {\n              type: 'json',\n              value: {\n                vault_token_index: 0,\n                asset_name: assetName,\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: this.scAddress,\n            assets: [\n              {\n                assetName: { name: assetName, format: 'hex' },\n                policyId: this.scPolicyId,\n                quantity: 1,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: {\n                contract_type: vaultConfig.contractType,\n                asset_whitelist: vaultConfig.allowedPolicies,\n                contributor_whitelist: vaultConfig.allowedContributors, // address list of contributors\n                asset_window: {\n                  // Time allowed to upload NFT\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                investment_window: {\n                  // Time allowed to upload ADA\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n                // fractionalization: {\n                //   percentage: 1,\n                //   token_supply: 1,\n                //   token_decimals: 1,\n                //   token_policy: \"\",\n                // },\n                custom_metadata: [\n                  // \n                  // [\n                  //   PlutusData.new_bytes(Buffer.from(\"foo\")).to_hex(),\n                  //   PlutusData.new_bytes(Buffer.from(\"bar\")).to_hex(),\n                  // ],\n                  [toHex('foo'), toHex('bar')],\n                  [toHex('bar'), toHex('foo')],\n                  [toHex('vaultId'), toHex(vaultConfig.vaultId)],\n                ], // like a tuple\n\n                // termination: {\n                //   termination_type: 1,\n                //   fdp: 1,\n                // },\n                // investment: {\n                //   reserve: 1,\n                //   liquidityPool: 1,\n                // },\n                admin: this.adminHash,\n                minting_key: this.adminHash,\n              },\n              shape: {\n                validatorHash: this.scPolicyId,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        requiredInputs: REQUIRED_INPUTS,\n      };\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n        vaultAssetName: assetName,\n      };\n    } catch (error) {\n      this.logger.error('Failed to create vault:', error);\n      throw error;\n    }\n  }\n\n  async createBurnTx(burnConfig: { customerAddress: string; assetVaultName: string }): Promise {\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, burnConfig.assetVaultName, this.blockfrost);\n    const input = {\n      changeAddress: burnConfig.customerAddress,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: burnConfig.assetVaultName, format: 'hex' },\n          policyId: this.scPolicyId,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [this.adminHash],\n    };\n    const buildResponse = await this.blockchainService.buildTransaction(input);\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n    return {\n      presignedTx: txToSubmitOnChain.to_hex(),\n      contractAddress: this.scAddress,\n    };\n  }\n\n  // Create a transaction to update the vault's metadata\n  async updateVaultMetadataTx(vaultConfig: VaultConfig) {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, vaultConfig.vaultName, this.blockfrost);\n    const input = {\n      changeAddress: vaultConfig.customerAddress,\n      message: 'Vault Update',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: {\n              vault_token_index: 0, // must fit the ordering defined in the outputs array\n              asset_name: vaultConfig.vaultName,\n            },\n          },\n        },\n      ],\n      outputs: [\n        {\n          address: this.scAddress,\n          assets: [\n            {\n              assetName: vaultConfig.vaultName,\n              policyId: this.scPolicyId,\n              quantity: 1,\n            },\n          ],\n          datum: {\n            type: 'inline',\n            value: {\n              contract_type: vaultConfig.contractType, // Represent an enum setup by L4VA (0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE)\n              asset_whitelist: vaultConfig.allowedPolicies,\n              // contributor_whitelist: [],\n              asset_window: vaultConfig.assetWindow,\n              acquire_window: vaultConfig.acquireWindow,\n              valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n              custom_metadata: vaultConfig.customMetadata || [],\n              admin: this.adminHash,\n              minting_key: this.adminHash,\n            },\n            shape: {\n              validatorHash: this.scPolicyId,\n              purpose: 'spend',\n            },\n          },\n        },\n      ],\n    };\n\n    try {\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n      };\n    } catch (error) {\n      this.logger.error('Failed to build vault update tx:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed vault transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitOnChainVaultTx(signedTx: { transaction: string; signatures: string | string[] }): Promise {\n    try {\n      // Ensure signatures is always an array\n      const signatures = Array.isArray(signedTx.signatures) ? signedTx.signatures : [signedTx.signatures];\n\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures,\n      });\n\n      return { txHash: result.txHash };\n    } catch (error) {\n      this.logger.error('Failed to submit vault transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VaultCreateConfig.html":{"url":"interfaces/VaultCreateConfig.html","title":"interface - VaultCreateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VaultCreateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            acquireWindow\n                                        \n                                \n                                \n                                        \n                                            allowedContributors\n                                        \n                                \n                                \n                                        \n                                            allowedPolicies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assetWindow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contractType\n                                        \n                                \n                                \n                                        \n                                            customerAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customMetadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            valueMethod\n                                        \n                                \n                                \n                                        \n                                            vaultId\n                                        \n                                \n                                \n                                        \n                                            vaultName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acquireWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acquireWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowedContributors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedContributors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowedPolicies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedPolicies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assetWindow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assetWindow:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contractType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customMetadata:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueMethod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vaultName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vaultName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  Address,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { BlockchainService } from './blockchain.service';\nimport { Datum1 } from './types/type';\nimport { generate_assetname_from_txhash_index, getUtxos, getVaultUtxo, toHex } from './utils/lib';\n\nexport interface VaultConfig {\n  vaultName: string;\n  customerAddress: string;\n  adminKeyHash: string;\n  policyId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nexport interface VaultCreateConfig {\n  vaultName: string;\n  customerAddress: string;\n  vaultId: string;\n  allowedPolicies: string[];\n  allowedContributors: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nconst one_day = 24 * 60 * 60 * 1000;\n\n@Injectable()\nexport class VaultManagingService {\n  private readonly logger = new Logger(VaultManagingService.name);\n  private scAddress: string;\n  private readonly scPolicyId: string;\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private readonly blockfrost: any;\n\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  /**\n   * Create a new vault with the specified configuration\n   * @param config Vault configuration parameters\n   * @returns Transaction hash and vault ID\n   */\n  async createOnChainVaultTx(vaultConfig: VaultCreateConfig): Promise {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const utxos = await getUtxos(Address.from_bech32(vaultConfig.customerAddress), 0, this.blockfrost); // Any UTXO works.\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found.');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n    const assetName = generate_assetname_from_txhash_index(\n      selectedUtxo.input().transaction_id().to_hex(),\n      selectedUtxo.input().index()\n    );\n\n    try {\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          datum: { type: 'inline'; value: Datum1; shape: object };\n        }[];\n        requiredInputs: string[];\n      } = {\n        changeAddress: vaultConfig.customerAddress,\n        message: vaultConfig.vaultName,\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: assetName, format: 'hex' },\n            policyId: this.scPolicyId,\n            type: 'plutus',\n            quantity: 1,\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: this.scPolicyId,\n            redeemer: {\n              type: 'json',\n              value: {\n                vault_token_index: 0,\n                asset_name: assetName,\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: this.scAddress,\n            assets: [\n              {\n                assetName: { name: assetName, format: 'hex' },\n                policyId: this.scPolicyId,\n                quantity: 1,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: {\n                contract_type: vaultConfig.contractType,\n                asset_whitelist: vaultConfig.allowedPolicies,\n                contributor_whitelist: vaultConfig.allowedContributors, // address list of contributors\n                asset_window: {\n                  // Time allowed to upload NFT\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                investment_window: {\n                  // Time allowed to upload ADA\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n                // fractionalization: {\n                //   percentage: 1,\n                //   token_supply: 1,\n                //   token_decimals: 1,\n                //   token_policy: \"\",\n                // },\n                custom_metadata: [\n                  // \n                  // [\n                  //   PlutusData.new_bytes(Buffer.from(\"foo\")).to_hex(),\n                  //   PlutusData.new_bytes(Buffer.from(\"bar\")).to_hex(),\n                  // ],\n                  [toHex('foo'), toHex('bar')],\n                  [toHex('bar'), toHex('foo')],\n                  [toHex('vaultId'), toHex(vaultConfig.vaultId)],\n                ], // like a tuple\n\n                // termination: {\n                //   termination_type: 1,\n                //   fdp: 1,\n                // },\n                // investment: {\n                //   reserve: 1,\n                //   liquidityPool: 1,\n                // },\n                admin: this.adminHash,\n                minting_key: this.adminHash,\n              },\n              shape: {\n                validatorHash: this.scPolicyId,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        requiredInputs: REQUIRED_INPUTS,\n      };\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n        vaultAssetName: assetName,\n      };\n    } catch (error) {\n      this.logger.error('Failed to create vault:', error);\n      throw error;\n    }\n  }\n\n  async createBurnTx(burnConfig: { customerAddress: string; assetVaultName: string }): Promise {\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, burnConfig.assetVaultName, this.blockfrost);\n    const input = {\n      changeAddress: burnConfig.customerAddress,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: burnConfig.assetVaultName, format: 'hex' },\n          policyId: this.scPolicyId,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [this.adminHash],\n    };\n    const buildResponse = await this.blockchainService.buildTransaction(input);\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n    return {\n      presignedTx: txToSubmitOnChain.to_hex(),\n      contractAddress: this.scAddress,\n    };\n  }\n\n  // Create a transaction to update the vault's metadata\n  async updateVaultMetadataTx(vaultConfig: VaultConfig) {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, vaultConfig.vaultName, this.blockfrost);\n    const input = {\n      changeAddress: vaultConfig.customerAddress,\n      message: 'Vault Update',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: {\n              vault_token_index: 0, // must fit the ordering defined in the outputs array\n              asset_name: vaultConfig.vaultName,\n            },\n          },\n        },\n      ],\n      outputs: [\n        {\n          address: this.scAddress,\n          assets: [\n            {\n              assetName: vaultConfig.vaultName,\n              policyId: this.scPolicyId,\n              quantity: 1,\n            },\n          ],\n          datum: {\n            type: 'inline',\n            value: {\n              contract_type: vaultConfig.contractType, // Represent an enum setup by L4VA (0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE)\n              asset_whitelist: vaultConfig.allowedPolicies,\n              // contributor_whitelist: [],\n              asset_window: vaultConfig.assetWindow,\n              acquire_window: vaultConfig.acquireWindow,\n              valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n              custom_metadata: vaultConfig.customMetadata || [],\n              admin: this.adminHash,\n              minting_key: this.adminHash,\n            },\n            shape: {\n              validatorHash: this.scPolicyId,\n              purpose: 'spend',\n            },\n          },\n        },\n      ],\n    };\n\n    try {\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n      };\n    } catch (error) {\n      this.logger.error('Failed to build vault update tx:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed vault transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitOnChainVaultTx(signedTx: { transaction: string; signatures: string | string[] }): Promise {\n    try {\n      // Ensure signatures is always an array\n      const signatures = Array.isArray(signedTx.signatures) ? signedTx.signatures : [signedTx.signatures];\n\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures,\n      });\n\n      return { txHash: result.txHash };\n    } catch (error) {\n      this.logger.error('Failed to submit vault transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaultInsertingService.html":{"url":"injectables/VaultInsertingService.html","title":"injectable - VaultInsertingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaultInsertingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminHash\n                            \n                            \n                                    Private\n                                    Readonly\n                                adminSKey\n                            \n                            \n                                    Private\n                                blockfrost\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buildTransaction\n                            \n                            \n                                    Async\n                                handleBlockchainEvent\n                            \n                            \n                                    Async\n                                handleBurnVault\n                            \n                            \n                                    Async\n                                handleScannerEvent\n                            \n                            \n                                    Async\n                                submitTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaultsRepository: Repository, transactionsService: TransactionsService, blockchainScanner: BlockchainScannerService, configService: ConfigService, blockchainService: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaultsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainScanner\n                                                  \n                                                        \n                                                                        BlockchainScannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buildTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTransaction(params: BuildTransactionParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            BuildTransactionParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleBlockchainEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleBlockchainEvent(event: BlockchainWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:358\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            BlockchainWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleBurnVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleBurnVault(userId: string, vaultId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:449\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vaultId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleScannerEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleScannerEvent(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:330\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitTransaction(signedTx: SubmitTransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:277\n                        \n                    \n\n\n            \n                \n                        Submit a signed transaction to the blockchain\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signedTx\n                                            \n                                                            SubmitTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing the transaction and signatures\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Transaction hash\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminSKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        blockfrost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VaultInsertingService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-inserting.service.ts:69\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { TransactionStatus } from '../../../../types/transaction.types';\nimport { TransactionsService } from '../offchain-tx/transactions.service';\n\nimport { BlockchainScannerService } from './blockchain-scanner.service';\nimport { BlockchainService } from './blockchain.service';\nimport { SubmitTransactionDto } from './dto/transaction.dto';\nimport { BlockchainWebhookDto } from './dto/webhook.dto';\nimport { OnchainTransactionStatus } from './types/transaction-status.enum';\nimport { Datum } from './types/type';\nimport { applyContributeParams, toPreloadedScript } from './utils/apply_params';\nimport * as blueprint from './utils/blueprint.json';\n\nimport { Vault } from '@/database/vault.entity';\n\n// Investment and Contribution\n\nexport interface NftAsset {\n  policyId: string;\n  assetName: string;\n  quantity: number;\n}\n\nexport interface BuildTransactionOutput {\n  address?: string;\n  lovelace?: number;\n  assets?: NftAsset[];\n}\n\nexport interface BuildTransactionParams {\n  changeAddress: string;\n  txId: string;\n  outputs: BuildTransactionOutput[];\n}\n\nexport interface SubmitTransactionParams {\n  transaction: string; // CBOR encoded transaction\n  vaultId: string;\n  signatures?: string[]; // Optional array of signatures\n}\n\nexport interface TransactionBuildResponse {\n  hash: string;\n  complete: string; // CBOR encoded complete transaction\n  stripped: string; // CBOR encoded stripped transaction\n  witnessSet: string; // CBOR encoded witness set\n}\n\nexport interface TransactionSubmitResponse {\n  txHash: string;\n}\n\n@Injectable()\nexport class VaultInsertingService {\n  private readonly logger = new Logger(VaultInsertingService.name);\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private blockfrost: any;\n  constructor(\n    @InjectRepository(Vault)\n    private readonly vaultsRepository: Repository,\n    private readonly transactionsService: TransactionsService,\n    private readonly blockchainScanner: BlockchainScannerService,\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  async buildTransaction(params: BuildTransactionParams): Promise {\n    try {\n      // Validate that the transaction exists and get its current state\n      const transaction = await this.transactionsService.validateTransactionExists(params.txId);\n\n      const vault = await this.vaultsRepository.findOne({\n        where: {\n          id: transaction.vault_id,\n        },\n      });\n\n      const txDetail = await this.blockchainScanner.getTransactionDetails(vault.publication_hash);\n\n      const { output_amount } = txDetail;\n      this.logger.log(JSON.stringify(output_amount[output_amount.length - 1].unit));\n\n      const vaultPolicyPlusName = output_amount[output_amount.length - 1].unit;\n      const VAULT_POLICY_ID = vaultPolicyPlusName.slice(0, 56);\n      const VAULT_ID = vaultPolicyPlusName.slice(56, vaultPolicyPlusName.length);\n\n      const parameterizedScript = applyContributeParams({\n        vault_policy_id: VAULT_POLICY_ID,\n        vault_id: VAULT_ID,\n      });\n      const POLICY_ID = parameterizedScript.validator.hash;\n      const SC_ADDRESS = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(POLICY_ID)))\n        .to_address()\n        .to_bech32();\n\n      const unparameterizedScript = blueprint.validators.find(v => v.title === 'contribute.contribute');\n      if (!unparameterizedScript) {\n        throw new Error('Contribute validator not found');\n      }\n\n      const LAST_UPDATE_TX_HASH = vault.publication_hash; // todo need to understand where exactly we need to get it\n      const LAST_UPDATE_TX_INDEX = 0;\n      const isAda = params.outputs[0].assets[0].assetName === 'lovelace';\n      let quantity = 0;\n      let assetsList = [\n        {\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          quantity: 1000,\n        },\n        {\n          assetName: { name: params.outputs[0].assets[0].assetName, format: 'hex' },\n          policyId: params.outputs[0].assets[0].policyId,\n          quantity: 1,\n        },\n      ];\n\n      if (isAda) {\n        quantity = params.outputs[0].assets[0].quantity * 1000000;\n      } else {\n        assetsList = params.outputs[0].assets.map(asset => ({\n          assetName: { name: asset.assetName, format: 'hex' },\n          policyId: asset.policyId,\n          quantity: asset.quantity,\n        }));\n      }\n\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          lovelace?: number;\n          datum: { type: 'inline'; value: Datum; shape: object };\n        }[];\n        requiredSigners: string[];\n        preloadedScripts: {\n          type: string;\n          blueprint: any;\n        }[];\n        referenceInputs: { txHash: string; index: number }[];\n        validityInterval: {\n          start: boolean;\n          end: boolean;\n        };\n        network: string;\n      } = {\n        changeAddress: params.changeAddress,\n        // message: isAda ? 'Contribution in ADA' : 'Contribution in asset',\n        message: 'Contribution in asset',\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: VAULT_ID, format: 'hex' },\n            policyId: POLICY_ID,\n            type: 'plutus',\n            quantity: 1, // Mint 1 VT token\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: POLICY_ID,\n            redeemer: {\n              type: 'json',\n              value: {\n                quantity: 1, // Mint 1 VT token\n                output_index: 0,\n                contribution: isAda ? 'Lovelace' : 'Asset',\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: SC_ADDRESS,\n            lovelace: isAda ? (quantity > 0 ? quantity : 10000000) : undefined,\n            assets: isAda\n              ? [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                ]\n              : [\n                  {\n                    assetName: { name: VAULT_ID, format: 'hex' },\n                    policyId: POLICY_ID,\n                    quantity: 1,\n                  },\n                  ...assetsList,\n                ],\n            datum: {\n              type: 'inline',\n              value: {\n                policy_id: POLICY_ID,\n                asset_name: VAULT_ID,\n                quantity: 1000,\n                owner: params.changeAddress,\n              },\n              shape: {\n                validatorHash: POLICY_ID,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        preloadedScripts: [\n          toPreloadedScript(blueprint, {\n            validators: [parameterizedScript.validator, unparameterizedScript],\n          }),\n        ],\n        requiredSigners: [this.adminHash],\n        referenceInputs: [\n          {\n            txHash: LAST_UPDATE_TX_HASH,\n            index: LAST_UPDATE_TX_INDEX,\n          },\n        ],\n        validityInterval: {\n          start: true,\n          end: true,\n        },\n        network: 'preprod',\n      };\n\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitTransaction(signedTx: SubmitTransactionDto): Promise {\n    if (!signedTx.txId) {\n      throw new Error('Transaction ID is required');\n    }\n\n    if (!signedTx.transaction) {\n      throw new Error('Transaction data is required');\n    }\n\n    try {\n      this.logger.log(`Submitting transaction ${signedTx.txId} to blockchain`);\n\n      // Submit the transaction using BlockchainService\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures: signedTx.signatures || [],\n      });\n\n      this.logger.log(`Updating transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n      try {\n        // Update the transaction hash in our database\n        await this.transactionsService.updateTransactionHash(signedTx.txId, result.txHash);\n        this.logger.log(`Successfully updated transaction ${signedTx.txId} with hash ${result.txHash}`);\n\n        // Update monitoring for the vault if it exists\n        if (signedTx.vaultId) {\n          const vault = await this.vaultsRepository.findOne({\n            where: { id: signedTx.vaultId },\n            select: ['contract_address', 'name'],\n          });\n\n          if (!vault) {\n            this.logger.warn(`Vault ${signedTx.vaultId} not found when updating monitoring address`);\n          } else if (vault.contract_address) {\n            await this.blockchainScanner.checkMonitoringAddress(vault.contract_address, vault.name);\n          }\n        }\n\n        return { txHash: result.txHash };\n      } catch (updateError) {\n        this.logger.error(\n          `Failed to update transaction ${signedTx.txId} with hash ${result.txHash}`,\n          updateError.stack\n        );\n        throw new Error(`Transaction submitted but failed to update local record: ${updateError.message}`);\n      }\n    } catch (error) {\n      this.logger.error('Error submitting transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n\n  async handleScannerEvent(event: any) {\n    // Determine transaction status based on blockchain data\n    const tx = event.data.tx;\n    let status: OnchainTransactionStatus;\n    if (!tx.block || !tx.block_height) {\n      status = OnchainTransactionStatus.PENDING;\n    } else if (tx.valid_contract === false) {\n      status = OnchainTransactionStatus.FAILED;\n    } else if (tx.valid_contract === true) {\n      status = OnchainTransactionStatus.CONFIRMED;\n    } else {\n      status = OnchainTransactionStatus.PENDING;\n    }\n\n    // Map onchain status to internal transaction status\n    const statusMap: Record = {\n      [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n      [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n      [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n      [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n    };\n\n    const internalStatus = statusMap[status];\n    await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n  }\n\n  // return this.anvilApiService.submitTransaction(params);\n\n  async handleBlockchainEvent(event: BlockchainWebhookDto): Promise {\n    // Only handle transaction events\n    if (event.type !== 'transaction') {\n      return;\n    }\n\n    // Process each transaction in the payload\n    for (const txEvent of event.payload) {\n      const { tx, inputs, outputs } = txEvent;\n\n      // Determine transaction status based on blockchain data\n      let status: OnchainTransactionStatus;\n      if (!tx.block || !tx.block_height) {\n        status = OnchainTransactionStatus.PENDING;\n      } else if (tx.valid_contract === false) {\n        status = OnchainTransactionStatus.FAILED;\n      } else if (tx.valid_contract === true) {\n        status = OnchainTransactionStatus.CONFIRMED;\n      } else {\n        status = OnchainTransactionStatus.PENDING;\n      }\n\n      // Map onchain status to internal transaction status\n      const statusMap: Record = {\n        [OnchainTransactionStatus.PENDING]: TransactionStatus.pending,\n        [OnchainTransactionStatus.CONFIRMED]: TransactionStatus.confirmed,\n        [OnchainTransactionStatus.FAILED]: TransactionStatus.failed,\n        [OnchainTransactionStatus.NOT_FOUND]: TransactionStatus.stuck,\n      };\n\n      // Update transaction status\n      const internalStatus = statusMap[status];\n      await this.transactionsService.updateTransactionStatus(tx.hash, internalStatus);\n\n      // For confirmed transactions, analyze the transfer\n      if (status === OnchainTransactionStatus.CONFIRMED) {\n        const transferDetails = {\n          txHash: tx.hash,\n          blockHeight: tx.block_height,\n          timestamp: tx.block_time,\n          fee: tx.fees,\n          sender: inputs[0]?.address, // Usually the first input is the sender\n          transfers: [],\n        };\n\n        // Analyze each output\n        for (const output of outputs) {\n          const { address, amount } = output;\n\n          // Skip change outputs (outputs back to sender)\n          if (address === transferDetails.sender) {\n            continue;\n          }\n\n          // Process each asset in the output\n          for (const asset of amount) {\n            if (asset.unit === 'lovelace') {\n              // ADA transfer\n              transferDetails.transfers.push({\n                type: 'ADA',\n                recipient: address,\n                amount: (parseInt(asset.quantity) / 1_000_000).toString(), // Convert lovelace to ADA\n                unit: 'ADA',\n              });\n            } else if (asset.quantity === '1') {\n              // NFT transfer\n              transferDetails.transfers.push({\n                type: 'NFT',\n                recipient: address,\n                policyId: asset.unit.slice(0, 56),\n                assetName: asset.unit.slice(56),\n                unit: asset.unit,\n              });\n            } else {\n              // Other token transfer\n              transferDetails.transfers.push({\n                type: 'TOKEN',\n                recipient: address,\n                amount: asset.quantity,\n                unit: asset.unit,\n              });\n            }\n          }\n        }\n\n        // Log transfer details\n        // console.log('Transaction details:', JSON.stringify(transferDetails, null, 2));\n      }\n    }\n  }\n\n  async handleBurnVault(userId: string, vaultId: string) {\n    // todo need to check if user is owner and if vault is exists\n    this.logger.log(`Run delete vault process for  vaultId: ${vaultId}  by user with userId: ${userId}`);\n\n    // todo need to create tx for extract vaults\n    // todo then need to burn LP tokens\n    // todo then need to burn vault\n    const CUSTOMER_ADDRESS = '';\n    const vaultUtxo = '';\n    const POLICY_ID = '';\n    const VAULT_ID = '';\n    const ADMIN_KEY_HASH = '';\n    // input for burn vault\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: POLICY_ID,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: VAULT_ID, format: 'hex' },\n          policyId: POLICY_ID,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [ADMIN_KEY_HASH],\n    };\n    // todo then need to mark vaults as deleted\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaultManagingService.html":{"url":"injectables/VaultManagingService.html","title":"injectable - VaultManagingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaultManagingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminHash\n                            \n                            \n                                    Private\n                                    Readonly\n                                adminSKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                blockfrost\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                scAddress\n                            \n                            \n                                    Private\n                                    Readonly\n                                scPolicyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBurnTx\n                            \n                            \n                                    Async\n                                createOnChainVaultTx\n                            \n                            \n                                    Async\n                                submitOnChainVaultTx\n                            \n                            \n                                    Async\n                                updateVaultMetadataTx\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, blockchainService: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createBurnTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBurnTx(burnConfig: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:239\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                burnConfig\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOnChainVaultTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOnChainVaultTx(vaultConfig: VaultCreateConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Create a new vault with the specified configuration\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultConfig\n                                            \n                                                            VaultCreateConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Transaction hash and vault ID\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitOnChainVaultTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitOnChainVaultTx(signedTx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:367\n                        \n                    \n\n\n            \n                \n                        Submit a signed vault transaction to the blockchain\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signedTx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing the transaction and signatures\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Transaction hash\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateVaultMetadataTx\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateVaultMetadataTx(vaultConfig: VaultConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:290\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vaultConfig\n                                            \n                                                            VaultConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminSKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        blockfrost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VaultManagingService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scPolicyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/vault-managing.service.ts:63\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'node:buffer';\n\nimport { BlockFrostAPI } from '@blockfrost/blockfrost-js';\nimport {\n  EnterpriseAddress,\n  ScriptHash,\n  Credential,\n  Address,\n  FixedTransaction,\n  PrivateKey,\n} from '@emurgo/cardano-serialization-lib-nodejs';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { BlockchainService } from './blockchain.service';\nimport { Datum1 } from './types/type';\nimport { generate_assetname_from_txhash_index, getUtxos, getVaultUtxo, toHex } from './utils/lib';\n\nexport interface VaultConfig {\n  vaultName: string;\n  customerAddress: string;\n  adminKeyHash: string;\n  policyId: string;\n  allowedPolicies: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nexport interface VaultCreateConfig {\n  vaultName: string;\n  customerAddress: string;\n  vaultId: string;\n  allowedPolicies: string[];\n  allowedContributors: string[];\n  assetWindow?: {\n    start: number;\n    end: number;\n  };\n  acquireWindow?: {\n    start: number;\n    end: number;\n  };\n  contractType?: number; // 0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE\n  valueMethod?: number; // 0: FIXED | 1: LBE\n  customMetadata?: [string, string][];\n}\n\nconst one_day = 24 * 60 * 60 * 1000;\n\n@Injectable()\nexport class VaultManagingService {\n  private readonly logger = new Logger(VaultManagingService.name);\n  private scAddress: string;\n  private readonly scPolicyId: string;\n  private readonly adminHash: string;\n  private readonly adminSKey: string;\n  private readonly blockfrost: any;\n\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject(BlockchainService)\n    private readonly blockchainService: BlockchainService\n  ) {\n    this.scPolicyId = this.configService.get('SC_POLICY_ID');\n    this.adminHash = this.configService.get('ADMIN_KEY_HASH');\n    this.adminSKey = this.configService.get('ADMIN_S_KEY');\n    this.blockfrost = new BlockFrostAPI({\n      projectId: this.configService.get('BLOCKFROST_TESTNET_API_KEY'),\n    });\n  }\n\n  /**\n   * Create a new vault with the specified configuration\n   * @param config Vault configuration parameters\n   * @returns Transaction hash and vault ID\n   */\n  async createOnChainVaultTx(vaultConfig: VaultCreateConfig): Promise {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const utxos = await getUtxos(Address.from_bech32(vaultConfig.customerAddress), 0, this.blockfrost); // Any UTXO works.\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found.');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n    const assetName = generate_assetname_from_txhash_index(\n      selectedUtxo.input().transaction_id().to_hex(),\n      selectedUtxo.input().index()\n    );\n\n    try {\n      const input: {\n        changeAddress: string;\n        message: string;\n        mint: Array;\n        scriptInteractions: object[];\n        outputs: {\n          address: string;\n          assets: object[];\n          datum: { type: 'inline'; value: Datum1; shape: object };\n        }[];\n        requiredInputs: string[];\n      } = {\n        changeAddress: vaultConfig.customerAddress,\n        message: vaultConfig.vaultName,\n        mint: [\n          {\n            version: 'cip25',\n            assetName: { name: assetName, format: 'hex' },\n            policyId: this.scPolicyId,\n            type: 'plutus',\n            quantity: 1,\n            metadata: {},\n          },\n        ],\n        scriptInteractions: [\n          {\n            purpose: 'mint',\n            hash: this.scPolicyId,\n            redeemer: {\n              type: 'json',\n              value: {\n                vault_token_index: 0,\n                asset_name: assetName,\n              },\n            },\n          },\n        ],\n        outputs: [\n          {\n            address: this.scAddress,\n            assets: [\n              {\n                assetName: { name: assetName, format: 'hex' },\n                policyId: this.scPolicyId,\n                quantity: 1,\n              },\n            ],\n            datum: {\n              type: 'inline',\n              value: {\n                contract_type: vaultConfig.contractType,\n                asset_whitelist: vaultConfig.allowedPolicies,\n                contributor_whitelist: vaultConfig.allowedContributors, // address list of contributors\n                asset_window: {\n                  // Time allowed to upload NFT\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                investment_window: {\n                  // Time allowed to upload ADA\n                  lower_bound: {\n                    bound_type: new Date().getTime(),\n                    is_inclusive: true,\n                  },\n                  upper_bound: {\n                    bound_type: new Date().getTime() + one_day,\n                    is_inclusive: true,\n                  },\n                },\n                valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n                // fractionalization: {\n                //   percentage: 1,\n                //   token_supply: 1,\n                //   token_decimals: 1,\n                //   token_policy: \"\",\n                // },\n                custom_metadata: [\n                  // \n                  // [\n                  //   PlutusData.new_bytes(Buffer.from(\"foo\")).to_hex(),\n                  //   PlutusData.new_bytes(Buffer.from(\"bar\")).to_hex(),\n                  // ],\n                  [toHex('foo'), toHex('bar')],\n                  [toHex('bar'), toHex('foo')],\n                  [toHex('vaultId'), toHex(vaultConfig.vaultId)],\n                ], // like a tuple\n\n                // termination: {\n                //   termination_type: 1,\n                //   fdp: 1,\n                // },\n                // investment: {\n                //   reserve: 1,\n                //   liquidityPool: 1,\n                // },\n                admin: this.adminHash,\n                minting_key: this.adminHash,\n              },\n              shape: {\n                validatorHash: this.scPolicyId,\n                purpose: 'spend',\n              },\n            },\n          },\n        ],\n        requiredInputs: REQUIRED_INPUTS,\n      };\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      // Sign the transaction\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n        vaultAssetName: assetName,\n      };\n    } catch (error) {\n      this.logger.error('Failed to create vault:', error);\n      throw error;\n    }\n  }\n\n  async createBurnTx(burnConfig: { customerAddress: string; assetVaultName: string }): Promise {\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, burnConfig.assetVaultName, this.blockfrost);\n    const input = {\n      changeAddress: burnConfig.customerAddress,\n      message: 'Vault Burn',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n        {\n          purpose: 'mint',\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: 'VaultBurn',\n          },\n        },\n      ],\n      mint: [\n        {\n          version: 'cip25',\n          assetName: { name: burnConfig.assetVaultName, format: 'hex' },\n          policyId: this.scPolicyId,\n          type: 'plutus',\n          quantity: -1,\n        },\n      ],\n      requiredSigners: [this.adminHash],\n    };\n    const buildResponse = await this.blockchainService.buildTransaction(input);\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n    return {\n      presignedTx: txToSubmitOnChain.to_hex(),\n      contractAddress: this.scAddress,\n    };\n  }\n\n  // Create a transaction to update the vault's metadata\n  async updateVaultMetadataTx(vaultConfig: VaultConfig) {\n    this.scAddress = EnterpriseAddress.new(0, Credential.from_scripthash(ScriptHash.from_hex(this.scPolicyId)))\n      .to_address()\n      .to_bech32();\n\n    const vaultUtxo = await getVaultUtxo(this.scPolicyId, vaultConfig.vaultName, this.blockfrost);\n    const input = {\n      changeAddress: vaultConfig.customerAddress,\n      message: 'Vault Update',\n      scriptInteractions: [\n        {\n          purpose: 'spend',\n          outputRef: vaultUtxo,\n          hash: this.scPolicyId,\n          redeemer: {\n            type: 'json',\n            value: {\n              vault_token_index: 0, // must fit the ordering defined in the outputs array\n              asset_name: vaultConfig.vaultName,\n            },\n          },\n        },\n      ],\n      outputs: [\n        {\n          address: this.scAddress,\n          assets: [\n            {\n              assetName: vaultConfig.vaultName,\n              policyId: this.scPolicyId,\n              quantity: 1,\n            },\n          ],\n          datum: {\n            type: 'inline',\n            value: {\n              contract_type: vaultConfig.contractType, // Represent an enum setup by L4VA (0: PRIVATE | 1: PUBLIC | 2: SEMI_PRIVATE)\n              asset_whitelist: vaultConfig.allowedPolicies,\n              // contributor_whitelist: [],\n              asset_window: vaultConfig.assetWindow,\n              acquire_window: vaultConfig.acquireWindow,\n              valuation_type: vaultConfig.valueMethod, // Enum 0: 'FIXED' 1: 'LBE'\n              custom_metadata: vaultConfig.customMetadata || [],\n              admin: this.adminHash,\n              minting_key: this.adminHash,\n            },\n            shape: {\n              validatorHash: this.scPolicyId,\n              purpose: 'spend',\n            },\n          },\n        },\n      ],\n    };\n\n    try {\n      // Build the transaction using BlockchainService\n      const buildResponse = await this.blockchainService.buildTransaction(input);\n\n      const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(buildResponse.complete, 'hex'));\n      txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.adminSKey));\n\n      return {\n        presignedTx: txToSubmitOnChain.to_hex(),\n        contractAddress: this.scAddress,\n      };\n    } catch (error) {\n      this.logger.error('Failed to build vault update tx:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Submit a signed vault transaction to the blockchain\n   * @param signedTx Object containing the transaction and signatures\n   * @returns Transaction hash\n   */\n  async submitOnChainVaultTx(signedTx: { transaction: string; signatures: string | string[] }): Promise {\n    try {\n      // Ensure signatures is always an array\n      const signatures = Array.isArray(signedTx.signatures) ? signedTx.signatures : [signedTx.signatures];\n\n      const result = await this.blockchainService.submitTransaction({\n        transaction: signedTx.transaction,\n        signatures,\n      });\n\n      return { txHash: result.txHash };\n    } catch (error) {\n      this.logger.error('Failed to submit vault transaction', error);\n      throw new Error(`Failed to submit transaction: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VaultShortResponse.html":{"url":"classes/VaultShortResponse.html","title":"class - VaultShortResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VaultShortResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/dto/vault.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                bannerImage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                baseAllocation\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                invested\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phaseEndTime\n                            \n                            \n                                    \n                                    \n                                privacy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socialLinks\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                timeRemaining\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                total\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tvl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                vaultImage\n                            \n                            \n                                    \n                                    \n                                vaultStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        bannerImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Banner image', required: true})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        baseAllocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the vault', required: false})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier of the vault'})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        invested\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the vault'})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phaseEndTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp when current phase ends', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        privacy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultPrivacy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Privacy setting of the vault', enum: VaultPrivacy})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socialLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinkEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Social links', type: undefined, required: false})@DtoRepresent({transform: false, expose: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        timeRemaining\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Time remaining in current phase in milliseconds', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tvl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tvl', required: false})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        vaultImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Vault image', required: true})@DtoRepresent({transform:  => , expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        vaultStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaultStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status of the vault', enum: VaultStatus})@DtoRepresent({transform: false, expose: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/dto/vault.response.ts:119\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { DtoRepresent } from '../../../decorators/dto-represents.decorator';\nimport {\n  VaultPrivacy,\n  VaultStatus,\n  VaultType,\n  ValueMethod,\n  ContributionWindowType,\n  InvestmentWindowType,\n  TerminationType,\n} from '../../../types/vault.types';\n\nimport { AcquirerWhitelistEntity } from '@/database/acquirerWhitelist.entity';\nimport { Asset } from '@/database/asset.entity';\nimport { AssetsWhitelistEntity } from '@/database/assetsWhitelist.entity';\nimport { ContributorWhitelistEntity } from '@/database/contributorWhitelist.entity';\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { TagEntity } from '@/database/tag.entity';\nimport { User } from '@/database/user.entity';\n\nexport class VaultShortResponse {\n  @ApiProperty({ description: 'Unique identifier of the vault' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  id: string;\n\n  @ApiProperty({ description: 'Name of the vault' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  name: string;\n\n  @ApiProperty({ description: 'Description of the vault', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  description?: string;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  tvl?: number;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  baseAllocation?: number;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  total?: number;\n\n  @ApiProperty({ description: 'Tvl', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: true,\n  })\n  invested?: number;\n\n  @ApiProperty({ description: 'Privacy setting of the vault', enum: VaultPrivacy })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  privacy: VaultPrivacy;\n\n  @ApiProperty({ description: 'Timestamp when current phase ends', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  phaseEndTime?: string;\n\n  @ApiProperty({ description: 'Time remaining in current phase in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ obj }) => {\n      if (!obj.phaseEndTime) return null;\n      const now = new Date();\n      const endTime = new Date(obj.phaseEndTime);\n      const diff = endTime.getTime() - now.getTime();\n      return diff > 0 ? diff : 0;\n    },\n    expose: true,\n  })\n  timeRemaining?: number;\n\n  @ApiProperty({ description: 'Vault image', required: true })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  vaultImage?: FileEntity;\n\n  @ApiProperty({ description: 'Banner image', required: true })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  bannerImage?: FileEntity;\n\n  @ApiProperty({ description: 'Status of the vault', enum: VaultStatus })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  vaultStatus: VaultStatus;\n\n  @ApiProperty({ description: 'Social links', type: [LinkEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'socialLinks' },\n  })\n  socialLinks?: LinkEntity[];\n}\n\nexport class VaultFullResponse extends VaultShortResponse {\n  @ApiProperty({ description: 'Type of the vault', enum: VaultType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  type: VaultType;\n\n  @ApiProperty({ description: 'Fractional token image ' })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? value.url : null),\n    expose: true,\n  })\n  ftTokenImg: FileEntity;\n\n  @ApiProperty({ description: 'Hash of publication tx' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'publicationHash' },\n  })\n  publicationHash: string;\n\n  @ApiProperty({ description: 'Required values cost for success acquire phase in ada' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'requireReservedCostAda' },\n  })\n  requireReservedCostAda: number;\n\n  @ApiProperty({ description: 'Count of contributed assets  ' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'assetsCount' },\n  })\n  assetsCount: number;\n\n  @ApiProperty({ description: 'Response with list of assets prices  ' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'assetsPrices' },\n  })\n  assetsPrices?: any;\n\n  @ApiProperty({ description: 'Max count of contributed count ' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'maxContributeAssets' },\n  })\n  maxContributeAssets: number;\n\n  @ApiProperty({ description: 'Required values cost for success acquire phase in usd' })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'requireReservedCostUsd' },\n  })\n  requireReservedCostUsd: number;\n\n  @ApiProperty({ description: 'Valuation type', enum: ValueMethod, required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'valueMethod' },\n  })\n  valueMethod?: ValueMethod;\n\n  @ApiProperty({ description: 'Contract address', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'contractAddress' },\n  })\n  contractAddress: string;\n\n  @ApiProperty({ description: 'Valuation currency', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: { name: 'valuationCurrency' },\n  })\n  valuationCurrency?: string;\n\n  @ApiProperty({ description: 'Valuation amount', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'valuationAmount' },\n  })\n  valuationAmount?: number;\n\n  @ApiProperty({ description: 'Contribution duration in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'contributionDuration' },\n  })\n  contributionDuration?: number;\n\n  @ApiProperty({ description: 'Investment window duration in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'acquireWindowDuration' },\n  })\n  acquireWindowDuration?: number;\n\n  @ApiProperty({ description: 'Time elapsed duration in milliseconds', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? Number(value) : null),\n    expose: { name: 'timeElapsedIsEqualToTime' },\n  })\n  timeElapsedIsEqualToTime?: number;\n\n  @ApiProperty({ description: 'Contribution window type', enum: ContributionWindowType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  contributionOpenWindowType: ContributionWindowType;\n\n  @ApiProperty({ description: 'Contribution window time' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  contributionOpenWindowTime: string;\n\n  @ApiProperty({ description: 'Investment window type', enum: InvestmentWindowType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquireOpenWindowType: InvestmentWindowType;\n\n  @ApiProperty({ description: 'Investment window time' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquireOpenWindowTime: string;\n\n  @ApiProperty({ description: 'Number of assets offered' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  tokensForAcquires: number;\n\n  @ApiProperty({ description: 'FT acquire reserve' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquireReserve: number;\n\n  @ApiProperty({ description: 'Liquidity pool contribution' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  liquidityPoolContribution: number;\n\n  @ApiProperty({ description: 'FT token supply' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  ftTokenSupply: number;\n\n  @ApiProperty({ description: 'FT token ticker' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  vaultTokenTicker: string;\n\n  @ApiProperty({ description: 'FT token decimals' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  ftTokenDecimals: number;\n\n  @ApiProperty({ description: 'Termination type', enum: TerminationType })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  terminationType: TerminationType;\n\n  @ApiProperty({ description: 'Vault appreciation' })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  vaultAppreciation: number;\n\n  @ApiProperty({ description: 'Vault owner', type: () => User })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  owner: User;\n\n  @ApiProperty({ description: 'Creation threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  creationThreshold?: number;\n\n  @ApiProperty({ description: 'Start threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  startThreshold?: number;\n\n  @ApiProperty({ description: 'Vote threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  voteThreshold?: number;\n\n  @ApiProperty({ description: 'Execution threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  executionThreshold?: number;\n\n  @ApiProperty({ description: 'Cosigning threshold', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  cosigningThreshold?: number;\n\n  @ApiProperty({ description: 'Assets whitelist', type: [AssetsWhitelistEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  assetsWhitelist?: AssetsWhitelistEntity[];\n\n  @ApiProperty({ description: 'Acquirer whitelist', type: [AcquirerWhitelistEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquirerWhitelist?: AcquirerWhitelistEntity[];\n\n  @ApiProperty({ description: 'Contributor whitelist', type: [ContributorWhitelistEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  contributorWhitelist?: ContributorWhitelistEntity[];\n\n  @ApiProperty({ description: 'Assets', type: [Asset], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  assets?: Asset[];\n\n  @ApiProperty({ description: 'Acquirer whitelist CSV file', required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  acquirerWhitelistCsv?: FileEntity;\n\n  @ApiProperty({ description: 'Tags', type: [TagEntity], required: false })\n  @DtoRepresent({\n    transform: false,\n    expose: true,\n  })\n  tags?: TagEntity[];\n\n  @ApiProperty({ description: 'Contribution phase start time', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: {\n      name: 'contributionPhaseStart',\n    },\n  })\n  contributionPhaseStart?: string;\n\n  @ApiProperty({ description: 'Investment phase start time', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  acquirePhaseStart?: string;\n\n  @ApiProperty({ description: 'Locked at time', required: false })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  lockedAt?: string;\n\n  @ApiProperty({ description: 'Creation timestamp' })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  createdAt: string;\n\n  @ApiProperty({ description: 'Last update timestamp' })\n  @DtoRepresent({\n    transform: ({ value }) => (value ? new Date(value).toISOString() : null),\n    expose: true,\n  })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VaultStatusUpdate1745573712493.html":{"url":"classes/VaultStatusUpdate1745573712493.html","title":"class - VaultStatusUpdate1745573712493","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VaultStatusUpdate1745573712493\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745573712493-vaultStatusUpdate.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'VaultStatusUpdate1745573712493'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745573712493-vaultStatusUpdate.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745573712493-vaultStatusUpdate.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745573712493-vaultStatusUpdate.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class VaultStatusUpdate1745573712493 implements MigrationInterface {\n  name = 'VaultStatusUpdate1745573712493';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum\" RENAME TO \"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum\" AS ENUM('draft', 'created', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum_old\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\"`);\n    await queryRunner.query(`ALTER TABLE \"vault_tags\" DROP CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\"`);\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"vaults_vault_status_enum_old\" AS ENUM('draft', 'published', 'contribution', 'investment', 'locked', 'governance')`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vaults\" ALTER COLUMN \"vault_status\" TYPE \"public\".\"vaults_vault_status_enum_old\" USING \"vault_status\"::\"text\"::\"public\".\"vaults_vault_status_enum_old\"`\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"vaults_vault_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"vaults_vault_status_enum_old\" RENAME TO \"vaults_vault_status_enum\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_2b3fd4667b2be7a2d7a329083cc\" FOREIGN KEY (\"tag_id\") REFERENCES \"tags\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"vault_tags\" ADD CONSTRAINT \"FK_adf9f0b047319be1ec67ac1d1eb\" FOREIGN KEY (\"vault_id\") REFERENCES \"vaults\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaultsController.html":{"url":"controllers/VaultsController.html","title":"controller - VaultsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaultsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/vaults.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vaults\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                burnPublishAtempt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                burnVaultAttempt\n                            \n                            \n                                    \n                                    \n                                    \n                                createVault\n                            \n                            \n                                    \n                                    \n                                    \n                                getMyDraftVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                getMyVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getVaultById\n                            \n                            \n                                    \n                                    \n                                    \n                                getVaults\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getVaultTransactions\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                publishVault\n                            \n                            \n                                    \n                                    \n                                    \n                                saveDraft\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        burnPublishAtempt\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnPublishAtempt(id: string, query: GetVaultTransactionsDto, publishDto: PublishVaultDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Burn vault', description: 'Returns list of vault transactions. By default shows only confirmed transactions.', status: 200})@UseGuards(AuthGuard)@Post('burn-publish/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultTransactionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publishDto\n                                            \n                                                            PublishVaultDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        burnVaultAttempt\n                        \n                    \n                \n            \n            \n                \n                        \n                    burnVaultAttempt(id: string, query: GetVaultTransactionsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Burn vault', description: 'Returns list of vault transactions. By default shows only confirmed transactions.', status: 200})@UseGuards(AuthGuard)@Post('burn-build/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultTransactionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    createVault(req, data: CreateVaultReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Create vault', description: 'Vault successfully created', status: 200})@UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateVaultReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getMyDraftVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyDraftVaults(req, query: GetVaultsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Select my draft vaults', description: 'Returns list of my draft vaults. Supports sorting by name, created_at, or updated_at.', status: 200})@UseGuards(AuthGuard)@Get('my/drafts')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getMyVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyVaults(req, query: GetVaultsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Select my vaults', description: 'Returns list of my vaults. Can be filtered by status: open (published, contribution, acquire) or locked. Supports sorting by name, created_at, or updated_at.', status: 200})@UseGuards(AuthGuard)@Get('my')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getVaultById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultById(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get one vault', description: 'Returns vault if user is the owner. Uses draft service for draft vaults.', status: 200})@UseGuards(AuthGuard)@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getVaults\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaults(query: GetVaultsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'List of public vaults', description: 'Returns paginated list of all published vaults. Default page: 1, default limit: 10. Supports sorting by name, created_at, or updated_at. Response includes total count and total pages.', status: 200})@UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            GetVaultsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getVaultTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVaultTransactions(id: string, query: GetVaultTransactionsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Get vault transactions', description: 'Returns list of vault transactions. By default shows only confirmed transactions.', status: 200})@UseGuards(AuthGuard)@Get(':id/transactions')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            GetVaultTransactionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        publishVault\n                        \n                    \n                \n            \n            \n                \n                        \n                    publishVault(req, publishDto: PublishVaultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Publish vault', description: 'Publishes a vault with the provided transaction', status: 200})@UseGuards(AuthGuard)@Post('/publish')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publishDto\n                                            \n                                                            PublishVaultDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        saveDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDraft(req, data: SaveDraftReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiDoc({summary: 'Save draft vault', description: 'Vault successfully saved', status: 200})@UseGuards(AuthGuard)@Post('save-draft')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vaults/vaults.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            SaveDraftReq\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, Param, Request, UseGuards, Query, Logger } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { ApiDoc } from '../../decorators/api-doc.decorator';\nimport { AuthGuard } from '../auth/auth.guard';\n\nimport { DraftVaultsService } from './draft-vaults.service';\nimport { CreateVaultReq } from './dto/createVault.req';\nimport { GetVaultTransactionsDto } from './dto/get-vault-transactions.dto';\nimport { GetVaultsDto } from './dto/get-vaults.dto';\nimport { PublishVaultDto } from './dto/publish-vault.dto';\nimport { SaveDraftReq } from './dto/saveDraft.req';\nimport { TransactionsService } from './processing-tx/offchain-tx/transactions.service';\nimport { VaultsService } from './vaults.service';\n\n@ApiTags('vaults')\n@Controller('vaults')\nexport class VaultsController {\n  private readonly logger = new Logger(VaultsController.name);\n  constructor(\n    private readonly vaultsService: VaultsService,\n    private readonly draftVaultsService: DraftVaultsService,\n    private readonly transactionsService: TransactionsService\n  ) {}\n\n  @ApiDoc({\n    summary: 'Create vault',\n    description: 'Vault successfully created',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post()\n  createVault(\n    @Request() req,\n    @Body()\n    data: CreateVaultReq\n  ) {\n    const userId = req.user.sub;\n    return this.vaultsService.createVault(userId, data);\n  }\n\n  @ApiDoc({\n    summary: 'Publish vault',\n    description: 'Publishes a vault with the provided transaction',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('/publish')\n  async publishVault(@Request() req, @Body() publishDto: PublishVaultDto): Promise {\n    const userId = req.user.sub;\n    try {\n      return await this.vaultsService.publishVault(userId, publishDto);\n    } catch (error) {\n      this.logger.error('Error publishing vault', error);\n      throw error;\n    }\n  }\n\n  @ApiDoc({\n    summary: 'Save draft vault',\n    description: 'Vault successfully saved',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('save-draft')\n  saveDraft(\n    @Request() req,\n    @Body()\n    data: SaveDraftReq\n  ) {\n    const userId = req.user.sub;\n    this.logger.log('drfat data ', data);\n    return this.draftVaultsService.saveDraftVault(userId, data);\n  }\n\n  @ApiDoc({\n    summary: 'Select my vaults',\n    description:\n      'Returns list of my vaults. Can be filtered by status: open (published, contribution, acquire) or locked. Supports sorting by name, created_at, or updated_at.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('my')\n  getMyVaults(@Request() req, @Query() query: GetVaultsDto) {\n    const userId = req.user.sub;\n    return this.vaultsService.getMyVaults(userId, query.filter, query.page, query.limit, query.sortBy, query.sortOrder);\n  }\n\n  @ApiDoc({\n    summary: 'Select my draft vaults',\n    description: 'Returns list of my draft vaults. Supports sorting by name, created_at, or updated_at.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get('my/drafts')\n  getMyDraftVaults(@Request() req, @Query() query: GetVaultsDto) {\n    const userId = req.user.sub;\n    return this.draftVaultsService.getMyDraftVaults(userId, query.page, query.limit, query.sortBy, query.sortOrder);\n  }\n\n  @ApiDoc({\n    summary: 'Get one vault',\n    description: 'Returns vault if user is the owner. Uses draft service for draft vaults.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get(':id')\n  async getVaultById(@Param('id') id: string, @Request() req) {\n    const userId = req.user.sub;\n    try {\n      return await this.draftVaultsService.getDraftVaultById(id, userId);\n    } catch (error) {\n      if (error?.message === 'Draft vault not found') {\n        return this.vaultsService.getVaultById(id, userId);\n      }\n      throw error;\n    }\n  }\n\n  @ApiDoc({\n    summary: 'List of public vaults',\n    description:\n      'Returns paginated list of all published vaults. Default page: 1, default limit: 10. Supports sorting by name, created_at, or updated_at. Response includes total count and total pages.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get()\n  getVaults(@Query() query: GetVaultsDto, @Request() req) {\n    const userId = req.user.sub;\n\n    return this.vaultsService.getVaults(userId, query.filter, query.page, query.limit, query.sortBy, query.sortOrder);\n  }\n\n  @ApiDoc({\n    summary: 'Get vault transactions',\n    description: 'Returns list of vault transactions. By default shows only confirmed transactions.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Get(':id/transactions')\n  async getVaultTransactions(@Param('id') id: string, @Query() query: GetVaultTransactionsDto, @Request() req) {\n    const userId = req.user.sub;\n    // Verify vault exists and user has access\n    await this.vaultsService.getVaultById(id, userId);\n    return this.transactionsService.getVaultTransactions(id, query.status, query.type);\n  }\n\n  @ApiDoc({\n    summary: 'Burn vault',\n    description: 'Returns list of vault transactions. By default shows only confirmed transactions.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('burn-build/:id')\n  async burnVaultAttempt(@Param('id') id: string, @Query() query: GetVaultTransactionsDto, @Request() req) {\n    const userId = req.user.sub;\n    return await this.vaultsService.burnVaultAttempt(id, userId);\n  }\n\n  @ApiDoc({\n    summary: 'Burn vault',\n    description: 'Returns list of vault transactions. By default shows only confirmed transactions.',\n    status: 200,\n  })\n  @UseGuards(AuthGuard)\n  @Post('burn-publish/:id')\n  async burnPublishAtempt(\n    @Param('id') id: string,\n    @Query() query: GetVaultTransactionsDto,\n    @Body() publishDto: PublishVaultDto,\n    @Request() req\n  ) {\n    const userId = req.user.sub;\n\n    return await this.vaultsService.burnVaultPublishTx(id, userId, publishDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaultsModule.html":{"url":"modules/VaultsModule.html","title":"module - VaultsModule","body":"\n                   \n\n\n\n\n    Modules\n    VaultsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VaultsModule\n\n\n\ncluster_VaultsModule_providers\n\n\n\ncluster_VaultsModule_imports\n\n\n\ncluster_VaultsModule_exports\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nVaultsModule\n\nVaultsModule\n\nVaultsModule -->\n\nAwsModule->VaultsModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nVaultsModule -->\n\nBlockchainModule->VaultsModule\n\n\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nVaultsModule -->\n\nLifecycleModule->VaultsModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nVaultsModule -->\n\nTransactionsModule->VaultsModule\n\n\n\n\n\nDraftVaultsService \n\nDraftVaultsService \n\nDraftVaultsService  -->\n\nVaultsModule->DraftVaultsService \n\n\n\n\n\nVaultsService \n\nVaultsService \n\nVaultsService  -->\n\nVaultsModule->VaultsService \n\n\n\n\n\nDraftVaultsService\n\nDraftVaultsService\n\nVaultsModule -->\n\nDraftVaultsService->VaultsModule\n\n\n\n\n\nVaultsService\n\nVaultsService\n\nVaultsModule -->\n\nVaultsService->VaultsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaults/vaults.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DraftVaultsService\n                        \n                        \n                            VaultsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaultsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                        \n                            BlockchainModule\n                        \n                        \n                            LifecycleModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DraftVaultsService\n                        \n                        \n                            VaultsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AwsModule } from '../aws_bucket/aws.module';\n\nimport { DraftVaultsService } from './draft-vaults.service';\nimport { LifecycleModule } from './phase-management/lifecycle/lifecycle.module';\nimport { TransactionsModule } from './processing-tx/offchain-tx/transactions.module';\nimport { BlockchainModule } from './processing-tx/onchain/blockchain.module';\nimport { VaultsController } from './vaults.controller';\nimport { VaultsService } from './vaults.service';\n\nimport { AcquirerWhitelistEntity } from '@/database/acquirerWhitelist.entity';\nimport { Asset } from '@/database/asset.entity';\nimport { AssetsWhitelistEntity } from '@/database/assetsWhitelist.entity';\nimport { ContributorWhitelistEntity } from '@/database/contributorWhitelist.entity';\nimport { FileEntity } from '@/database/file.entity';\nimport { LinkEntity } from '@/database/link.entity';\nimport { TagEntity } from '@/database/tag.entity';\nimport { User } from '@/database/user.entity';\nimport { Vault } from '@/database/vault.entity';\n\n@Module({\n  imports: [\n    AwsModule,\n    LifecycleModule,\n    TransactionsModule,\n    BlockchainModule,\n    TypeOrmModule.forFeature([\n      Vault,\n      User,\n      FileEntity,\n      Asset,\n      AssetsWhitelistEntity,\n      LinkEntity,\n      AcquirerWhitelistEntity,\n      TagEntity,\n      ContributorWhitelistEntity,\n    ]),\n  ],\n  providers: [VaultsService, DraftVaultsService],\n  controllers: [VaultsController],\n  exports: [VaultsService, DraftVaultsService],\n})\nexport class VaultsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VoteReq.html":{"url":"classes/VoteReq.html","title":"class - VoteReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VoteReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/phase-management/governance/dto/vote.req.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                option\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                reason\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        option\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Selected voting option', example: 'Yes'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/vote.req.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Optional reason for the vote', required: false, example: 'I support this proposal because...'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/phase-management/governance/dto/vote.req.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class VoteReq {\n  @ApiProperty({\n    description: 'Selected voting option',\n    example: 'Yes',\n  })\n  @IsNotEmpty()\n  @IsString()\n  option: string;\n\n  @ApiProperty({\n    description: 'Optional reason for the vote',\n    required: false,\n    example: 'I support this proposal because...',\n  })\n  @IsString()\n  reason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VyfiController.html":{"url":"controllers/VyfiController.html","title":"controller - VyfiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VyfiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/vyfi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vyfi\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                checkPool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createLiquidityPool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getPoolInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        checkPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPool(networkId: number, tokenAUnit: string, tokenBUnit: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('check-pool')@ApiOperation({summary: 'Check if a VyFi liquidity pool exists'})@ApiQuery({name: 'networkId', required: true, type: Number})@ApiQuery({name: 'tokenAUnit', required: true, type: String})@ApiQuery({name: 'tokenBUnit', required: true, type: String})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                networkId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenAUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenBUnit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createLiquidityPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLiquidityPool(createPoolDto: CreatePoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create-pool')@ApiOperation({summary: 'Create a new VyFi liquidity pool'})@ApiBody({type: CreatePoolDto})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPoolDto\n                                            \n                                                            CreatePoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getPoolInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPoolInfo(poolId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pool/:poolId')@ApiOperation({summary: 'Get VyFi pool information'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                poolId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Query } from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiQuery, ApiBody } from '@nestjs/swagger';\n\nimport { CreatePoolDto } from './dto/create-pool.dto';\nimport { VyfiService } from './vyfi.service';\n\n@ApiTags('VyFi')\n@Controller('vyfi')\nexport class VyfiController {\n  constructor(private readonly vyfiService: VyfiService) {}\n\n  @Get('check-pool')\n  @ApiOperation({ summary: 'Check if a VyFi liquidity pool exists' })\n  @ApiQuery({ name: 'networkId', required: true, type: Number })\n  @ApiQuery({ name: 'tokenAUnit', required: true, type: String })\n  @ApiQuery({ name: 'tokenBUnit', required: true, type: String })\n  async checkPool(\n    @Query('networkId') networkId: number,\n    @Query('tokenAUnit') tokenAUnit: string,\n    @Query('tokenBUnit') tokenBUnit: string\n  ) {\n    return this.vyfiService.checkPool({\n      networkId,\n      tokenAUnit,\n      tokenBUnit,\n    });\n  }\n\n  @Post('create-pool')\n  @ApiOperation({ summary: 'Create a new VyFi liquidity pool' })\n  @ApiBody({ type: CreatePoolDto })\n  async createLiquidityPool(@Body() createPoolDto: CreatePoolDto) {\n    return this.vyfiService.createLiquidityPool(createPoolDto);\n  }\n\n  @Get('pool/:poolId')\n  @ApiOperation({ summary: 'Get VyFi pool information' })\n  async getPoolInfo(@Query('poolId') poolId: string) {\n    return this.vyfiService.getPoolInfo(poolId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VyfiModule.html":{"url":"modules/VyfiModule.html","title":"module - VyfiModule","body":"\n                   \n\n\n\n\n    Modules\n    VyfiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VyfiModule\n\n\n\ncluster_VyfiModule_exports\n\n\n\ncluster_VyfiModule_providers\n\n\n\n\nVyfiService \n\nVyfiService \n\n\n\nVyfiModule\n\nVyfiModule\n\nVyfiService  -->\n\nVyfiModule->VyfiService \n\n\n\n\n\nVyfiService\n\nVyfiService\n\nVyfiModule -->\n\nVyfiService->VyfiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vyfi/vyfi.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VyfiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VyfiController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VyfiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { VyfiController } from './vyfi.controller';\nimport { VyfiService } from './vyfi.service';\n\n@Module({\n  imports: [HttpModule, ConfigModule],\n  controllers: [VyfiController],\n  providers: [VyfiService],\n  exports: [VyfiService],\n})\nexport class VyfiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VyfiService.html":{"url":"injectables/VyfiService.html","title":"injectable - VyfiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VyfiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vyfi/vyfi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adaAnvilApiUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                poolOwner\n                            \n                            \n                                    Private\n                                    Readonly\n                                vyfiApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkPool\n                            \n                            \n                                    Async\n                                createLiquidityPool\n                            \n                            \n                                    Private\n                                formatMetadataText\n                            \n                            \n                                    Async\n                                getPoolInfo\n                            \n                            \n                                    Private\n                                    Async\n                                getUtxos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vyfi/vyfi.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPool(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLiquidityPool\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLiquidityPool(createPoolDto: CreatePoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPoolDto\n                                            \n                                                            CreatePoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatMetadataText\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatMetadataText(tokenA: literal type, tokenB: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenA\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenB\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPoolInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPoolInfo(poolId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                poolId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getUtxos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUtxos(address: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vyfi/vyfi.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                        Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adaAnvilApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://preprod.api.ada-anvil.app/v2/services/transactions'\n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/vyfi.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        poolOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/vyfi.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        vyfiApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.vyfi.io'\n                    \n                \n                    \n                        \n                                Defined in src/modules/vyfi/vyfi.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Buffer } from 'buffer';\n\nimport { Address, FixedTransaction, PrivateKey } from '@emurgo/cardano-serialization-lib-nodejs';\nimport { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { firstValueFrom } from 'rxjs';\n\nimport { CreatePoolDto } from './dto/create-pool.dto';\n\nconst poolOwner = {\n  skey: 'ed25519e_sk1eqleq0gr7awjymmkcehm4pza8ffq385fyxkntqe74u384fgfs4w7vncmhdlc2u2l78g4r82ctfw6s36dnuguadxh3lggluy9pwansegfprll7',\n  base_address_preprod:\n    'addr_test1qpjavykfl5n4t47xklzyuccevgple0e4c7mke2m6cd0z0fwy0pq8p292lgrquq7hx75c4wpvz0h8cjp69mp7men3nw8s46zete',\n};\n\n// Constants for VyFi pool creation\nconst VYFI_CONSTANTS = {\n  PROCESSING_FEE: 1900000, // 1.9 ADA in lovelace\n  MIN_POOL_ADA: 2000000, // 2 ADA in lovelace\n  MIN_RETURN_ADA: 2000000, // 2 ADA in lovelace\n  TOTAL_REQUIRED_ADA: 5900000, // 5.9 ADA in lovelace\n  POOL_ADDRESS:\n    'addr1qy5dasujdtm4hzrtamca9sjetu78hgqt8rkqs9tu69n0vq47wr70fcgkj4fe9tyr6z2jz8qvwvrc2gq04ltky960fw0smcuf0t',\n  METADATA_LABEL: '53554741',\n};\n\n@Injectable()\nexport class VyfiService {\n  private readonly vyfiApiUrl = 'https://api.vyfi.io';\n  private readonly adaAnvilApiUrl = 'https://preprod.api.ada-anvil.app/v2/services/transactions';\n  private readonly poolOwner: any;\n\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService\n  ) {\n    this.poolOwner = poolOwner;\n  }\n\n  async checkPool(params: { networkId: number; tokenAUnit: string; tokenBUnit: string }) {\n    const { networkId, tokenAUnit, tokenBUnit } = params;\n    const url = `${this.vyfiApiUrl}/lp`;\n    const queryParams = new URLSearchParams({\n      networkId: networkId.toString(),\n      tokenAUnit,\n      tokenBUnit,\n      v2: 'true',\n    });\n\n    try {\n      const response = await firstValueFrom(this.httpService.get(`${url}?${queryParams.toString()}`));\n      return {\n        exists: true,\n        data: response.data,\n      };\n    } catch (error) {\n      if (error.response?.status === 500) {\n        return {\n          exists: false,\n          error: 'Pool does not exist',\n        };\n      }\n      throw new Error(`Failed to check VyFi pool: ${error.message}`);\n    }\n  }\n\n  private formatMetadataText(\n    tokenA: { policyId?: string; assetName: string },\n    tokenB: { policyId?: string; assetName: string }\n  ): string {\n    const shortA = tokenA.policyId ? tokenA.policyId.substring(0, 8) : 'lovelace';\n    const shortB = tokenB.policyId ? tokenB.policyId.substring(0, 8) : 'lovelace';\n    return `VyFi: LP Factory Create Pool Order Request -- /${VYFI_CONSTANTS.METADATA_LABEL} ${shortA}/${shortB}`;\n  }\n\n  async createLiquidityPool(createPoolDto: CreatePoolDto) {\n    const { networkId, tokenA, tokenB } = createPoolDto;\n\n    // First check if pool exists\n    const poolCheck = await this.checkPool({\n      networkId,\n      tokenAUnit: tokenA.policyId ? `${tokenA.policyId}${tokenA.assetName}` : 'lovelace',\n      tokenBUnit: tokenB.policyId ? `${tokenB.policyId}${tokenB.assetName}` : 'lovelace',\n    });\n\n    if (poolCheck.exists) {\n      throw new Error('Pool already exists');\n    }\n\n    const CUSTOMER_ADDRESS = this.poolOwner.base_address_preprod;\n\n    // Generate metadata\n    const metadataText = this.formatMetadataText(tokenA, tokenB);\n\n    // Get UTxOs\n    const utxos = await this.getUtxos(Address.from_bech32(CUSTOMER_ADDRESS));\n    if (utxos.len() === 0) {\n      throw new Error('No UTXOs found');\n    }\n\n    const selectedUtxo = utxos.get(0);\n    const REQUIRED_INPUTS = [selectedUtxo.to_hex()];\n\n    // Construct transaction input with proper ADA amounts\n    const input = {\n      changeAddress: CUSTOMER_ADDRESS,\n      message: 'Create Liquidity Pool',\n      outputs: [\n        {\n          address: VYFI_CONSTANTS.POOL_ADDRESS,\n          assets: [\n            {\n              assetName: { name: tokenA.assetName, format: 'hex' },\n              policyId: tokenA.policyId,\n              quantity: tokenA.amount,\n            },\n            {\n              assetName: { name: tokenB.assetName, format: 'hex' },\n              policyId: tokenB.policyId,\n              quantity: tokenB.amount,\n            },\n          ],\n          lovelace: VYFI_CONSTANTS.TOTAL_REQUIRED_ADA,\n        },\n      ],\n      metadata: {\n        [VYFI_CONSTANTS.METADATA_LABEL]: metadataText,\n      },\n      requiredInputs: REQUIRED_INPUTS,\n    };\n\n    // Get API key from config\n    const apiKey = this.configService.get('VYFI_API_KEY');\n    if (!apiKey) {\n      throw new Error('VYFI_API_KEY not configured');\n    }\n\n    // Build the transaction\n    const buildResponse = await firstValueFrom(\n      this.httpService.post(`${this.adaAnvilApiUrl}/build`, input, {\n        headers: {\n          'x-api-key': apiKey,\n          'Content-Type': 'application/json',\n        },\n      })\n    );\n\n    const transaction = buildResponse.data;\n\n    // Sign the transaction\n    const txToSubmitOnChain = FixedTransaction.from_bytes(Buffer.from(transaction.complete, 'hex'));\n\n    txToSubmitOnChain.sign_and_add_vkey_signature(PrivateKey.from_bech32(this.poolOwner.skey));\n\n    // Submit the transaction\n    const submitResponse = await firstValueFrom(\n      this.httpService.post(\n        `${this.adaAnvilApiUrl}/submit`,\n        {\n          signatures: [],\n          transaction: txToSubmitOnChain.to_hex(),\n        },\n        {\n          headers: {\n            'x-api-key': apiKey,\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n    );\n\n    return {\n      ...submitResponse.data,\n      poolAddress: VYFI_CONSTANTS.POOL_ADDRESS,\n      fees: {\n        processingFee: VYFI_CONSTANTS.PROCESSING_FEE,\n        minPoolAda: VYFI_CONSTANTS.MIN_POOL_ADA,\n        minReturnAda: VYFI_CONSTANTS.MIN_RETURN_ADA,\n        totalRequiredAda: VYFI_CONSTANTS.TOTAL_REQUIRED_ADA,\n      },\n    };\n  }\n\n  private async getUtxos(address: Address) {\n    const apiKey = this.configService.get('BLOCKFROST_API_KEY');\n    if (!apiKey) {\n      throw new Error('BLOCKFROST_API_KEY not configured');\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.httpService.get(`https://cardano-preprod.blockfrost.io/api/v0/addresses/${address.to_bech32()}/utxos`, {\n          headers: {\n            project_id: apiKey,\n          },\n        })\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error(`Failed to get UTXOs: ${error.message}`);\n    }\n  }\n\n  async getPoolInfo(poolId: string) {\n    try {\n      const response = await firstValueFrom(this.httpService.get(`${this.vyfiApiUrl}/pool/${poolId}`));\n      return response.data;\n    } catch (error) {\n      throw new Error(`Failed to get VyFi pool info: ${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletSummaryDto.html":{"url":"classes/WalletSummaryDto.html","title":"class - WalletSummaryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletSummaryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/taptools/dto/wallet-summary.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assets\n                            \n                            \n                                lastUpdated\n                            \n                            \n                                summary\n                            \n                            \n                                totalValueAda\n                            \n                            \n                                totalValueUsd\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        assets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssetValueDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        summary\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueAda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalValueUsd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/taptools/dto/wallet-summary.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AssetValueDto } from './asset-value.dto';\n\nexport class WalletSummaryDto {\n  wallet: string;\n  assets: AssetValueDto[];\n  totalValueAda: number;\n  totalValueUsd: number;\n  lastUpdated: string;\n  summary: {\n    totalAssets: number;\n    nfts: number;\n    tokens: number;\n    ada: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebhookVerificationService.html":{"url":"injectables/WebhookVerificationService.html","title":"injectable - WebhookVerificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebhookVerificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxEventAge\n                            \n                            \n                                    Private\n                                    Readonly\n                                webhookAuthToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                verifySignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        verifySignature\n                        \n                    \n                \n            \n            \n                \nverifySignature(payload: string, signatureHeader: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signatureHeader\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WebhookVerificationService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        maxEventAge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        webhookAuthToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/vaults/processing-tx/onchain/webhook-verification.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\n\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n// TODO: refactor or remove this service. Webhook verification is not used in the current implementation.\n// It was initially intended to verify Blockfrost webhook signatures, but the current setup does not utilize webhooks.\n// Used scanner service instead for processing transactions and events.\n\n@Injectable()\nexport class WebhookVerificationService {\n  private readonly logger = new Logger(WebhookVerificationService.name);\n  private readonly webhookAuthToken: string;\n  private readonly maxEventAge: number;\n\n  constructor(private readonly configService: ConfigService) {\n    this.webhookAuthToken = this.configService.get('BLOCKFROST_WEBHOOK_AUTH_TOKEN');\n    this.maxEventAge = 600; // 10 minutes max age for webhook events\n  }\n\n  verifySignature(payload: string, signatureHeader: string): boolean {\n    if (!this.webhookAuthToken) {\n      this.logger.error('BLOCKFROST_WEBHOOK_AUTH_TOKEN is not configured');\n      throw new Error('BLOCKFROST_WEBHOOK_AUTH_TOKEN is not configured');\n    }\n\n    if (!signatureHeader) {\n      this.logger.error('blockfrost-signature header is missing');\n      throw new Error('blockfrost-signature header is missing');\n    }\n\n    try {\n      // Parse the signature header\n      const [timestampHeader, signatureValue] = signatureHeader.split(',');\n      const timestamp = timestampHeader.split('=')[1];\n      const signature = signatureValue.split('=')[1];\n\n      // Log parsed values\n      this.logger.debug('Parsed signature components:', {\n        timestamp,\n        signature,\n        payloadLength: payload.length,\n      });\n\n      // Prepare the signature payload as per Blockfrost docs\n      const signaturePayload = `${timestamp}.${payload}`;\n\n      // Compute HMAC\n      const expectedSignature = crypto\n        .createHmac('sha256', this.webhookAuthToken)\n        .update(signaturePayload)\n        .digest('hex');\n\n      // Log computed values for debugging\n      this.logger.debug('Computed signature:', {\n        expectedSignature,\n        receivedSignature: signature,\n        match: expectedSignature === signature,\n      });\n\n      // Verify timestamp is within tolerance\n      const currentTime = Math.floor(Date.now() / 1000);\n      const timeDiff = Math.abs(currentTime - parseInt(timestamp));\n\n      if (timeDiff > this.maxEventAge) {\n        this.logger.error('Webhook event is too old:', {\n          eventTime: timestamp,\n          currentTime,\n          maxAge: this.maxEventAge,\n        });\n        return false;\n      }\n\n      // Compare signatures\n      if (expectedSignature === signature) {\n        this.logger.log('Webhook signature verified successfully');\n        return true;\n      }\n\n      this.logger.error('Signature mismatch:', {\n        expected: expectedSignature,\n        received: signature,\n      });\n      return false;\n    } catch (error) {\n      this.logger.error('Error during signature verification:', {\n        error: error.message,\n        signatureHeader,\n      });\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @blaze-cardano/uplc : 0.3.0\n        \n            @blockfrost/blockfrost-js : ^6.0.0\n        \n            @emurgo/cardano-message-signing-nodejs : ^1.1.0\n        \n            @emurgo/cardano-serialization-lib-nodejs : ^14.1.2\n        \n            @nestjs/axios : ^4.0.0\n        \n            @nestjs/bullmq : ^11.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/schedule : ^5.0.1\n        \n            @nestjs/swagger : ^8.1.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @types/cbor : ^6.0.4\n        \n            aws-sdk : ^2.1692.0\n        \n            axios : ^1.8.4\n        \n            bullmq : ^5.56.0\n        \n            cbor : ^10.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            crypto : ^1.0.1\n        \n            csv-parse : ^5.6.0\n        \n            multer : ^1.4.5-lts.1\n        \n            node-cache : ^5.1.2\n        \n            pg : ^8.13.1\n        \n            raw-body : ^3.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            typeorm-naming-strategies : ^4.1.0\n        \n            unique-username-generator : ^1.4.0\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AssetOriginType   (src/.../asset.types.ts)\n                        \n                        \n                            AssetStatus   (src/.../asset.types.ts)\n                        \n                        \n                            AssetType   (src/.../asset.types.ts)\n                        \n                        \n                            ClaimStatus   (src/.../claim.types.ts)\n                        \n                        \n                            ContributionWindowType   (src/.../vault.types.ts)\n                        \n                        \n                            InvestmentWindowType   (src/.../vault.types.ts)\n                        \n                        \n                            OnchainTransactionStatus   (src/.../blockchain.service.ts)\n                        \n                        \n                            OnchainTransactionStatus   (src/.../transaction-status.enum.ts)\n                        \n                        \n                            ProposalType   (src/.../create-proposal.req.ts)\n                        \n                        \n                            SortOrder   (src/.../get-vaults.dto.ts)\n                        \n                        \n                            TerminationType   (src/.../vault.types.ts)\n                        \n                        \n                            TransactionStatus   (src/.../transaction.types.ts)\n                        \n                        \n                            TransactionType   (src/.../transaction.types.ts)\n                        \n                        \n                            ValueMethod   (src/.../vault.types.ts)\n                        \n                        \n                            VaultFilter   (src/.../get-vaults.dto.ts)\n                        \n                        \n                            VaultPrivacy   (src/.../vault.types.ts)\n                        \n                        \n                            VaultSortField   (src/.../get-vaults.dto.ts)\n                        \n                        \n                            VaultStatus   (src/.../vault.types.ts)\n                        \n                        \n                            VaultType   (src/.../vault.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/asset.types.ts\n    \n        \n            \n                \n                    \n                        \n                        AssetOriginType\n                    \n                \n                        \n                            \n                                 INVESTED\n                            \n                        \n                        \n                            \n                                Value : invested\n                            \n                        \n                        \n                            \n                                 ACQUIRED\n                            \n                        \n                        \n                            \n                                Value : acquired\n                            \n                        \n                        \n                            \n                                 CONTRIBUTED\n                            \n                        \n                        \n                            \n                                Value : contributed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        AssetStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOCKED\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 RELEASED\n                            \n                        \n                        \n                            \n                                Value : released\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        AssetType\n                    \n                \n                        \n                            \n                                 NFT\n                            \n                        \n                        \n                            \n                                Value : nft\n                            \n                        \n                        \n                            \n                                 CNT\n                            \n                        \n                        \n                            \n                                Value : cnt\n                            \n                        \n            \n        \n\n    src/types/claim.types.ts\n    \n        \n            \n                \n                    \n                        \n                        ClaimStatus\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                Value : disabled\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 CLAIMED\n                            \n                        \n                        \n                            \n                                Value : claimed\n                            \n                        \n            \n        \n\n    src/types/vault.types.ts\n    \n        \n            \n                \n                    \n                        \n                        ContributionWindowType\n                    \n                \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n                        \n                            \n                                 uponVaultLaunch\n                            \n                        \n                        \n                            \n                                Value : upon-vault-launch\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InvestmentWindowType\n                    \n                \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n                        \n                            \n                                 uponAssetWindowClosing\n                            \n                        \n                        \n                            \n                                Value : upon-asset-window-closing\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TerminationType\n                    \n                \n                        \n                            \n                                 dao\n                            \n                        \n                        \n                            \n                                Value : dao\n                            \n                        \n                        \n                            \n                                 programmed\n                            \n                        \n                        \n                            \n                                Value : programmed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueMethod\n                    \n                \n                        \n                            \n                                 lbe\n                            \n                        \n                        \n                            \n                                Value : lbe\n                            \n                        \n                        \n                            \n                                 fixed\n                            \n                        \n                        \n                            \n                                Value : fixed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultPrivacy\n                    \n                \n                        \n                            \n                                 private\n                            \n                        \n                        \n                            \n                                Value : private\n                            \n                        \n                        \n                            \n                                 public\n                            \n                        \n                        \n                            \n                                Value : public\n                            \n                        \n                        \n                            \n                                 semiPrivate\n                            \n                        \n                        \n                            \n                                Value : semi-private\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultStatus\n                    \n                \n                        \n                            \n                                 draft\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 created\n                            \n                        \n                        \n                            \n                                Value : created\n                            \n                        \n                        \n                            \n                                 published\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n                        \n                            \n                                 contribution\n                            \n                        \n                        \n                            \n                                Value : contribution\n                            \n                        \n                        \n                            \n                                 acquire\n                            \n                        \n                        \n                            \n                                Value : acquire\n                            \n                        \n                        \n                            \n                                 investment\n                            \n                        \n                        \n                            \n                                Value : investment\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 governance\n                            \n                        \n                        \n                            \n                                Value : governance\n                            \n                        \n                        \n                            \n                                 failed\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultType\n                    \n                \n                        \n                            \n                                 single\n                            \n                        \n                        \n                            \n                                Value : single\n                            \n                        \n                        \n                            \n                                 multi\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n                        \n                            \n                                 ctn\n                            \n                        \n                        \n                            \n                                Value : ctn\n                            \n                        \n                        \n                            \n                                 cnt\n                            \n                        \n                        \n                            \n                                Value : cnt\n                            \n                        \n            \n        \n\n    src/modules/vaults/processing-tx/onchain/blockchain.service.ts\n    \n        \n            \n                \n                    \n                        \n                        OnchainTransactionStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 CONFIRMED\n                            \n                        \n                        \n                            \n                                Value : confirmed\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : not_found\n                            \n                        \n            \n        \n\n    src/modules/vaults/processing-tx/onchain/types/transaction-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OnchainTransactionStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 CONFIRMED\n                            \n                        \n                        \n                            \n                                Value : confirmed\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : not_found\n                            \n                        \n            \n        \n\n    src/modules/vaults/phase-management/governance/dto/create-proposal.req.ts\n    \n        \n            \n                \n                    \n                        \n                        ProposalType\n                    \n                \n                        \n                            \n                                 ASSET_SALE\n                            \n                        \n                        \n                            \n                                Value : asset_sale\n                            \n                        \n                        \n                            \n                                 VAULT_STRATEGY\n                            \n                        \n                        \n                            \n                                Value : vault_strategy\n                            \n                        \n                        \n                            \n                                 PARAMETER_CHANGE\n                            \n                        \n                        \n                            \n                                Value : parameter_change\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n            \n        \n\n    src/modules/vaults/dto/get-vaults.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultFilter\n                    \n                \n                        \n                            \n                                 open\n                            \n                        \n                        \n                            \n                                Value : open\n                            \n                        \n                        \n                            \n                                 locked\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 contribution\n                            \n                        \n                        \n                            \n                                Value : contribution\n                            \n                        \n                        \n                            \n                                 acquire\n                            \n                        \n                        \n                            \n                                Value : acquire\n                            \n                        \n                        \n                            \n                                 governance\n                            \n                        \n                        \n                            \n                                Value : governance\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VaultSortField\n                    \n                \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 createdAt\n                            \n                        \n                        \n                            \n                                Value : created_at\n                            \n                        \n                        \n                            \n                                 updatedAt\n                            \n                        \n                        \n                            \n                                Value : updated_at\n                            \n                        \n            \n        \n\n    src/types/transaction.types.ts\n    \n        \n            \n                \n                    \n                        \n                        TransactionStatus\n                    \n                \n                        \n                            \n                                 created\n                            \n                        \n                        \n                            \n                                Value : created\n                            \n                        \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 submitted\n                            \n                        \n                        \n                            \n                                Value : submitted\n                            \n                        \n                        \n                            \n                                 confirmed\n                            \n                        \n                        \n                            \n                                Value : confirmed\n                            \n                        \n                        \n                            \n                                 failed\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n                        \n                            \n                                 stuck\n                            \n                        \n                        \n                            \n                                Value : stuck\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TransactionType\n                    \n                \n                        \n                            \n                                 mint\n                            \n                        \n                        \n                            \n                                Value : mint\n                            \n                        \n                        \n                            \n                                 payment\n                            \n                        \n                        \n                            \n                                Value : payment\n                            \n                        \n                        \n                            \n                                 contribute\n                            \n                        \n                        \n                            \n                                Value : contribute\n                            \n                        \n                        \n                            \n                                 claim\n                            \n                        \n                        \n                            \n                                Value : claim\n                            \n                        \n                        \n                            \n                                 acquire\n                            \n                        \n                        \n                            \n                                Value : acquire\n                            \n                        \n                        \n                            \n                                 investment\n                            \n                        \n                        \n                            \n                                Value : investment\n                            \n                        \n                        \n                            \n                                 burn\n                            \n                        \n                        \n                            \n                                Value : burn\n                            \n                        \n                        \n                            \n                                 swap\n                            \n                        \n                        \n                            \n                                Value : swap\n                            \n                        \n                        \n                            \n                                 stake\n                            \n                        \n                        \n                            \n                                Value : stake\n                            \n                        \n                        \n                            \n                                 extractLp\n                            \n                        \n                        \n                            \n                                Value : extract-lp\n                            \n                        \n                        \n                            \n                                 distributeLp\n                            \n                        \n                        \n                            \n                                Value : distribute-lp\n                            \n                        \n                        \n                            \n                                 updateVault\n                            \n                        \n                        \n                            \n                                Value : update-vault\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiDoc   (src/.../api-doc.decorator.ts)\n                        \n                        \n                            applyContributeParams   (src/.../apply_params.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            defineShape   (src/.../apply_params.ts)\n                        \n                        \n                            DtoRepresent   (src/.../dto-represents.decorator.ts)\n                        \n                        \n                            generate_assetname_from_txhash_index   (src/.../lib.ts)\n                        \n                        \n                            generate_tag_from_txhash_index   (src/.../lib.ts)\n                        \n                        \n                            getVaultUtxo   (src/.../lib.ts)\n                        \n                        \n                            toHex   (src/.../lib.ts)\n                        \n                        \n                            toPreloadedScript   (src/.../apply_params.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/api-doc.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiDoc\n                        \n                    \n                \n            \n            \n                \nApiDoc(__namedParameters: {summary: ApiDocParams, description, status})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                summary\n                                            \n                                                            ApiDocParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                description\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                status\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    200\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/modules/vaults/processing-tx/onchain/utils/apply_params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyContributeParams\n                        \n                    \n                \n            \n            \n                \napplyContributeParams(input)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineShape\n                        \n                    \n                \n            \n            \n                \ndefineShape(schema: any, definitions: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                definitions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toPreloadedScript\n                        \n                    \n                \n            \n            \n                \ntoPreloadedScript(__namedParameters: {definitions, ...preamble: any[]}, opts: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                definitions\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                preamble\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                opts\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/decorators/dto-represents.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DtoRepresent\n                        \n                    \n                \n            \n            \n                \nDtoRepresent(__namedParameters: {transform: DtoRepresentsType, expose})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transform\n                                            \n                                                            DtoRepresentsType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expose\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/modules/vaults/processing-tx/onchain/utils/lib.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generate_assetname_from_txhash_index\n                        \n                    \n                \n            \n            \n                \ngenerate_assetname_from_txhash_index(txHash: string, txOutputIdx: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txOutputIdx\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generate_tag_from_txhash_index\n                        \n                    \n                \n            \n            \n                \ngenerate_tag_from_txhash_index(tx_hash: string, tx_output_idx: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tx_hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tx_output_idx\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVaultUtxo\n                        \n                    \n                \n            \n            \n                \ngetVaultUtxo(policyId: string, assetName: string, blockfrost)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                policyId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                assetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                blockfrost\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHex\n                        \n                    \n                \n            \n            \n                \ntoHex(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodMigration\nIf you need to generate new empty migration file\nExample :# development\n$ npm run migration:create --name=MigrationName\nIf you need to generate migration based on changes in entity\nExample :# development\n$ npm run migration:generate --name=MigrationName\nRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AcquireModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AssetsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AwsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClaimsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContributionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DistributionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GovernanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtGlobalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LifecycleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LpTokensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaptoolsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaultsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VyfiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AcquireModule\n\n\n\ncluster_AcquireModule_imports\n\n\n\ncluster_AcquireModule_exports\n\n\n\ncluster_AcquireModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AssetsModule\n\n\n\ncluster_AssetsModule_exports\n\n\n\ncluster_AssetsModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_exports\n\n\n\ncluster_AwsModule_providers\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_BlockchainModule_providers\n\n\n\ncluster_ClaimsModule\n\n\n\ncluster_ClaimsModule_exports\n\n\n\ncluster_ClaimsModule_providers\n\n\n\ncluster_ContributionModule\n\n\n\ncluster_ContributionModule_exports\n\n\n\ncluster_ContributionModule_providers\n\n\n\ncluster_DistributionModule\n\n\n\ncluster_DistributionModule_exports\n\n\n\ncluster_DistributionModule_providers\n\n\n\ncluster_GovernanceModule\n\n\n\ncluster_GovernanceModule_exports\n\n\n\ncluster_GovernanceModule_providers\n\n\n\ncluster_JwtGlobalModule\n\n\n\ncluster_JwtGlobalModule_imports\n\n\n\ncluster_JwtGlobalModule_exports\n\n\n\ncluster_LifecycleModule\n\n\n\ncluster_LifecycleModule_exports\n\n\n\ncluster_LifecycleModule_providers\n\n\n\ncluster_LpTokensModule\n\n\n\ncluster_LpTokensModule_exports\n\n\n\ncluster_LpTokensModule_providers\n\n\n\ncluster_TaptoolsModule\n\n\n\ncluster_TaptoolsModule_exports\n\n\n\ncluster_TaptoolsModule_providers\n\n\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_exports\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VaultsModule\n\n\n\ncluster_VaultsModule_exports\n\n\n\ncluster_VaultsModule_providers\n\n\n\ncluster_VyfiModule\n\n\n\ncluster_VyfiModule_exports\n\n\n\ncluster_VyfiModule_providers\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nAcquireModule\n\nAcquireModule\n\nAcquireModule -->\n\nTransactionsModule->AcquireModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTransactionsModule->BlockchainModule\n\n\n\n\n\nClaimsModule\n\nClaimsModule\n\nClaimsModule -->\n\nTransactionsModule->ClaimsModule\n\n\n\n\n\nContributionModule\n\nContributionModule\n\nContributionModule -->\n\nTransactionsModule->ContributionModule\n\n\n\n\n\nLpTokensModule\n\nLpTokensModule\n\nLpTokensModule -->\n\nTransactionsModule->LpTokensModule\n\n\n\n\n\nVaultsModule\n\nVaultsModule\n\nVaultsModule -->\n\nTransactionsModule->VaultsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nTransactionsService \n\nTransactionsService \n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\n\n\nAcquireService \n\nAcquireService \n\nAcquireService  -->\n\nAcquireModule->AcquireService \n\n\n\nAppModule -->\n\nAcquireModule->AppModule\n\n\n\n\n\nAcquireService\n\nAcquireService\n\nAcquireModule -->\n\nAcquireService->AcquireModule\n\n\n\n\n\nAssetsModule\n\nAssetsModule\n\nAppModule -->\n\nAssetsModule->AppModule\n\n\n\n\n\nAssetsService \n\nAssetsService \n\nAssetsService  -->\n\nAssetsModule->AssetsService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAwsModule->UsersModule\n\n\n\nVaultsModule -->\n\nAwsModule->VaultsModule\n\n\n\nAppModule -->\n\nAwsModule->AppModule\n\n\n\n\n\nAwsService \n\nAwsService \n\nAwsService  -->\n\nAwsModule->AwsService \n\n\n\nContributionModule -->\n\nBlockchainModule->ContributionModule\n\n\n\nLpTokensModule -->\n\nBlockchainModule->LpTokensModule\n\n\n\nVaultsModule -->\n\nBlockchainModule->VaultsModule\n\n\n\nAppModule -->\n\nBlockchainModule->AppModule\n\n\n\n\n\nBlockchainScannerService \n\nBlockchainScannerService \n\nBlockchainScannerService  -->\n\nBlockchainModule->BlockchainScannerService \n\n\n\n\n\nBlockchainService \n\nBlockchainService \n\nBlockchainService  -->\n\nBlockchainModule->BlockchainService \n\n\n\n\n\nVaultInsertingService \n\nVaultInsertingService \n\nVaultInsertingService  -->\n\nBlockchainModule->VaultInsertingService \n\n\n\n\n\nVaultManagingService \n\nVaultManagingService \n\nVaultManagingService  -->\n\nBlockchainModule->VaultManagingService \n\n\n\n\n\nWebhookVerificationService \n\nWebhookVerificationService \n\nWebhookVerificationService  -->\n\nBlockchainModule->WebhookVerificationService \n\n\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nLifecycleModule -->\n\nBlockchainModule->LifecycleModule\n\n\n\nAppModule -->\n\nClaimsModule->AppModule\n\n\n\n\n\nClaimsService \n\nClaimsService \n\nClaimsService  -->\n\nClaimsModule->ClaimsService \n\n\n\nAppModule -->\n\nContributionModule->AppModule\n\n\n\n\n\nContributionService \n\nContributionService \n\nContributionService  -->\n\nContributionModule->ContributionService \n\n\n\nLifecycleModule -->\n\nContributionModule->LifecycleModule\n\n\n\n\n\nDistributionModule\n\nDistributionModule\n\nAppModule -->\n\nDistributionModule->AppModule\n\n\n\n\n\nDistributionService \n\nDistributionService \n\nDistributionService  -->\n\nDistributionModule->DistributionService \n\n\n\nLifecycleModule -->\n\nDistributionModule->LifecycleModule\n\n\n\n\n\nJwtGlobalModule\n\nJwtGlobalModule\n\nAppModule -->\n\nJwtGlobalModule->AppModule\n\n\n\n\n\nTaptoolsModule \n\nTaptoolsModule \n\nTaptoolsModule  -->\n\nJwtGlobalModule->TaptoolsModule \n\n\n\nAppModule -->\n\nLpTokensModule->AppModule\n\n\n\n\n\nLpTokensService \n\nLpTokensService \n\nLpTokensService  -->\n\nLpTokensModule->LpTokensService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nVaultsModule->AppModule\n\n\n\n\n\nDraftVaultsService \n\nDraftVaultsService \n\nDraftVaultsService  -->\n\nVaultsModule->DraftVaultsService \n\n\n\n\n\nVaultsService \n\nVaultsService \n\nVaultsService  -->\n\nVaultsModule->VaultsService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAssetsService\n\nAssetsService\n\nAssetsModule -->\n\nAssetsService->AssetsModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAwsService\n\nAwsService\n\nAwsModule -->\n\nAwsService->AwsModule\n\n\n\n\n\nAnvilApiService\n\nAnvilApiService\n\nBlockchainModule -->\n\nAnvilApiService->BlockchainModule\n\n\n\n\n\nBlockchainScannerService\n\nBlockchainScannerService\n\nBlockchainModule -->\n\nBlockchainScannerService->BlockchainModule\n\n\n\n\n\nBlockchainService\n\nBlockchainService\n\nBlockchainModule -->\n\nBlockchainService->BlockchainModule\n\n\n\nClaimsModule -->\n\nBlockchainService->ClaimsModule\n\n\n\n\n\nVaultInsertingService\n\nVaultInsertingService\n\nBlockchainModule -->\n\nVaultInsertingService->BlockchainModule\n\n\n\n\n\nVaultManagingService\n\nVaultManagingService\n\nBlockchainModule -->\n\nVaultManagingService->BlockchainModule\n\n\n\n\n\nWebhookVerificationService\n\nWebhookVerificationService\n\nBlockchainModule -->\n\nWebhookVerificationService->BlockchainModule\n\n\n\n\n\nClaimsService\n\nClaimsService\n\nClaimsModule -->\n\nClaimsService->ClaimsModule\n\n\n\n\n\nContributionService\n\nContributionService\n\nContributionModule -->\n\nContributionService->ContributionModule\n\n\n\n\n\nDistributionService\n\nDistributionService\n\nDistributionModule -->\n\nDistributionService->DistributionModule\n\n\n\n\n\nGovernanceService \n\nGovernanceService \n\n\n\nGovernanceModule\n\nGovernanceModule\n\nGovernanceService  -->\n\nGovernanceModule->GovernanceService \n\n\n\n\n\nGovernanceService\n\nGovernanceService\n\nGovernanceModule -->\n\nGovernanceService->GovernanceModule\n\n\n\n\n\nTaptoolsModule\n\nTaptoolsModule\n\nJwtGlobalModule -->\n\nTaptoolsModule->JwtGlobalModule\n\n\n\n\n\nTaptoolsService \n\nTaptoolsService \n\nTaptoolsService  -->\n\nTaptoolsModule->TaptoolsService \n\n\n\nVaultsModule -->\n\nLifecycleModule->VaultsModule\n\n\n\n\n\nLifecycleService \n\nLifecycleService \n\nLifecycleService  -->\n\nLifecycleModule->LifecycleService \n\n\n\n\n\nLifecycleProcessor\n\nLifecycleProcessor\n\nLifecycleModule -->\n\nLifecycleProcessor->LifecycleModule\n\n\n\n\n\nLifecycleService\n\nLifecycleService\n\nLifecycleModule -->\n\nLifecycleService->LifecycleModule\n\n\n\n\n\nLpTokensService\n\nLpTokensService\n\nLpTokensModule -->\n\nLpTokensService->LpTokensModule\n\n\n\n\n\nTaptoolsService\n\nTaptoolsService\n\nTaptoolsModule -->\n\nTaptoolsService->TaptoolsModule\n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nDraftVaultsService\n\nDraftVaultsService\n\nVaultsModule -->\n\nDraftVaultsService->VaultsModule\n\n\n\n\n\nVaultsService\n\nVaultsService\n\nVaultsModule -->\n\nVaultsService->VaultsModule\n\n\n\n\n\nVyfiService \n\nVyfiService \n\n\n\nVyfiModule\n\nVyfiModule\n\nVyfiService  -->\n\nVyfiModule->VyfiService \n\n\n\n\n\nVyfiService\n\nVyfiService\n\nVyfiModule -->\n\nVyfiService->VyfiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    95 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Redeemer   (src/.../type.ts)\n                        \n                        \n                            Redeemer1   (src/.../type.ts)\n                        \n                        \n                            Redeemer2   (src/.../type.ts)\n                        \n                        \n                            Redeemer3   (src/.../type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/vaults/processing-tx/onchain/types/type.ts\n    \n    \n        \n            \n                \n                    \n                    Redeemer\n                \n            \n            \n                \n                        literal type | \"MintAdaPair\" | \"BurnLp\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redeemer1\n                \n            \n            \n                \n                            literal type | literal type | \"CancelAsset\" | \"CancelAda\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redeemer2\n                \n            \n            \n                \n                            literal type | \"VaultBurn\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redeemer3\n                \n            \n            \n                \n                            literal type | \"VaultBurn\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            assetsToValue   (src/.../lib.ts)\n                        \n                        \n                            blueprint   (src/.../apply_params.ts)\n                        \n                        \n                            configService   (src/.../typeorm.config.ts)\n                        \n                        \n                            DEFAULT_INITIAL_DELAY_MS   (src/.../blockchain-scanner.service.ts)\n                        \n                        \n                            DEFAULT_MAX_DELAY_MS   (src/.../blockchain-scanner.service.ts)\n                        \n                        \n                            DEFAULT_MAX_RETRIES   (src/.../blockchain-scanner.service.ts)\n                        \n                        \n                            getMimeTypeFromArrayBuffer   (src/.../index.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            getUtxos   (src/.../lib.ts)\n                        \n                        \n                            mbMultiplication   (src/.../aws.controller.ts)\n                        \n                        \n                            one_day   (src/.../vault-managing.service.ts)\n                        \n                        \n                            poolOwner   (src/.../vyfi.service.ts)\n                        \n                        \n                            transformImageToUrl   (src/.../index.ts)\n                        \n                        \n                            transformToSnakeCase   (src/.../index.ts)\n                        \n                        \n                            valuation_sc_type   (src/.../vault-sc-type.ts)\n                        \n                        \n                            vault_sc_privacy   (src/.../vault-sc-type.ts)\n                        \n                        \n                            VYFI_CONSTANTS   (src/.../vyfi.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/vaults/processing-tx/onchain/utils/lib.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        assetsToValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (assets: Amount[]) => {\n  const multiAsset = MultiAsset.new();\n  const lovelace = assets.find(asset => asset.unit === 'lovelace');\n  const policies = assets.filter(asset => asset.unit !== 'lovelace').map(asset => asset.unit.slice(0, 56));\n\n  if (!policies.length && lovelace) {\n    return Value.new(BigNum.from_str(String(Number(lovelace.quantity)  {\n    const policyAssets = assets.filter(asset => asset.unit.slice(0, 56) === policy);\n    const assetsValue = Assets.new();\n    policyAssets.forEach(asset => {\n      if (Number(asset.quantity) > 0)\n        assetsValue.insert(\n          AssetName.new(Buffer.from(asset.unit.slice(56), 'hex')),\n          BigNum.from_str(String(asset.quantity))\n        );\n    });\n    if (assetsValue.len() > 0) multiAsset.insert(ScriptHash.from_bytes(Buffer.from(policy, 'hex')), assetsValue);\n  });\n\n  const multiAssetsValue = Value.new(BigNum.from_str(lovelace ? String(lovelace.quantity) : '0'));\n  multiAssetsValue.set_multiasset(multiAsset);\n  return multiAssetsValue;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUtxos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (address: Address, min = 0, blockfrost) => {\n  const utxos = await blockfrost.addressesUtxosAll(address.to_bech32());\n  const parsedUtxos = TransactionUnspentOutputs.new();\n  utxos.forEach((utxo: any) => {\n    const { tx_hash, output_index, amount } = utxo;\n    if (Number(amount[0].quantity) > min) {\n      parsedUtxos.add(\n        TransactionUnspentOutput.new(\n          TransactionInput.new(TransactionHash.from_hex(tx_hash), output_index),\n          TransactionOutput.new(address, assetsToValue(amount))\n        )\n      );\n    }\n  });\n  return parsedUtxos;\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/utils/apply_params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        blueprint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./blueprint.json')\n                    \n                \n\n\n        \n    \n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/blockchain-scanner.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_INITIAL_DELAY_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_DELAY_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_RETRIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n\n    src/helpers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMimeTypeFromArrayBuffer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : arrayBuffer => {\n  const uint8arr = new Uint8Array(arrayBuffer);\n\n  const len = 4;\n  if (uint8arr.length >= len) {\n    const signatureArr = new Array(len);\n    for (let i = 0; i \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformImageToUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (imageEntity: FileEntity | null): string | null => {\n  return imageEntity?.file_url || null;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformToSnakeCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj: any): any => {\n  if (Array.isArray(obj)) {\n    return obj.map(item => transformToSnakeCase(item));\n  }\n  if (\n    obj !== null &&\n    typeof obj === 'object' &&\n    !(obj instanceof Date) &&\n    !(obj instanceof FileEntity) &&\n    !(obj instanceof User)\n  ) {\n    return Object.keys(obj).reduce((acc, key) => {\n      const snakeKey = snakeCase(key);\n      acc[snakeKey] = transformToSnakeCase(obj[key]);\n      return acc;\n    }, {});\n  }\n  return obj;\n}\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext): User => {\n  const request = ctx.switchToHttp().getRequest();\n  return request.user;\n})\n                    \n                \n\n            \n                \n                    Custom decorator to extract the authenticated user from the request\n\n                \n            \n\n        \n    \n\n    src/modules/aws_bucket/aws.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mbMultiplication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 1024 * 1024\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/vault-managing.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        one_day\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 24 * 60 * 60 * 1000\n                    \n                \n\n\n        \n    \n\n    src/modules/vyfi/vyfi.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        poolOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  skey: 'ed25519e_sk1eqleq0gr7awjymmkcehm4pza8ffq385fyxkntqe74u384fgfs4w7vncmhdlc2u2l78g4r82ctfw6s36dnuguadxh3lggluy9pwansegfprll7',\n  base_address_preprod:\n    'addr_test1qpjavykfl5n4t47xklzyuccevgple0e4c7mke2m6cd0z0fwy0pq8p292lgrquq7hx75c4wpvz0h8cjp69mp7men3nw8s46zete',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VYFI_CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PROCESSING_FEE: 1900000, // 1.9 ADA in lovelace\n  MIN_POOL_ADA: 2000000, // 2 ADA in lovelace\n  MIN_RETURN_ADA: 2000000, // 2 ADA in lovelace\n  TOTAL_REQUIRED_ADA: 5900000, // 5.9 ADA in lovelace\n  POOL_ADDRESS:\n    'addr1qy5dasujdtm4hzrtamca9sjetu78hgqt8rkqs9tu69n0vq47wr70fcgkj4fe9tyr6z2jz8qvwvrc2gq04ltky960fw0smcuf0t',\n  METADATA_LABEL: '53554741',\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/vaults/processing-tx/onchain/types/vault-sc-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        valuation_sc_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  fixed: 0,\n  lbe: 1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vault_sc_privacy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  private: 0,\n  public: 1,\n  semiPrivate: 2,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
